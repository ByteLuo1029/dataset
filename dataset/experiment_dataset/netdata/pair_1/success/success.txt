2025-04-15T07:59:30.5031994Z Requested labels: ubuntu-22.04
2025-04-15T07:59:30.5032360Z Job defined at: netdata/netdata/.github/workflows/docker.yml@refs/pull/20112/merge
2025-04-15T07:59:30.5032491Z Waiting for a runner to pick up this job...
2025-04-15T07:59:30.6868691Z Job is waiting for a hosted runner to come online.
2025-04-15T07:59:33.8120994Z Job is about to start running on the hosted runner: GitHub Actions 9 (hosted)
2025-04-15T07:59:35.6185119Z Current runner version: '2.323.0'
2025-04-15T07:59:35.6210245Z ##[group]Operating System
2025-04-15T07:59:35.6211141Z Ubuntu
2025-04-15T07:59:35.6211652Z 22.04.5
2025-04-15T07:59:35.6212152Z LTS
2025-04-15T07:59:35.6212673Z ##[endgroup]
2025-04-15T07:59:35.6213168Z ##[group]Runner Image
2025-04-15T07:59:35.6213722Z Image: ubuntu-22.04
2025-04-15T07:59:35.6214297Z Version: 20250406.1.0
2025-04-15T07:59:35.6215350Z Included Software: https://github.com/actions/runner-images/blob/ubuntu22/20250406.1/images/ubuntu/Ubuntu2204-Readme.md
2025-04-15T07:59:35.6217024Z Image Release: https://github.com/actions/runner-images/releases/tag/ubuntu22%2F20250406.1
2025-04-15T07:59:35.6218036Z ##[endgroup]
2025-04-15T07:59:35.6218527Z ##[group]Runner Image Provisioner
2025-04-15T07:59:35.6219108Z 2.0.422.1
2025-04-15T07:59:35.6219674Z ##[endgroup]
2025-04-15T07:59:35.6221843Z ##[group]GITHUB_TOKEN Permissions
2025-04-15T07:59:35.6223836Z Actions: read
2025-04-15T07:59:35.6224551Z Attestations: read
2025-04-15T07:59:35.6225295Z Checks: read
2025-04-15T07:59:35.6225777Z Contents: read
2025-04-15T07:59:35.6226615Z Deployments: read
2025-04-15T07:59:35.6227202Z Discussions: read
2025-04-15T07:59:35.6227712Z Issues: read
2025-04-15T07:59:35.6228264Z Metadata: read
2025-04-15T07:59:35.6228762Z Models: read
2025-04-15T07:59:35.6229226Z Packages: read
2025-04-15T07:59:35.6229800Z Pages: read
2025-04-15T07:59:35.6230298Z PullRequests: read
2025-04-15T07:59:35.6230848Z RepositoryProjects: read
2025-04-15T07:59:35.6231496Z SecurityEvents: read
2025-04-15T07:59:35.6231987Z Statuses: read
2025-04-15T07:59:35.6232489Z ##[endgroup]
2025-04-15T07:59:35.6235390Z Secret source: None
2025-04-15T07:59:35.6236497Z Prepare workflow directory
2025-04-15T07:59:35.6688595Z Prepare all required actions
2025-04-15T07:59:35.6725225Z Getting action download info
2025-04-15T07:59:35.9485943Z ##[group]Download immutable action package 'actions/checkout@v4'
2025-04-15T07:59:35.9487240Z Version: 4.2.2
2025-04-15T07:59:35.9488091Z Digest: sha256:ccb2698953eaebd21c7bf6268a94f9c26518a7e38e27e0b83c1fe1ad049819b1
2025-04-15T07:59:35.9489135Z Source commit SHA: 11bd71901bbe5b1630ceea73d27597364c9af683
2025-04-15T07:59:35.9489742Z ##[endgroup]
2025-04-15T07:59:36.0386375Z ##[group]Download immutable action package 'docker/setup-buildx-action@v3'
2025-04-15T07:59:36.0387473Z Version: 3.10.0
2025-04-15T07:59:36.0388425Z Digest: sha256:6377aa62314fdde26434bd58e12019ae489ebac6c72d541f3b1723362eeca7cd
2025-04-15T07:59:36.0389790Z Source commit SHA: b5ca514318bd6ebac0fb2aedd5d36ec1b5c232a2
2025-04-15T07:59:36.0390602Z ##[endgroup]
2025-04-15T07:59:36.3025821Z ##[group]Download immutable action package 'docker/build-push-action@v6'
2025-04-15T07:59:36.3026839Z Version: 6.15.0
2025-04-15T07:59:36.3027497Z Digest: sha256:2d196dae36b30221f1f8e19fe21c3aaa725a8a8641887cf3fd832e59ddaa7c04
2025-04-15T07:59:36.3028370Z Source commit SHA: 471d1dc4e07e5cdedd4c2171150001c434f0b7a4
2025-04-15T07:59:36.3028979Z ##[endgroup]
2025-04-15T07:59:36.5516715Z ##[group]Download immutable action package 'actions/upload-artifact@v4.6.2'
2025-04-15T07:59:36.5517516Z Version: 4.6.2
2025-04-15T07:59:36.5518208Z Digest: sha256:290722aa3281d5caf23d0acdc3dbeb3424786a1a01a9cc97e72f147225e37c38
2025-04-15T07:59:36.5519074Z Source commit SHA: ea165f8d65b6e75b540449e92b4886f43607fa02
2025-04-15T07:59:36.5519667Z ##[endgroup]
2025-04-15T07:59:36.6600514Z Download action repository 'rtCamp/action-slack-notify@v2' (SHA:e31e87e03dd19038e411e38ae27cbad084a90661)
2025-04-15T07:59:36.9691075Z Getting action download info
2025-04-15T07:59:37.0894453Z Download action repository 'LoveToKnow/slackify-markdown-action@698a1d4d0ff1794152a93c03ee8ca5e03a310d4e' (SHA:698a1d4d0ff1794152a93c03ee8ca5e03a310d4e)
2025-04-15T07:59:37.4902664Z Complete job name: Build Docker Images (amd64, linux/amd64, false, ubuntu-22.04)
2025-04-15T07:59:37.5478299Z ##[group]Pull down action image 'ghcr.io/rtcamp/action-slack-notify:v2.3.3'
2025-04-15T07:59:37.5547499Z ##[command]/usr/bin/docker pull ghcr.io/rtcamp/action-slack-notify:v2.3.3
2025-04-15T07:59:37.9886311Z v2.3.3: Pulling from rtcamp/action-slack-notify
2025-04-15T07:59:38.0814970Z 43c4264eed91: Pulling fs layer
2025-04-15T07:59:38.0816406Z d2ffb1f53d95: Pulling fs layer
2025-04-15T07:59:38.0817434Z 9a3469c34bee: Pulling fs layer
2025-04-15T07:59:38.0818427Z 668005e24564: Pulling fs layer
2025-04-15T07:59:38.0819463Z 2c69aaeb7992: Pulling fs layer
2025-04-15T07:59:38.0820450Z f37893a31575: Pulling fs layer
2025-04-15T07:59:38.0821446Z 2fa8e688e01c: Pulling fs layer
2025-04-15T07:59:38.0822417Z f37893a31575: Waiting
2025-04-15T07:59:38.0823259Z 668005e24564: Waiting
2025-04-15T07:59:38.0824093Z 2c69aaeb7992: Waiting
2025-04-15T07:59:38.0824949Z 2fa8e688e01c: Waiting
2025-04-15T07:59:38.1902215Z 43c4264eed91: Verifying Checksum
2025-04-15T07:59:38.1907797Z 43c4264eed91: Download complete
2025-04-15T07:59:38.1970525Z d2ffb1f53d95: Download complete
2025-04-15T07:59:38.3027953Z 9a3469c34bee: Download complete
2025-04-15T07:59:38.3034222Z 2c69aaeb7992: Verifying Checksum
2025-04-15T07:59:38.3038692Z 2c69aaeb7992: Download complete
2025-04-15T07:59:38.3560913Z 43c4264eed91: Pull complete
2025-04-15T07:59:38.3943657Z f37893a31575: Verifying Checksum
2025-04-15T07:59:38.3948233Z f37893a31575: Download complete
2025-04-15T07:59:38.4002911Z 668005e24564: Verifying Checksum
2025-04-15T07:59:38.4004775Z 668005e24564: Download complete
2025-04-15T07:59:38.4033503Z 2fa8e688e01c: Verifying Checksum
2025-04-15T07:59:38.4035219Z 2fa8e688e01c: Download complete
2025-04-15T07:59:38.4968539Z d2ffb1f53d95: Pull complete
2025-04-15T07:59:40.0203143Z 9a3469c34bee: Pull complete
2025-04-15T07:59:40.5018301Z 668005e24564: Pull complete
2025-04-15T07:59:40.5114433Z 2c69aaeb7992: Pull complete
2025-04-15T07:59:40.5210773Z f37893a31575: Pull complete
2025-04-15T07:59:40.5304446Z 2fa8e688e01c: Pull complete
2025-04-15T07:59:40.5346451Z Digest: sha256:acc1c430721b27030d3dacf4273eec569388ad650e127bb9f1292f33cd9cd9bd
2025-04-15T07:59:40.5361408Z Status: Downloaded newer image for ghcr.io/rtcamp/action-slack-notify:v2.3.3
2025-04-15T07:59:40.5369899Z ghcr.io/rtcamp/action-slack-notify:v2.3.3
2025-04-15T07:59:40.5395055Z ##[endgroup]
2025-04-15T07:59:40.5684260Z ##[group]Run actions/checkout@v4
2025-04-15T07:59:40.5684825Z with:
2025-04-15T07:59:40.5685024Z   fetch-depth: 0
2025-04-15T07:59:40.5685236Z   submodules: recursive
2025-04-15T07:59:40.5685453Z   repository: netdata/netdata
2025-04-15T07:59:40.5685836Z   token: ***
2025-04-15T07:59:40.5686263Z   ssh-strict: true
2025-04-15T07:59:40.5686468Z   ssh-user: git
2025-04-15T07:59:40.5686666Z   persist-credentials: true
2025-04-15T07:59:40.5686890Z   clean: true
2025-04-15T07:59:40.5687091Z   sparse-checkout-cone-mode: true
2025-04-15T07:59:40.5687330Z   fetch-tags: false
2025-04-15T07:59:40.5687521Z   show-progress: true
2025-04-15T07:59:40.5687704Z   lfs: false
2025-04-15T07:59:40.5687898Z   set-safe-directory: true
2025-04-15T07:59:40.5688353Z env:
2025-04-15T07:59:40.5688546Z   DISABLE_TELEMETRY: 1
2025-04-15T07:59:40.5688746Z   NIGHTLY_COUNT: 4
2025-04-15T07:59:40.5688922Z ##[endgroup]
2025-04-15T07:59:40.7472692Z Syncing repository: netdata/netdata
2025-04-15T07:59:40.7474160Z ##[group]Getting Git version info
2025-04-15T07:59:40.7474596Z Working directory is '/home/runner/work/netdata/netdata'
2025-04-15T07:59:40.7475120Z [command]/usr/bin/git version
2025-04-15T07:59:40.7520769Z git version 2.49.0
2025-04-15T07:59:40.7549325Z ##[endgroup]
2025-04-15T07:59:40.7565118Z Temporarily overriding HOME='/home/runner/work/_temp/5acffecf-8ad5-4ca4-9b5e-966530c19465' before making global git config changes
2025-04-15T07:59:40.7566712Z Adding repository directory to the temporary git global config as a safe directory
2025-04-15T07:59:40.7571845Z [command]/usr/bin/git config --global --add safe.directory /home/runner/work/netdata/netdata
2025-04-15T07:59:40.7609187Z Deleting the contents of '/home/runner/work/netdata/netdata'
2025-04-15T07:59:40.7613232Z ##[group]Initializing the repository
2025-04-15T07:59:40.7618092Z [command]/usr/bin/git init /home/runner/work/netdata/netdata
2025-04-15T07:59:40.7689507Z hint: Using 'master' as the name for the initial branch. This default branch name
2025-04-15T07:59:40.7690460Z hint: is subject to change. To configure the initial branch name to use in all
2025-04-15T07:59:40.7690995Z hint: of your new repositories, which will suppress this warning, call:
2025-04-15T07:59:40.7691361Z hint:
2025-04-15T07:59:40.7691646Z hint: 	git config --global init.defaultBranch <name>
2025-04-15T07:59:40.7691938Z hint:
2025-04-15T07:59:40.7692223Z hint: Names commonly chosen instead of 'master' are 'main', 'trunk' and
2025-04-15T07:59:40.7692681Z hint: 'development'. The just-created branch can be renamed via this command:
2025-04-15T07:59:40.7693039Z hint:
2025-04-15T07:59:40.7693224Z hint: 	git branch -m <name>
2025-04-15T07:59:40.7695350Z Initialized empty Git repository in /home/runner/work/netdata/netdata/.git/
2025-04-15T07:59:40.7706498Z [command]/usr/bin/git remote add origin https://github.com/netdata/netdata
2025-04-15T07:59:40.7739421Z ##[endgroup]
2025-04-15T07:59:40.7740085Z ##[group]Disabling automatic garbage collection
2025-04-15T07:59:40.7744528Z [command]/usr/bin/git config --local gc.auto 0
2025-04-15T07:59:40.7772637Z ##[endgroup]
2025-04-15T07:59:40.7773290Z ##[group]Setting up auth
2025-04-15T07:59:40.7780500Z [command]/usr/bin/git config --local --name-only --get-regexp core\.sshCommand
2025-04-15T07:59:40.7811805Z [command]/usr/bin/git submodule foreach --recursive sh -c "git config --local --name-only --get-regexp 'core\.sshCommand' && git config --local --unset-all 'core.sshCommand' || :"
2025-04-15T07:59:40.8114087Z [command]/usr/bin/git config --local --name-only --get-regexp http\.https\:\/\/github\.com\/\.extraheader
2025-04-15T07:59:40.8145345Z [command]/usr/bin/git submodule foreach --recursive sh -c "git config --local --name-only --get-regexp 'http\.https\:\/\/github\.com\/\.extraheader' && git config --local --unset-all 'http.https://github.com/.extraheader' || :"
2025-04-15T07:59:40.8370433Z [command]/usr/bin/git config --local http.https://github.com/.extraheader AUTHORIZATION: basic ***
2025-04-15T07:59:40.8407456Z ##[endgroup]
2025-04-15T07:59:40.8408130Z ##[group]Fetching the repository
2025-04-15T07:59:40.8416552Z [command]/usr/bin/git -c protocol.version=2 fetch --prune --no-recurse-submodules origin +refs/heads/*:refs/remotes/origin/* +refs/tags/*:refs/tags/* +a5b28a739265453562fff86d47ec8c9cc0a1e296:refs/remotes/pull/20112/merge
2025-04-15T07:59:54.7817350Z From https://github.com/netdata/netdata
2025-04-15T07:59:54.7818154Z  * [new branch]          constant-pages          -> origin/constant-pages
2025-04-15T07:59:54.7818808Z  * [new branch]          cygwin                  -> origin/cygwin
2025-04-15T07:59:54.7819368Z  * [new branch]          dagger                  -> origin/dagger
2025-04-15T07:59:54.7824947Z  * [new branch]          dependabot/github_actions/aurelien-baudet/workflow-dispatch-4 -> origin/dependabot/github_actions/aurelien-baudet/workflow-dispatch-4
2025-04-15T07:59:54.7826999Z  * [new branch]          foobar                  -> origin/foobar
2025-04-15T07:59:54.7829253Z  * [new branch]          fuzzer                  -> origin/fuzzer
2025-04-15T07:59:54.7831533Z  * [new branch]          installer-switch-static -> origin/installer-switch-static
2025-04-15T07:59:54.7833929Z  * [new branch]          integrations-regen      -> origin/integrations-regen
2025-04-15T07:59:54.7836704Z  * [new branch]          libnetdata-werror       -> origin/libnetdata-werror
2025-04-15T07:59:54.7838718Z  * [new branch]          master                  -> origin/master
2025-04-15T07:59:54.7840864Z  * [new branch]          node-delete-docs        -> origin/node-delete-docs
2025-04-15T07:59:54.7843064Z  * [new branch]          opentelemetry-units     -> origin/opentelemetry-units
2025-04-15T07:59:54.7845033Z  * [new branch]          otel-stash              -> origin/otel-stash
2025-04-15T07:59:54.7847875Z  * [new branch]          prng                    -> origin/prng
2025-04-15T07:59:54.7850071Z  * [new branch]          revert-19409-oci-libunwind -> origin/revert-19409-oci-libunwind
2025-04-15T07:59:54.7851993Z  * [new branch]          revert-19734-docker-nightly-old -> origin/revert-19734-docker-nightly-old
2025-04-15T07:59:54.7853628Z  * [new branch]          rrdeng_cfg              -> origin/rrdeng_cfg
2025-04-15T07:59:54.7855671Z  * [new branch]          sentry                  -> origin/sentry
2025-04-15T07:59:54.7858440Z  * [new branch]          snap-build              -> origin/snap-build
2025-04-15T07:59:54.7860457Z  * [new branch]          snap-static             -> origin/snap-static
2025-04-15T07:59:54.7861842Z  * [new branch]          v1.34                   -> origin/v1.34
2025-04-15T07:59:54.7863862Z  * [new branch]          v1.35                   -> origin/v1.35
2025-04-15T07:59:54.7865435Z  * [new branch]          v1.36                   -> origin/v1.36
2025-04-15T07:59:54.7867440Z  * [new branch]          v1.37                   -> origin/v1.37
2025-04-15T07:59:54.7869195Z  * [new branch]          v1.38                   -> origin/v1.38
2025-04-15T07:59:54.7871065Z  * [new branch]          v1.39                   -> origin/v1.39
2025-04-15T07:59:54.7872952Z  * [new branch]          v1.40                   -> origin/v1.40
2025-04-15T07:59:54.7874861Z  * [new branch]          v1.41                   -> origin/v1.41
2025-04-15T07:59:54.7877563Z  * [new branch]          v1.42                   -> origin/v1.42
2025-04-15T07:59:54.7879791Z  * [new branch]          v1.43                   -> origin/v1.43
2025-04-15T07:59:54.7881504Z  * [new branch]          v1.44                   -> origin/v1.44
2025-04-15T07:59:54.7883640Z  * [new branch]          v1.45                   -> origin/v1.45
2025-04-15T07:59:54.7885708Z  * [new branch]          v1.46                   -> origin/v1.46
2025-04-15T07:59:54.7888524Z  * [new branch]          v1.47                   -> origin/v1.47
2025-04-15T07:59:54.7890537Z  * [new branch]          v2.0                    -> origin/v2.0
2025-04-15T07:59:54.7892352Z  * [new branch]          v2.1                    -> origin/v2.1
2025-04-15T07:59:54.7894763Z  * [new branch]          v2.2                    -> origin/v2.2
2025-04-15T07:59:54.7896694Z  * [new branch]          v2.3                    -> origin/v2.3
2025-04-15T07:59:54.7898646Z  * [new branch]          v2.4                    -> origin/v2.4
2025-04-15T07:59:54.7900926Z  * [new branch]          vk-cli                  -> origin/vk-cli
2025-04-15T07:59:54.7902912Z  * [new branch]          vk-fuzzer               -> origin/vk-fuzzer
2025-04-15T07:59:54.7904313Z  * [new tag]             1.32.1                  -> 1.32.1
2025-04-15T07:59:54.7905269Z  * [new tag]             1.34.0                  -> 1.34.0
2025-04-15T07:59:54.7907265Z  * [new tag]             before_rebase           -> before_rebase
2025-04-15T07:59:54.7908375Z  * [new tag]             issue_4934              -> issue_4934
2025-04-15T07:59:54.7909621Z  * [new tag]             poc2                    -> poc2
2025-04-15T07:59:54.7911219Z  * [new tag]             untagged-10d59b9e5fa68b9500e1 -> untagged-10d59b9e5fa68b9500e1
2025-04-15T07:59:54.7912310Z  * [new tag]             v0.1                    -> v0.1
2025-04-15T07:59:54.7913669Z  * [new tag]             v0.2                    -> v0.2
2025-04-15T07:59:54.7914909Z  * [new tag]             v1.0.0                  -> v1.0.0
2025-04-15T07:59:54.7916703Z  * [new tag]             v1.0rc                  -> v1.0rc
2025-04-15T07:59:54.7918944Z  * [new tag]             v1.1.0                  -> v1.1.0
2025-04-15T07:59:54.7919480Z  * [new tag]             v1.10.0                 -> v1.10.0
2025-04-15T07:59:54.7920566Z  * [new tag]             v1.11.0                 -> v1.11.0
2025-04-15T07:59:54.7921911Z  * [new tag]             v1.11.1                 -> v1.11.1
2025-04-15T07:59:54.7923338Z  * [new tag]             v1.12.0                 -> v1.12.0
2025-04-15T07:59:54.7924501Z  * [new tag]             v1.12.0-rc0             -> v1.12.0-rc0
2025-04-15T07:59:54.7926007Z  * [new tag]             v1.12.0-rc1             -> v1.12.0-rc1
2025-04-15T07:59:54.7927613Z  * [new tag]             v1.12.0-rc2             -> v1.12.0-rc2
2025-04-15T07:59:54.7929031Z  * [new tag]             v1.12.0-rc3             -> v1.12.0-rc3
2025-04-15T07:59:54.7931094Z  * [new tag]             v1.12.1                 -> v1.12.1
2025-04-15T07:59:54.7931617Z  * [new tag]             v1.12.2                 -> v1.12.2
2025-04-15T07:59:54.7932337Z  * [new tag]             v1.13.0                 -> v1.13.0
2025-04-15T07:59:54.7933730Z  * [new tag]             v1.14.0                 -> v1.14.0
2025-04-15T07:59:54.7934963Z  * [new tag]             v1.14.0-rc0             -> v1.14.0-rc0
2025-04-15T07:59:54.7936673Z  * [new tag]             v1.15.0                 -> v1.15.0
2025-04-15T07:59:54.7937682Z  * [new tag]             v1.16.0                 -> v1.16.0
2025-04-15T07:59:54.7939085Z  * [new tag]             v1.16.1                 -> v1.16.1
2025-04-15T07:59:54.7940290Z  * [new tag]             v1.17.0                 -> v1.17.0
2025-04-15T07:59:54.7941636Z  * [new tag]             v1.17.1                 -> v1.17.1
2025-04-15T07:59:54.7943430Z  * [new tag]             v1.18.0                 -> v1.18.0
2025-04-15T07:59:54.7944654Z  * [new tag]             v1.18.1                 -> v1.18.1
2025-04-15T07:59:54.7946316Z  * [new tag]             v1.19.0                 -> v1.19.0
2025-04-15T07:59:54.7947904Z  * [new tag]             v1.2.0                  -> v1.2.0
2025-04-15T07:59:54.7949195Z  * [new tag]             v1.20.0                 -> v1.20.0
2025-04-15T07:59:54.7950504Z  * [new tag]             v1.21.0                 -> v1.21.0
2025-04-15T07:59:54.7951790Z  * [new tag]             v1.21.1                 -> v1.21.1
2025-04-15T07:59:54.7953416Z  * [new tag]             v1.22.0                 -> v1.22.0
2025-04-15T07:59:54.7954653Z  * [new tag]             v1.22.1                 -> v1.22.1
2025-04-15T07:59:54.7997915Z  * [new tag]             v1.23.0                 -> v1.23.0
2025-04-15T07:59:54.7998596Z  * [new tag]             v1.23.1                 -> v1.23.1
2025-04-15T07:59:54.7999242Z  * [new tag]             v1.23.1_infiniband      -> v1.23.1_infiniband
2025-04-15T07:59:54.7999981Z  * [new tag]             v1.23.2                 -> v1.23.2
2025-04-15T07:59:54.8000523Z  * [new tag]             v1.24.0                 -> v1.24.0
2025-04-15T07:59:54.8001027Z  * [new tag]             v1.25.0                 -> v1.25.0
2025-04-15T07:59:54.8001519Z  * [new tag]             v1.26.0                 -> v1.26.0
2025-04-15T07:59:54.8002004Z  * [new tag]             v1.27.0                 -> v1.27.0
2025-04-15T07:59:54.8002534Z  * [new tag]             v1.27.0_0104103941      -> v1.27.0_0104103941
2025-04-15T07:59:54.8003057Z  * [new tag]             v1.28.0                 -> v1.28.0
2025-04-15T07:59:54.8003546Z  * [new tag]             v1.29.0                 -> v1.29.0
2025-04-15T07:59:54.8004035Z  * [new tag]             v1.29.1                 -> v1.29.1
2025-04-15T07:59:54.8004521Z  * [new tag]             v1.29.2                 -> v1.29.2
2025-04-15T07:59:54.8005012Z  * [new tag]             v1.29.3                 -> v1.29.3
2025-04-15T07:59:54.8005532Z  * [new tag]             v1.3.0                  -> v1.3.0
2025-04-15T07:59:54.8006037Z  * [new tag]             v1.30.0                 -> v1.30.0
2025-04-15T07:59:54.8006729Z  * [new tag]             v1.30.1                 -> v1.30.1
2025-04-15T07:59:54.8007225Z  * [new tag]             v1.31.0                 -> v1.31.0
2025-04-15T07:59:54.8007717Z  * [new tag]             v1.32.0                 -> v1.32.0
2025-04-15T07:59:54.8008201Z  * [new tag]             v1.32.1                 -> v1.32.1
2025-04-15T07:59:54.8008676Z  * [new tag]             v1.33.0                 -> v1.33.0
2025-04-15T07:59:54.8009163Z  * [new tag]             v1.33.1                 -> v1.33.1
2025-04-15T07:59:54.8009649Z  * [new tag]             v1.34.0                 -> v1.34.0
2025-04-15T07:59:54.8010152Z  * [new tag]             v1.34.1                 -> v1.34.1
2025-04-15T07:59:54.8010645Z  * [new tag]             v1.35.0                 -> v1.35.0
2025-04-15T07:59:54.8011380Z  * [new tag]             v1.35.1                 -> v1.35.1
2025-04-15T07:59:54.8011920Z  * [new tag]             v1.36.0                 -> v1.36.0
2025-04-15T07:59:54.8012427Z  * [new tag]             v1.36.1                 -> v1.36.1
2025-04-15T07:59:54.8012919Z  * [new tag]             v1.37.0                 -> v1.37.0
2025-04-15T07:59:54.8013416Z  * [new tag]             v1.37.1                 -> v1.37.1
2025-04-15T07:59:54.8013905Z  * [new tag]             v1.38.0                 -> v1.38.0
2025-04-15T07:59:54.8014382Z  * [new tag]             v1.38.1                 -> v1.38.1
2025-04-15T07:59:54.8014870Z  * [new tag]             v1.39.0                 -> v1.39.0
2025-04-15T07:59:54.8015377Z  * [new tag]             v1.39.1                 -> v1.39.1
2025-04-15T07:59:54.8015870Z  * [new tag]             v1.4.0                  -> v1.4.0
2025-04-15T07:59:54.8016537Z  * [new tag]             v1.40.0                 -> v1.40.0
2025-04-15T07:59:54.8017036Z  * [new tag]             v1.40.1                 -> v1.40.1
2025-04-15T07:59:54.8017535Z  * [new tag]             v1.41.0                 -> v1.41.0
2025-04-15T07:59:54.8018017Z  * [new tag]             v1.42.0                 -> v1.42.0
2025-04-15T07:59:54.8018498Z  * [new tag]             v1.42.1                 -> v1.42.1
2025-04-15T07:59:54.8018992Z  * [new tag]             v1.42.2                 -> v1.42.2
2025-04-15T07:59:54.8019474Z  * [new tag]             v1.42.3                 -> v1.42.3
2025-04-15T07:59:54.8019957Z  * [new tag]             v1.42.4                 -> v1.42.4
2025-04-15T07:59:54.8020441Z  * [new tag]             v1.43.0                 -> v1.43.0
2025-04-15T07:59:54.8020920Z  * [new tag]             v1.43.1                 -> v1.43.1
2025-04-15T07:59:54.8021423Z  * [new tag]             v1.43.2                 -> v1.43.2
2025-04-15T07:59:54.8021914Z  * [new tag]             v1.44.0                 -> v1.44.0
2025-04-15T07:59:54.8022400Z  * [new tag]             v1.44.1                 -> v1.44.1
2025-04-15T07:59:54.8022895Z  * [new tag]             v1.44.2                 -> v1.44.2
2025-04-15T07:59:54.8023574Z  * [new tag]             v1.44.3                 -> v1.44.3
2025-04-15T07:59:54.8024080Z  * [new tag]             v1.45.0                 -> v1.45.0
2025-04-15T07:59:54.8024573Z  * [new tag]             v1.45.1                 -> v1.45.1
2025-04-15T07:59:54.8026029Z  * [new tag]             v1.45.2                 -> v1.45.2
2025-04-15T07:59:54.8027664Z  * [new tag]             v1.45.3                 -> v1.45.3
2025-04-15T07:59:54.8029358Z  * [new tag]             v1.45.4                 -> v1.45.4
2025-04-15T07:59:54.8030579Z  * [new tag]             v1.45.5                 -> v1.45.5
2025-04-15T07:59:54.8031883Z  * [new tag]             v1.45.6                 -> v1.45.6
2025-04-15T07:59:54.8033644Z  * [new tag]             v1.46.0                 -> v1.46.0
2025-04-15T07:59:54.8034782Z  * [new tag]             v1.46.1                 -> v1.46.1
2025-04-15T07:59:54.8036614Z  * [new tag]             v1.46.2                 -> v1.46.2
2025-04-15T07:59:54.8037714Z  * [new tag]             v1.46.3                 -> v1.46.3
2025-04-15T07:59:54.8039199Z  * [new tag]             v1.47.0                 -> v1.47.0
2025-04-15T07:59:54.8041037Z  * [new tag]             v1.47.1                 -> v1.47.1
2025-04-15T07:59:54.8042370Z  * [new tag]             v1.47.2                 -> v1.47.2
2025-04-15T07:59:54.8043970Z  * [new tag]             v1.47.3                 -> v1.47.3
2025-04-15T07:59:54.8045326Z  * [new tag]             v1.47.4                 -> v1.47.4
2025-04-15T07:59:54.8046815Z  * [new tag]             v1.47.5                 -> v1.47.5
2025-04-15T07:59:54.8048703Z  * [new tag]             v1.5.0                  -> v1.5.0
2025-04-15T07:59:54.8050139Z  * [new tag]             v1.6.0                  -> v1.6.0
2025-04-15T07:59:54.8051930Z  * [new tag]             v1.7.0                  -> v1.7.0
2025-04-15T07:59:54.8053406Z  * [new tag]             v1.8.0                  -> v1.8.0
2025-04-15T07:59:54.8054985Z  * [new tag]             v1.9.0                  -> v1.9.0
2025-04-15T07:59:54.8056887Z  * [new tag]             v1.99.0                 -> v1.99.0
2025-04-15T07:59:54.8058269Z  * [new tag]             v2.0.0                  -> v2.0.0
2025-04-15T07:59:54.8060122Z  * [new tag]             v2.0.1                  -> v2.0.1
2025-04-15T07:59:54.8061445Z  * [new tag]             v2.0.2                  -> v2.0.2
2025-04-15T07:59:54.8062711Z  * [new tag]             v2.0.3                  -> v2.0.3
2025-04-15T07:59:54.8064137Z  * [new tag]             v2.1.0                  -> v2.1.0
2025-04-15T07:59:54.8065534Z  * [new tag]             v2.1.1                  -> v2.1.1
2025-04-15T07:59:54.8067348Z  * [new tag]             v2.2.0                  -> v2.2.0
2025-04-15T07:59:54.8068681Z  * [new tag]             v2.2.1                  -> v2.2.1
2025-04-15T07:59:54.8070299Z  * [new tag]             v2.2.2                  -> v2.2.2
2025-04-15T07:59:54.8071526Z  * [new tag]             v2.2.3                  -> v2.2.3
2025-04-15T07:59:54.8073327Z  * [new tag]             v2.2.4                  -> v2.2.4
2025-04-15T07:59:54.8074617Z  * [new tag]             v2.2.5                  -> v2.2.5
2025-04-15T07:59:54.8075921Z  * [new tag]             v2.2.6                  -> v2.2.6
2025-04-15T07:59:54.8077459Z  * [new tag]             v2.3.0                  -> v2.3.0
2025-04-15T07:59:54.8079083Z  * [new tag]             v2.3.1                  -> v2.3.1
2025-04-15T07:59:54.8080396Z  * [new tag]             v2.3.2                  -> v2.3.2
2025-04-15T07:59:54.8081819Z  * [new tag]             v2.4.0                  -> v2.4.0
2025-04-15T07:59:54.8085472Z  * [new ref]             a5b28a739265453562fff86d47ec8c9cc0a1e296 -> pull/20112/merge
2025-04-15T07:59:54.8138884Z ##[endgroup]
2025-04-15T07:59:54.8139730Z ##[group]Determining the checkout info
2025-04-15T07:59:54.8140612Z ##[endgroup]
2025-04-15T07:59:54.8148286Z [command]/usr/bin/git sparse-checkout disable
2025-04-15T07:59:54.8186990Z [command]/usr/bin/git config --local --unset-all extensions.worktreeConfig
2025-04-15T07:59:54.8215713Z ##[group]Checking out the ref
2025-04-15T07:59:54.8219623Z [command]/usr/bin/git checkout --progress --force refs/remotes/pull/20112/merge
2025-04-15T07:59:55.2781543Z Note: switching to 'refs/remotes/pull/20112/merge'.
2025-04-15T07:59:55.2782060Z 
2025-04-15T07:59:55.2782496Z You are in 'detached HEAD' state. You can look around, make experimental
2025-04-15T07:59:55.2783183Z changes and commit them, and you can discard any commits you make in this
2025-04-15T07:59:55.2783828Z state without impacting any branches by switching back to a branch.
2025-04-15T07:59:55.2784200Z 
2025-04-15T07:59:55.2784445Z If you want to create a new branch to retain commits you create, you may
2025-04-15T07:59:55.2785030Z do so (now or later) by using -c with the switch command. Example:
2025-04-15T07:59:55.2785378Z 
2025-04-15T07:59:55.2785520Z   git switch -c <new-branch-name>
2025-04-15T07:59:55.2785712Z 
2025-04-15T07:59:55.2785840Z Or undo this operation with:
2025-04-15T07:59:55.2786011Z 
2025-04-15T07:59:55.2786412Z   git switch -
2025-04-15T07:59:55.2786564Z 
2025-04-15T07:59:55.2786782Z Turn off this advice by setting config variable advice.detachedHead to false
2025-04-15T07:59:55.2787088Z 
2025-04-15T07:59:55.2787446Z HEAD is now at a5b28a739 Merge 94b926168602df5b2d7a0d20d28a6a38f474dbbb into 05ea48e5761a983b02021fb8b121bd839c60ec69
2025-04-15T07:59:55.2817766Z ##[endgroup]
2025-04-15T07:59:55.2818526Z ##[group]Setting up auth for fetching submodules
2025-04-15T07:59:55.2823819Z [command]/usr/bin/git config --global http.https://github.com/.extraheader AUTHORIZATION: basic ***
2025-04-15T07:59:55.2865018Z [command]/usr/bin/git config --global --unset-all url.https://github.com/.insteadOf
2025-04-15T07:59:55.2894717Z [command]/usr/bin/git config --global --add url.https://github.com/.insteadOf git@github.com:
2025-04-15T07:59:55.2925423Z [command]/usr/bin/git config --global --add url.https://github.com/.insteadOf org-43390781@github.com:
2025-04-15T07:59:55.2952025Z ##[endgroup]
2025-04-15T07:59:55.2952647Z ##[group]Fetching submodules
2025-04-15T07:59:55.2956856Z [command]/usr/bin/git submodule sync --recursive
2025-04-15T07:59:55.3184092Z [command]/usr/bin/git -c protocol.version=2 submodule update --init --force --recursive
2025-04-15T07:59:55.3406039Z Submodule 'aclk/aclk-schemas' (https://github.com/netdata/aclk-schemas.git) registered for path 'src/aclk/aclk-schemas'
2025-04-15T07:59:55.3410864Z Submodule 'src/collectors/debugfs.plugin/libsensors/vendored' (https://github.com/lm-sensors/lm-sensors.git) registered for path 'src/collectors/debugfs.plugin/libsensors/vendored'
2025-04-15T07:59:55.3414609Z Submodule 'src/web/server/h2o/libh2o' (https://github.com/h2o/h2o.git) registered for path 'src/web/server/h2o/libh2o'
2025-04-15T07:59:55.3441235Z Cloning into '/home/runner/work/netdata/netdata/src/aclk/aclk-schemas'...
2025-04-15T07:59:55.7002087Z Cloning into '/home/runner/work/netdata/netdata/src/collectors/debugfs.plugin/libsensors/vendored'...
2025-04-15T07:59:57.3096704Z Cloning into '/home/runner/work/netdata/netdata/src/web/server/h2o/libh2o'...
2025-04-15T08:00:01.9364650Z Submodule path 'src/aclk/aclk-schemas': checked out 'ec319a14394436f62663548d32eb320eeddd264a'
2025-04-15T08:00:01.9637762Z Submodule path 'src/collectors/debugfs.plugin/libsensors/vendored': checked out '42f240d2a457834bcbdf4dc8b57237f97b5f5854'
2025-04-15T08:00:02.3249586Z Submodule path 'src/web/server/h2o/libh2o': checked out '7359e98d78d018a35f5da7523feac69f64eddb4b'
2025-04-15T08:00:02.3277468Z Submodule 'misc/cache-digest.js' (https://github.com/h2o/cache-digest.js.git) registered for path 'src/web/server/h2o/libh2o/misc/cache-digest.js'
2025-04-15T08:00:02.3282057Z Submodule 'misc/oktavia' (https://github.com/shibukawa/oktavia.git) registered for path 'src/web/server/h2o/libh2o/misc/oktavia'
2025-04-15T08:00:02.3286883Z Submodule 'misc/p5-Server-Starter' (https://github.com/kazuho/p5-Server-Starter.git) registered for path 'src/web/server/h2o/libh2o/misc/p5-Server-Starter'
2025-04-15T08:00:02.3291542Z Submodule 'misc/picotemplate' (https://github.com/kazuho/picotemplate.git) registered for path 'src/web/server/h2o/libh2o/misc/picotemplate'
2025-04-15T08:00:02.3320622Z Cloning into '/home/runner/work/netdata/netdata/src/web/server/h2o/libh2o/misc/cache-digest.js'...
2025-04-15T08:00:02.6537545Z Cloning into '/home/runner/work/netdata/netdata/src/web/server/h2o/libh2o/misc/oktavia'...
2025-04-15T08:00:03.1674722Z Cloning into '/home/runner/work/netdata/netdata/src/web/server/h2o/libh2o/misc/p5-Server-Starter'...
2025-04-15T08:00:03.5704529Z Cloning into '/home/runner/work/netdata/netdata/src/web/server/h2o/libh2o/misc/picotemplate'...
2025-04-15T08:00:03.8640595Z Submodule path 'src/web/server/h2o/libh2o/misc/cache-digest.js': checked out '1d982ed25eb15f41e78f614e67ad086c6bfe4af1'
2025-04-15T08:00:03.8974196Z Submodule path 'src/web/server/h2o/libh2o/misc/oktavia': checked out '25b615f5bc0902b9107e3ffc1178ec6bf768b0ad'
2025-04-15T08:00:03.9087781Z Submodule path 'src/web/server/h2o/libh2o/misc/p5-Server-Starter': checked out 'a0c10e5a5ca48cbb85150be0a8abcb43acb457b8'
2025-04-15T08:00:03.9177552Z Submodule path 'src/web/server/h2o/libh2o/misc/picotemplate': checked out '55d6d242ae1e00ddf16199e15b1acaf6d5c84e42'
2025-04-15T08:00:03.9212460Z [command]/usr/bin/git submodule foreach --recursive git config --local gc.auto 0
2025-04-15T08:00:03.9427435Z Entering 'src/aclk/aclk-schemas'
2025-04-15T08:00:03.9466010Z Entering 'src/collectors/debugfs.plugin/libsensors/vendored'
2025-04-15T08:00:03.9505111Z Entering 'src/web/server/h2o/libh2o'
2025-04-15T08:00:03.9548215Z Entering 'src/web/server/h2o/libh2o/misc/cache-digest.js'
2025-04-15T08:00:03.9585582Z Entering 'src/web/server/h2o/libh2o/misc/oktavia'
2025-04-15T08:00:03.9623821Z Entering 'src/web/server/h2o/libh2o/misc/p5-Server-Starter'
2025-04-15T08:00:03.9661768Z Entering 'src/web/server/h2o/libh2o/misc/picotemplate'
2025-04-15T08:00:03.9710913Z ##[endgroup]
2025-04-15T08:00:03.9711299Z ##[group]Persisting credentials for submodules
2025-04-15T08:00:03.9718777Z [command]/usr/bin/git submodule foreach --recursive sh -c "git config --local --name-only --get-regexp 'url\.https\:\/\/github\.com\/\.insteadOf' && git config --local --unset-all 'url.https://github.com/.insteadOf' || :"
2025-04-15T08:00:03.9937607Z Entering 'src/aclk/aclk-schemas'
2025-04-15T08:00:03.9980019Z Entering 'src/collectors/debugfs.plugin/libsensors/vendored'
2025-04-15T08:00:04.0023623Z Entering 'src/web/server/h2o/libh2o'
2025-04-15T08:00:04.0072291Z Entering 'src/web/server/h2o/libh2o/misc/cache-digest.js'
2025-04-15T08:00:04.0115516Z Entering 'src/web/server/h2o/libh2o/misc/oktavia'
2025-04-15T08:00:04.0159188Z Entering 'src/web/server/h2o/libh2o/misc/p5-Server-Starter'
2025-04-15T08:00:04.0202096Z Entering 'src/web/server/h2o/libh2o/misc/picotemplate'
2025-04-15T08:00:04.0266590Z [command]/usr/bin/git submodule foreach --recursive sh -c "git config --local 'http.https://github.com/.extraheader' 'AUTHORIZATION: basic ***' && git config --local --show-origin --name-only --get-regexp remote.origin.url"
2025-04-15T08:00:04.0481933Z Entering 'src/aclk/aclk-schemas'
2025-04-15T08:00:04.0520317Z file:/home/runner/work/netdata/netdata/.git/modules/aclk/aclk-schemas/config	remote.origin.url
2025-04-15T08:00:04.0540363Z Entering 'src/collectors/debugfs.plugin/libsensors/vendored'
2025-04-15T08:00:04.0578035Z file:/home/runner/work/netdata/netdata/.git/modules/src/collectors/debugfs.plugin/libsensors/vendored/config	remote.origin.url
2025-04-15T08:00:04.0597881Z Entering 'src/web/server/h2o/libh2o'
2025-04-15T08:00:04.0636310Z file:/home/runner/work/netdata/netdata/.git/modules/src/web/server/h2o/libh2o/config	remote.origin.url
2025-04-15T08:00:04.0660307Z Entering 'src/web/server/h2o/libh2o/misc/cache-digest.js'
2025-04-15T08:00:04.0698599Z file:/home/runner/work/netdata/netdata/.git/modules/src/web/server/h2o/libh2o/modules/misc/cache-digest.js/config	remote.origin.url
2025-04-15T08:00:04.0718008Z Entering 'src/web/server/h2o/libh2o/misc/oktavia'
2025-04-15T08:00:04.0756807Z file:/home/runner/work/netdata/netdata/.git/modules/src/web/server/h2o/libh2o/modules/misc/oktavia/config	remote.origin.url
2025-04-15T08:00:04.0776041Z Entering 'src/web/server/h2o/libh2o/misc/p5-Server-Starter'
2025-04-15T08:00:04.0814660Z file:/home/runner/work/netdata/netdata/.git/modules/src/web/server/h2o/libh2o/modules/misc/p5-Server-Starter/config	remote.origin.url
2025-04-15T08:00:04.0833679Z Entering 'src/web/server/h2o/libh2o/misc/picotemplate'
2025-04-15T08:00:04.0872687Z file:/home/runner/work/netdata/netdata/.git/modules/src/web/server/h2o/libh2o/modules/misc/picotemplate/config	remote.origin.url
2025-04-15T08:00:04.0950062Z [command]/usr/bin/git submodule foreach --recursive git config --local --add 'url.https://github.com/.insteadOf' 'git@github.com:'
2025-04-15T08:00:04.1164989Z Entering 'src/aclk/aclk-schemas'
2025-04-15T08:00:04.1202706Z Entering 'src/collectors/debugfs.plugin/libsensors/vendored'
2025-04-15T08:00:04.1241287Z Entering 'src/web/server/h2o/libh2o'
2025-04-15T08:00:04.1283655Z Entering 'src/web/server/h2o/libh2o/misc/cache-digest.js'
2025-04-15T08:00:04.1322469Z Entering 'src/web/server/h2o/libh2o/misc/oktavia'
2025-04-15T08:00:04.1360739Z Entering 'src/web/server/h2o/libh2o/misc/p5-Server-Starter'
2025-04-15T08:00:04.1399791Z Entering 'src/web/server/h2o/libh2o/misc/picotemplate'
2025-04-15T08:00:04.1452899Z [command]/usr/bin/git submodule foreach --recursive git config --local --add 'url.https://github.com/.insteadOf' 'org-43390781@github.com:'
2025-04-15T08:00:04.1669595Z Entering 'src/aclk/aclk-schemas'
2025-04-15T08:00:04.1707786Z Entering 'src/collectors/debugfs.plugin/libsensors/vendored'
2025-04-15T08:00:04.1745531Z Entering 'src/web/server/h2o/libh2o'
2025-04-15T08:00:04.1787686Z Entering 'src/web/server/h2o/libh2o/misc/cache-digest.js'
2025-04-15T08:00:04.1825849Z Entering 'src/web/server/h2o/libh2o/misc/oktavia'
2025-04-15T08:00:04.1864571Z Entering 'src/web/server/h2o/libh2o/misc/p5-Server-Starter'
2025-04-15T08:00:04.1903624Z Entering 'src/web/server/h2o/libh2o/misc/picotemplate'
2025-04-15T08:00:04.1954555Z ##[endgroup]
2025-04-15T08:00:04.1994772Z [command]/usr/bin/git log -1 --format=%H
2025-04-15T08:00:04.2016670Z a5b28a739265453562fff86d47ec8c9cc0a1e296
2025-04-15T08:00:04.2221994Z ##[group]Run docker/setup-buildx-action@v3
2025-04-15T08:00:04.2222270Z with:
2025-04-15T08:00:04.2222451Z   driver: docker-container
2025-04-15T08:00:04.2222663Z   install: false
2025-04-15T08:00:04.2222837Z   use: true
2025-04-15T08:00:04.2222998Z   cache-binary: true
2025-04-15T08:00:04.2223189Z   cleanup: true
2025-04-15T08:00:04.2223367Z env:
2025-04-15T08:00:04.2223529Z   DISABLE_TELEMETRY: 1
2025-04-15T08:00:04.2223717Z   NIGHTLY_COUNT: 4
2025-04-15T08:00:04.2223888Z ##[endgroup]
2025-04-15T08:00:04.4698681Z ##[group]Docker info
2025-04-15T08:00:04.4735967Z [command]/usr/bin/docker version
2025-04-15T08:00:04.4936333Z Client: Docker Engine - Community
2025-04-15T08:00:04.4940154Z  Version:           26.1.3
2025-04-15T08:00:04.4941564Z  API version:       1.45
2025-04-15T08:00:04.4942878Z  Go version:        go1.21.10
2025-04-15T08:00:04.4944325Z  Git commit:        b72abbb
2025-04-15T08:00:04.4944730Z  Built:             Thu May 16 08:33:29 2024
2025-04-15T08:00:04.4945209Z  OS/Arch:           linux/amd64
2025-04-15T08:00:04.4945568Z  Context:           default
2025-04-15T08:00:04.4945765Z 
2025-04-15T08:00:04.4945903Z Server: Docker Engine - Community
2025-04-15T08:00:04.4946548Z  Engine:
2025-04-15T08:00:04.4946833Z   Version:          26.1.3
2025-04-15T08:00:04.4947208Z   API version:      1.45 (minimum version 1.24)
2025-04-15T08:00:04.4947609Z   Go version:       go1.21.10
2025-04-15T08:00:04.4947939Z   Git commit:       8e96db1
2025-04-15T08:00:04.4948288Z   Built:            Thu May 16 08:33:29 2024
2025-04-15T08:00:04.4948698Z   OS/Arch:          linux/amd64
2025-04-15T08:00:04.4949071Z   Experimental:     false
2025-04-15T08:00:04.4949441Z  containerd:
2025-04-15T08:00:04.4949745Z   Version:          1.7.27
2025-04-15T08:00:04.4950217Z   GitCommit:        05044ec0a9a75232cad458027ca83437aae3f4da
2025-04-15T08:00:04.4950705Z  runc:
2025-04-15T08:00:04.4950972Z   Version:          1.2.5
2025-04-15T08:00:04.4951318Z   GitCommit:        v1.2.5-0-g59923ef
2025-04-15T08:00:04.4951572Z  docker-init:
2025-04-15T08:00:04.4951754Z   Version:          0.19.0
2025-04-15T08:00:04.4951959Z   GitCommit:        de40ad0
2025-04-15T08:00:04.4990245Z [command]/usr/bin/docker info
2025-04-15T08:00:07.0701978Z Client: Docker Engine - Community
2025-04-15T08:00:07.0702618Z  Version:    26.1.3
2025-04-15T08:00:07.0702944Z  Context:    default
2025-04-15T08:00:07.0703323Z  Debug Mode: false
2025-04-15T08:00:07.0703648Z  Plugins:
2025-04-15T08:00:07.0703952Z   buildx: Docker Buildx (Docker Inc.)
2025-04-15T08:00:07.0704354Z     Version:  v0.22.0
2025-04-15T08:00:07.0704766Z     Path:     /usr/libexec/docker/cli-plugins/docker-buildx
2025-04-15T08:00:07.0705278Z   compose: Docker Compose (Docker Inc.)
2025-04-15T08:00:07.0705702Z     Version:  v2.27.1
2025-04-15T08:00:07.0706287Z     Path:     /usr/libexec/docker/cli-plugins/docker-compose
2025-04-15T08:00:07.0706654Z 
2025-04-15T08:00:07.0706763Z Server:
2025-04-15T08:00:07.0707016Z  Containers: 0
2025-04-15T08:00:07.0707279Z   Running: 0
2025-04-15T08:00:07.0707554Z   Paused: 0
2025-04-15T08:00:07.0707794Z   Stopped: 0
2025-04-15T08:00:07.0708042Z  Images: 16
2025-04-15T08:00:07.0708311Z  Server Version: 26.1.3
2025-04-15T08:00:07.0708638Z  Storage Driver: overlay2
2025-04-15T08:00:07.0708989Z   Backing Filesystem: extfs
2025-04-15T08:00:07.0709338Z   Supports d_type: true
2025-04-15T08:00:07.0709659Z   Using metacopy: false
2025-04-15T08:00:07.0709987Z   Native Overlay Diff: false
2025-04-15T08:00:07.0710335Z   userxattr: false
2025-04-15T08:00:07.0710648Z  Logging Driver: json-file
2025-04-15T08:00:07.0710987Z  Cgroup Driver: cgroupfs
2025-04-15T08:00:07.0711320Z  Cgroup Version: 2
2025-04-15T08:00:07.0711605Z  Plugins:
2025-04-15T08:00:07.0711875Z   Volume: local
2025-04-15T08:00:07.0712243Z   Network: bridge host ipvlan macvlan null overlay
2025-04-15T08:00:07.0713491Z   Log: awslogs fluentd gcplogs gelf journald json-file local splunk syslog
2025-04-15T08:00:07.0714098Z  Swarm: inactive
2025-04-15T08:00:07.0714688Z  Runtimes: io.containerd.runc.v2 runc
2025-04-15T08:00:07.0715105Z  Default Runtime: runc
2025-04-15T08:00:07.0715441Z  Init Binary: docker-init
2025-04-15T08:00:07.0715915Z  containerd version: 05044ec0a9a75232cad458027ca83437aae3f4da
2025-04-15T08:00:07.0716668Z  runc version: v1.2.5-0-g59923ef
2025-04-15T08:00:07.0716927Z  init version: de40ad0
2025-04-15T08:00:07.0717130Z  Security Options:
2025-04-15T08:00:07.0717302Z   apparmor
2025-04-15T08:00:07.0717462Z   seccomp
2025-04-15T08:00:07.0717626Z    Profile: builtin
2025-04-15T08:00:07.0717800Z   cgroupns
2025-04-15T08:00:07.0717968Z  Kernel Version: 6.8.0-1025-azure
2025-04-15T08:00:07.0718197Z  Operating System: Ubuntu 22.04.5 LTS
2025-04-15T08:00:07.0718423Z  OSType: linux
2025-04-15T08:00:07.0718598Z  Architecture: x86_64
2025-04-15T08:00:07.0718780Z  CPUs: 4
2025-04-15T08:00:07.0718952Z  Total Memory: 15.62GiB
2025-04-15T08:00:07.0719144Z  Name: fv-az975-187
2025-04-15T08:00:07.0719347Z  ID: 55dec1ed-8bcd-44e7-9f80-b09552f46eab
2025-04-15T08:00:07.0719607Z  Docker Root Dir: /var/lib/docker
2025-04-15T08:00:07.0719824Z  Debug Mode: false
2025-04-15T08:00:07.0720016Z  Username: githubactions
2025-04-15T08:00:07.0720217Z  Experimental: false
2025-04-15T08:00:07.0720413Z  Insecure Registries:
2025-04-15T08:00:07.0720602Z   127.0.0.0/8
2025-04-15T08:00:07.0720893Z  Live Restore Enabled: false
2025-04-15T08:00:07.0721134Z 
2025-04-15T08:00:07.0721656Z ##[endgroup]
2025-04-15T08:00:07.1644590Z ##[group]Buildx version
2025-04-15T08:00:07.1666531Z [command]/usr/bin/docker buildx version
2025-04-15T08:00:07.2286343Z github.com/docker/buildx v0.22.0 18ccba072076ddbfb0aeedd6746d7719b0729b58
2025-04-15T08:00:07.2317150Z ##[endgroup]
2025-04-15T08:00:07.2456738Z ##[group]Inspecting default docker context
2025-04-15T08:00:07.2583695Z [
2025-04-15T08:00:07.2584025Z   {
2025-04-15T08:00:07.2584344Z     "Name": "default",
2025-04-15T08:00:07.2584717Z     "Metadata": {},
2025-04-15T08:00:07.2585055Z     "Endpoints": {
2025-04-15T08:00:07.2585364Z       "docker": {
2025-04-15T08:00:07.2585738Z         "Host": "unix:///var/run/docker.sock",
2025-04-15T08:00:07.2586386Z         "SkipTLSVerify": false
2025-04-15T08:00:07.2586763Z       }
2025-04-15T08:00:07.2587033Z     },
2025-04-15T08:00:07.2587319Z     "TLSMaterial": {},
2025-04-15T08:00:07.2587671Z     "Storage": {
2025-04-15T08:00:07.2588012Z       "MetadataPath": "<IN MEMORY>",
2025-04-15T08:00:07.2588444Z       "TLSPath": "<IN MEMORY>"
2025-04-15T08:00:07.2588805Z     }
2025-04-15T08:00:07.2589080Z   }
2025-04-15T08:00:07.2589357Z ]
2025-04-15T08:00:07.2589960Z ##[endgroup]
2025-04-15T08:00:07.2590575Z ##[group]Creating a new builder instance
2025-04-15T08:00:07.3124816Z [command]/usr/bin/docker buildx create --name builder-181a0a2c-6979-4ac2-af91-062ff9d1030d --driver docker-container --buildkitd-flags --allow-insecure-entitlement security.insecure --allow-insecure-entitlement network.host --use
2025-04-15T08:00:07.3858597Z builder-181a0a2c-6979-4ac2-af91-062ff9d1030d
2025-04-15T08:00:07.3909433Z ##[endgroup]
2025-04-15T08:00:07.3909838Z ##[group]Booting builder
2025-04-15T08:00:07.3937359Z [command]/usr/bin/docker buildx inspect --bootstrap --builder builder-181a0a2c-6979-4ac2-af91-062ff9d1030d
2025-04-15T08:00:07.4616399Z #1 [internal] booting buildkit
2025-04-15T08:00:07.6121750Z #1 pulling image moby/buildkit:buildx-stable-1
2025-04-15T08:00:08.5175925Z #1 pulling image moby/buildkit:buildx-stable-1 1.1s done
2025-04-15T08:00:08.6686877Z #1 creating container buildx_buildkit_builder-181a0a2c-6979-4ac2-af91-062ff9d1030d0
2025-04-15T08:00:11.7697550Z #1 creating container buildx_buildkit_builder-181a0a2c-6979-4ac2-af91-062ff9d1030d0 3.3s done
2025-04-15T08:00:11.7709471Z #1 DONE 4.3s
2025-04-15T08:00:11.8004898Z Name:          builder-181a0a2c-6979-4ac2-af91-062ff9d1030d
2025-04-15T08:00:11.8005454Z Driver:        docker-container
2025-04-15T08:00:11.8006388Z Last Activity: 2025-04-15 08:00:07 +0000 UTC
2025-04-15T08:00:11.8006689Z 
2025-04-15T08:00:11.8006803Z Nodes:
2025-04-15T08:00:11.8008722Z Name:                  builder-181a0a2c-6979-4ac2-af91-062ff9d1030d0
2025-04-15T08:00:11.8009406Z Endpoint:              unix:///var/run/docker.sock
2025-04-15T08:00:11.8010026Z Status:                running
2025-04-15T08:00:11.8010909Z BuildKit daemon flags: --allow-insecure-entitlement security.insecure --allow-insecure-entitlement network.host
2025-04-15T08:00:11.8011806Z BuildKit version:      v0.20.2
2025-04-15T08:00:11.8012360Z Platforms:             linux/amd64, linux/amd64/v2, linux/amd64/v3, linux/386
2025-04-15T08:00:11.8012891Z Labels:
2025-04-15T08:00:11.8013279Z  org.mobyproject.buildkit.worker.executor:         oci
2025-04-15T08:00:11.8013933Z  org.mobyproject.buildkit.worker.hostname:         b5645cf09dd2
2025-04-15T08:00:11.8014597Z  org.mobyproject.buildkit.worker.network:          host
2025-04-15T08:00:11.8015254Z  org.mobyproject.buildkit.worker.oci.process-mode: sandbox
2025-04-15T08:00:11.8015938Z  org.mobyproject.buildkit.worker.selinux.enabled:  false
2025-04-15T08:00:11.8016832Z  org.mobyproject.buildkit.worker.snapshotter:      overlayfs
2025-04-15T08:00:11.8017368Z GC Policy rule#0:
2025-04-15T08:00:11.8017657Z  All:            false
2025-04-15T08:00:11.8018170Z  Filters:        type==source.local,type==exec.cachemount,type==source.git.checkout
2025-04-15T08:00:11.8018764Z  Keep Duration:  48h0m0s
2025-04-15T08:00:11.8019098Z  Max Used Space: 488.3MiB
2025-04-15T08:00:11.8019429Z GC Policy rule#1:
2025-04-15T08:00:11.8019704Z  All:            false
2025-04-15T08:00:11.8020014Z  Keep Duration:  1440h0m0s
2025-04-15T08:00:11.8020353Z  Reserved Space: 7.451GiB
2025-04-15T08:00:11.8020686Z  Max Used Space: 54.95GiB
2025-04-15T08:00:11.8021005Z  Min Free Space: 13.97GiB
2025-04-15T08:00:11.8021327Z GC Policy rule#2:
2025-04-15T08:00:11.8021611Z  All:            false
2025-04-15T08:00:11.8021906Z  Reserved Space: 7.451GiB
2025-04-15T08:00:11.8022241Z  Max Used Space: 54.95GiB
2025-04-15T08:00:11.8022560Z  Min Free Space: 13.97GiB
2025-04-15T08:00:11.8022877Z GC Policy rule#3:
2025-04-15T08:00:11.8023163Z  All:            true
2025-04-15T08:00:11.8023468Z  Reserved Space: 7.451GiB
2025-04-15T08:00:11.8023801Z  Max Used Space: 54.95GiB
2025-04-15T08:00:11.8024130Z  Min Free Space: 13.97GiB
2025-04-15T08:00:11.8053849Z ##[endgroup]
2025-04-15T08:00:11.8921292Z ##[group]Inspect builder
2025-04-15T08:00:11.8972188Z {
2025-04-15T08:00:11.8972444Z   "nodes": [
2025-04-15T08:00:11.8972623Z     {
2025-04-15T08:00:11.8972861Z       "name": "builder-181a0a2c-6979-4ac2-af91-062ff9d1030d0",
2025-04-15T08:00:11.8973196Z       "endpoint": "unix:///var/run/docker.sock",
2025-04-15T08:00:11.8973461Z       "status": "running",
2025-04-15T08:00:11.8973918Z       "buildkitd-flags": "--allow-insecure-entitlement security.insecure --allow-insecure-entitlement network.host",
2025-04-15T08:00:11.8974410Z       "buildkit": "v0.20.2",
2025-04-15T08:00:11.8974727Z       "platforms": "linux/amd64,linux/amd64/v2,linux/amd64/v3,linux/386",
2025-04-15T08:00:11.8975037Z       "features": {
2025-04-15T08:00:11.8975325Z         "Automatically load images to the Docker Engine image store": true,
2025-04-15T08:00:11.8975646Z         "Cache export": true,
2025-04-15T08:00:11.8976014Z         "Direct push": true,
2025-04-15T08:00:11.8976515Z         "Docker exporter": true,
2025-04-15T08:00:11.8976763Z         "Multi-platform build": true,
2025-04-15T08:00:11.8977018Z         "OCI exporter": true
2025-04-15T08:00:11.8977216Z       },
2025-04-15T08:00:11.8977424Z       "labels": {
2025-04-15T08:00:11.8977822Z         "org.mobyproject.buildkit.worker.executor": "oci",
2025-04-15T08:00:11.8978204Z         "org.mobyproject.buildkit.worker.hostname": "b5645cf09dd2",
2025-04-15T08:00:11.8978571Z         "org.mobyproject.buildkit.worker.network": "host",
2025-04-15T08:00:11.8978959Z         "org.mobyproject.buildkit.worker.oci.process-mode": "sandbox",
2025-04-15T08:00:11.8979854Z         "org.mobyproject.buildkit.worker.selinux.enabled": "false",
2025-04-15T08:00:11.8980255Z         "org.mobyproject.buildkit.worker.snapshotter": "overlayfs"
2025-04-15T08:00:11.8980674Z       },
2025-04-15T08:00:11.8981073Z       "gcPolicy": [
2025-04-15T08:00:11.8981338Z         {
2025-04-15T08:00:11.8981784Z           "all": false,
2025-04-15T08:00:11.8982069Z           "filter": [
2025-04-15T08:00:11.8982421Z             "type==source.local",
2025-04-15T08:00:11.8982730Z             "type==exec.cachemount",
2025-04-15T08:00:11.8983085Z             "type==source.git.checkout"
2025-04-15T08:00:11.8983447Z           ],
2025-04-15T08:00:11.8983733Z           "keepDuration": "48h0m0s"
2025-04-15T08:00:11.8984054Z         },
2025-04-15T08:00:11.8984296Z         {
2025-04-15T08:00:11.8984560Z           "all": false,
2025-04-15T08:00:11.8984865Z           "keepDuration": "1440h0m0s"
2025-04-15T08:00:11.8985224Z         },
2025-04-15T08:00:11.8985483Z         {
2025-04-15T08:00:11.8985689Z           "all": false
2025-04-15T08:00:11.8986013Z         },
2025-04-15T08:00:11.8986403Z         {
2025-04-15T08:00:11.8986631Z           "all": true
2025-04-15T08:00:11.8986965Z         }
2025-04-15T08:00:11.8987185Z       ]
2025-04-15T08:00:11.8987423Z     }
2025-04-15T08:00:11.8987749Z   ],
2025-04-15T08:00:11.8988054Z   "name": "builder-181a0a2c-6979-4ac2-af91-062ff9d1030d",
2025-04-15T08:00:11.8988471Z   "driver": "docker-container",
2025-04-15T08:00:11.8988819Z   "lastActivity": "2025-04-15T08:00:07.000Z"
2025-04-15T08:00:11.9006382Z }
2025-04-15T08:00:11.9006790Z ##[endgroup]
2025-04-15T08:00:11.9007269Z ##[group]BuildKit version
2025-04-15T08:00:11.9007685Z builder-181a0a2c-6979-4ac2-af91-062ff9d1030d0: v0.20.2
2025-04-15T08:00:11.9008335Z ##[endgroup]
2025-04-15T08:00:11.9137316Z ##[group]Run docker/build-push-action@v6
2025-04-15T08:00:11.9137605Z with:
2025-04-15T08:00:11.9137781Z   platforms: linux/amd64
2025-04-15T08:00:11.9137996Z   tags: netdata/netdata:test
2025-04-15T08:00:11.9138202Z   load: true
2025-04-15T08:00:11.9138443Z   cache-to: type=local,dest=/tmp/build-cache,mode=max
2025-04-15T08:00:11.9138926Z   build-args: OFFICIAL_IMAGE=
EXTRA_INSTALL_OPTS=--disable-go
BUILD_VERSION=test
BUILD_DATE=2025-04-15T06:02:34Z

2025-04-15T08:00:11.9139361Z   no-cache: false
2025-04-15T08:00:11.9139543Z   pull: false
2025-04-15T08:00:11.9139721Z   push: false
2025-04-15T08:00:11.9140031Z   github-token: ***
2025-04-15T08:00:11.9140222Z env:
2025-04-15T08:00:11.9140379Z   DISABLE_TELEMETRY: 1
2025-04-15T08:00:11.9140570Z   NIGHTLY_COUNT: 4
2025-04-15T08:00:11.9140744Z ##[endgroup]
2025-04-15T08:00:12.1462680Z ##[group]GitHub Actions runtime token ACs
2025-04-15T08:00:12.1470920Z refs/pull/20112/merge: read/write
2025-04-15T08:00:12.1471427Z refs/heads/master: read
2025-04-15T08:00:12.1472069Z ##[endgroup]
2025-04-15T08:00:12.1472662Z ##[group]Docker info
2025-04-15T08:00:12.1542500Z [command]/usr/bin/docker version
2025-04-15T08:00:12.1739162Z Client: Docker Engine - Community
2025-04-15T08:00:12.1742026Z  Version:           26.1.3
2025-04-15T08:00:12.1742444Z  API version:       1.45
2025-04-15T08:00:12.1742790Z  Go version:        go1.21.10
2025-04-15T08:00:12.1743103Z  Git commit:        b72abbb
2025-04-15T08:00:12.1743339Z  Built:             Thu May 16 08:33:29 2024
2025-04-15T08:00:12.1743593Z  OS/Arch:           linux/amd64
2025-04-15T08:00:12.1743798Z  Context:           default
2025-04-15T08:00:12.1743930Z 
2025-04-15T08:00:12.1744020Z Server: Docker Engine - Community
2025-04-15T08:00:12.1744239Z  Engine:
2025-04-15T08:00:12.1744402Z   Version:          26.1.3
2025-04-15T08:00:12.1744628Z   API version:      1.45 (minimum version 1.24)
2025-04-15T08:00:12.1744885Z   Go version:       go1.21.10
2025-04-15T08:00:12.1745094Z   Git commit:       8e96db1
2025-04-15T08:00:12.1745316Z   Built:            Thu May 16 08:33:29 2024
2025-04-15T08:00:12.1745555Z   OS/Arch:          linux/amd64
2025-04-15T08:00:12.1745764Z   Experimental:     false
2025-04-15T08:00:12.1745954Z  containerd:
2025-04-15T08:00:12.1746334Z   Version:          1.7.27
2025-04-15T08:00:12.1746917Z   GitCommit:        05044ec0a9a75232cad458027ca83437aae3f4da
2025-04-15T08:00:12.1747189Z  runc:
2025-04-15T08:00:12.1747349Z   Version:          1.2.5
2025-04-15T08:00:12.1747550Z   GitCommit:        v1.2.5-0-g59923ef
2025-04-15T08:00:12.1747792Z  docker-init:
2025-04-15T08:00:12.1747968Z   Version:          0.19.0
2025-04-15T08:00:12.1748172Z   GitCommit:        de40ad0
2025-04-15T08:00:12.1788915Z [command]/usr/bin/docker info
2025-04-15T08:00:12.2268220Z Client: Docker Engine - Community
2025-04-15T08:00:12.2268717Z  Version:    26.1.3
2025-04-15T08:00:12.2269734Z  Context:    default
2025-04-15T08:00:12.2270134Z  Debug Mode: false
2025-04-15T08:00:12.2270470Z  Plugins:
2025-04-15T08:00:12.2270836Z   buildx: Docker Buildx (Docker Inc.)
2025-04-15T08:00:12.2271324Z     Version:  v0.22.0
2025-04-15T08:00:12.2271794Z     Path:     /usr/libexec/docker/cli-plugins/docker-buildx
2025-04-15T08:00:12.2272348Z   compose: Docker Compose (Docker Inc.)
2025-04-15T08:00:12.2272815Z     Version:  v2.27.1
2025-04-15T08:00:12.2273267Z     Path:     /usr/libexec/docker/cli-plugins/docker-compose
2025-04-15T08:00:12.2273657Z 
2025-04-15T08:00:12.2273779Z Server:
2025-04-15T08:00:12.2274073Z  Containers: 1
2025-04-15T08:00:12.2274378Z   Running: 1
2025-04-15T08:00:12.2274676Z   Paused: 0
2025-04-15T08:00:12.2274966Z   Stopped: 0
2025-04-15T08:00:12.2275254Z  Images: 16
2025-04-15T08:00:12.2275555Z  Server Version: 26.1.3
2025-04-15T08:00:12.2275912Z  Storage Driver: overlay2
2025-04-15T08:00:12.2276565Z   Backing Filesystem: extfs
2025-04-15T08:00:12.2276942Z   Supports d_type: true
2025-04-15T08:00:12.2277294Z   Using metacopy: false
2025-04-15T08:00:12.2277642Z   Native Overlay Diff: false
2025-04-15T08:00:12.2278491Z   userxattr: false
2025-04-15T08:00:12.2278856Z  Logging Driver: json-file
2025-04-15T08:00:12.2279234Z  Cgroup Driver: cgroupfs
2025-04-15T08:00:12.2279587Z  Cgroup Version: 2
2025-04-15T08:00:12.2279906Z  Plugins:
2025-04-15T08:00:12.2280200Z   Volume: local
2025-04-15T08:00:12.2280636Z   Network: bridge host ipvlan macvlan null overlay
2025-04-15T08:00:12.2281322Z   Log: awslogs fluentd gcplogs gelf journald json-file local splunk syslog
2025-04-15T08:00:12.2281932Z  Swarm: inactive
2025-04-15T08:00:12.2282305Z  Runtimes: io.containerd.runc.v2 runc
2025-04-15T08:00:12.2283040Z  Default Runtime: runc
2025-04-15T08:00:12.2283625Z  Init Binary: docker-init
2025-04-15T08:00:12.2284143Z  containerd version: 05044ec0a9a75232cad458027ca83437aae3f4da
2025-04-15T08:00:12.2284719Z  runc version: v1.2.5-0-g59923ef
2025-04-15T08:00:12.2285140Z  init version: de40ad0
2025-04-15T08:00:12.2285496Z  Security Options:
2025-04-15T08:00:12.2285824Z   apparmor
2025-04-15T08:00:12.2286294Z   seccomp
2025-04-15T08:00:12.2286614Z    Profile: builtin
2025-04-15T08:00:12.2286939Z   cgroupns
2025-04-15T08:00:12.2287247Z  Kernel Version: 6.8.0-1025-azure
2025-04-15T08:00:12.2287668Z  Operating System: Ubuntu 22.04.5 LTS
2025-04-15T08:00:12.2288082Z  OSType: linux
2025-04-15T08:00:12.2288417Z  Architecture: x86_64
2025-04-15T08:00:12.2288754Z  CPUs: 4
2025-04-15T08:00:12.2289040Z  Total Memory: 15.62GiB
2025-04-15T08:00:12.2289369Z  Name: fv-az975-187
2025-04-15T08:00:12.2289733Z  ID: 55dec1ed-8bcd-44e7-9f80-b09552f46eab
2025-04-15T08:00:12.2290191Z  Docker Root Dir: /var/lib/docker
2025-04-15T08:00:12.2290571Z  Debug Mode: false
2025-04-15T08:00:12.2290887Z  Username: githubactions
2025-04-15T08:00:12.2291238Z  Experimental: false
2025-04-15T08:00:12.2291580Z  Insecure Registries:
2025-04-15T08:00:12.2291903Z   127.0.0.0/8
2025-04-15T08:00:12.2292213Z  Live Restore Enabled: false
2025-04-15T08:00:12.2292459Z 
2025-04-15T08:00:12.2292926Z ##[endgroup]
2025-04-15T08:00:12.2293493Z ##[group]Proxy configuration
2025-04-15T08:00:12.2293894Z No proxy configuration found
2025-04-15T08:00:12.2294480Z ##[endgroup]
2025-04-15T08:00:12.2937112Z ##[group]Buildx version
2025-04-15T08:00:12.2965197Z [command]/usr/bin/docker buildx version
2025-04-15T08:00:12.3602638Z github.com/docker/buildx v0.22.0 18ccba072076ddbfb0aeedd6746d7719b0729b58
2025-04-15T08:00:12.3634954Z ##[endgroup]
2025-04-15T08:00:12.3635363Z ##[group]Builder info
2025-04-15T08:00:12.4462672Z {
2025-04-15T08:00:12.4463009Z   "nodes": [
2025-04-15T08:00:12.4463274Z     {
2025-04-15T08:00:12.4463537Z       "name": "builder-181a0a2c-6979-4ac2-af91-062ff9d1030d0",
2025-04-15T08:00:12.4463896Z       "endpoint": "unix:///var/run/docker.sock",
2025-04-15T08:00:12.4464170Z       "status": "running",
2025-04-15T08:00:12.4464642Z       "buildkitd-flags": "--allow-insecure-entitlement security.insecure --allow-insecure-entitlement network.host",
2025-04-15T08:00:12.4465127Z       "buildkit": "v0.20.2",
2025-04-15T08:00:12.4465458Z       "platforms": "linux/amd64,linux/amd64/v2,linux/amd64/v3,linux/386",
2025-04-15T08:00:12.4465777Z       "features": {
2025-04-15T08:00:12.4466359Z         "Automatically load images to the Docker Engine image store": true,
2025-04-15T08:00:12.4466879Z         "Cache export": true,
2025-04-15T08:00:12.4467098Z         "Direct push": true,
2025-04-15T08:00:12.4467338Z         "Docker exporter": true,
2025-04-15T08:00:12.4467571Z         "Multi-platform build": true,
2025-04-15T08:00:12.4467815Z         "OCI exporter": true
2025-04-15T08:00:12.4468004Z       },
2025-04-15T08:00:12.4468163Z       "labels": {
2025-04-15T08:00:12.4468408Z         "org.mobyproject.buildkit.worker.executor": "oci",
2025-04-15T08:00:12.4468780Z         "org.mobyproject.buildkit.worker.hostname": "b5645cf09dd2",
2025-04-15T08:00:12.4469140Z         "org.mobyproject.buildkit.worker.network": "host",
2025-04-15T08:00:12.4469520Z         "org.mobyproject.buildkit.worker.oci.process-mode": "sandbox",
2025-04-15T08:00:12.4469925Z         "org.mobyproject.buildkit.worker.selinux.enabled": "false",
2025-04-15T08:00:12.4470630Z         "org.mobyproject.buildkit.worker.snapshotter": "overlayfs"
2025-04-15T08:00:12.4471009Z       },
2025-04-15T08:00:12.4471168Z       "gcPolicy": [
2025-04-15T08:00:12.4471340Z         {
2025-04-15T08:00:12.4471491Z           "all": false,
2025-04-15T08:00:12.4471680Z           "filter": [
2025-04-15T08:00:12.4471870Z             "type==source.local",
2025-04-15T08:00:12.4472096Z             "type==exec.cachemount",
2025-04-15T08:00:12.4472331Z             "type==source.git.checkout"
2025-04-15T08:00:12.4472549Z           ],
2025-04-15T08:00:12.4472722Z           "keepDuration": "48h0m0s"
2025-04-15T08:00:12.4472930Z         },
2025-04-15T08:00:12.4473080Z         {
2025-04-15T08:00:12.4473232Z           "all": false,
2025-04-15T08:00:12.4473423Z           "keepDuration": "1440h0m0s"
2025-04-15T08:00:12.4473636Z         },
2025-04-15T08:00:12.4473783Z         {
2025-04-15T08:00:12.4473935Z           "all": false
2025-04-15T08:00:12.4474103Z         },
2025-04-15T08:00:12.4474258Z         {
2025-04-15T08:00:12.4474412Z           "all": true
2025-04-15T08:00:12.4474582Z         }
2025-04-15T08:00:12.4474729Z       ]
2025-04-15T08:00:12.4474872Z     }
2025-04-15T08:00:12.4475018Z   ],
2025-04-15T08:00:12.4475233Z   "name": "builder-181a0a2c-6979-4ac2-af91-062ff9d1030d",
2025-04-15T08:00:12.4475532Z   "driver": "docker-container",
2025-04-15T08:00:12.4475767Z   "lastActivity": "2025-04-15T08:00:07.000Z"
2025-04-15T08:00:12.4475987Z }
2025-04-15T08:00:12.4476679Z ##[endgroup]
2025-04-15T08:00:12.5848875Z [command]/usr/bin/docker buildx build --build-arg OFFICIAL_IMAGE= --build-arg EXTRA_INSTALL_OPTS=--disable-go --build-arg BUILD_VERSION=test --build-arg BUILD_DATE=2025-04-15T06:02:34Z --cache-to type=local,dest=/tmp/build-cache,mode=max --iidfile /home/runner/work/_temp/docker-actions-toolkit-NmcbQY/build-iidfile-de51336cd4.txt --platform linux/amd64 --secret id=GIT_AUTH_TOKEN,src=/home/runner/work/_temp/docker-actions-toolkit-NmcbQY/tmp-2812-ci1sLJFi2NsT --tag netdata/netdata:test --load --metadata-file /home/runner/work/_temp/docker-actions-toolkit-NmcbQY/build-metadata-b2352d722d.json https://github.com/netdata/netdata.git#refs/pull/20112/merge
2025-04-15T08:00:13.0097134Z #0 building with "builder-181a0a2c-6979-4ac2-af91-062ff9d1030d" instance using docker-container driver
2025-04-15T08:00:13.0097926Z 
2025-04-15T08:00:13.0098235Z #1 [internal] load git source https://github.com/netdata/netdata.git#refs/pull/20112/merge
2025-04-15T08:00:13.0098951Z #1 0.086 Initialized empty Git repository in /var/lib/buildkit/runc-overlayfs/snapshots/snapshots/1/fs/
2025-04-15T08:00:13.9487696Z #1 1.176 a5b28a739265453562fff86d47ec8c9cc0a1e296	refs/pull/20112/merge
2025-04-15T08:00:14.8518461Z #1 0.891 From https://github.com/netdata/netdata
2025-04-15T08:00:14.8519156Z #1 0.891  * [new ref]         refs/pull/20112/merge -> refs/pull/20112/merge
2025-04-15T08:00:15.6616720Z #1 1.701 Submodule 'aclk/aclk-schemas' (https://github.com/netdata/aclk-schemas.git) registered for path 'src/aclk/aclk-schemas'
2025-04-15T08:00:15.8203697Z #1 1.702 Submodule 'src/collectors/debugfs.plugin/libsensors/vendored' (https://github.com/lm-sensors/lm-sensors.git) registered for path 'src/collectors/debugfs.plugin/libsensors/vendored'
2025-04-15T08:00:15.8204952Z #1 1.702 Submodule 'src/web/server/h2o/libh2o' (https://github.com/h2o/h2o.git) registered for path 'src/web/server/h2o/libh2o'
2025-04-15T08:00:15.8205813Z #1 1.709 Cloning into '/var/lib/buildkit/runc-overlayfs/snapshots/snapshots/2/fs/src/aclk/aclk-schemas'...
2025-04-15T08:00:15.9595484Z #1 1.999 Cloning into '/var/lib/buildkit/runc-overlayfs/snapshots/snapshots/2/fs/src/collectors/debugfs.plugin/libsensors/vendored'...
2025-04-15T08:00:16.3347284Z #1 2.374 Cloning into '/var/lib/buildkit/runc-overlayfs/snapshots/snapshots/2/fs/src/web/server/h2o/libh2o'...
2025-04-15T08:00:17.3922054Z #1 3.432 Submodule path 'src/aclk/aclk-schemas': checked out 'ec319a14394436f62663548d32eb320eeddd264a'
2025-04-15T08:00:17.5799319Z #1 3.469 Submodule path 'src/collectors/debugfs.plugin/libsensors/vendored': checked out '42f240d2a457834bcbdf4dc8b57237f97b5f5854'
2025-04-15T08:00:18.7090703Z #1 4.749 From https://github.com/h2o/h2o
2025-04-15T08:00:18.7091776Z #1 4.749  * branch            7359e98d78d018a35f5da7523feac69f64eddb4b -> FETCH_HEAD
2025-04-15T08:00:19.2799777Z #1 5.319 Submodule path 'src/web/server/h2o/libh2o': checked out '7359e98d78d018a35f5da7523feac69f64eddb4b'
2025-04-15T08:00:19.4373627Z #1 5.322 Submodule 'misc/cache-digest.js' (https://github.com/h2o/cache-digest.js.git) registered for path 'src/web/server/h2o/libh2o/misc/cache-digest.js'
2025-04-15T08:00:19.4374982Z #1 5.323 Submodule 'misc/oktavia' (https://github.com/shibukawa/oktavia.git) registered for path 'src/web/server/h2o/libh2o/misc/oktavia'
2025-04-15T08:00:19.4376532Z #1 5.323 Submodule 'misc/p5-Server-Starter' (https://github.com/kazuho/p5-Server-Starter.git) registered for path 'src/web/server/h2o/libh2o/misc/p5-Server-Starter'
2025-04-15T08:00:19.4377853Z #1 5.324 Submodule 'misc/picotemplate' (https://github.com/kazuho/picotemplate.git) registered for path 'src/web/server/h2o/libh2o/misc/picotemplate'
2025-04-15T08:00:19.4378842Z #1 5.326 Cloning into '/var/lib/buildkit/runc-overlayfs/snapshots/snapshots/2/fs/src/web/server/h2o/libh2o/misc/cache-digest.js'...
2025-04-15T08:00:19.5803466Z #1 5.620 Cloning into '/var/lib/buildkit/runc-overlayfs/snapshots/snapshots/2/fs/src/web/server/h2o/libh2o/misc/oktavia'...
2025-04-15T08:00:19.9048594Z #1 5.944 Cloning into '/var/lib/buildkit/runc-overlayfs/snapshots/snapshots/2/fs/src/web/server/h2o/libh2o/misc/p5-Server-Starter'...
2025-04-15T08:00:20.1976674Z #1 6.237 Cloning into '/var/lib/buildkit/runc-overlayfs/snapshots/snapshots/2/fs/src/web/server/h2o/libh2o/misc/picotemplate'...
2025-04-15T08:00:21.1208137Z #1 7.160 From https://github.com/h2o/cache-digest.js
2025-04-15T08:00:21.1208857Z #1 7.160  * branch            1d982ed25eb15f41e78f614e67ad086c6bfe4af1 -> FETCH_HEAD
2025-04-15T08:00:21.2769383Z #1 7.166 Submodule path 'src/web/server/h2o/libh2o/misc/cache-digest.js': checked out '1d982ed25eb15f41e78f614e67ad086c6bfe4af1'
2025-04-15T08:00:21.8121275Z #1 7.852 From https://github.com/shibukawa/oktavia
2025-04-15T08:00:21.8121987Z #1 7.852  * branch            25b615f5bc0902b9107e3ffc1178ec6bf768b0ad -> FETCH_HEAD
2025-04-15T08:00:22.0008616Z #1 7.890 Submodule path 'src/web/server/h2o/libh2o/misc/oktavia': checked out '25b615f5bc0902b9107e3ffc1178ec6bf768b0ad'
2025-04-15T08:00:22.4596692Z #1 8.499 From https://github.com/kazuho/p5-Server-Starter
2025-04-15T08:00:22.4597283Z #1 8.499  * branch            a0c10e5a5ca48cbb85150be0a8abcb43acb457b8 -> FETCH_HEAD
2025-04-15T08:00:22.5791288Z #1 8.508 Submodule path 'src/web/server/h2o/libh2o/misc/p5-Server-Starter': checked out 'a0c10e5a5ca48cbb85150be0a8abcb43acb457b8'
2025-04-15T08:00:22.5792826Z #1 8.517 Submodule path 'src/web/server/h2o/libh2o/misc/picotemplate': checked out '55d6d242ae1e00ddf16199e15b1acaf6d5c84e42'
2025-04-15T08:00:22.5793490Z #1 DONE 9.7s
2025-04-15T08:00:22.5793605Z 
2025-04-15T08:00:22.5793771Z #2 [auth] netdata/base:pull token for registry-1.docker.io
2025-04-15T08:00:22.7294510Z #2 DONE 0.0s
2025-04-15T08:00:22.7294755Z 
2025-04-15T08:00:22.7295036Z #3 [auth] netdata/builder:pull token for registry-1.docker.io
2025-04-15T08:00:22.7295588Z #3 DONE 0.0s
2025-04-15T08:00:22.7295795Z 
2025-04-15T08:00:22.7296049Z #4 [internal] load metadata for docker.io/netdata/builder:v2
2025-04-15T08:00:22.9904114Z #4 DONE 0.5s
2025-04-15T08:00:22.9904360Z 
2025-04-15T08:00:22.9904619Z #5 [internal] load metadata for docker.io/netdata/base:v2
2025-04-15T08:00:23.1489963Z #5 DONE 0.5s
2025-04-15T08:00:23.1496979Z 
2025-04-15T08:00:23.1498577Z #6 [builder 1/5] FROM docker.io/netdata/builder:v2@sha256:b069c242bd57207d619923b1eda180bdc2bdfadc4ef0e9c4537f5c9b4c17e9b8
2025-04-15T08:00:23.1499954Z #6 resolve docker.io/netdata/builder:v2@sha256:b069c242bd57207d619923b1eda180bdc2bdfadc4ef0e9c4537f5c9b4c17e9b8 done
2025-04-15T08:00:23.1501499Z #6 sha256:1c1e4db2309ea4d7f127908dc06b52c621cea76c898a040c9d4e5c25071b5f3e 350B / 350B 0.1s done
2025-04-15T08:00:23.3022150Z #6 sha256:cba4091b5f6e57c5e29bc9e1e87b7ac1b7b27449ddd8dfcb4f014a6ce07248e1 11.53MB / 282.44MB 0.2s
2025-04-15T08:00:23.3025106Z #6 sha256:2a76eabc8892e0d2ed956eb4c70f7b5869d3699a03e186185ba78e030e3e91a4 25.93MB / 74.05MB 0.2s
2025-04-15T08:00:23.4519032Z #6 sha256:cba4091b5f6e57c5e29bc9e1e87b7ac1b7b27449ddd8dfcb4f014a6ce07248e1 40.89MB / 282.44MB 0.3s
2025-04-15T08:00:23.4520213Z #6 sha256:2a76eabc8892e0d2ed956eb4c70f7b5869d3699a03e186185ba78e030e3e91a4 53.81MB / 74.05MB 0.3s
2025-04-15T08:00:23.6031363Z #6 sha256:cba4091b5f6e57c5e29bc9e1e87b7ac1b7b27449ddd8dfcb4f014a6ce07248e1 72.35MB / 282.44MB 0.5s
2025-04-15T08:00:23.6035065Z #6 sha256:2a76eabc8892e0d2ed956eb4c70f7b5869d3699a03e186185ba78e030e3e91a4 74.05MB / 74.05MB 0.4s done
2025-04-15T08:00:23.6036965Z #6 sha256:4df511774be456e20f1a74d46cbb4fbd4f462a2496664dc8203e4443526a4623 2.13kB / 2.13kB 0.1s done
2025-04-15T08:00:23.7771020Z #6 sha256:cba4091b5f6e57c5e29bc9e1e87b7ac1b7b27449ddd8dfcb4f014a6ce07248e1 98.98MB / 282.44MB 0.6s
2025-04-15T08:00:23.7772939Z #6 sha256:c6597fc0a1c9f4816f04bab3606c1f642f9bbaa5a06ab6cad104778fff08ea2c 61.72MB / 282.96MB 0.3s
2025-04-15T08:00:23.9277963Z #6 sha256:cba4091b5f6e57c5e29bc9e1e87b7ac1b7b27449ddd8dfcb4f014a6ce07248e1 138.54MB / 282.44MB 0.8s
2025-04-15T08:00:23.9281193Z #6 sha256:c6597fc0a1c9f4816f04bab3606c1f642f9bbaa5a06ab6cad104778fff08ea2c 100.66MB / 282.96MB 0.5s
2025-04-15T08:00:24.0780583Z #6 sha256:cba4091b5f6e57c5e29bc9e1e87b7ac1b7b27449ddd8dfcb4f014a6ce07248e1 175.11MB / 282.44MB 0.9s
2025-04-15T08:00:24.0781783Z #6 sha256:c6597fc0a1c9f4816f04bab3606c1f642f9bbaa5a06ab6cad104778fff08ea2c 138.29MB / 282.96MB 0.6s
2025-04-15T08:00:24.2267614Z #6 sha256:cba4091b5f6e57c5e29bc9e1e87b7ac1b7b27449ddd8dfcb4f014a6ce07248e1 197.13MB / 282.44MB 1.1s
2025-04-15T08:00:24.2271312Z #6 sha256:c6597fc0a1c9f4816f04bab3606c1f642f9bbaa5a06ab6cad104778fff08ea2c 177.21MB / 282.96MB 0.8s
2025-04-15T08:00:24.3777232Z #6 sha256:cba4091b5f6e57c5e29bc9e1e87b7ac1b7b27449ddd8dfcb4f014a6ce07248e1 235.77MB / 282.44MB 1.2s
2025-04-15T08:00:24.3778679Z #6 sha256:c6597fc0a1c9f4816f04bab3606c1f642f9bbaa5a06ab6cad104778fff08ea2c 210.76MB / 282.96MB 0.9s
2025-04-15T08:00:24.5268941Z #6 sha256:cba4091b5f6e57c5e29bc9e1e87b7ac1b7b27449ddd8dfcb4f014a6ce07248e1 275.78MB / 282.44MB 1.4s
2025-04-15T08:00:24.5272807Z #6 sha256:c6597fc0a1c9f4816f04bab3606c1f642f9bbaa5a06ab6cad104778fff08ea2c 242.48MB / 282.96MB 1.1s
2025-04-15T08:00:24.6769071Z #6 sha256:c6597fc0a1c9f4816f04bab3606c1f642f9bbaa5a06ab6cad104778fff08ea2c 258.48MB / 282.96MB 1.2s
2025-04-15T08:00:24.8271021Z #6 sha256:c6597fc0a1c9f4816f04bab3606c1f642f9bbaa5a06ab6cad104778fff08ea2c 282.96MB / 282.96MB 1.4s
2025-04-15T08:00:25.5678969Z #6 ...
2025-04-15T08:00:25.5679246Z 
2025-04-15T08:00:25.5679850Z #7 [base 1/4] FROM docker.io/netdata/base:v2@sha256:7765ceb9cfdaf1746de9af3976d29a49f822bb9c2ccbffd70b4275ab05563804
2025-04-15T08:00:25.5681140Z #7 resolve docker.io/netdata/base:v2@sha256:7765ceb9cfdaf1746de9af3976d29a49f822bb9c2ccbffd70b4275ab05563804 done
2025-04-15T08:00:25.5682354Z #7 sha256:d13e85eca31f8e9a530041e204da3a6674f1202da739817e1dcb93b2bab5d06f 72.04MB / 72.04MB 0.4s done
2025-04-15T08:00:25.5682982Z #7 sha256:23b7d26ef1d294256da0d70ce374277b9aab5ca683015073316005cb63d33849 48.49MB / 48.49MB 0.4s done
2025-04-15T08:00:25.5683583Z #7 extracting sha256:23b7d26ef1d294256da0d70ce374277b9aab5ca683015073316005cb63d33849 2.1s done
2025-04-15T08:00:25.5683984Z #7 DONE 2.5s
2025-04-15T08:00:25.5684089Z 
2025-04-15T08:00:25.5684418Z #6 [builder 1/5] FROM docker.io/netdata/builder:v2@sha256:b069c242bd57207d619923b1eda180bdc2bdfadc4ef0e9c4537f5c9b4c17e9b8
2025-04-15T08:00:25.5685109Z #6 sha256:cba4091b5f6e57c5e29bc9e1e87b7ac1b7b27449ddd8dfcb4f014a6ce07248e1 282.44MB / 282.44MB 2.4s done
2025-04-15T08:00:25.7252102Z #6 sha256:c6597fc0a1c9f4816f04bab3606c1f642f9bbaa5a06ab6cad104778fff08ea2c 282.96MB / 282.96MB 2.1s done
2025-04-15T08:00:25.7253257Z #6 extracting sha256:c6597fc0a1c9f4816f04bab3606c1f642f9bbaa5a06ab6cad104778fff08ea2c
2025-04-15T08:00:27.4699900Z #6 ...
2025-04-15T08:00:27.4700167Z 
2025-04-15T08:00:27.4700781Z #7 [base 1/4] FROM docker.io/netdata/base:v2@sha256:7765ceb9cfdaf1746de9af3976d29a49f822bb9c2ccbffd70b4275ab05563804
2025-04-15T08:00:27.4701994Z #7 extracting sha256:d13e85eca31f8e9a530041e204da3a6674f1202da739817e1dcb93b2bab5d06f 1.9s done
2025-04-15T08:00:27.4702752Z #7 DONE 4.5s
2025-04-15T08:00:27.6206806Z 
2025-04-15T08:00:27.6208878Z #8 [base 2/4] RUN mkdir -p /opt/src /var/log/netdata &&     ln -sf /dev/stdout /var/log/netdata/access.log &&     ln -sf /dev/stdout /var/log/netdata/aclk.log &&     ln -sf /dev/stdout /var/log/netdata/debug.log &&     ln -sf /dev/stderr /var/log/netdata/error.log &&     ln -sf /dev/stderr /var/log/netdata/daemon.log &&     ln -sf /dev/stdout /var/log/netdata/collector.log &&     ln -sf /dev/stdout /var/log/netdata/health.log
2025-04-15T08:00:30.8176231Z #8 DONE 3.3s
2025-04-15T08:00:30.8176491Z 
2025-04-15T08:00:30.8177151Z #6 [builder 1/5] FROM docker.io/netdata/builder:v2@sha256:b069c242bd57207d619923b1eda180bdc2bdfadc4ef0e9c4537f5c9b4c17e9b8
2025-04-15T08:00:30.9179508Z #6 extracting sha256:c6597fc0a1c9f4816f04bab3606c1f642f9bbaa5a06ab6cad104778fff08ea2c 5.3s done
2025-04-15T08:00:30.9180244Z #6 DONE 7.9s
2025-04-15T08:00:31.0732877Z 
2025-04-15T08:00:31.0733821Z #6 [builder 1/5] FROM docker.io/netdata/builder:v2@sha256:b069c242bd57207d619923b1eda180bdc2bdfadc4ef0e9c4537f5c9b4c17e9b8
2025-04-15T08:00:31.0734734Z #6 extracting sha256:4df511774be456e20f1a74d46cbb4fbd4f462a2496664dc8203e4443526a4623 done
2025-04-15T08:00:31.0735305Z #6 extracting sha256:2a76eabc8892e0d2ed956eb4c70f7b5869d3699a03e186185ba78e030e3e91a4
2025-04-15T08:00:33.6967865Z #6 extracting sha256:2a76eabc8892e0d2ed956eb4c70f7b5869d3699a03e186185ba78e030e3e91a4 2.8s done
2025-04-15T08:00:33.8553453Z #6 extracting sha256:1c1e4db2309ea4d7f127908dc06b52c621cea76c898a040c9d4e5c25071b5f3e done
2025-04-15T08:00:33.8556859Z #6 extracting sha256:cba4091b5f6e57c5e29bc9e1e87b7ac1b7b27449ddd8dfcb4f014a6ce07248e1
2025-04-15T08:00:44.8615436Z #6 extracting sha256:cba4091b5f6e57c5e29bc9e1e87b7ac1b7b27449ddd8dfcb4f014a6ce07248e1 11.2s done
2025-04-15T08:00:44.8616605Z #6 DONE 21.8s
2025-04-15T08:00:45.0127030Z 
2025-04-15T08:00:45.0127616Z #9 [builder 2/5] COPY . /opt/netdata.git
2025-04-15T08:00:49.4181743Z #9 DONE 4.6s
2025-04-15T08:00:49.6054920Z 
2025-04-15T08:00:49.6055691Z #10 [builder 3/5] WORKDIR /opt/netdata.git
2025-04-15T08:00:49.6056328Z #10 DONE 0.1s
2025-04-15T08:00:49.6056527Z 
2025-04-15T08:00:49.6059307Z #11 [builder 4/5] RUN chmod +x netdata-installer.sh &&    cp -rp /deps/* /usr/local/ &&    /bin/echo -e "INSTALL_TYPE='oci'\nPREBUILT_ARCH='$(uname -m)'" > ./system/.install-type &&    CFLAGS="$(packaging/docker/gen-cflags.sh)" LDFLAGS="-Wl,--gc-sections" ./netdata-installer.sh --dont-wait --dont-start-it --use-system-protobuf    --disable-go --disable-ebpf --install-no-prefix / "$([ "nightly" = stable ] && echo --stable-channel)"
2025-04-15T08:00:49.6061903Z #11 0.090 
2025-04-15T08:00:49.6062187Z #11 0.090   ^
2025-04-15T08:00:49.6062715Z #11 0.090   |.-.   .-.   .-.   .-.   .-.   .  netdata  .-.   .-.   .-.   .-.   .-.   .-
2025-04-15T08:00:49.6063225Z #11 0.090   |   '-'   '-'   '-'   '-'   '-'               '-'   '-'   '-'   '-'   '-'   
2025-04-15T08:00:49.6063719Z #11 0.090   +----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+--->
2025-04-15T08:00:49.6064176Z #11 0.090 
2025-04-15T08:00:49.6064577Z #11 0.090  --- Netdata, X-Ray Vision for your infrastructure! --- 
2025-04-15T08:00:49.7056283Z #11 0.091 
2025-04-15T08:00:49.7056831Z #11 0.091   You are about to build and install netdata to your system.
2025-04-15T08:00:49.7057354Z #11 0.091 
2025-04-15T08:00:49.7057695Z #11 0.091   The build process will use /tmp for
2025-04-15T08:00:49.7058316Z #11 0.091   any temporary files. You can override this by setting $TMPDIR to a
2025-04-15T08:00:49.7058988Z #11 0.091   writable directory where you can execute files.
2025-04-15T08:00:49.7059466Z #11 0.091 
2025-04-15T08:00:49.7060159Z #11 0.091   It will be installed at these locations:
2025-04-15T08:00:49.7060642Z #11 0.091 
2025-04-15T08:00:49.7060994Z #11 0.091    - the daemon     at //usr/sbin/netdata
2025-04-15T08:00:49.7061483Z #11 0.091    - config files   in //etc/netdata
2025-04-15T08:00:49.7061958Z #11 0.091    - web files      in //usr/share/netdata
2025-04-15T08:00:49.7062552Z #11 0.091    - plugins        in //usr/libexec/netdata
2025-04-15T08:00:49.7063047Z #11 0.091    - cache files    in //var/cache/netdata
2025-04-15T08:00:49.7063539Z #11 0.091    - db files       in //var/lib/netdata
2025-04-15T08:00:49.7064040Z #11 0.091    - log files      in //var/log/netdata
2025-04-15T08:00:49.7064577Z #11 0.092    - pid file       at //var/run/netdata.pid
2025-04-15T08:00:49.7065121Z #11 0.092    - logrotate file at /etc/logrotate.d/netdata
2025-04-15T08:00:49.7065568Z #11 0.093 
2025-04-15T08:00:49.7065989Z #11 0.093   This installer allows you to change the installation path.
2025-04-15T08:00:49.7066949Z #11 0.093   Press Control-C and run the same command with --help for help.
2025-04-15T08:00:49.7067490Z #11 0.093 
2025-04-15T08:00:49.7067761Z #11 0.094 
2025-04-15T08:00:49.7068021Z #11 0.094   NOTE:
2025-04-15T08:00:49.7068473Z #11 0.094   Anonymous usage stats will be collected and sent to Netdata.
2025-04-15T08:00:49.7069209Z #11 0.094   To opt-out, pass --disable-telemetry option to the installer or export
2025-04-15T08:00:49.7070019Z #11 0.094   the environment variable DISABLE_TELEMETRY to a non-zero or non-empty value
2025-04-15T08:00:49.7070691Z #11 0.094   (e.g: export DISABLE_TELEMETRY=1).
2025-04-15T08:00:49.7071109Z #11 0.094 
2025-04-15T08:00:49.7071569Z #11 0.105  --- Found CMake at /usr/bin/cmake. CMake version: cmake version 3.25.1 --- 
2025-04-15T08:00:49.7072271Z #11 0.107  --- Found Ninja at /usr/bin/ninja. Ninja version: 1.11.1 --- 
2025-04-15T08:00:49.7072950Z #11 0.107  --- Will use Ninja for this build instead of Make when possible. --- 
2025-04-15T08:00:49.7073500Z #11 0.108 
2025-04-15T08:00:49.7073875Z #11 0.111 Netdata user and group set to: netdata/netdata
2025-04-15T08:00:49.7078030Z #11 0.190 [/opt/netdata.git]# /usr/bin/cmake -S ./ -B ./build/ -G Ninja -DCMAKE_INSTALL_PREFIX=/ -DNETDATA_USER=netdata -DENABLE_PLUGIN_GO=Off -DENABLE_PLUGIN_PYTHON=On -DENABLE_PLUGIN_CHARTS=On -DENABLE_BUNDLED_PROTOBUF=Off -DENABLE_PLUGIN_SYSTEMD_JOURNAL=On -DENABLE_PLUGIN_CUPS=Off -DENABLE_PLUGIN_DEBUGFS=On -DENABLE_PLUGIN_PERF=On -DENABLE_PLUGIN_SLABINFO=On -DENABLE_PLUGIN_CGROUP_NETWORK=On -DENABLE_PLUGIN_LOCAL_LISTENERS=On -DENABLE_PLUGIN_NETWORK_VIEWER=On -DENABLE_PLUGIN_EBPF=Off -DENABLE_BUNDLED_JSONC=Off -DENABLE_DBENGINE=On -DENABLE_H2O=Off -DENABLE_ML=On -DENABLE_PLUGIN_APPS=On -DENABLE_EXPORTER_PROMETHEUS_REMOTE_WRITE=On -DENABLE_EXPORTER_MONGODB=On -DENABLE_PLUGIN_FREEIPMI=On -DENABLE_PLUGIN_NFACCT=Off -DENABLE_PLUGIN_XENSTAT=Off 
2025-04-15T08:00:49.8228466Z #11 0.205 -- Found Git: /usr/bin/git (found version "2.39.5") 
2025-04-15T08:00:49.8229000Z #11 0.207 fatal: not a git repository (or any of the parent directories): .git
2025-04-15T08:00:49.8229575Z #11 0.208 CMake Warning at packaging/cmake/Modules/NetdataVersion.cmake:17 (message):
2025-04-15T08:00:49.8230162Z #11 0.208   using version from packaging/version: 'v2.4.0-4-nightly'
2025-04-15T08:00:49.8230493Z #11 0.208 Call Stack (most recent call first):
2025-04-15T08:00:49.8230896Z #11 0.208   CMakeLists.txt:8 (netdata_version)
2025-04-15T08:00:49.8231136Z #11 0.208 
2025-04-15T08:00:49.8231284Z #11 0.208 
2025-04-15T08:00:49.8231591Z #11 0.255 -- The C compiler identification is GNU 12.2.0
2025-04-15T08:00:49.8231927Z #11 0.307 -- The CXX compiler identification is GNU 12.2.0
2025-04-15T08:00:49.9557560Z #11 0.318 -- Detecting C compiler ABI info
2025-04-15T08:00:49.9558127Z #11 0.367 -- Detecting C compiler ABI info - done
2025-04-15T08:00:49.9558679Z #11 0.375 -- Check for working C compiler: /usr/bin/cc - skipped
2025-04-15T08:00:49.9559189Z #11 0.376 -- Detecting C compile features
2025-04-15T08:00:49.9559623Z #11 0.376 -- Detecting C compile features - done
2025-04-15T08:00:49.9560382Z #11 0.380 -- Detecting CXX compiler ABI info
2025-04-15T08:00:49.9560861Z #11 0.440 -- Detecting CXX compiler ABI info - done
2025-04-15T08:00:50.1260432Z #11 0.449 -- Check for working CXX compiler: /usr/bin/c++ - skipped
2025-04-15T08:00:50.1260977Z #11 0.449 -- Detecting CXX compile features
2025-04-15T08:00:50.1261331Z #11 0.450 -- Detecting CXX compile features - done
2025-04-15T08:00:50.1261725Z #11 0.457 -- Found PkgConfig: /usr/bin/pkg-config (found version "1.8.1") 
2025-04-15T08:00:50.1262062Z #11 0.458 -- Searching for MOLD linker
2025-04-15T08:00:50.1262334Z #11 0.458 -- Searching for MOLD linker - failed
2025-04-15T08:00:50.1262600Z #11 0.458 --  Compiling for Linux... 
2025-04-15T08:00:50.1262834Z #11 0.460 -- Checking for LTO support
2025-04-15T08:00:50.1730470Z #11 0.657 -- Checking for LTO support - supported
2025-04-15T08:00:50.2825182Z #11 0.658 -- Performing Test HAVE_C__fexceptions
2025-04-15T08:00:50.2825813Z #11 0.707 -- Performing Test HAVE_C__fexceptions - Success
2025-04-15T08:00:50.2826639Z #11 0.708 -- Performing Test HAVE_CXX__fexceptions
2025-04-15T08:00:50.2826993Z #11 0.767 -- Performing Test HAVE_CXX__fexceptions - Success
2025-04-15T08:00:50.3909416Z #11 0.768 -- Performing Test HAVE_C__fstack_protector_strong
2025-04-15T08:00:50.3910176Z #11 0.816 -- Performing Test HAVE_C__fstack_protector_strong - Success
2025-04-15T08:00:50.3910738Z #11 0.817 -- Performing Test HAVE_CXX__fstack_protector_strong
2025-04-15T08:00:50.3911205Z #11 0.875 -- Performing Test HAVE_CXX__fstack_protector_strong - Success
2025-04-15T08:00:50.4985575Z #11 0.877 -- Performing Test HAVE_C__D_FORTIFY_SOURCE_3
2025-04-15T08:00:50.4986887Z #11 0.924 -- Performing Test HAVE_C__D_FORTIFY_SOURCE_3 - Success
2025-04-15T08:00:50.4987531Z #11 0.925 -- Performing Test HAVE_CXX__D_FORTIFY_SOURCE_3
2025-04-15T08:00:50.4988081Z #11 0.983 -- Performing Test HAVE_CXX__D_FORTIFY_SOURCE_3 - Success
2025-04-15T08:00:50.6062230Z #11 0.984 -- Performing Test HAVE_C__fstack_clash_protection
2025-04-15T08:00:50.6063147Z #11 1.032 -- Performing Test HAVE_C__fstack_clash_protection - Success
2025-04-15T08:00:50.6063812Z #11 1.033 -- Performing Test HAVE_CXX__fstack_clash_protection
2025-04-15T08:00:50.6064194Z #11 1.091 -- Performing Test HAVE_CXX__fstack_clash_protection - Success
2025-04-15T08:00:50.7148375Z #11 1.092 -- Performing Test HAVE_C__fcf_protection_full
2025-04-15T08:00:50.7149031Z #11 1.140 -- Performing Test HAVE_C__fcf_protection_full - Success
2025-04-15T08:00:50.7149446Z #11 1.141 -- Performing Test HAVE_CXX__fcf_protection_full
2025-04-15T08:00:50.7149836Z #11 1.199 -- Performing Test HAVE_CXX__fcf_protection_full - Success
2025-04-15T08:00:50.8278531Z #11 1.200 -- Performing Test HAVE_C__mbranch_protection_standard
2025-04-15T08:00:50.8279286Z #11 1.232 -- Performing Test HAVE_C__mbranch_protection_standard - Failed
2025-04-15T08:00:50.8279964Z #11 1.233 -- Performing Test HAVE_CXX__mbranch_protection_standard
2025-04-15T08:00:50.8280373Z #11 1.264 -- Performing Test HAVE_CXX__mbranch_protection_standard - Failed
2025-04-15T08:00:50.8280936Z #11 1.265 -- Performing Test HAVE_C__Wno_builtin_macro_redefined
2025-04-15T08:00:50.8281344Z #11 1.312 -- Performing Test HAVE_C__Wno_builtin_macro_redefined - Success
2025-04-15T08:00:50.9355948Z #11 1.313 -- Performing Test HAVE_CXX__Wno_builtin_macro_redefined
2025-04-15T08:00:50.9356896Z #11 1.371 -- Performing Test HAVE_CXX__Wno_builtin_macro_redefined - Success
2025-04-15T08:00:50.9357532Z #11 1.373 -- Performing Test HAVE_FEXCEPTIONS
2025-04-15T08:00:50.9357952Z #11 1.420 -- Performing Test HAVE_FEXCEPTIONS - Success
2025-04-15T08:00:51.0762762Z #11 1.422 -- Mimalloc is disabled.
2025-04-15T08:00:51.0763344Z #11 1.423 -- Checking for module 'libcurl>=7.21'
2025-04-15T08:00:51.0763837Z #11 1.433 --   Found libcurl, version 7.88.1
2025-04-15T08:00:51.0764278Z #11 1.457 -- Looking for log10
2025-04-15T08:00:51.0764652Z #11 1.507 -- Looking for log10 - not found
2025-04-15T08:00:51.0765069Z #11 1.507 -- Looking for log10
2025-04-15T08:00:51.0765599Z #11 1.561 -- Looking for log10 - found
2025-04-15T08:00:51.3024675Z #11 1.566 -- Checking for module 'json-c>=0.14'
2025-04-15T08:00:51.3025065Z #11 1.576 --   Found json-c, version 0.16
2025-04-15T08:00:51.3025363Z #11 1.601 -- Checking for module 'yaml-0.1'
2025-04-15T08:00:51.3025666Z #11 1.611 --   Found yaml-0.1, version 0.2.5
2025-04-15T08:00:51.3025991Z #11 1.637 -- Preparing vendored copy of dlib
2025-04-15T08:00:54.0975688Z #11 4.582 -- Using CMake version: 3.25.1
2025-04-15T08:00:54.0976782Z #11 4.582 -- Compiling dlib version: 19.24.8
2025-04-15T08:00:54.2189921Z #11 4.585 -- Performing Test CMAKE_HAVE_LIBC_PTHREAD
2025-04-15T08:00:54.2190606Z #11 4.643 -- Performing Test CMAKE_HAVE_LIBC_PTHREAD - Success
2025-04-15T08:00:54.2191135Z #11 4.644 -- Found Threads: TRUE  
2025-04-15T08:00:54.2191595Z #11 4.648 -- Finished preparing vendored copy of JSON-C
2025-04-15T08:00:54.2192084Z #11 4.648 -- Looking for netinet/in.h
2025-04-15T08:00:54.2192522Z #11 4.703 -- Looking for netinet/in.h - found
2025-04-15T08:00:54.3381811Z #11 4.704 -- Looking for resolv.h
2025-04-15T08:00:54.3382319Z #11 4.766 -- Looking for resolv.h - found
2025-04-15T08:00:54.3382751Z #11 4.766 -- Looking for netdb.h
2025-04-15T08:00:54.3383149Z #11 4.823 -- Looking for netdb.h - found
2025-04-15T08:00:54.4428049Z #11 4.823 -- Looking for sys/prctl.h
2025-04-15T08:00:54.4428625Z #11 4.875 -- Looking for sys/prctl.h - found
2025-04-15T08:00:54.4429079Z #11 4.875 -- Looking for sys/stat.h
2025-04-15T08:00:54.4429486Z #11 4.927 -- Looking for sys/stat.h - found
2025-04-15T08:00:54.5454360Z #11 4.927 -- Looking for sys/vfs.h
2025-04-15T08:00:54.5454871Z #11 4.979 -- Looking for sys/vfs.h - found
2025-04-15T08:00:54.5455325Z #11 4.979 -- Looking for sys/statfs.h
2025-04-15T08:00:54.5455605Z #11 5.030 -- Looking for sys/statfs.h - found
2025-04-15T08:00:54.6499596Z #11 5.030 -- Looking for linux/magic.h
2025-04-15T08:00:54.6500148Z #11 5.080 -- Looking for linux/magic.h - found
2025-04-15T08:00:54.6500593Z #11 5.080 -- Looking for sys/mount.h
2025-04-15T08:00:54.6501065Z #11 5.134 -- Looking for sys/mount.h - found
2025-04-15T08:00:54.7548983Z #11 5.134 -- Looking for sys/statvfs.h
2025-04-15T08:00:54.7549797Z #11 5.187 -- Looking for sys/statvfs.h - found
2025-04-15T08:00:54.7550733Z #11 5.187 -- Looking for inttypes.h
2025-04-15T08:00:54.7551713Z #11 5.239 -- Looking for inttypes.h - found
2025-04-15T08:00:54.8630699Z #11 5.240 -- Looking for stdint.h
2025-04-15T08:00:54.8631225Z #11 5.292 -- Looking for stdint.h - found
2025-04-15T08:00:54.8631525Z #11 5.292 -- Looking for arpa/inet.h
2025-04-15T08:00:54.8631904Z #11 5.347 -- Looking for arpa/inet.h - found
2025-04-15T08:00:54.9695585Z #11 5.348 -- Looking for netinet/tcp.h
2025-04-15T08:00:54.9696340Z #11 5.402 -- Looking for netinet/tcp.h - found
2025-04-15T08:00:54.9696806Z #11 5.403 -- Looking for sys/ioctl.h
2025-04-15T08:00:54.9697227Z #11 5.454 -- Looking for sys/ioctl.h - found
2025-04-15T08:00:55.0764043Z #11 5.454 -- Looking for grp.h
2025-04-15T08:00:55.0764900Z #11 5.506 -- Looking for grp.h - found
2025-04-15T08:00:55.0766003Z #11 5.506 -- Looking for pwd.h
2025-04-15T08:00:55.0766613Z #11 5.561 -- Looking for pwd.h - found
2025-04-15T08:00:55.1831203Z #11 5.561 -- Looking for net/if.h
2025-04-15T08:00:55.1831699Z #11 5.616 -- Looking for net/if.h - found
2025-04-15T08:00:55.1832166Z #11 5.616 -- Looking for poll.h
2025-04-15T08:00:55.1832576Z #11 5.667 -- Looking for poll.h - found
2025-04-15T08:00:55.2874006Z #11 5.668 -- Looking for syslog.h
2025-04-15T08:00:55.2875249Z #11 5.720 -- Looking for syslog.h - found
2025-04-15T08:00:55.2876034Z #11 5.720 -- Looking for sys/mman.h
2025-04-15T08:00:55.2876830Z #11 5.772 -- Looking for sys/mman.h - found
2025-04-15T08:00:55.3982060Z #11 5.772 -- Looking for sys/resource.h
2025-04-15T08:00:55.3982579Z #11 5.825 -- Looking for sys/resource.h - found
2025-04-15T08:00:55.3983015Z #11 5.825 -- Looking for sys/socket.h
2025-04-15T08:00:55.3983409Z #11 5.880 -- Looking for sys/socket.h - found
2025-04-15T08:00:55.5048263Z #11 5.881 -- Looking for sys/wait.h
2025-04-15T08:00:55.5049221Z #11 5.935 -- Looking for sys/wait.h - found
2025-04-15T08:00:55.5049644Z #11 5.936 -- Looking for sys/un.h
2025-04-15T08:00:55.5049986Z #11 5.989 -- Looking for sys/un.h - found
2025-04-15T08:00:55.6376926Z #11 5.989 -- Looking for spawn.h
2025-04-15T08:00:55.6377506Z #11 6.044 -- Looking for spawn.h - found
2025-04-15T08:00:55.6377967Z #11 6.044 -- Looking for sys/capability.h
2025-04-15T08:00:55.6378448Z #11 6.070 -- Looking for sys/capability.h - not found
2025-04-15T08:00:55.6378889Z #11 6.071 -- Looking for major
2025-04-15T08:00:55.6379223Z #11 6.122 -- Looking for major - found
2025-04-15T08:00:55.7720428Z #11 6.122 -- Looking for major
2025-04-15T08:00:55.7720921Z #11 6.149 -- Looking for major - not found
2025-04-15T08:00:55.7721364Z #11 6.150 -- Looking for clock_gettime
2025-04-15T08:00:55.7721801Z #11 6.203 -- Looking for clock_gettime - found
2025-04-15T08:00:55.7722240Z #11 6.203 -- Looking for strerror_r
2025-04-15T08:00:55.7722650Z #11 6.256 -- Looking for strerror_r - found
2025-04-15T08:00:55.8911793Z #11 6.257 -- Looking for finite
2025-04-15T08:00:55.8912282Z #11 6.317 -- Looking for finite - found
2025-04-15T08:00:55.8912732Z #11 6.318 -- Looking for isfinite
2025-04-15T08:00:55.8913139Z #11 6.376 -- Looking for isfinite - found
2025-04-15T08:00:55.9959500Z #11 6.376 -- Looking for dlsym
2025-04-15T08:00:55.9961015Z #11 6.428 -- Looking for dlsym - found
2025-04-15T08:00:55.9961529Z #11 6.428 -- Looking for pthread_getthreadid_np
2025-04-15T08:00:55.9962352Z #11 6.480 -- Looking for pthread_getthreadid_np - not found
2025-04-15T08:00:56.1002351Z #11 6.481 -- Looking for pthread_threadid_np
2025-04-15T08:00:56.1003064Z #11 6.533 -- Looking for pthread_threadid_np - not found
2025-04-15T08:00:56.1003552Z #11 6.533 -- Looking for gettid
2025-04-15T08:00:56.1003937Z #11 6.585 -- Looking for gettid - found
2025-04-15T08:00:56.2045223Z #11 6.585 -- Looking for waitid
2025-04-15T08:00:56.2045893Z #11 6.637 -- Looking for waitid - found
2025-04-15T08:00:56.2046595Z #11 6.637 -- Looking for nice
2025-04-15T08:00:56.2046987Z #11 6.689 -- Looking for nice - found
2025-04-15T08:00:56.3079082Z #11 6.689 -- Looking for recvmmsg
2025-04-15T08:00:56.3079579Z #11 6.741 -- Looking for recvmmsg - found
2025-04-15T08:00:56.3080046Z #11 6.741 -- Looking for getpriority
2025-04-15T08:00:56.3080852Z #11 6.792 -- Looking for getpriority - found
2025-04-15T08:00:56.4119241Z #11 6.793 -- Looking for setenv
2025-04-15T08:00:56.4120166Z #11 6.844 -- Looking for setenv - found
2025-04-15T08:00:56.4120841Z #11 6.844 -- Looking for strndup
2025-04-15T08:00:56.4121285Z #11 6.896 -- Looking for strndup - found
2025-04-15T08:00:56.5161369Z #11 6.896 -- Looking for sched_getscheduler
2025-04-15T08:00:56.5162014Z #11 6.948 -- Looking for sched_getscheduler - found
2025-04-15T08:00:56.5162447Z #11 6.949 -- Looking for sched_setscheduler
2025-04-15T08:00:56.5162749Z #11 7.000 -- Looking for sched_setscheduler - found
2025-04-15T08:00:56.6202086Z #11 7.001 -- Looking for sched_get_priority_min
2025-04-15T08:00:56.6202774Z #11 7.053 -- Looking for sched_get_priority_min - found
2025-04-15T08:00:56.6203347Z #11 7.053 -- Looking for sched_get_priority_max
2025-04-15T08:00:56.6204308Z #11 7.105 -- Looking for sched_get_priority_max - found
2025-04-15T08:00:56.7243379Z #11 7.105 -- Looking for close_range
2025-04-15T08:00:56.7243980Z #11 7.157 -- Looking for close_range - found
2025-04-15T08:00:56.7244450Z #11 7.157 -- Looking for backtrace
2025-04-15T08:00:56.7244895Z #11 7.209 -- Looking for backtrace - found
2025-04-15T08:00:56.8299391Z #11 7.209 -- Looking for arc4random_buf
2025-04-15T08:00:56.8299833Z #11 7.262 -- Looking for arc4random_buf - found
2025-04-15T08:00:56.8300148Z #11 7.262 -- Looking for arc4random_uniform
2025-04-15T08:00:56.8300542Z #11 7.314 -- Looking for arc4random_uniform - found
2025-04-15T08:00:56.9335011Z #11 7.314 -- Looking for getrandom
2025-04-15T08:00:56.9335535Z #11 7.366 -- Looking for getrandom - found
2025-04-15T08:00:56.9335989Z #11 7.366 -- Looking for sysinfo
2025-04-15T08:00:56.9336874Z #11 7.418 -- Looking for sysinfo - found
2025-04-15T08:00:57.0489037Z #11 7.418 -- Looking for timegm
2025-04-15T08:00:57.0489708Z #11 7.470 -- Looking for timegm - found
2025-04-15T08:00:57.0490592Z #11 7.470 -- Added compiler and linker flags for better stack trace support
2025-04-15T08:00:57.0491355Z #11 7.470 -- Preparing libbacktrace
2025-04-15T08:00:57.0491847Z #11 7.481 -- Finished preparing libbacktrace
2025-04-15T08:00:57.0492353Z #11 7.482 -- Performing Test HAVE_TM_GMTOFF
2025-04-15T08:00:57.0492861Z #11 7.533 -- Performing Test HAVE_TM_GMTOFF - Success
2025-04-15T08:00:57.1542161Z #11 7.534 -- Performing Test HAVE_PTHREAD_GETNAME_NP
2025-04-15T08:00:57.1542856Z #11 7.587 -- Performing Test HAVE_PTHREAD_GETNAME_NP - Success
2025-04-15T08:00:57.1543426Z #11 7.588 -- Performing Test HAVE_C__GENERIC
2025-04-15T08:00:57.1543974Z #11 7.639 -- Performing Test HAVE_C__GENERIC - Success
2025-04-15T08:00:57.2585040Z #11 7.639 -- Performing Test HAVE_C_MALLOPT
2025-04-15T08:00:57.2585653Z #11 7.691 -- Performing Test HAVE_C_MALLOPT - Success
2025-04-15T08:00:57.2586244Z #11 7.691 -- Performing Test HAVE_C_MALLOC_TRIM
2025-04-15T08:00:57.2586632Z #11 7.743 -- Performing Test HAVE_C_MALLOC_TRIM - Success
2025-04-15T08:00:57.3637065Z #11 7.743 -- Performing Test HAVE_C_MALLOC_INFO
2025-04-15T08:00:57.3637733Z #11 7.796 -- Performing Test HAVE_C_MALLOC_INFO - Success
2025-04-15T08:00:57.3638235Z #11 7.796 -- Performing Test HAVE_C_MALLINFO2
2025-04-15T08:00:57.3638555Z #11 7.848 -- Performing Test HAVE_C_MALLINFO2 - Success
2025-04-15T08:00:57.4707369Z #11 7.848 -- Performing Test HAVE_ACCEPT4
2025-04-15T08:00:57.4708222Z #11 7.904 -- Performing Test HAVE_ACCEPT4 - Success
2025-04-15T08:00:57.4708794Z #11 7.905 -- Performing Test STRERROR_R_CHAR_P
2025-04-15T08:00:57.4709318Z #11 7.955 -- Performing Test STRERROR_R_CHAR_P - Success
2025-04-15T08:00:57.5795105Z #11 7.955 -- Performing Test HAVE_SETNS
2025-04-15T08:00:57.5795665Z #11 8.005 -- Performing Test HAVE_SETNS - Success
2025-04-15T08:00:57.5796495Z #11 8.006 -- Performing Test HAVE_BUILTIN_ATOMICS
2025-04-15T08:00:57.5797066Z #11 8.064 -- Performing Test HAVE_BUILTIN_ATOMICS - Success
2025-04-15T08:00:57.6891230Z #11 8.064 -- Performing Test ARCH_SUPPORTS_64BIT_ATOMICS
2025-04-15T08:00:57.6892057Z #11 8.125 -- Performing Test ARCH_SUPPORTS_64BIT_ATOMICS - Success
2025-04-15T08:00:57.6893155Z #11 8.126 -- Performing Test HAVE_FUNC_ATTRIBUTE_FORMAT_GNU_PRINTF
2025-04-15T08:00:57.6893939Z #11 8.174 -- Performing Test HAVE_FUNC_ATTRIBUTE_FORMAT_GNU_PRINTF - Success
2025-04-15T08:00:57.7983345Z #11 8.174 -- Performing Test HAVE_FUNC_ATTRIBUTE_FORMAT_PRINTF
2025-04-15T08:00:57.7984066Z #11 8.223 -- Performing Test HAVE_FUNC_ATTRIBUTE_FORMAT_PRINTF - Success
2025-04-15T08:00:57.7984684Z #11 8.223 -- Performing Test HAVE_FUNC_ATTRIBUTE_MALLOC
2025-04-15T08:00:57.7985264Z #11 8.283 -- Performing Test HAVE_FUNC_ATTRIBUTE_MALLOC - Success
2025-04-15T08:00:57.9006910Z #11 8.283 -- Performing Test HAVE_FUNC_ATTRIBUTE_NOINLINE
2025-04-15T08:00:57.9007641Z #11 8.331 -- Performing Test HAVE_FUNC_ATTRIBUTE_NOINLINE - Success
2025-04-15T08:00:57.9008258Z #11 8.332 -- Performing Test HAVE_FUNC_ATTRIBUTE_NORETURN
2025-04-15T08:00:58.0089854Z #11 8.385 -- Performing Test HAVE_FUNC_ATTRIBUTE_NORETURN - Success
2025-04-15T08:00:58.0090557Z #11 8.385 -- Performing Test HAVE_FUNC_ATTRIBUTE_RETURNS_NONNULL
2025-04-15T08:00:58.0091248Z #11 8.444 -- Performing Test HAVE_FUNC_ATTRIBUTE_RETURNS_NONNULL - Success
2025-04-15T08:00:58.0092352Z #11 8.444 -- Performing Test HAVE_FUNC_ATTRIBUTE_WARN_UNUSED_RESULT
2025-04-15T08:00:58.0092840Z #11 8.493 -- Performing Test HAVE_FUNC_ATTRIBUTE_WARN_UNUSED_RESULT - Success
2025-04-15T08:00:58.1095417Z #11 8.494 -- Performing Test HAVE_RAND_S
2025-04-15T08:00:58.1095968Z #11 8.547 -- Performing Test HAVE_RAND_S - Failed
2025-04-15T08:00:58.1096608Z #11 8.548 -- Checking for module 'openssl'
2025-04-15T08:00:58.1096901Z #11 8.559 --   Found openssl, version 3.0.15
2025-04-15T08:00:58.1097280Z #11 8.584 -- Checking for module 'libcrypto'
2025-04-15T08:00:58.1097852Z #11 8.594 --   Found libcrypto, version 3.0.15
2025-04-15T08:00:58.2380121Z #11 8.621 -- Could NOT find Protobuf (missing: Protobuf_DIR)
2025-04-15T08:00:58.2381021Z #11 8.621 -- Could not find Protobuf using Config mode, falling back to Module mode
2025-04-15T08:00:58.2381608Z #11 8.632 -- Found Protobuf: /usr/lib/x86_64-linux-gnu/libprotobuf.a (found version "3.21.12") 
2025-04-15T08:00:58.2382029Z #11 8.633 -- Checking for module 'libsystemd'
2025-04-15T08:00:58.2382302Z #11 8.642 --   Found libsystemd, version 252
2025-04-15T08:00:58.2382588Z #11 8.666 -- Performing Test HAVE_SD_JOURNAL_OS_ROOT
2025-04-15T08:00:58.2382915Z #11 8.722 -- Performing Test HAVE_SD_JOURNAL_OS_ROOT - Success
2025-04-15T08:00:58.3577746Z #11 8.723 -- Looking for sd_journal_open_files_fd
2025-04-15T08:00:58.3578403Z #11 8.783 -- Looking for sd_journal_open_files_fd - found
2025-04-15T08:00:58.3578971Z #11 8.783 -- Looking for sd_journal_restart_fields
2025-04-15T08:00:58.3579445Z #11 8.842 -- Looking for sd_journal_restart_fields - found
2025-04-15T08:00:58.5244156Z #11 8.843 -- Looking for sd_journal_get_seqnum
2025-04-15T08:00:58.5244824Z #11 8.875 -- Looking for sd_journal_get_seqnum - not found
2025-04-15T08:00:58.5245371Z #11 8.875 -- Looking for sd_bus_default_system
2025-04-15T08:00:58.5245885Z #11 8.941 -- Looking for sd_bus_default_system - found
2025-04-15T08:00:58.5246546Z #11 8.942 -- Looking for sd_bus_call_method
2025-04-15T08:00:58.5247034Z #11 9.009 -- Looking for sd_bus_call_method - found
2025-04-15T08:00:58.6610911Z #11 9.009 -- Looking for sd_bus_message_enter_container
2025-04-15T08:00:58.6611627Z #11 9.076 -- Looking for sd_bus_message_enter_container - found
2025-04-15T08:00:58.6612177Z #11 9.076 -- Looking for sd_bus_message_read
2025-04-15T08:00:58.6612656Z #11 9.146 -- Looking for sd_bus_message_read - found
2025-04-15T08:00:58.7656797Z #11 9.146 -- Looking for sd_bus_message_exit_container
2025-04-15T08:00:58.7657405Z #11 9.213 -- Looking for sd_bus_message_exit_container - found
2025-04-15T08:00:58.7657774Z #11 9.216 -- Checking for module 'zlib'
2025-04-15T08:00:58.7658042Z #11 9.226 --   Found zlib, version 1.2.13
2025-04-15T08:00:58.7658328Z #11 9.250 -- Checking for module 'liblz4>=1.9.0'
2025-04-15T08:00:58.8792720Z #11 9.260 --   Found liblz4, version 1.9.4
2025-04-15T08:00:58.8793745Z #11 9.285 -- Checking for module 'libzstd'
2025-04-15T08:00:58.8794135Z #11 9.295 --   Found libzstd, version 1.5.4
2025-04-15T08:00:58.8794504Z #11 9.320 -- Checking for modules 'libbrotlidec;libbrotlienc;libbrotlicommon'
2025-04-15T08:00:58.8795096Z #11 9.323 --   Package 'libbrotlidec', required by 'virtual:world', not found
2025-04-15T08:00:58.8795626Z #11 9.326 --   Package 'libbrotlienc', required by 'virtual:world', not found
2025-04-15T08:00:58.8796051Z #11 9.329 --   Package 'libbrotlicommon', required by 'virtual:world', not found
2025-04-15T08:00:58.8796653Z #11 9.330 -- Checking for module 'uuid'
2025-04-15T08:00:58.8796906Z #11 9.340 --   Found uuid, version 2.38.1
2025-04-15T08:00:58.8797270Z #11 9.364 -- Checking for module 'libuv'
2025-04-15T08:00:59.0010576Z #11 9.374 --   Found libuv, version 1.44.2
2025-04-15T08:00:59.0011096Z #11 9.399 -- Checking for module 'libmnl'
2025-04-15T08:00:59.0011541Z #11 9.409 --   Found libmnl, version 1.0.4
2025-04-15T08:00:59.0011971Z #11 9.442 -- Found FLEX: /usr/bin/flex (found version "2.6.4") 
2025-04-15T08:00:59.0012480Z #11 9.445 -- Found BISON: /usr/bin/bison (found version "3.8.2") 
2025-04-15T08:00:59.0012842Z #11 9.451 -- Checking for module 'libipmimonitoring'
2025-04-15T08:00:59.0013275Z #11 9.460 --   Found libipmimonitoring, version 1.6.10
2025-04-15T08:00:59.0013606Z #11 9.486 -- Checking for module 'libmongoc-1.0>=1.7'
2025-04-15T08:00:59.1257585Z #11 9.496 --   Found libmongoc-1.0, version 1.23.1
2025-04-15T08:00:59.1258291Z #11 9.521 -- Checking for module 'snappy'
2025-04-15T08:00:59.1258890Z #11 9.531 --   Found snappy, version 1.1.9
2025-04-15T08:00:59.1259498Z #11 9.558 -- Checking for module 'libpcre2-8'
2025-04-15T08:00:59.1260353Z #11 9.568 --   Found libpcre2-8, version 10.42
2025-04-15T08:00:59.1260898Z #11 9.610 -- Preparing local agent dashboard code
2025-04-15T08:00:59.1261489Z #11 9.610 --   Fetching https://app.netdata.cloud/agent.tar.gz
2025-04-15T08:00:59.3719838Z #11 9.856 --   Fetching https://app.netdata.cloud/agent.tar.gz -- Done
2025-04-15T08:00:59.3720677Z #11 9.856 --   Extracting dashboard code
2025-04-15T08:00:59.4873274Z #11 9.941 --   Extracting dashboard code -- Done
2025-04-15T08:00:59.4874050Z #11 9.941 --   Generating CMakeLists.txt file for dashboard code
2025-04-15T08:00:59.4874897Z #11 9.950 --   Generating CMakeLists.txt file for dashboard code -- Done
2025-04-15T08:00:59.4875722Z #11 9.954 -- Preparing local agent dashboard code -- Done
2025-04-15T08:00:59.4876611Z #11 9.972 -- Configuring done
2025-04-15T08:00:59.5981053Z #11 10.08 -- Generating done
2025-04-15T08:00:59.7286359Z #11 10.09 -- Build files have been written to: /opt/netdata.git/build
2025-04-15T08:00:59.7287394Z #11 10.10  OK  ''
2025-04-15T08:00:59.7288192Z #11 10.10 
2025-04-15T08:00:59.7289037Z #11 10.10  --- Compile netdata --- 
2025-04-15T08:00:59.7293899Z #11 10.10 [/opt/netdata.git]# /usr/bin/cmake --build ./build/ --parallel 4 -- -k 1 
2025-04-15T08:00:59.7294951Z #11 10.16 [1/711] Building C object CMakeFiles/judy.dir/src/libnetdata/libjudy/vendored/JudyCommon/JudyMalloc.c.o
2025-04-15T08:00:59.7296226Z #11 10.21 [2/711] Building C object CMakeFiles/judy.dir/src/libnetdata/libjudy/vendored/JudyL/JudyLByCount.c.o
2025-04-15T08:00:59.8736421Z #11 10.21 [3/711] Building C object CMakeFiles/judy.dir/src/libnetdata/libjudy/vendored/JudyL/JudyLCreateBranch.c.o
2025-04-15T08:00:59.8741227Z #11 10.22 [4/711] Building C object CMakeFiles/judy.dir/src/libnetdata/libjudy/vendored/JudyL/JudyLCount.c.o
2025-04-15T08:00:59.8742434Z #11 10.26 [5/711] Building C object CMakeFiles/judy.dir/src/libnetdata/libjudy/vendored/JudyL/JudyLFirst.c.o
2025-04-15T08:00:59.8743619Z #11 10.28 [6/711] Building C object CMakeFiles/judy.dir/src/libnetdata/libjudy/vendored/JudyL/JudyLCascade.c.o
2025-04-15T08:00:59.8744837Z #11 10.31 [7/711] Building C object CMakeFiles/judy.dir/src/libnetdata/libjudy/vendored/JudyL/JudyLDecascade.c.o
2025-04-15T08:00:59.8746032Z #11 10.31 [8/711] Building C object CMakeFiles/judy.dir/src/libnetdata/libjudy/vendored/JudyL/JudyLFreeArray.c.o
2025-04-15T08:00:59.8747746Z #11 10.36 [9/711] Building C object CMakeFiles/judy.dir/src/libnetdata/libjudy/vendored/JudyL/j__udyLGet.c.o
2025-04-15T08:00:59.9888255Z #11 10.39 [10/711] Building C object CMakeFiles/judy.dir/src/libnetdata/libjudy/vendored/JudyL/JudyLGet.c.o
2025-04-15T08:00:59.9908934Z #11 10.41 [11/711] Building C object CMakeFiles/judy.dir/src/libnetdata/libjudy/vendored/JudyL/JudyLInsArray.c.o
2025-04-15T08:00:59.9910133Z #11 10.44 [12/711] Building C object CMakeFiles/judy.dir/src/libnetdata/libjudy/vendored/JudyL/JudyLInsertBranch.c.o
2025-04-15T08:00:59.9911425Z #11 10.47 [13/711] Building C object CMakeFiles/judy.dir/src/libnetdata/libjudy/vendored/JudyL/JudyLMallocIF.c.o
2025-04-15T08:01:00.0941293Z #11 10.49 [14/711] Building C object CMakeFiles/judy.dir/src/libnetdata/libjudy/vendored/JudyL/JudyLMemActive.c.o
2025-04-15T08:01:00.0944535Z #11 10.51 [15/711] Building C object CMakeFiles/judy.dir/src/libnetdata/libjudy/vendored/JudyL/JudyLMemUsed.c.o
2025-04-15T08:01:00.0946812Z #11 10.52 [16/711] Building C object CMakeFiles/judy.dir/src/libnetdata/libjudy/vendored/JudyL/JudyLDel.c.o
2025-04-15T08:01:00.0948315Z #11 10.54 [17/711] Building C object CMakeFiles/judy.dir/src/libnetdata/libjudy/vendored/JudyL/JudyLTables.c.o
2025-04-15T08:01:00.0950030Z #11 10.58 [18/711] Building C object CMakeFiles/judy.dir/src/libnetdata/libjudy/vendored/JudyL/JudyLIns.c.o
2025-04-15T08:01:00.2132348Z #11 10.58 [19/711] Building C object CMakeFiles/judy.dir/src/libnetdata/libjudy/vendored/JudyHS/JudyHS.c.o
2025-04-15T08:01:00.2135037Z #11 10.67 [20/711] Building C object CMakeFiles/judy.dir/src/libnetdata/libjudy/vendored/JudyL/JudyLPrevEmpty.c.o
2025-04-15T08:01:00.2138703Z #11 10.67 [21/711] Building C object CMakeFiles/judy.dir/src/libnetdata/libjudy/vendored/JudyL/JudyLPrev.c.o
2025-04-15T08:01:00.2139624Z #11 10.70 [22/711] Creating directories for 'libbacktrace'
2025-04-15T08:01:00.4294809Z #11 10.71 [23/711] Building C object CMakeFiles/judy.dir/src/libnetdata/libjudy/vendored/JudyL/JudyLNextEmpty.c.o
2025-04-15T08:01:00.4298201Z #11 10.73 [24/711] Building C object CMakeFiles/judy.dir/src/libnetdata/libjudy/vendored/JudyL/JudyLNext.c.o
2025-04-15T08:01:00.4299482Z #11 10.76 [25/711] Linking C static library libjudy.a
2025-04-15T08:01:00.9007375Z #11 11.38 [26/711] Building CXX object _deps/dlib-build/dlib/CMakeFiles/dlib.dir/base64/base64_kernel_1.cpp.o
2025-04-15T08:01:01.0048691Z #11 11.46 [27/711] Performing download step (git clone) for 'libbacktrace'
2025-04-15T08:01:01.0061053Z #11 11.46 Cloning into 'libbacktrace-src'...
2025-04-15T08:01:01.0062794Z #11 11.46 Already on 'master'
2025-04-15T08:01:01.0063277Z #11 11.46 Your branch is up to date with 'origin/master'.
2025-04-15T08:01:01.0063838Z #11 11.49 [28/711] No patch step for 'libbacktrace'
2025-04-15T08:01:01.3339072Z #11 11.82 [29/711] Building CXX object _deps/dlib-build/dlib/CMakeFiles/dlib.dir/bigint/bigint_kernel_2.cpp.o
2025-04-15T08:01:01.4901191Z #11 11.91 [30/711] Building CXX object _deps/dlib-build/dlib/CMakeFiles/dlib.dir/bigint/bigint_kernel_1.cpp.o
2025-04-15T08:01:01.4903929Z #11 11.97 [31/711] Building CXX object _deps/dlib-build/dlib/CMakeFiles/dlib.dir/bit_stream/bit_stream_kernel_1.cpp.o
2025-04-15T08:01:01.9490433Z #11 12.43 [32/711] Building CXX object _deps/dlib-build/dlib/CMakeFiles/dlib.dir/entropy_decoder/entropy_decoder_kernel_1.cpp.o
2025-04-15T08:01:02.0843479Z #11 12.53 [33/711] Building CXX object _deps/dlib-build/dlib/CMakeFiles/dlib.dir/entropy_decoder/entropy_decoder_kernel_2.cpp.o
2025-04-15T08:01:02.0845288Z #11 12.57 [34/711] Building CXX object _deps/dlib-build/dlib/CMakeFiles/dlib.dir/entropy_encoder/entropy_encoder_kernel_1.cpp.o
2025-04-15T08:01:02.5590985Z #11 13.04 [35/711] Building CXX object _deps/dlib-build/dlib/CMakeFiles/dlib.dir/entropy_encoder/entropy_encoder_kernel_2.cpp.o
2025-04-15T08:01:02.7542784Z #11 13.24 [36/711] Building CXX object _deps/dlib-build/dlib/CMakeFiles/dlib.dir/md5/md5_kernel_1.cpp.o
2025-04-15T08:01:02.9293169Z #11 13.26 [37/711] Building CXX object _deps/dlib-build/dlib/CMakeFiles/dlib.dir/tokenizer/tokenizer_kernel_1.cpp.o
2025-04-15T08:01:03.1498488Z #11 13.63 [38/711] Building CXX object _deps/dlib-build/dlib/CMakeFiles/dlib.dir/test_for_odr_violations.cpp.o
2025-04-15T08:01:03.3144925Z #11 13.65 [39/711] Building CXX object _deps/dlib-build/dlib/CMakeFiles/dlib.dir/sockets/sockets_kernel_1.cpp.o
2025-04-15T08:01:03.4623531Z #11 13.95 [40/711] Building CXX object _deps/dlib-build/dlib/CMakeFiles/dlib.dir/unicode/unicode.cpp.o
2025-04-15T08:01:03.6262360Z #11 13.96 [41/711] Building CXX object _deps/dlib-build/dlib/CMakeFiles/dlib.dir/dir_nav/dir_nav_kernel_1.cpp.o
2025-04-15T08:01:04.8203527Z #11 15.30 [42/711] Building CXX object _deps/dlib-build/dlib/CMakeFiles/dlib.dir/dir_nav/dir_nav_kernel_2.cpp.o
2025-04-15T08:01:05.0030683Z #11 15.49 [43/711] Building CXX object _deps/dlib-build/dlib/CMakeFiles/dlib.dir/fft/fft.cpp.o
2025-04-15T08:01:05.7605370Z #11 16.24 [44/711] Building CXX object _deps/dlib-build/dlib/CMakeFiles/dlib.dir/bsp/bsp.cpp.o
2025-04-15T08:01:06.3138962Z #11 16.80 [45/711] Building CXX object _deps/dlib-build/dlib/CMakeFiles/dlib.dir/dir_nav/dir_nav_extensions.cpp.o
2025-04-15T08:01:06.7003428Z #11 17.18 [46/711] Performing configure step for 'libbacktrace'
2025-04-15T08:01:06.8597569Z #11 17.19 checking build system type... x86_64-pc-linux-gnu
2025-04-15T08:01:06.8598595Z #11 17.19 checking host system type... x86_64-pc-linux-gnu
2025-04-15T08:01:06.8608586Z #11 17.19 checking target system type... x86_64-pc-linux-gnu
2025-04-15T08:01:06.8609147Z #11 17.19 checking for gcc... gcc
2025-04-15T08:01:06.8609638Z #11 17.19 checking whether the C compiler works... yes
2025-04-15T08:01:06.8610258Z #11 17.19 checking for C compiler default output file name... a.out
2025-04-15T08:01:06.8611273Z #11 17.19 checking for suffix of executables... 
2025-04-15T08:01:06.8611828Z #11 17.19 checking whether we are cross compiling... no
2025-04-15T08:01:06.8612354Z #11 17.19 checking for suffix of object files... o
2025-04-15T08:01:06.8612916Z #11 17.19 checking whether we are using the GNU C compiler... yes
2025-04-15T08:01:06.8613583Z #11 17.19 checking whether gcc accepts -g... yes
2025-04-15T08:01:06.8614143Z #11 17.19 checking for gcc option to accept ISO C89... none needed
2025-04-15T08:01:06.8614807Z #11 17.19 checking whether gcc understands -c and -o together... yes
2025-04-15T08:01:06.8615466Z #11 17.19 checking how to run the C preprocessor... gcc -E
2025-04-15T08:01:06.8650882Z #11 17.19 checking for grep that handles long lines and -e... /usr/bin/grep
2025-04-15T08:01:06.8651610Z #11 17.19 checking for egrep... /usr/bin/grep -E
2025-04-15T08:01:06.8652132Z #11 17.19 checking for ANSI C header files... yes
2025-04-15T08:01:06.8652614Z #11 17.19 checking for sys/types.h... yes
2025-04-15T08:01:06.8653067Z #11 17.19 checking for sys/stat.h... yes
2025-04-15T08:01:06.8653500Z #11 17.19 checking for stdlib.h... yes
2025-04-15T08:01:06.8653914Z #11 17.19 checking for string.h... yes
2025-04-15T08:01:06.8654343Z #11 17.19 checking for memory.h... yes
2025-04-15T08:01:06.8654795Z #11 17.19 checking for strings.h... yes
2025-04-15T08:01:06.8655236Z #11 17.19 checking for inttypes.h... yes
2025-04-15T08:01:06.8655687Z #11 17.19 checking for stdint.h... yes
2025-04-15T08:01:06.8656414Z #11 17.19 checking for unistd.h... yes
2025-04-15T08:01:06.8656907Z #11 17.19 checking minix/config.h usability... no
2025-04-15T08:01:06.8657425Z #11 17.19 checking minix/config.h presence... no
2025-04-15T08:01:06.8657916Z #11 17.19 checking for minix/config.h... no
2025-04-15T08:01:06.8658505Z #11 17.19 checking whether it is safe to define __EXTENSIONS__... yes
2025-04-15T08:01:06.8659195Z #11 17.19 checking for a BSD-compatible install... /usr/bin/install -c
2025-04-15T08:01:06.8659854Z #11 17.19 checking whether build environment is sane... yes
2025-04-15T08:01:06.8660494Z #11 17.19 checking for a thread-safe mkdir -p... /usr/bin/mkdir -p
2025-04-15T08:01:06.8661037Z #11 17.19 checking for gawk... no
2025-04-15T08:01:06.8661459Z #11 17.19 checking for mawk... mawk
2025-04-15T08:01:06.8662539Z #11 17.19 checking whether make sets $(MAKE)... yes
2025-04-15T08:01:06.8663117Z #11 17.19 checking whether make supports nested variables... yes
2025-04-15T08:01:06.8663849Z #11 17.19 checking whether to enable maintainer-specific portions of Makefiles... no
2025-04-15T08:01:06.8664524Z #11 17.19 checking for gcc... (cached) gcc
2025-04-15T08:01:06.8665139Z #11 17.19 checking whether we are using the GNU C compiler... (cached) yes
2025-04-15T08:01:06.8665811Z #11 17.19 checking whether gcc accepts -g... (cached) yes
2025-04-15T08:01:06.8666639Z #11 17.19 checking for gcc option to accept ISO C89... (cached) none needed
2025-04-15T08:01:06.8667410Z #11 17.19 checking whether gcc understands -c and -o together... (cached) yes
2025-04-15T08:01:06.8668079Z #11 17.19 checking for ranlib... ranlib
2025-04-15T08:01:06.8668548Z #11 17.19 checking for gawk... (cached) mawk
2025-04-15T08:01:06.8669011Z #11 17.19 checking for dwz... no
2025-04-15T08:01:06.8669481Z #11 17.19 checking how to print strings... printf
2025-04-15T08:01:06.8670131Z #11 17.19 checking for a sed that does not truncate output... /usr/bin/sed
2025-04-15T08:01:06.8670766Z #11 17.19 checking for fgrep... /usr/bin/grep -F
2025-04-15T08:01:06.8671284Z #11 17.19 checking for ld used by gcc... /usr/bin/ld
2025-04-15T08:01:06.8671854Z #11 17.19 checking if the linker (/usr/bin/ld) is GNU ld... yes
2025-04-15T08:01:06.8672556Z #11 17.19 checking for BSD- or MS-compatible name lister (nm)... /usr/bin/nm -B
2025-04-15T08:01:06.8673307Z #11 17.19 checking the name lister (/usr/bin/nm -B) interface... BSD nm
2025-04-15T08:01:06.8673922Z #11 17.19 checking whether ln -s works... yes
2025-04-15T08:01:06.8674799Z #11 17.19 checking the maximum length of command line arguments... 3145728
2025-04-15T08:01:06.8675582Z #11 17.19 checking whether the shell understands some XSI constructs... yes
2025-04-15T08:01:06.8676488Z #11 17.19 checking whether the shell understands "+="... yes
2025-04-15T08:01:06.8677153Z #11 17.19 checking for /usr/bin/ld option to reload object files... -r
2025-04-15T08:01:06.8677758Z #11 17.19 checking for objdump... objdump
2025-04-15T08:01:06.8678328Z #11 17.19 checking how to recognize dependent libraries... pass_all
2025-04-15T08:01:06.8678883Z #11 17.19 checking for ar... ar
2025-04-15T08:01:06.8679290Z #11 17.19 checking for strip... strip
2025-04-15T08:01:06.8679761Z #11 17.19 checking for ranlib... (cached) ranlib
2025-04-15T08:01:06.8680405Z #11 17.19 checking command to parse /usr/bin/nm -B output from gcc object... ok
2025-04-15T08:01:06.8681026Z #11 17.19 checking for dlfcn.h... yes
2025-04-15T08:01:06.8681471Z #11 17.19 checking for objdir... .libs
2025-04-15T08:01:06.8682018Z #11 17.19 checking if gcc supports -fno-rtti -fno-exceptions... no
2025-04-15T08:01:06.8682697Z #11 17.19 checking for gcc option to produce PIC... -fPIC -DPIC
2025-04-15T08:01:06.8683344Z #11 17.19 checking if gcc PIC flag -fPIC -DPIC works... yes
2025-04-15T08:01:06.8683941Z #11 17.19 checking if gcc static flag -static works... yes
2025-04-15T08:01:06.8684529Z #11 17.19 checking if gcc supports -c -o file.o... yes
2025-04-15T08:01:06.8685108Z #11 17.19 checking if gcc supports -c -o file.o... (cached) yes
2025-04-15T08:01:06.8685937Z #11 17.19 checking whether the gcc linker (/usr/bin/ld -m elf_x86_64) supports shared libraries... yes
2025-04-15T08:01:06.8687012Z #11 17.19 checking dynamic linker characteristics... GNU/Linux ld.so
2025-04-15T08:01:06.8687727Z #11 17.19 checking how to hardcode library paths into programs... immediate
2025-04-15T08:01:06.8688437Z #11 17.19 checking whether stripping libraries is possible... yes
2025-04-15T08:01:06.8689091Z #11 17.19 checking if libtool supports shared libraries... yes
2025-04-15T08:01:06.8689713Z #11 17.19 checking whether to build shared libraries... no
2025-04-15T08:01:06.8690287Z #11 17.19 checking whether to build static libraries... yes
2025-04-15T08:01:06.8690948Z #11 17.19 checking for special C compiler options needed for large files... no
2025-04-15T08:01:06.8691702Z #11 17.19 checking for _FILE_OFFSET_BITS value needed for large files... no
2025-04-15T08:01:06.8692613Z #11 17.19 checking unwind.h usability... yes
2025-04-15T08:01:06.8693093Z #11 17.19 checking unwind.h presence... yes
2025-04-15T08:01:06.8693571Z #11 17.19 checking for unwind.h... yes
2025-04-15T08:01:06.8694057Z #11 17.19 checking for _Unwind_Backtrace... yes
2025-04-15T08:01:06.8694592Z #11 17.19 checking for -funwind-tables option... yes
2025-04-15T08:01:06.8695154Z #11 17.19 checking for -frandom-seed=string option... yes
2025-04-15T08:01:06.8695698Z #11 17.19 checking whether gcc supports -W... yes
2025-04-15T08:01:06.8696410Z #11 17.19 checking whether gcc supports -Wall... yes
2025-04-15T08:01:06.8697003Z #11 17.19 checking whether gcc supports -Wwrite-strings... yes
2025-04-15T08:01:06.8697665Z #11 17.19 checking whether gcc supports -Wstrict-prototypes... yes
2025-04-15T08:01:06.8698352Z #11 17.19 checking whether gcc supports -Wmissing-prototypes... yes
2025-04-15T08:01:06.8699058Z #11 17.19 checking whether gcc supports -Wold-style-definition... yes
2025-04-15T08:01:06.8699808Z #11 17.19 checking whether gcc supports -Wmissing-format-attribute... yes
2025-04-15T08:01:06.8700493Z #11 17.19 checking whether gcc supports -Wcast-qual... yes
2025-04-15T08:01:06.8701085Z #11 17.19 checking whether gcc supports -Wattributes... yes
2025-04-15T08:01:06.8701726Z #11 17.19 checking whether gcc supports -Wunknown-attributes... no
2025-04-15T08:01:06.8702392Z #11 17.19 checking whether gcc supports -Wpointer-arith... yes
2025-04-15T08:01:06.8702951Z #11 17.19 checking for _Unwind_GetIPInfo... yes
2025-04-15T08:01:06.8703447Z #11 17.19 checking __sync extensions... yes
2025-04-15T08:01:06.8704014Z #11 17.19 checking __atomic extensions... yes
2025-04-15T08:01:06.8704731Z #11 17.19 checking output filetype... elf64
2025-04-15T08:01:06.8705215Z #11 17.19 checking sys/mman.h usability... yes
2025-04-15T08:01:06.8705690Z #11 17.19 checking sys/mman.h presence... yes
2025-04-15T08:01:06.8736475Z #11 17.19 checking for sys/mman.h... yes
2025-04-15T08:01:06.8737008Z #11 17.19 checking for mmap... yes
2025-04-15T08:01:06.8737460Z #11 17.19 checking link.h usability... yes
2025-04-15T08:01:06.8737951Z #11 17.19 checking link.h presence... yes
2025-04-15T08:01:06.8738427Z #11 17.19 checking for link.h... yes
2025-04-15T08:01:06.8738877Z #11 17.19 checking sys/link.h usability... no
2025-04-15T08:01:06.8739360Z #11 17.19 checking sys/link.h presence... no
2025-04-15T08:01:06.8739806Z #11 17.19 checking for sys/link.h... no
2025-04-15T08:01:06.8740260Z #11 17.19 checking for dl_iterate_phdr... yes
2025-04-15T08:01:06.8740740Z #11 17.19 checking mach-o/dyld.h usability... no
2025-04-15T08:01:06.8741234Z #11 17.19 checking mach-o/dyld.h presence... no
2025-04-15T08:01:06.8741723Z #11 17.19 checking for mach-o/dyld.h... no
2025-04-15T08:01:06.8742182Z #11 17.19 checking sys/ldr.h usability... no
2025-04-15T08:01:06.8742646Z #11 17.19 checking sys/ldr.h presence... no
2025-04-15T08:01:06.8743095Z #11 17.19 checking for sys/ldr.h... no
2025-04-15T08:01:06.8743540Z #11 17.19 checking windows.h usability... no
2025-04-15T08:01:06.8744003Z #11 17.19 checking windows.h presence... no
2025-04-15T08:01:06.8744442Z #11 17.19 checking for windows.h... no
2025-04-15T08:01:06.8744867Z #11 17.19 checking for tlhelp32.h... no
2025-04-15T08:01:06.8745292Z #11 17.19 checking for fcntl... yes
2025-04-15T08:01:06.8745747Z #11 17.19 checking whether strnlen is declared... yes
2025-04-15T08:01:06.8746488Z #11 17.19 checking whether getpagesize is declared... yes
2025-04-15T08:01:06.8746951Z #11 17.19 checking for lstat... yes
2025-04-15T08:01:06.8747332Z #11 17.19 checking for readlink... yes
2025-04-15T08:01:06.8747900Z #11 17.19 checking for getexecname... no
2025-04-15T08:01:06.8748394Z #11 17.19 checking whether _pgmptr is declared... no
2025-04-15T08:01:06.8748882Z #11 17.19 checking for KERN_PROC... no
2025-04-15T08:01:06.8749283Z #11 17.19 checking for KERN_PROG_ARGS... no
2025-04-15T08:01:06.8749704Z #11 17.19 checking for clock_gettime... yes
2025-04-15T08:01:06.8750570Z #11 17.19 checking whether -pthread is supported... yes
2025-04-15T08:01:06.8751174Z #11 17.19 checking whether -gdwarf-5 is supported... yes
2025-04-15T08:01:06.8751729Z #11 17.19 checking for compress in -lz... yes
2025-04-15T08:01:06.8752263Z #11 17.19 checking whether --build-id is supported... yes
2025-04-15T08:01:06.8752991Z #11 17.19 checking whether --compress-debug-sections=zlib-gnu is supported... yes
2025-04-15T08:01:06.8753885Z #11 17.19 checking whether --compress-debug-sections=zlib-gabi is supported... yes
2025-04-15T08:01:06.8754621Z #11 17.19 checking for ZSTD_compress in -lzstd... yes
2025-04-15T08:01:06.8755286Z #11 17.19 checking whether --compress-debug-sections=zstd is supported... yes
2025-04-15T08:01:06.8755957Z #11 17.19 checking for objcopy... objcopy
2025-04-15T08:01:06.8756651Z #11 17.19 checking for readelf... readelf
2025-04-15T08:01:06.8757194Z #11 17.19 checking whether objcopy supports debuglink... yes
2025-04-15T08:01:06.8757748Z #11 17.19 checking for dsymutil... no
2025-04-15T08:01:06.8758211Z #11 17.19 checking for nm... /usr/bin/nm -B
2025-04-15T08:01:06.8758648Z #11 17.19 checking for xz... xz
2025-04-15T08:01:06.8759042Z #11 17.19 checking for comm... comm
2025-04-15T08:01:06.8759517Z #11 17.19 checking for lzma_auto_decoder in -llzma... yes
2025-04-15T08:01:06.8760041Z #11 17.19 checking whether tests can run... yes
2025-04-15T08:01:06.8760640Z #11 17.19 checking that generated files are newer than configure... done
2025-04-15T08:01:06.8761263Z #11 17.19 configure: creating ./config.status
2025-04-15T08:01:06.8761744Z #11 17.19 config.status: creating Makefile
2025-04-15T08:01:06.8762252Z #11 17.19 config.status: creating backtrace-supported.h
2025-04-15T08:01:06.8763134Z #11 17.19 config.status: creating install-debuginfo-for-buildid.sh
2025-04-15T08:01:06.8763771Z #11 17.19 config.status: creating config.h
2025-04-15T08:01:06.8764278Z #11 17.19 config.status: executing libtool commands
2025-04-15T08:01:06.8764821Z #11 17.19 config.status: executing default commands
2025-04-15T08:01:07.6908595Z #11 18.18 [47/711] Building CXX object _deps/dlib-build/dlib/CMakeFiles/dlib.dir/linker/linker_kernel_1.cpp.o
2025-04-15T08:01:07.8916410Z #11 18.38 [48/711] Building CXX object _deps/dlib-build/dlib/CMakeFiles/dlib.dir/logger/extra_logger_headers.cpp.o
2025-04-15T08:01:08.1127328Z #11 18.45 [49/711] Building CXX object _deps/dlib-build/dlib/CMakeFiles/dlib.dir/gui_widgets/fonts.cpp.o
2025-04-15T08:01:09.5075834Z #11 19.99 [50/711] Building CXX object _deps/dlib-build/dlib/CMakeFiles/dlib.dir/misc_api/misc_api_kernel_1.cpp.o
2025-04-15T08:01:10.1779841Z #11 20.66 [51/711] Building CXX object _deps/dlib-build/dlib/CMakeFiles/dlib.dir/misc_api/misc_api_kernel_2.cpp.o
2025-04-15T08:01:10.3760343Z #11 20.71 [52/711] Building CXX object _deps/dlib-build/dlib/CMakeFiles/dlib.dir/logger/logger_config_file.cpp.o
2025-04-15T08:01:10.4220020Z #11 20.91 [53/711] Building CXX object _deps/dlib-build/dlib/CMakeFiles/dlib.dir/logger/logger_kernel_1.cpp.o
2025-04-15T08:01:10.9168761Z #11 21.40 [54/711] Performing build step for 'libbacktrace'
2025-04-15T08:01:11.1550817Z #11 21.40 /bin/bash ./libtool  --tag=CC   --mode=compile gcc -DHAVE_CONFIG_H -I. -I/opt/netdata.git/build/libbacktrace-src    -funwind-tables -frandom-seed=atomic.lo -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wold-style-definition -Wmissing-format-attribute -Wcast-qual -Wno-attributes -Wpointer-arith  -ffunction-sections -fdata-sections -O2 -funroll-loops -pipe -c -o atomic.lo /opt/netdata.git/build/libbacktrace-src/atomic.c
2025-04-15T08:01:11.1555759Z #11 21.40 libtool: compile:  gcc -DHAVE_CONFIG_H -I. -I/opt/netdata.git/build/libbacktrace-src -funwind-tables -frandom-seed=atomic.lo -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wold-style-definition -Wmissing-format-attribute -Wcast-qual -Wno-attributes -Wpointer-arith -ffunction-sections -fdata-sections -O2 -funroll-loops -pipe -c /opt/netdata.git/build/libbacktrace-src/atomic.c -o atomic.o
2025-04-15T08:01:11.1560716Z #11 21.40 /bin/bash ./libtool  --tag=CC   --mode=compile gcc -DHAVE_CONFIG_H -I. -I/opt/netdata.git/build/libbacktrace-src    -funwind-tables -frandom-seed=dwarf.lo -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wold-style-definition -Wmissing-format-attribute -Wcast-qual -Wno-attributes -Wpointer-arith  -ffunction-sections -fdata-sections -O2 -funroll-loops -pipe -c -o dwarf.lo /opt/netdata.git/build/libbacktrace-src/dwarf.c
2025-04-15T08:01:11.1565930Z #11 21.40 libtool: compile:  gcc -DHAVE_CONFIG_H -I. -I/opt/netdata.git/build/libbacktrace-src -funwind-tables -frandom-seed=dwarf.lo -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wold-style-definition -Wmissing-format-attribute -Wcast-qual -Wno-attributes -Wpointer-arith -ffunction-sections -fdata-sections -O2 -funroll-loops -pipe -c /opt/netdata.git/build/libbacktrace-src/dwarf.c -o dwarf.o
2025-04-15T08:01:11.1570556Z #11 21.40 /bin/bash ./libtool  --tag=CC   --mode=compile gcc -DHAVE_CONFIG_H -I. -I/opt/netdata.git/build/libbacktrace-src    -funwind-tables -frandom-seed=fileline.lo -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wold-style-definition -Wmissing-format-attribute -Wcast-qual -Wno-attributes -Wpointer-arith  -ffunction-sections -fdata-sections -O2 -funroll-loops -pipe -c -o fileline.lo /opt/netdata.git/build/libbacktrace-src/fileline.c
2025-04-15T08:01:11.1575728Z #11 21.40 libtool: compile:  gcc -DHAVE_CONFIG_H -I. -I/opt/netdata.git/build/libbacktrace-src -funwind-tables -frandom-seed=fileline.lo -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wold-style-definition -Wmissing-format-attribute -Wcast-qual -Wno-attributes -Wpointer-arith -ffunction-sections -fdata-sections -O2 -funroll-loops -pipe -c /opt/netdata.git/build/libbacktrace-src/fileline.c -o fileline.o
2025-04-15T08:01:11.1611160Z #11 21.40 /bin/bash ./libtool  --tag=CC   --mode=compile gcc -DHAVE_CONFIG_H -I. -I/opt/netdata.git/build/libbacktrace-src    -funwind-tables -frandom-seed=posix.lo -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wold-style-definition -Wmissing-format-attribute -Wcast-qual -Wno-attributes -Wpointer-arith  -ffunction-sections -fdata-sections -O2 -funroll-loops -pipe -c -o posix.lo /opt/netdata.git/build/libbacktrace-src/posix.c
2025-04-15T08:01:11.1616271Z #11 21.40 libtool: compile:  gcc -DHAVE_CONFIG_H -I. -I/opt/netdata.git/build/libbacktrace-src -funwind-tables -frandom-seed=posix.lo -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wold-style-definition -Wmissing-format-attribute -Wcast-qual -Wno-attributes -Wpointer-arith -ffunction-sections -fdata-sections -O2 -funroll-loops -pipe -c /opt/netdata.git/build/libbacktrace-src/posix.c -o posix.o
2025-04-15T08:01:11.1621052Z #11 21.40 /bin/bash ./libtool  --tag=CC   --mode=compile gcc -DHAVE_CONFIG_H -I. -I/opt/netdata.git/build/libbacktrace-src    -funwind-tables -frandom-seed=print.lo -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wold-style-definition -Wmissing-format-attribute -Wcast-qual -Wno-attributes -Wpointer-arith  -ffunction-sections -fdata-sections -O2 -funroll-loops -pipe -c -o print.lo /opt/netdata.git/build/libbacktrace-src/print.c
2025-04-15T08:01:11.1625742Z #11 21.40 libtool: compile:  gcc -DHAVE_CONFIG_H -I. -I/opt/netdata.git/build/libbacktrace-src -funwind-tables -frandom-seed=print.lo -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wold-style-definition -Wmissing-format-attribute -Wcast-qual -Wno-attributes -Wpointer-arith -ffunction-sections -fdata-sections -O2 -funroll-loops -pipe -c /opt/netdata.git/build/libbacktrace-src/print.c -o print.o
2025-04-15T08:01:11.1630724Z #11 21.40 /bin/bash ./libtool  --tag=CC   --mode=compile gcc -DHAVE_CONFIG_H -I. -I/opt/netdata.git/build/libbacktrace-src    -funwind-tables -frandom-seed=sort.lo -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wold-style-definition -Wmissing-format-attribute -Wcast-qual -Wno-attributes -Wpointer-arith  -ffunction-sections -fdata-sections -O2 -funroll-loops -pipe -c -o sort.lo /opt/netdata.git/build/libbacktrace-src/sort.c
2025-04-15T08:01:11.1635713Z #11 21.40 libtool: compile:  gcc -DHAVE_CONFIG_H -I. -I/opt/netdata.git/build/libbacktrace-src -funwind-tables -frandom-seed=sort.lo -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wold-style-definition -Wmissing-format-attribute -Wcast-qual -Wno-attributes -Wpointer-arith -ffunction-sections -fdata-sections -O2 -funroll-loops -pipe -c /opt/netdata.git/build/libbacktrace-src/sort.c -o sort.o
2025-04-15T08:01:11.1640695Z #11 21.40 /bin/bash ./libtool  --tag=CC   --mode=compile gcc -DHAVE_CONFIG_H -I. -I/opt/netdata.git/build/libbacktrace-src    -funwind-tables -frandom-seed=state.lo -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wold-style-definition -Wmissing-format-attribute -Wcast-qual -Wno-attributes -Wpointer-arith  -ffunction-sections -fdata-sections -O2 -funroll-loops -pipe -c -o state.lo /opt/netdata.git/build/libbacktrace-src/state.c
2025-04-15T08:01:11.1645444Z #11 21.40 libtool: compile:  gcc -DHAVE_CONFIG_H -I. -I/opt/netdata.git/build/libbacktrace-src -funwind-tables -frandom-seed=state.lo -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wold-style-definition -Wmissing-format-attribute -Wcast-qual -Wno-attributes -Wpointer-arith -ffunction-sections -fdata-sections -O2 -funroll-loops -pipe -c /opt/netdata.git/build/libbacktrace-src/state.c -o state.o
2025-04-15T08:01:11.1650765Z #11 21.40 /bin/bash ./libtool  --tag=CC   --mode=compile gcc -DHAVE_CONFIG_H -I. -I/opt/netdata.git/build/libbacktrace-src    -funwind-tables -frandom-seed=backtrace.lo -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wold-style-definition -Wmissing-format-attribute -Wcast-qual -Wno-attributes -Wpointer-arith  -ffunction-sections -fdata-sections -O2 -funroll-loops -pipe -c -o backtrace.lo /opt/netdata.git/build/libbacktrace-src/backtrace.c
2025-04-15T08:01:11.1655796Z #11 21.40 libtool: compile:  gcc -DHAVE_CONFIG_H -I. -I/opt/netdata.git/build/libbacktrace-src -funwind-tables -frandom-seed=backtrace.lo -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wold-style-definition -Wmissing-format-attribute -Wcast-qual -Wno-attributes -Wpointer-arith -ffunction-sections -fdata-sections -O2 -funroll-loops -pipe -c /opt/netdata.git/build/libbacktrace-src/backtrace.c -o backtrace.o
2025-04-15T08:01:11.1660525Z #11 21.40 /bin/bash ./libtool  --tag=CC   --mode=compile gcc -DHAVE_CONFIG_H -I. -I/opt/netdata.git/build/libbacktrace-src    -funwind-tables -frandom-seed=simple.lo -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wold-style-definition -Wmissing-format-attribute -Wcast-qual -Wno-attributes -Wpointer-arith  -ffunction-sections -fdata-sections -O2 -funroll-loops -pipe -c -o simple.lo /opt/netdata.git/build/libbacktrace-src/simple.c
2025-04-15T08:01:11.1665315Z #11 21.40 libtool: compile:  gcc -DHAVE_CONFIG_H -I. -I/opt/netdata.git/build/libbacktrace-src -funwind-tables -frandom-seed=simple.lo -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wold-style-definition -Wmissing-format-attribute -Wcast-qual -Wno-attributes -Wpointer-arith -ffunction-sections -fdata-sections -O2 -funroll-loops -pipe -c /opt/netdata.git/build/libbacktrace-src/simple.c -o simple.o
2025-04-15T08:01:11.1670287Z #11 21.40 /bin/bash ./libtool  --tag=CC   --mode=compile gcc -DHAVE_CONFIG_H -I. -I/opt/netdata.git/build/libbacktrace-src    -funwind-tables -frandom-seed=elf.lo -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wold-style-definition -Wmissing-format-attribute -Wcast-qual -Wno-attributes -Wpointer-arith  -ffunction-sections -fdata-sections -O2 -funroll-loops -pipe -c -o elf.lo /opt/netdata.git/build/libbacktrace-src/elf.c
2025-04-15T08:01:11.1675035Z #11 21.40 libtool: compile:  gcc -DHAVE_CONFIG_H -I. -I/opt/netdata.git/build/libbacktrace-src -funwind-tables -frandom-seed=elf.lo -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wold-style-definition -Wmissing-format-attribute -Wcast-qual -Wno-attributes -Wpointer-arith -ffunction-sections -fdata-sections -O2 -funroll-loops -pipe -c /opt/netdata.git/build/libbacktrace-src/elf.c -o elf.o
2025-04-15T08:01:11.1680234Z #11 21.40 /bin/bash ./libtool  --tag=CC   --mode=compile gcc -DHAVE_CONFIG_H -I. -I/opt/netdata.git/build/libbacktrace-src    -funwind-tables -frandom-seed=mmapio.lo -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wold-style-definition -Wmissing-format-attribute -Wcast-qual -Wno-attributes -Wpointer-arith  -ffunction-sections -fdata-sections -O2 -funroll-loops -pipe -c -o mmapio.lo /opt/netdata.git/build/libbacktrace-src/mmapio.c
2025-04-15T08:01:11.1685082Z #11 21.40 libtool: compile:  gcc -DHAVE_CONFIG_H -I. -I/opt/netdata.git/build/libbacktrace-src -funwind-tables -frandom-seed=mmapio.lo -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wold-style-definition -Wmissing-format-attribute -Wcast-qual -Wno-attributes -Wpointer-arith -ffunction-sections -fdata-sections -O2 -funroll-loops -pipe -c /opt/netdata.git/build/libbacktrace-src/mmapio.c -o mmapio.o
2025-04-15T08:01:11.1690026Z #11 21.40 /bin/bash ./libtool  --tag=CC   --mode=compile gcc -DHAVE_CONFIG_H -I. -I/opt/netdata.git/build/libbacktrace-src    -funwind-tables -frandom-seed=mmap.lo -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wold-style-definition -Wmissing-format-attribute -Wcast-qual -Wno-attributes -Wpointer-arith  -ffunction-sections -fdata-sections -O2 -funroll-loops -pipe -c -o mmap.lo /opt/netdata.git/build/libbacktrace-src/mmap.c
2025-04-15T08:01:11.1695112Z #11 21.40 libtool: compile:  gcc -DHAVE_CONFIG_H -I. -I/opt/netdata.git/build/libbacktrace-src -funwind-tables -frandom-seed=mmap.lo -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wold-style-definition -Wmissing-format-attribute -Wcast-qual -Wno-attributes -Wpointer-arith -ffunction-sections -fdata-sections -O2 -funroll-loops -pipe -c /opt/netdata.git/build/libbacktrace-src/mmap.c -o mmap.o
2025-04-15T08:01:11.1700535Z #11 21.40 /bin/bash ./libtool  --tag=CC   --mode=link gcc -funwind-tables -frandom-seed=libbacktrace.la -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wold-style-definition -Wmissing-format-attribute -Wcast-qual -Wno-attributes -Wpointer-arith  -ffunction-sections -fdata-sections -O2 -funroll-loops -pipe  -Wl,--gc-sections -o libbacktrace.la -rpath /opt/netdata.git/build/libbacktrace-install/lib atomic.lo dwarf.lo fileline.lo posix.lo print.lo sort.lo state.lo backtrace.lo simple.lo elf.lo mmapio.lo mmap.lo 
2025-04-15T08:01:11.1704579Z #11 21.40 libtool: link: ar --plugin /usr/lib/gcc/x86_64-linux-gnu/12/liblto_plugin.so cru .libs/libbacktrace.a  atomic.o dwarf.o fileline.o posix.o print.o sort.o state.o backtrace.o simple.o elf.o mmapio.o mmap.o
2025-04-15T08:01:11.1706034Z #11 21.40 ar: `u' modifier ignored since `D' is the default (see `U')
2025-04-15T08:01:11.1707119Z #11 21.40 libtool: link: ranlib --plugin /usr/lib/gcc/x86_64-linux-gnu/12/liblto_plugin.so .libs/libbacktrace.a
2025-04-15T08:01:11.1708120Z #11 21.40 libtool: link: ( cd ".libs" && rm -f "libbacktrace.la" && ln -s "../libbacktrace.la" "libbacktrace.la" )
2025-04-15T08:01:11.1708953Z #11 21.40 make[1]: Entering directory '/opt/netdata.git/build/libbacktrace-build'
2025-04-15T08:01:11.1709774Z #11 21.40  /usr/bin/mkdir -p '/opt/netdata.git/build/libbacktrace-install/lib'
2025-04-15T08:01:11.1710789Z #11 21.40  /bin/bash ./libtool   --mode=install /usr/bin/install -c   libbacktrace.la '/opt/netdata.git/build/libbacktrace-install/lib'
2025-04-15T08:01:11.1712206Z #11 21.40 libtool: install: /usr/bin/install -c .libs/libbacktrace.lai /opt/netdata.git/build/libbacktrace-install/lib/libbacktrace.la
2025-04-15T08:01:11.1713644Z #11 21.40 libtool: install: /usr/bin/install -c .libs/libbacktrace.a /opt/netdata.git/build/libbacktrace-install/lib/libbacktrace.a
2025-04-15T08:01:11.1714885Z #11 21.40 libtool: install: chmod 644 /opt/netdata.git/build/libbacktrace-install/lib/libbacktrace.a
2025-04-15T08:01:11.1716400Z #11 21.40 libtool: install: ranlib --plugin /usr/lib/gcc/x86_64-linux-gnu/12/liblto_plugin.so /opt/netdata.git/build/libbacktrace-install/lib/libbacktrace.a
2025-04-15T08:01:11.1718265Z #11 21.40 libtool: finish: PATH="/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/sbin" ldconfig -n /opt/netdata.git/build/libbacktrace-install/lib
2025-04-15T08:01:11.1719423Z #11 21.40 ----------------------------------------------------------------------
2025-04-15T08:01:11.1720009Z #11 21.40 Libraries have been installed in:
2025-04-15T08:01:11.1720565Z #11 21.40    /opt/netdata.git/build/libbacktrace-install/lib
2025-04-15T08:01:11.1721076Z #11 21.40 
2025-04-15T08:01:11.1721518Z #11 21.40 If you ever happen to want to link against installed libraries
2025-04-15T08:01:11.1722222Z #11 21.41 in a given directory, LIBDIR, you must either use libtool, and
2025-04-15T08:01:11.1722941Z #11 21.41 specify the full pathname of the library, or use the `-LLIBDIR'
2025-04-15T08:01:11.1723645Z #11 21.41 flag during linking and do at least one of the following:
2025-04-15T08:01:11.1724331Z #11 21.41    - add LIBDIR to the `LD_LIBRARY_PATH' environment variable
2025-04-15T08:01:11.1724894Z #11 21.41      during execution
2025-04-15T08:01:11.1725386Z #11 21.41    - add LIBDIR to the `LD_RUN_PATH' environment variable
2025-04-15T08:01:11.1725906Z #11 21.41      during linking
2025-04-15T08:01:11.1756726Z #11 21.41    - use the `-Wl,-rpath -Wl,LIBDIR' linker flag
2025-04-15T08:01:11.1757438Z #11 21.41    - have your system administrator add LIBDIR to `/etc/ld.so.conf'
2025-04-15T08:01:11.1757995Z #11 21.41 
2025-04-15T08:01:11.1758455Z #11 21.41 See any operating system documentation about shared libraries for
2025-04-15T08:01:11.1759146Z #11 21.42 more information, such as the ld(1) and ld.so(8) manual pages.
2025-04-15T08:01:11.1760059Z #11 21.42 ----------------------------------------------------------------------
2025-04-15T08:01:11.1760849Z #11 21.42  /usr/bin/mkdir -p '/opt/netdata.git/build/libbacktrace-install/include'
2025-04-15T08:01:11.1762218Z #11 21.42  /usr/bin/install -c -m 644 /opt/netdata.git/build/libbacktrace-src/backtrace.h backtrace-supported.h '/opt/netdata.git/build/libbacktrace-install/include'
2025-04-15T08:01:11.1763541Z #11 21.42 make[1]: Leaving directory '/opt/netdata.git/build/libbacktrace-build'
2025-04-15T08:01:11.1764217Z #11 21.45 [55/711] No install step for 'libbacktrace'
2025-04-15T08:01:11.1764727Z #11 21.49 [56/711] Completed 'libbacktrace'
2025-04-15T08:01:11.3894231Z #11 21.87 [57/711] Building C object CMakeFiles/libnetdata.dir/src/libnetdata/adaptive_resortable_list/adaptive_resortable_list.c.o
2025-04-15T08:01:11.8771319Z #11 22.36 [58/711] Building C object CMakeFiles/libnetdata.dir/src/libnetdata/aral/aral.c.o
2025-04-15T08:01:12.0342221Z #11 22.52 [59/711] Building CXX object _deps/dlib-build/dlib/CMakeFiles/dlib.dir/sockets/sockets_kernel_2.cpp.o
2025-04-15T08:01:12.2197962Z #11 22.56 [60/711] Building CXX object _deps/dlib-build/dlib/CMakeFiles/dlib.dir/sockstreambuf/sockstreambuf.cpp.o
2025-04-15T08:01:12.2199017Z #11 22.70 [61/711] Building C object CMakeFiles/libnetdata.dir/src/libnetdata/avl/avl.c.o
2025-04-15T08:01:12.4059165Z #11 22.76 [62/711] Building CXX object _deps/dlib-build/dlib/CMakeFiles/dlib.dir/sockets/sockets_extensions.cpp.o
2025-04-15T08:01:12.4060447Z #11 22.89 [63/711] Building C object CMakeFiles/libnetdata.dir/src/libnetdata/ringbuffer/ringbuffer.c.o
2025-04-15T08:01:12.5302472Z #11 23.01 [64/711] Building C object CMakeFiles/libnetdata.dir/src/libnetdata/circular_buffer/circular_buffer.c.o
2025-04-15T08:01:12.6947296Z #11 23.06 [65/711] Building C object CMakeFiles/libnetdata.dir/src/libnetdata/buffer/buffer.c.o
2025-04-15T08:01:12.6949256Z #11 23.17 [66/711] Building C object CMakeFiles/libnetdata.dir/src/libnetdata/clocks/clocks.c.o
2025-04-15T08:01:12.8646050Z #11 23.27 [67/711] Building C object CMakeFiles/libnetdata.dir/src/libnetdata/completion/completion.c.o
2025-04-15T08:01:12.8649689Z #11 23.35 [68/711] Building C object CMakeFiles/libnetdata.dir/src/libnetdata/datetime/iso8601.c.o
2025-04-15T08:01:13.0791756Z #11 23.42 [69/711] Building C object CMakeFiles/libnetdata.dir/src/libnetdata/datetime/rfc7231.c.o
2025-04-15T08:01:13.0796608Z #11 23.56 [70/711] Building C object CMakeFiles/libnetdata.dir/src/libnetdata/datetime/rfc3339.c.o
2025-04-15T08:01:13.2236828Z #11 23.71 [71/711] Building C object CMakeFiles/libnetdata.dir/src/libnetdata/dictionary/dictionary.c.o
2025-04-15T08:01:13.4432074Z #11 23.78 [72/711] Building C object CMakeFiles/libnetdata.dir/src/libnetdata/eval/eval.c.o
2025-04-15T08:01:13.4766924Z #11 23.96 [73/711] Building C object CMakeFiles/libnetdata.dir/src/libnetdata/functions_evloop/functions_evloop.c.o
2025-04-15T08:01:13.6497150Z #11 24.01 [74/711] Building C object CMakeFiles/libnetdata.dir/src/libnetdata/json/vendored/jsmn.c.o
2025-04-15T08:01:13.6499363Z #11 24.13 [75/711] Building C object CMakeFiles/libnetdata.dir/src/libnetdata/json/json.c.o
2025-04-15T08:01:13.8668047Z #11 24.16 [76/711] Building CXX object CMakeFiles/libnetdata.dir/src/libnetdata/gorilla/gorilla.cc.o
2025-04-15T08:01:13.8669388Z #11 24.17 /opt/netdata.git/src/libnetdata/gorilla/gorilla.cc:353:29: warning: 'always_inline' function might not be inlinable [-Wattributes]
2025-04-15T08:01:13.8670580Z #11 24.17   353 |     ALWAYS_INLINE_ONLY bool gorilla_reader_read(gorilla_reader_t *gr, uint32_t *number)
2025-04-15T08:01:13.8671269Z #11 24.17       |                             ^~~~~~~~~~~~~~~~~~~
2025-04-15T08:01:13.8672224Z #11 24.17 /opt/netdata.git/src/libnetdata/gorilla/gorilla.cc:135:29: warning: 'always_inline' function might not be inlinable [-Wattributes]
2025-04-15T08:01:13.8673406Z #11 24.17   135 |     ALWAYS_INLINE_ONLY bool gorilla_writer_write(gorilla_writer_t *gw, uint32_t number)
2025-04-15T08:01:13.8674490Z #11 24.17       |                             ^~~~~~~~~~~~~~~~~~~~
2025-04-15T08:01:13.8677614Z #11 24.20 [77/711] Building C object CMakeFiles/libnetdata.dir/src/libnetdata/facets/facets.c.o
2025-04-15T08:01:13.8901343Z #11 24.37 [78/711] Building C object CMakeFiles/libnetdata.dir/src/libnetdata/libnetdata.c.o
2025-04-15T08:01:14.0179287Z #11 24.46 [79/711] Building C object CMakeFiles/libnetdata.dir/src/libnetdata/line_splitter/line_splitter.c.o
2025-04-15T08:01:14.0182351Z #11 24.50 [80/711] Building C object CMakeFiles/libnetdata.dir/src/libnetdata/locks/locks.c.o
2025-04-15T08:01:14.2075858Z #11 24.54 [81/711] Building C object CMakeFiles/libnetdata.dir/src/libnetdata/log/systemd-journal-helpers.c.o
2025-04-15T08:01:14.2522195Z #11 24.74 [82/711] Building C object CMakeFiles/libnetdata.dir/src/libnetdata/log/nd_log.c.o
2025-04-15T08:01:14.4151999Z #11 24.78 [83/711] Building C object CMakeFiles/libnetdata.dir/src/libnetdata/os/os.c.o
2025-04-15T08:01:14.4153450Z #11 24.82 [84/711] Building C object CMakeFiles/libnetdata.dir/src/libnetdata/onewayalloc/onewayalloc.c.o
2025-04-15T08:01:14.4154887Z #11 24.90 [85/711] Building C object CMakeFiles/libnetdata.dir/src/libnetdata/procfile/procfile.c.o
2025-04-15T08:01:14.6493616Z #11 25.13 [86/711] Building C object CMakeFiles/libnetdata.dir/src/libnetdata/socket/security.c.o
2025-04-15T08:01:14.7820617Z #11 25.21 [87/711] Building C object CMakeFiles/libnetdata.dir/src/libnetdata/simple_pattern/simple_pattern.c.o
2025-04-15T08:01:14.7823495Z #11 25.27 [88/711] Building C object CMakeFiles/libnetdata.dir/src/libnetdata/socket/socket.c.o
2025-04-15T08:01:15.0072102Z #11 25.34 [89/711] Building C object CMakeFiles/libnetdata.dir/src/libnetdata/query_progress/progress.c.o
2025-04-15T08:01:15.0107063Z #11 25.49 [90/711] Building C object CMakeFiles/libnetdata.dir/src/libnetdata/statistical/statistical.c.o
2025-04-15T08:01:15.1680785Z #11 25.52 [91/711] Building C object CMakeFiles/libnetdata.dir/src/libnetdata/storage_number/storage_number.c.o
2025-04-15T08:01:15.1684377Z #11 25.65 [92/711] Building C object CMakeFiles/libnetdata.dir/src/libnetdata/string/string.c.o
2025-04-15T08:01:15.3627858Z #11 25.70 [93/711] Building C object CMakeFiles/libnetdata.dir/src/libnetdata/threads/threads.c.o
2025-04-15T08:01:15.3628877Z #11 25.85 [94/711] Building C object CMakeFiles/libnetdata.dir/src/libnetdata/url/url.c.o
2025-04-15T08:01:15.5090093Z #11 25.93 [95/711] Building C object CMakeFiles/libnetdata.dir/src/libnetdata/uuid/uuid.c.o
2025-04-15T08:01:15.5092917Z #11 25.99 [96/711] Building C object CMakeFiles/libnetdata.dir/src/libnetdata/worker_utilization/worker_utilization.c.o
2025-04-15T08:01:15.6759708Z #11 26.08 [97/711] Building C object CMakeFiles/libnetdata.dir/src/libnetdata/http/http_access.c.o
2025-04-15T08:01:15.6762493Z #11 26.16 [98/711] Building C object CMakeFiles/libnetdata.dir/src/libnetdata/http/http_defs.c.o
2025-04-15T08:01:15.7887199Z #11 26.27 [99/711] Building C object CMakeFiles/libnetdata.dir/src/libnetdata/http/content_type.c.o
2025-04-15T08:01:15.9039118Z #11 26.39 [100/711] Building C object CMakeFiles/libnetdata.dir/src/libnetdata/dictionary/thread-cache.c.o
2025-04-15T08:01:16.0563618Z #11 26.43 [101/711] Building C object CMakeFiles/libnetdata.dir/src/libnetdata/dictionary/dictionary-unittest.c.o
2025-04-15T08:01:16.0565655Z #11 26.54 [102/711] Building C object CMakeFiles/libnetdata.dir/src/libnetdata/dictionary/dictionary-traversal.c.o
2025-04-15T08:01:16.2264385Z #11 26.62 [103/711] Building C object CMakeFiles/libnetdata.dir/src/libnetdata/parsers/duration.c.o
2025-04-15T08:01:16.2265355Z #11 26.71 [104/711] Building C object CMakeFiles/libnetdata.dir/src/libnetdata/os/gettid.c.o
2025-04-15T08:01:16.3807790Z #11 26.73 [105/711] Building C object CMakeFiles/libnetdata.dir/src/libnetdata/os/adjtimex.c.o
2025-04-15T08:01:16.3809271Z #11 26.86 [106/711] Building C object CMakeFiles/libnetdata.dir/src/libnetdata/os/setresuid.c.o
2025-04-15T08:01:16.5410566Z #11 26.95 [107/711] Building C object CMakeFiles/libnetdata.dir/src/libnetdata/os/setresgid.c.o
2025-04-15T08:01:16.5412395Z #11 27.03 [108/711] Building C object CMakeFiles/libnetdata.dir/src/libnetdata/os/getgrouplist.c.o
2025-04-15T08:01:16.6768237Z #11 27.06 [109/711] Building C object CMakeFiles/libnetdata.dir/src/libnetdata/os/get_pid_max.c.o
2025-04-15T08:01:16.6769778Z #11 27.16 [110/711] Building C object CMakeFiles/libnetdata.dir/src/libnetdata/os/os-freebsd-wrappers.c.o
2025-04-15T08:01:16.8403309Z #11 27.25 [111/711] Building C object CMakeFiles/libnetdata.dir/src/libnetdata/os/os-macos-wrappers.c.o
2025-04-15T08:01:16.8404484Z #11 27.32 [112/711] Building C object CMakeFiles/libnetdata.dir/src/libnetdata/os/os-windows-wrappers.c.o
2025-04-15T08:01:17.0007694Z #11 27.40 [113/711] Building C object CMakeFiles/libnetdata.dir/src/libnetdata/os/get_system_cpus.c.o
2025-04-15T08:01:17.0010376Z #11 27.48 [114/711] Building C object CMakeFiles/libnetdata.dir/src/libnetdata/os/sleep.c.o
2025-04-15T08:01:17.1589502Z #11 27.55 [115/711] Building C object CMakeFiles/libnetdata.dir/src/libnetdata/os/uuid_generate.c.o
2025-04-15T08:01:17.1591125Z #11 27.64 [116/711] Building C object CMakeFiles/libnetdata.dir/src/libnetdata/os/setenv.c.o
2025-04-15T08:01:17.3139380Z #11 27.70 [117/711] Building C object CMakeFiles/libnetdata.dir/src/libnetdata/os/strndup.c.o
2025-04-15T08:01:17.3143364Z #11 27.80 [118/711] Building C object CMakeFiles/libnetdata.dir/src/libnetdata/os/windows-wmi/windows-wmi.c.o
2025-04-15T08:01:17.4598042Z #11 27.85 [119/711] Building C object CMakeFiles/libnetdata.dir/src/libnetdata/os/windows-wmi/windows-wmi-GetDiskDriveInfo.c.o
2025-04-15T08:01:17.4600785Z #11 27.94 [120/711] Building C object CMakeFiles/libnetdata.dir/src/libnetdata/os/windows-perflib/perflib.c.o
2025-04-15T08:01:17.6148462Z #11 27.99 [121/711] Building C object CMakeFiles/libnetdata.dir/src/libnetdata/os/windows-perflib/perflib-names.c.o
2025-04-15T08:01:17.6150175Z #11 28.10 [122/711] Building C object CMakeFiles/libnetdata.dir/src/libnetdata/os/windows-perflib/perflib-dump.c.o
2025-04-15T08:01:17.7641020Z #11 28.25 [123/711] Building C object CMakeFiles/libnetdata.dir/src/libnetdata/os/system-maps/cached-sid-username.c.o
2025-04-15T08:01:17.9186903Z #11 28.26 [124/711] Building C object CMakeFiles/libnetdata.dir/src/libnetdata/os/system-maps/cached-uid-username.c.o
2025-04-15T08:01:17.9190174Z #11 28.40 [125/711] Building C object CMakeFiles/libnetdata.dir/src/libnetdata/os/system-maps/cached-gid-groupname.c.o
2025-04-15T08:01:18.0995054Z #11 28.44 [126/711] Building C object CMakeFiles/libnetdata.dir/src/libnetdata/os/system-maps/cache-host-users-and-groups.c.o
2025-04-15T08:01:18.0997982Z #11 28.58 [127/711] Building C object CMakeFiles/libnetdata.dir/src/libnetdata/spawn_server/spawn_popen.c.o
2025-04-15T08:01:18.2237592Z #11 28.65 [128/711] Building C object CMakeFiles/libnetdata.dir/src/libnetdata/spawn_server/spawn_server_nofork.c.o
2025-04-15T08:01:18.2242522Z #11 28.71 [129/711] Building C object CMakeFiles/libnetdata.dir/src/libnetdata/spawn_server/spawn_server_windows.c.o
2025-04-15T08:01:18.3942458Z #11 28.74 [130/711] Building C object CMakeFiles/libnetdata.dir/src/libnetdata/spawn_server/spawn_server_libuv.c.o
2025-04-15T08:01:18.3944132Z #11 28.88 [131/711] Building C object CMakeFiles/libnetdata.dir/src/libnetdata/spawn_server/spawn_server_posix.c.o
2025-04-15T08:01:18.5645218Z #11 28.97 [132/711] Building C object CMakeFiles/libnetdata.dir/src/libnetdata/spawn_server/spawn_library.c.o
2025-04-15T08:01:18.5646829Z #11 29.05 [133/711] Building C object CMakeFiles/libnetdata.dir/src/libnetdata/os/close_range.c.o
2025-04-15T08:01:18.7358925Z #11 29.07 [134/711] Building C object CMakeFiles/libnetdata.dir/src/libnetdata/os/setproctitle.c.o
2025-04-15T08:01:18.7402784Z #11 29.22 [135/711] Building C object CMakeFiles/libnetdata.dir/src/libnetdata/paths/paths.c.o
2025-04-15T08:01:18.8513125Z #11 29.33 [136/711] Building C object CMakeFiles/libnetdata.dir/src/libnetdata/json/json-c-parser-inline.c.o
2025-04-15T08:01:19.0549227Z #11 29.35 [137/711] Building C object CMakeFiles/libnetdata.dir/src/libnetdata/parsers/timeframe.c.o
2025-04-15T08:01:19.0551807Z #11 29.40 [138/711] Building C object CMakeFiles/libnetdata.dir/src/libnetdata/parsers/size.c.o
2025-04-15T08:01:19.0557349Z #11 29.54 [139/711] Building C object CMakeFiles/libnetdata.dir/src/libnetdata/libjudy/judy-malloc.c.o
2025-04-15T08:01:19.1994649Z #11 29.63 [140/711] Building C object CMakeFiles/libnetdata.dir/src/libnetdata/os/timestamps.c.o
2025-04-15T08:01:19.1996040Z #11 29.68 [141/711] Building C object CMakeFiles/libnetdata.dir/src/libnetdata/parsers/entries.c.o
2025-04-15T08:01:19.3811151Z #11 29.71 [142/711] Building C object CMakeFiles/libnetdata.dir/src/libnetdata/sanitizers/chart_id_and_name.c.o
2025-04-15T08:01:19.3880599Z #11 29.87 [143/711] Building C object CMakeFiles/libnetdata.dir/src/libnetdata/sanitizers/utf8-sanitizer.c.o
2025-04-15T08:01:19.5003808Z #11 29.94 [144/711] Building C object CMakeFiles/libnetdata.dir/src/libnetdata/sanitizers/sanitizers-labels.c.o
2025-04-15T08:01:19.5008013Z #11 29.98 [145/711] Building C object CMakeFiles/libnetdata.dir/src/libnetdata/sanitizers/sanitizers-functions.c.o
2025-04-15T08:01:19.6851715Z #11 30.02 [146/711] Building C object CMakeFiles/libnetdata.dir/src/libnetdata/sanitizers/sanitizers-pluginsd.c.o
2025-04-15T08:01:19.7428802Z #11 30.22 [147/711] Building C object CMakeFiles/libnetdata.dir/src/libnetdata/log/nd_log-internals.c.o
2025-04-15T08:01:19.8547447Z #11 30.26 [148/711] Building C object CMakeFiles/libnetdata.dir/src/libnetdata/log/nd_log_limit.c.o
2025-04-15T08:01:19.8549414Z #11 30.34 [149/711] Building C object CMakeFiles/libnetdata.dir/src/libnetdata/log/nd_log-config.c.o
2025-04-15T08:01:20.0439794Z #11 30.38 [150/711] Building C object CMakeFiles/libnetdata.dir/src/libnetdata/log/nd_log-init.c.o
2025-04-15T08:01:20.0690252Z #11 30.55 [151/711] Building C object CMakeFiles/libnetdata.dir/src/libnetdata/log/nd_log-to-syslog.c.o
2025-04-15T08:01:20.1759012Z #11 30.66 [152/711] Building C object CMakeFiles/libnetdata.dir/src/libnetdata/log/nd_log-annotators.c.o
2025-04-15T08:01:20.4039538Z #11 30.67 [153/711] Building C object CMakeFiles/libnetdata.dir/src/libnetdata/log/nd_log-to-systemd-journal.c.o
2025-04-15T08:01:20.4040739Z #11 30.74 [154/711] Building C object CMakeFiles/libnetdata.dir/src/libnetdata/log/nd_log-field-formatters.c.o
2025-04-15T08:01:20.4722922Z #11 30.96 [155/711] Building C object CMakeFiles/libnetdata.dir/src/libnetdata/log/nd_log-format-logfmt.c.o
2025-04-15T08:01:20.5800097Z #11 31.00 [156/711] Building C object CMakeFiles/libnetdata.dir/src/libnetdata/log/nd_log-to-file.c.o
2025-04-15T08:01:20.5801269Z #11 31.04 [157/711] Building C object CMakeFiles/libnetdata.dir/src/libnetdata/log/nd_log-to-windows-events.c.o
2025-04-15T08:01:20.5802401Z #11 31.06 [158/711] Building C object CMakeFiles/libnetdata.dir/src/libnetdata/log/nd_log-format-json.c.o
2025-04-15T08:01:20.7704642Z #11 31.25 [159/711] Building C object CMakeFiles/libnetdata.dir/src/libnetdata/string/utf8.c.o
2025-04-15T08:01:20.8790942Z #11 31.36 [160/711] Building C object CMakeFiles/libnetdata.dir/src/libnetdata/os/random.c.o
2025-04-15T08:01:21.0588825Z #11 31.37 [161/711] Building C object CMakeFiles/libnetdata.dir/src/libnetdata/spawn_server/log-forwarder.c.o
2025-04-15T08:01:21.0593259Z #11 31.39 [162/711] Building C object CMakeFiles/libnetdata.dir/src/libnetdata/socket/nd-sock.c.o
2025-04-15T08:01:21.1312459Z #11 31.62 [163/711] Building C object CMakeFiles/libnetdata.dir/src/libnetdata/socket/listen-sockets.c.o
2025-04-15T08:01:21.2346275Z #11 31.71 [164/711] Building C object CMakeFiles/libnetdata.dir/src/libnetdata/socket/connect-to.c.o
2025-04-15T08:01:21.2362839Z #11 31.72 [165/711] Building C object CMakeFiles/libnetdata.dir/src/libnetdata/socket/socket-peers.c.o
2025-04-15T08:01:21.2363877Z #11 31.72 [166/711] Building C object CMakeFiles/libnetdata.dir/src/libnetdata/socket/poll-events.c.o
2025-04-15T08:01:21.4800392Z #11 31.96 [167/711] Building C object CMakeFiles/libnetdata.dir/src/libnetdata/os/system_memory.c.o
2025-04-15T08:01:21.7199904Z #11 32.02 [168/711] Building C object CMakeFiles/libnetdata.dir/src/libnetdata/locks/rw-spinlock.c.o
2025-04-15T08:01:21.7203593Z #11 32.02 [169/711] Building C object CMakeFiles/libnetdata.dir/src/libnetdata/locks/spinlock.c.o
2025-04-15T08:01:21.7204559Z #11 32.05 [170/711] Building C object CMakeFiles/libnetdata.dir/src/libnetdata/socket/nd-poll.c.o
2025-04-15T08:01:21.8279255Z #11 32.31 [171/711] Building C object CMakeFiles/libnetdata.dir/src/libnetdata/locks/waitq.c.o
2025-04-15T08:01:22.0678879Z #11 32.33 [172/711] Building C object CMakeFiles/libnetdata.dir/src/libnetdata/object-state/object-state.c.o
2025-04-15T08:01:22.0681619Z #11 32.40 [173/711] Building C object CMakeFiles/libnetdata.dir/src/libnetdata/locks/benchmark.c.o
2025-04-15T08:01:22.0683051Z #11 32.40 [174/711] Building C object CMakeFiles/libnetdata.dir/src/libnetdata/uuid/uuidmap.c.o
2025-04-15T08:01:22.1848303Z #11 32.67 [175/711] Building C object CMakeFiles/libnetdata.dir/src/libnetdata/locks/benchmark-rw.c.o
2025-04-15T08:01:22.4102431Z #11 32.71 [176/711] Building C object CMakeFiles/libnetdata.dir/src/libnetdata/log/nd_log-stacktrace.c.o
2025-04-15T08:01:22.4103401Z #11 32.74 [177/711] Building C object CMakeFiles/libnetdata.dir/src/libnetdata/memory/nd-mallocz.c.o
2025-04-15T08:01:22.4104231Z #11 32.74 [178/711] Building C object CMakeFiles/libnetdata.dir/src/libnetdata/memory/nd-mmap.c.o
2025-04-15T08:01:22.4474426Z #11 32.93 [179/711] Building C object CMakeFiles/libnetdata.dir/src/libnetdata/os/get_system_pagesize.c.o
2025-04-15T08:01:22.5599869Z #11 33.04 [180/711] Building C object CMakeFiles/libnetdata.dir/src/libnetdata/os/hostname.c.o
2025-04-15T08:01:22.7705122Z #11 33.06 [181/711] Building C object CMakeFiles/libnetdata.dir/src/libnetdata/os/disk_space.c.o
2025-04-15T08:01:22.7728288Z #11 33.11 [182/711] Building C object CMakeFiles/libnetdata.dir/src/libnetdata/exit/exit_initiated.c.o
2025-04-15T08:01:22.7731027Z #11 33.25 [183/711] Building C object CMakeFiles/libnetdata.dir/src/libnetdata/os/file_metadata.c.o
2025-04-15T08:01:22.8918799Z #11 33.38 [184/711] Building C object CMakeFiles/libnetdata.dir/src/libnetdata/os/process_path.c.o
2025-04-15T08:01:23.0385504Z #11 33.42 [185/711] Building C object CMakeFiles/libnetdata.dir/src/libnetdata/os/boottime.c.o
2025-04-15T08:01:23.0390039Z #11 33.52 [186/711] Building C object CMakeFiles/libnetdata.dir/src/libnetdata/os/boot_id.c.o
2025-04-15T08:01:23.2122406Z #11 33.59 [187/711] Building C object CMakeFiles/libnetdata.dir/src/libnetdata/os/run_dir.c.o
2025-04-15T08:01:23.2123387Z #11 33.70 [188/711] Building C object CMakeFiles/libnetdata.dir/src/libnetdata/os/file_lock.c.o
2025-04-15T08:01:23.3608051Z #11 33.75 [189/711] Building C object CMakeFiles/libnetdata.dir/src/libnetdata/os/mmap_limit.c.o
2025-04-15T08:01:23.3609075Z #11 33.84 [190/711] Building C object CMakeFiles/libnetdata.dir/src/libnetdata/signals/signals.c.o
2025-04-15T08:01:23.5586286Z #11 33.92 [191/711] Building C object CMakeFiles/libnetdata.dir/src/libnetdata/os/machine_id.c.o
2025-04-15T08:01:23.5587578Z #11 34.04 [192/711] Building C object CMakeFiles/libnetdata.dir/src/libnetdata/os/process_memory.c.o
2025-04-15T08:01:23.7119246Z #11 34.08 [193/711] Building C object CMakeFiles/libnetdata.dir/src/libnetdata/os/dir_size.c.o
2025-04-15T08:01:23.7127923Z #11 34.20 [194/711] Building C object CMakeFiles/libnetdata.dir/src/libnetdata/signals/signal-code.c.o
2025-04-15T08:01:23.8737773Z #11 34.23 [195/711] Building C object CMakeFiles/libnetdata.dir/src/libnetdata/inicfg/inicfg.c.o
2025-04-15T08:01:23.8739356Z #11 34.36 [196/711] Building C object CMakeFiles/libnetdata.dir/src/libnetdata/inicfg/inicfg_exporters.c.o
2025-04-15T08:01:24.0285982Z #11 34.45 [197/711] Building C object CMakeFiles/libnetdata.dir/src/libnetdata/inicfg/inicfg_conf_file.c.o
2025-04-15T08:01:24.0287680Z #11 34.51 [198/711] Building C object CMakeFiles/libnetdata.dir/src/libnetdata/inicfg/inicfg_cleanup.c.o
2025-04-15T08:01:24.2022918Z #11 34.55 [199/711] Building C object CMakeFiles/libnetdata.dir/src/libnetdata/inicfg/inicfg_sections.c.o
2025-04-15T08:01:24.2024872Z #11 34.69 [200/711] Building C object CMakeFiles/libnetdata.dir/src/libnetdata/inicfg/inicfg_options.c.o
2025-04-15T08:01:24.3338338Z #11 34.77 [201/711] Building C object CMakeFiles/libnetdata.dir/src/libnetdata/inicfg/inicfg_migrate.c.o
2025-04-15T08:01:24.3339472Z #11 34.82 [202/711] Building C object CMakeFiles/libnetdata.dir/src/libnetdata/inicfg/inicfg_traversal.c.o
2025-04-15T08:01:24.4352305Z #11 34.92 [203/711] Building C object CMakeFiles/libnetdata.dir/src/libnetdata/inicfg/inicfg_api.c.o
2025-04-15T08:01:24.6332440Z #11 35.12 [204/711] Building C object CMakeFiles/libnetdata.dir/src/libnetdata/inicfg/dyncfg.c.o
2025-04-15T08:01:24.7378127Z #11 35.18 [205/711] Building C object CMakeFiles/mqttwebsockets.dir/src/aclk/mqtt_websockets/ws_client.c.o
2025-04-15T08:01:24.7381054Z #11 35.19 [206/711] Building C object CMakeFiles/mqttwebsockets.dir/src/aclk/mqtt_websockets/common_public.c.o
2025-04-15T08:01:24.7383556Z #11 35.22 [207/711] Building C object CMakeFiles/mqttwebsockets.dir/src/aclk/mqtt_websockets/mqtt_wss_client.c.o
2025-04-15T08:01:24.9040392Z #11 35.26 [208/711] Linking CXX static library liblibnetdata.a
2025-04-15T08:01:24.9041695Z #11 35.39 [209/711] Building C object CMakeFiles/mqttwebsockets.dir/src/aclk/mqtt_websockets/mqtt_ng.c.o
2025-04-15T08:01:25.0737353Z #11 35.41 [210/711] Linking CXX static library libmqttwebsockets.a
2025-04-15T08:01:25.0821828Z #11 35.57 [211/711] Building C object CMakeFiles/spawn-tester.dir/src/libnetdata/spawn_server/spawn-tester.c.o
2025-04-15T08:01:25.3278283Z #11 35.66 [212/711] Building C object CMakeFiles/apps.plugin.dir/src/collectors/apps.plugin/apps_plugin.c.o
2025-04-15T08:01:25.3423459Z #11 35.83 [213/711] Building C object CMakeFiles/apps.plugin.dir/src/collectors/apps.plugin/apps_targets.c.o
2025-04-15T08:01:25.5467309Z #11 35.88 [214/711] Building C object CMakeFiles/apps.plugin.dir/src/collectors/apps.plugin/apps_functions.c.o
2025-04-15T08:01:25.6319885Z #11 36.12 [215/711] Building C object CMakeFiles/apps.plugin.dir/src/collectors/apps.plugin/apps_output.c.o
2025-04-15T08:01:26.1538979Z #11 36.64 [216/711] Building C object CMakeFiles/apps.plugin.dir/src/collectors/apps.plugin/apps_aggregations.c.o
2025-04-15T08:01:26.3100388Z #11 36.64 [217/711] Building C object CMakeFiles/apps.plugin.dir/src/collectors/apps.plugin/apps_pid_files.c.o
2025-04-15T08:01:26.4954593Z #11 36.98 [218/711] Building C object CMakeFiles/apps.plugin.dir/src/collectors/apps.plugin/apps_pid.c.o
2025-04-15T08:01:26.8719212Z #11 37.36 [219/711] Building C object CMakeFiles/apps.plugin.dir/src/collectors/apps.plugin/apps_os_freebsd.c.o
2025-04-15T08:01:27.1021356Z #11 37.59 [220/711] Building C object CMakeFiles/apps.plugin.dir/src/collectors/apps.plugin/apps_os_linux.c.o
2025-04-15T08:01:27.2700233Z #11 37.75 [221/711] Building C object CMakeFiles/apps.plugin.dir/src/collectors/apps.plugin/apps_os_macos.c.o
2025-04-15T08:01:27.5417519Z #11 38.03 [222/711] Building C object CMakeFiles/apps.plugin.dir/src/collectors/apps.plugin/apps_os_windows.c.o
2025-04-15T08:01:27.8391530Z #11 38.32 [223/711] Building C object CMakeFiles/apps.plugin.dir/src/collectors/apps.plugin/apps_os_windows_nt.c.o
2025-04-15T08:01:27.9907958Z #11 38.32 [224/711] Building C object CMakeFiles/apps.plugin.dir/src/collectors/apps.plugin/apps_incremental_collection.c.o
2025-04-15T08:01:28.3923857Z #11 38.88 [225/711] Building C object CMakeFiles/apps.plugin.dir/src/collectors/apps.plugin/apps_pid_match.c.o
2025-04-15T08:01:28.6101819Z #11 39.09 [226/711] Building C object CMakeFiles/perf.plugin.dir/src/collectors/perf.plugin/perf_plugin.c.o
2025-04-15T08:01:29.1062655Z #11 39.59 [227/711] Building C object CMakeFiles/freeipmi.plugin.dir/src/collectors/freeipmi.plugin/freeipmi_plugin.c.o
2025-04-15T08:01:46.5550799Z #11 57.04 [228/711] Linking CXX executable spawn-tester
2025-04-15T08:01:46.7063527Z #11 57.04 /opt/netdata.git/src/libnetdata/libjudy/vendored/JudyL/JudyLDel.c: In function 'j__udyDelWalk':
2025-04-15T08:01:46.7065366Z #11 57.04 /opt/netdata.git/src/libnetdata/libjudy/vendored/JudyL/JudyLDel.c:1211:13: warning: writing 1 byte into a region of size 0 [-Wstringop-overflow=]
2025-04-15T08:01:46.7079579Z #11 57.04  1211 |             JU_LEAF(1,
2025-04-15T08:01:46.7079960Z #11 57.04       |             ^
2025-04-15T08:01:46.7080866Z #11 57.04 /opt/netdata.git/src/libnetdata/libjudy/vendored/JudyCommon/JudyPrivateBranch.h:84:21: note: at offset 7 into destination object 'j_pL_LIndex' of size 7
2025-04-15T08:01:46.7082039Z #11 57.04    84 |             uint8_t j_pL_LIndex[sizeof(Word_t) - 1];    // see above.
2025-04-15T08:01:46.7082533Z #11 57.04       |                     ^
2025-04-15T08:01:46.7083528Z #11 57.04 /opt/netdata.git/src/libnetdata/libjudy/vendored/JudyL/JudyLDel.c:1247:13: warning: writing 1 byte into a region of size 0 [-Wstringop-overflow=]
2025-04-15T08:01:46.7084577Z #11 57.04  1247 |             JU_LEAF(3,
2025-04-15T08:01:46.7084956Z #11 57.04       |             ^
2025-04-15T08:01:46.7085972Z #11 57.04 /opt/netdata.git/src/libnetdata/libjudy/vendored/JudyCommon/JudyPrivateBranch.h:84:21: note: at offset 7 into destination object 'j_pL_LIndex' of size 7
2025-04-15T08:01:46.7108606Z #11 57.04    84 |             uint8_t j_pL_LIndex[sizeof(Word_t) - 1];    // see above.
2025-04-15T08:01:46.7109145Z #11 57.04       |                     ^
2025-04-15T08:01:46.7110245Z #11 57.04 /opt/netdata.git/src/libnetdata/libjudy/vendored/JudyCommon/JudyPrivateBranch.h:84:21: note: at offset 7 into destination object 'j_pL_LIndex' of size 7
2025-04-15T08:01:46.7112026Z #11 57.04 /opt/netdata.git/src/libnetdata/libjudy/vendored/JudyL/JudyLDel.c:1247:13: warning: writing 1 byte into a region of size 0 [-Wstringop-overflow=]
2025-04-15T08:01:46.7113098Z #11 57.04  1247 |             JU_LEAF(3,
2025-04-15T08:01:46.7113507Z #11 57.04       |             ^
2025-04-15T08:01:46.7114589Z #11 57.04 /opt/netdata.git/src/libnetdata/libjudy/vendored/JudyCommon/JudyPrivateBranch.h:84:21: note: at offset [8, 15] into destination object 'j_pL_LIndex' of size 7
2025-04-15T08:01:46.7115851Z #11 57.04    84 |             uint8_t j_pL_LIndex[sizeof(Word_t) - 1];    // see above.
2025-04-15T08:01:46.7117629Z #11 57.04       |                     ^
2025-04-15T08:01:46.7118739Z #11 57.04 /opt/netdata.git/src/libnetdata/libjudy/vendored/JudyCommon/JudyPrivateBranch.h:84:21: note: at offset 8 into destination object 'j_pL_LIndex' of size 7
2025-04-15T08:01:46.7120523Z #11 57.04 /opt/netdata.git/src/libnetdata/libjudy/vendored/JudyL/JudyLDel.c:1247:13: warning: writing 1 byte into a region of size 0 [-Wstringop-overflow=]
2025-04-15T08:01:46.7122033Z #11 57.04  1247 |             JU_LEAF(3,
2025-04-15T08:01:46.7122437Z #11 57.04       |             ^
2025-04-15T08:01:46.7123540Z #11 57.04 /opt/netdata.git/src/libnetdata/libjudy/vendored/JudyCommon/JudyPrivateBranch.h:84:21: note: at offset [9, 16] into destination object 'j_pL_LIndex' of size 7
2025-04-15T08:01:46.7124810Z #11 57.04    84 |             uint8_t j_pL_LIndex[sizeof(Word_t) - 1];    // see above.
2025-04-15T08:01:46.7125348Z #11 57.04       |                     ^
2025-04-15T08:01:46.7126642Z #11 57.04 /opt/netdata.git/src/libnetdata/libjudy/vendored/JudyCommon/JudyPrivateBranch.h:84:21: note: at offset 9 into destination object 'j_pL_LIndex' of size 7
2025-04-15T08:01:47.9867570Z #11 58.47 [229/711] Building C object CMakeFiles/slabinfo.plugin.dir/src/collectors/slabinfo.plugin/slabinfo.c.o
2025-04-15T08:01:49.9145462Z #11 60.40 [230/711] Linking CXX executable perf.plugin
2025-04-15T08:01:49.9148533Z #11 60.40 /opt/netdata.git/src/libnetdata/libjudy/vendored/JudyL/JudyLDel.c: In function 'j__udyDelWalk':
2025-04-15T08:01:49.9149938Z #11 60.40 /opt/netdata.git/src/libnetdata/libjudy/vendored/JudyL/JudyLDel.c:1211:13: warning: writing 1 byte into a region of size 0 [-Wstringop-overflow=]
2025-04-15T08:01:49.9152899Z #11 60.40  1211 |             JU_LEAF(1,
2025-04-15T08:01:49.9153456Z #11 60.40       |             ^
2025-04-15T08:01:49.9154568Z #11 60.40 /opt/netdata.git/src/libnetdata/libjudy/vendored/JudyCommon/JudyPrivateBranch.h:84:21: note: at offset 7 into destination object 'j_pL_LIndex' of size 7
2025-04-15T08:01:49.9156368Z #11 60.40    84 |             uint8_t j_pL_LIndex[sizeof(Word_t) - 1];    // see above.
2025-04-15T08:01:49.9156968Z #11 60.40       |                     ^
2025-04-15T08:01:49.9158028Z #11 60.40 /opt/netdata.git/src/libnetdata/libjudy/vendored/JudyL/JudyLDel.c:1247:13: warning: writing 1 byte into a region of size 0 [-Wstringop-overflow=]
2025-04-15T08:01:49.9159104Z #11 60.40  1247 |             JU_LEAF(3,
2025-04-15T08:01:49.9159496Z #11 60.40       |             ^
2025-04-15T08:01:49.9160546Z #11 60.40 /opt/netdata.git/src/libnetdata/libjudy/vendored/JudyCommon/JudyPrivateBranch.h:84:21: note: at offset 7 into destination object 'j_pL_LIndex' of size 7
2025-04-15T08:01:49.9161755Z #11 60.40    84 |             uint8_t j_pL_LIndex[sizeof(Word_t) - 1];    // see above.
2025-04-15T08:01:49.9162276Z #11 60.40       |                     ^
2025-04-15T08:01:49.9163347Z #11 60.40 /opt/netdata.git/src/libnetdata/libjudy/vendored/JudyCommon/JudyPrivateBranch.h:84:21: note: at offset 7 into destination object 'j_pL_LIndex' of size 7
2025-04-15T08:01:49.9165110Z #11 60.40 /opt/netdata.git/src/libnetdata/libjudy/vendored/JudyL/JudyLDel.c:1247:13: warning: writing 1 byte into a region of size 0 [-Wstringop-overflow=]
2025-04-15T08:01:49.9166367Z #11 60.40  1247 |             JU_LEAF(3,
2025-04-15T08:01:49.9166762Z #11 60.40       |             ^
2025-04-15T08:01:49.9167814Z #11 60.40 /opt/netdata.git/src/libnetdata/libjudy/vendored/JudyCommon/JudyPrivateBranch.h:84:21: note: at offset [8, 15] into destination object 'j_pL_LIndex' of size 7
2025-04-15T08:01:49.9169047Z #11 60.40    84 |             uint8_t j_pL_LIndex[sizeof(Word_t) - 1];    // see above.
2025-04-15T08:01:49.9169563Z #11 60.40       |                     ^
2025-04-15T08:01:49.9170654Z #11 60.40 /opt/netdata.git/src/libnetdata/libjudy/vendored/JudyCommon/JudyPrivateBranch.h:84:21: note: at offset 8 into destination object 'j_pL_LIndex' of size 7
2025-04-15T08:01:49.9172444Z #11 60.40 /opt/netdata.git/src/libnetdata/libjudy/vendored/JudyL/JudyLDel.c:1247:13: warning: writing 1 byte into a region of size 0 [-Wstringop-overflow=]
2025-04-15T08:01:49.9173500Z #11 60.40  1247 |             JU_LEAF(3,
2025-04-15T08:01:49.9173900Z #11 60.40       |             ^
2025-04-15T08:01:49.9174985Z #11 60.40 /opt/netdata.git/src/libnetdata/libjudy/vendored/JudyCommon/JudyPrivateBranch.h:84:21: note: at offset [9, 16] into destination object 'j_pL_LIndex' of size 7
2025-04-15T08:01:49.9187340Z #11 60.40    84 |             uint8_t j_pL_LIndex[sizeof(Word_t) - 1];    // see above.
2025-04-15T08:01:49.9187938Z #11 60.40       |                     ^
2025-04-15T08:01:49.9189081Z #11 60.40 /opt/netdata.git/src/libnetdata/libjudy/vendored/JudyCommon/JudyPrivateBranch.h:84:21: note: at offset 9 into destination object 'j_pL_LIndex' of size 7
2025-04-15T08:01:51.2177259Z #11 61.70 [231/711] Building C object CMakeFiles/cgroup-network.dir/src/collectors/cgroups.plugin/cgroup-network.c.o
2025-04-15T08:01:56.3565621Z #11 66.84 [232/711] Linking CXX executable apps.plugin
2025-04-15T08:01:56.5803467Z #11 66.84 /opt/netdata.git/src/libnetdata/libjudy/vendored/JudyL/JudyLDel.c: In function 'j__udyDelWalk':
2025-04-15T08:01:56.5805472Z #11 66.84 /opt/netdata.git/src/libnetdata/libjudy/vendored/JudyL/JudyLDel.c:1211:13: warning: writing 1 byte into a region of size 0 [-Wstringop-overflow=]
2025-04-15T08:01:56.5811403Z #11 66.84  1211 |             JU_LEAF(1,
2025-04-15T08:01:56.5811821Z #11 66.84       |             ^
2025-04-15T08:01:56.5812898Z #11 66.84 /opt/netdata.git/src/libnetdata/libjudy/vendored/JudyCommon/JudyPrivateBranch.h:84:21: note: at offset 7 into destination object 'j_pL_LIndex' of size 7
2025-04-15T08:01:56.5814182Z #11 66.84    84 |             uint8_t j_pL_LIndex[sizeof(Word_t) - 1];    // see above.
2025-04-15T08:01:56.5814699Z #11 66.84       |                     ^
2025-04-15T08:01:56.5815731Z #11 66.84 /opt/netdata.git/src/libnetdata/libjudy/vendored/JudyL/JudyLDel.c:1247:13: warning: writing 1 byte into a region of size 0 [-Wstringop-overflow=]
2025-04-15T08:01:56.5817436Z #11 66.84  1247 |             JU_LEAF(3,
2025-04-15T08:01:56.5817883Z #11 66.84       |             ^
2025-04-15T08:01:56.5818979Z #11 66.84 /opt/netdata.git/src/libnetdata/libjudy/vendored/JudyCommon/JudyPrivateBranch.h:84:21: note: at offset 7 into destination object 'j_pL_LIndex' of size 7
2025-04-15T08:01:56.5820244Z #11 66.84    84 |             uint8_t j_pL_LIndex[sizeof(Word_t) - 1];    // see above.
2025-04-15T08:01:56.5820789Z #11 66.84       |                     ^
2025-04-15T08:01:56.5821901Z #11 66.84 /opt/netdata.git/src/libnetdata/libjudy/vendored/JudyCommon/JudyPrivateBranch.h:84:21: note: at offset 7 into destination object 'j_pL_LIndex' of size 7
2025-04-15T08:01:56.5823702Z #11 66.84 /opt/netdata.git/src/libnetdata/libjudy/vendored/JudyL/JudyLDel.c:1247:13: warning: writing 1 byte into a region of size 0 [-Wstringop-overflow=]
2025-04-15T08:01:56.5824795Z #11 66.84  1247 |             JU_LEAF(3,
2025-04-15T08:01:56.5825206Z #11 66.84       |             ^
2025-04-15T08:01:56.5827494Z #11 66.84 /opt/netdata.git/src/libnetdata/libjudy/vendored/JudyCommon/JudyPrivateBranch.h:84:21: note: at offset [8, 15] into destination object 'j_pL_LIndex' of size 7
2025-04-15T08:01:56.5828788Z #11 66.84    84 |             uint8_t j_pL_LIndex[sizeof(Word_t) - 1];    // see above.
2025-04-15T08:01:56.5829352Z #11 66.84       |                     ^
2025-04-15T08:01:56.5830479Z #11 66.84 /opt/netdata.git/src/libnetdata/libjudy/vendored/JudyCommon/JudyPrivateBranch.h:84:21: note: at offset 8 into destination object 'j_pL_LIndex' of size 7
2025-04-15T08:01:56.5832198Z #11 66.84 /opt/netdata.git/src/libnetdata/libjudy/vendored/JudyL/JudyLDel.c:1247:13: warning: writing 1 byte into a region of size 0 [-Wstringop-overflow=]
2025-04-15T08:01:56.5833245Z #11 66.84  1247 |             JU_LEAF(3,
2025-04-15T08:01:56.5833642Z #11 66.84       |             ^
2025-04-15T08:01:56.5834723Z #11 66.84 /opt/netdata.git/src/libnetdata/libjudy/vendored/JudyCommon/JudyPrivateBranch.h:84:21: note: at offset [9, 16] into destination object 'j_pL_LIndex' of size 7
2025-04-15T08:01:56.5835928Z #11 66.84    84 |             uint8_t j_pL_LIndex[sizeof(Word_t) - 1];    // see above.
2025-04-15T08:01:56.5836654Z #11 66.84       |                     ^
2025-04-15T08:01:56.5837737Z #11 66.84 /opt/netdata.git/src/libnetdata/libjudy/vendored/JudyCommon/JudyPrivateBranch.h:84:21: note: at offset 9 into destination object 'j_pL_LIndex' of size 7
2025-04-15T08:01:56.5839215Z #11 66.91 [233/711] Linking CXX executable freeipmi.plugin
2025-04-15T08:01:56.5840033Z #11 66.91 /opt/netdata.git/src/libnetdata/libjudy/vendored/JudyL/JudyLDel.c: In function 'j__udyDelWalk':
2025-04-15T08:01:56.5841402Z #11 66.91 /opt/netdata.git/src/libnetdata/libjudy/vendored/JudyL/JudyLDel.c:1211:13: warning: writing 1 byte into a region of size 0 [-Wstringop-overflow=]
2025-04-15T08:01:56.5842435Z #11 66.91  1211 |             JU_LEAF(1,
2025-04-15T08:01:56.5842816Z #11 66.91       |             ^
2025-04-15T08:01:56.5843872Z #11 66.91 /opt/netdata.git/src/libnetdata/libjudy/vendored/JudyCommon/JudyPrivateBranch.h:84:21: note: at offset 7 into destination object 'j_pL_LIndex' of size 7
2025-04-15T08:01:56.5845099Z #11 66.91    84 |             uint8_t j_pL_LIndex[sizeof(Word_t) - 1];    // see above.
2025-04-15T08:01:56.5845657Z #11 66.91       |                     ^
2025-04-15T08:01:56.5846880Z #11 66.91 /opt/netdata.git/src/libnetdata/libjudy/vendored/JudyL/JudyLDel.c:1247:13: warning: writing 1 byte into a region of size 0 [-Wstringop-overflow=]
2025-04-15T08:01:56.5847906Z #11 66.91  1247 |             JU_LEAF(3,
2025-04-15T08:01:56.5848331Z #11 66.91       |             ^
2025-04-15T08:01:56.5849347Z #11 66.91 /opt/netdata.git/src/libnetdata/libjudy/vendored/JudyCommon/JudyPrivateBranch.h:84:21: note: at offset 7 into destination object 'j_pL_LIndex' of size 7
2025-04-15T08:01:56.5850535Z #11 66.91    84 |             uint8_t j_pL_LIndex[sizeof(Word_t) - 1];    // see above.
2025-04-15T08:01:56.5851056Z #11 66.91       |                     ^
2025-04-15T08:01:56.5852386Z #11 66.91 /opt/netdata.git/src/libnetdata/libjudy/vendored/JudyCommon/JudyPrivateBranch.h:84:21: note: at offset 7 into destination object 'j_pL_LIndex' of size 7
2025-04-15T08:01:56.5854168Z #11 66.91 /opt/netdata.git/src/libnetdata/libjudy/vendored/JudyL/JudyLDel.c:1247:13: warning: writing 1 byte into a region of size 0 [-Wstringop-overflow=]
2025-04-15T08:01:56.5855193Z #11 66.91  1247 |             JU_LEAF(3,
2025-04-15T08:01:56.5855601Z #11 66.91       |             ^
2025-04-15T08:01:56.5856820Z #11 66.91 /opt/netdata.git/src/libnetdata/libjudy/vendored/JudyCommon/JudyPrivateBranch.h:84:21: note: at offset [8, 15] into destination object 'j_pL_LIndex' of size 7
2025-04-15T08:01:56.5858014Z #11 66.91    84 |             uint8_t j_pL_LIndex[sizeof(Word_t) - 1];    // see above.
2025-04-15T08:01:56.5858555Z #11 66.91       |                     ^
2025-04-15T08:01:56.5859676Z #11 66.91 /opt/netdata.git/src/libnetdata/libjudy/vendored/JudyCommon/JudyPrivateBranch.h:84:21: note: at offset 8 into destination object 'j_pL_LIndex' of size 7
2025-04-15T08:01:56.5861474Z #11 66.91 /opt/netdata.git/src/libnetdata/libjudy/vendored/JudyL/JudyLDel.c:1247:13: warning: writing 1 byte into a region of size 0 [-Wstringop-overflow=]
2025-04-15T08:01:56.5862541Z #11 66.91  1247 |             JU_LEAF(3,
2025-04-15T08:01:56.5862932Z #11 66.91       |             ^
2025-04-15T08:01:56.5863989Z #11 66.91 /opt/netdata.git/src/libnetdata/libjudy/vendored/JudyCommon/JudyPrivateBranch.h:84:21: note: at offset [9, 16] into destination object 'j_pL_LIndex' of size 7
2025-04-15T08:01:56.5865252Z #11 66.91    84 |             uint8_t j_pL_LIndex[sizeof(Word_t) - 1];    // see above.
2025-04-15T08:01:56.5865777Z #11 66.91       |                     ^
2025-04-15T08:01:56.5867056Z #11 66.91 /opt/netdata.git/src/libnetdata/libjudy/vendored/JudyCommon/JudyPrivateBranch.h:84:21: note: at offset 9 into destination object 'j_pL_LIndex' of size 7
2025-04-15T08:01:57.5226366Z #11 68.01 [234/711] Building C object CMakeFiles/systemd-journal.plugin.dir/src/collectors/systemd-journal.plugin/systemd-main.c.o
2025-04-15T08:01:58.1248162Z #11 68.61 [235/711] Building C object CMakeFiles/systemd-journal.plugin.dir/src/collectors/systemd-journal.plugin/systemd-journal.c.o
2025-04-15T08:01:58.9160830Z #11 69.40 [236/711] Building C object CMakeFiles/systemd-journal.plugin.dir/src/collectors/systemd-journal.plugin/systemd-journal-annotations.c.o
2025-04-15T08:01:59.3808674Z #11 69.86 [237/711] Building C object CMakeFiles/systemd-journal.plugin.dir/src/collectors/systemd-journal.plugin/systemd-journal-files.c.o
2025-04-15T08:01:59.7492139Z #11 70.23 [238/711] Building C object CMakeFiles/systemd-journal.plugin.dir/src/collectors/systemd-journal.plugin/systemd-journal-fstat.c.o
2025-04-15T08:02:00.6857977Z #11 71.17 [239/711] Building C object CMakeFiles/systemd-journal.plugin.dir/src/collectors/systemd-journal.plugin/systemd-journal-watcher.c.o
2025-04-15T08:02:00.8321163Z #11 71.32 [240/711] Building C object CMakeFiles/systemd-journal.plugin.dir/src/collectors/systemd-journal.plugin/systemd-journal-dyncfg.c.o
2025-04-15T08:02:02.1172014Z #11 72.60 [241/711] Building C object CMakeFiles/local-listeners.dir/src/collectors/utils/local_listeners.c.o
2025-04-15T08:02:02.4184726Z #11 72.90 [242/711] Building C object CMakeFiles/systemd-journal.plugin.dir/src/collectors/systemd-journal.plugin/systemd-units.c.o
2025-04-15T08:02:05.3667801Z #11 75.85 [243/711] Linking CXX executable slabinfo.plugin
2025-04-15T08:02:05.5180798Z #11 75.85 /opt/netdata.git/src/libnetdata/libjudy/vendored/JudyL/JudyLDel.c: In function 'j__udyDelWalk':
2025-04-15T08:02:05.5182760Z #11 75.85 /opt/netdata.git/src/libnetdata/libjudy/vendored/JudyL/JudyLDel.c:1211:13: warning: writing 1 byte into a region of size 0 [-Wstringop-overflow=]
2025-04-15T08:02:05.5185304Z #11 75.85  1211 |             JU_LEAF(1,
2025-04-15T08:02:05.5185698Z #11 75.85       |             ^
2025-04-15T08:02:05.5187457Z #11 75.85 /opt/netdata.git/src/libnetdata/libjudy/vendored/JudyCommon/JudyPrivateBranch.h:84:21: note: at offset 7 into destination object 'j_pL_LIndex' of size 7
2025-04-15T08:02:05.5188772Z #11 75.85    84 |             uint8_t j_pL_LIndex[sizeof(Word_t) - 1];    // see above.
2025-04-15T08:02:05.5189332Z #11 75.85       |                     ^
2025-04-15T08:02:05.5190382Z #11 75.85 /opt/netdata.git/src/libnetdata/libjudy/vendored/JudyL/JudyLDel.c:1247:13: warning: writing 1 byte into a region of size 0 [-Wstringop-overflow=]
2025-04-15T08:02:05.5191481Z #11 75.85  1247 |             JU_LEAF(3,
2025-04-15T08:02:05.5191904Z #11 75.85       |             ^
2025-04-15T08:02:05.5192968Z #11 75.85 /opt/netdata.git/src/libnetdata/libjudy/vendored/JudyCommon/JudyPrivateBranch.h:84:21: note: at offset 7 into destination object 'j_pL_LIndex' of size 7
2025-04-15T08:02:05.5194229Z #11 75.85    84 |             uint8_t j_pL_LIndex[sizeof(Word_t) - 1];    // see above.
2025-04-15T08:02:05.5194762Z #11 75.85       |                     ^
2025-04-15T08:02:05.5195917Z #11 75.85 /opt/netdata.git/src/libnetdata/libjudy/vendored/JudyCommon/JudyPrivateBranch.h:84:21: note: at offset 7 into destination object 'j_pL_LIndex' of size 7
2025-04-15T08:02:05.5232392Z #11 75.85 /opt/netdata.git/src/libnetdata/libjudy/vendored/JudyL/JudyLDel.c:1247:13: warning: writing 1 byte into a region of size 0 [-Wstringop-overflow=]
2025-04-15T08:02:05.5233477Z #11 75.85  1247 |             JU_LEAF(3,
2025-04-15T08:02:05.5233872Z #11 75.85       |             ^
2025-04-15T08:02:05.5234914Z #11 75.85 /opt/netdata.git/src/libnetdata/libjudy/vendored/JudyCommon/JudyPrivateBranch.h:84:21: note: at offset [8, 15] into destination object 'j_pL_LIndex' of size 7
2025-04-15T08:02:05.5236433Z #11 75.85    84 |             uint8_t j_pL_LIndex[sizeof(Word_t) - 1];    // see above.
2025-04-15T08:02:05.5236990Z #11 75.85       |                     ^
2025-04-15T08:02:05.5238097Z #11 75.85 /opt/netdata.git/src/libnetdata/libjudy/vendored/JudyCommon/JudyPrivateBranch.h:84:21: note: at offset 8 into destination object 'j_pL_LIndex' of size 7
2025-04-15T08:02:05.5239928Z #11 75.85 /opt/netdata.git/src/libnetdata/libjudy/vendored/JudyL/JudyLDel.c:1247:13: warning: writing 1 byte into a region of size 0 [-Wstringop-overflow=]
2025-04-15T08:02:05.5241016Z #11 75.85  1247 |             JU_LEAF(3,
2025-04-15T08:02:05.5241417Z #11 75.85       |             ^
2025-04-15T08:02:05.5242890Z #11 75.85 /opt/netdata.git/src/libnetdata/libjudy/vendored/JudyCommon/JudyPrivateBranch.h:84:21: note: at offset [9, 16] into destination object 'j_pL_LIndex' of size 7
2025-04-15T08:02:05.5244165Z #11 75.85    84 |             uint8_t j_pL_LIndex[sizeof(Word_t) - 1];    // see above.
2025-04-15T08:02:05.5244702Z #11 75.85       |                     ^
2025-04-15T08:02:05.5245827Z #11 75.85 /opt/netdata.git/src/libnetdata/libjudy/vendored/JudyCommon/JudyPrivateBranch.h:84:21: note: at offset 9 into destination object 'j_pL_LIndex' of size 7
2025-04-15T08:02:08.0677331Z #11 78.55 [244/711] Building C object CMakeFiles/network-viewer.plugin.dir/src/collectors/network-viewer.plugin/network-viewer.c.o
2025-04-15T08:02:10.7212363Z #11 81.21 [245/711] Linking CXX executable cgroup-network
2025-04-15T08:02:10.8727903Z #11 81.21 /opt/netdata.git/src/libnetdata/libjudy/vendored/JudyL/JudyLDel.c: In function 'j__udyDelWalk':
2025-04-15T08:02:10.8730613Z #11 81.21 /opt/netdata.git/src/libnetdata/libjudy/vendored/JudyL/JudyLDel.c:1211:13: warning: writing 1 byte into a region of size 0 [-Wstringop-overflow=]
2025-04-15T08:02:10.8731764Z #11 81.21  1211 |             JU_LEAF(1,
2025-04-15T08:02:10.8732160Z #11 81.21       |             ^
2025-04-15T08:02:10.8733246Z #11 81.21 /opt/netdata.git/src/libnetdata/libjudy/vendored/JudyCommon/JudyPrivateBranch.h:84:21: note: at offset 7 into destination object 'j_pL_LIndex' of size 7
2025-04-15T08:02:10.8734503Z #11 81.21    84 |             uint8_t j_pL_LIndex[sizeof(Word_t) - 1];    // see above.
2025-04-15T08:02:10.8735044Z #11 81.21       |                     ^
2025-04-15T08:02:10.8736750Z #11 81.21 /opt/netdata.git/src/libnetdata/libjudy/vendored/JudyL/JudyLDel.c:1247:13: warning: writing 1 byte into a region of size 0 [-Wstringop-overflow=]
2025-04-15T08:02:10.8737881Z #11 81.21  1247 |             JU_LEAF(3,
2025-04-15T08:02:10.8738279Z #11 81.21       |             ^
2025-04-15T08:02:10.8741776Z #11 81.21 /opt/netdata.git/src/libnetdata/libjudy/vendored/JudyCommon/JudyPrivateBranch.h:84:21: note: at offset 7 into destination object 'j_pL_LIndex' of size 7
2025-04-15T08:02:10.8743463Z #11 81.21    84 |             uint8_t j_pL_LIndex[sizeof(Word_t) - 1];    // see above.
2025-04-15T08:02:10.8744261Z #11 81.21       |                     ^
2025-04-15T08:02:10.8745603Z #11 81.21 /opt/netdata.git/src/libnetdata/libjudy/vendored/JudyCommon/JudyPrivateBranch.h:84:21: note: at offset 7 into destination object 'j_pL_LIndex' of size 7
2025-04-15T08:02:10.8748671Z #11 81.21 /opt/netdata.git/src/libnetdata/libjudy/vendored/JudyL/JudyLDel.c:1247:13: warning: writing 1 byte into a region of size 0 [-Wstringop-overflow=]
2025-04-15T08:02:10.8759234Z #11 81.21  1247 |             JU_LEAF(3,
2025-04-15T08:02:10.8759648Z #11 81.21       |             ^
2025-04-15T08:02:10.8760734Z #11 81.21 /opt/netdata.git/src/libnetdata/libjudy/vendored/JudyCommon/JudyPrivateBranch.h:84:21: note: at offset [8, 15] into destination object 'j_pL_LIndex' of size 7
2025-04-15T08:02:10.8762048Z #11 81.21    84 |             uint8_t j_pL_LIndex[sizeof(Word_t) - 1];    // see above.
2025-04-15T08:02:10.8762596Z #11 81.21       |                     ^
2025-04-15T08:02:10.8763727Z #11 81.21 /opt/netdata.git/src/libnetdata/libjudy/vendored/JudyCommon/JudyPrivateBranch.h:84:21: note: at offset 8 into destination object 'j_pL_LIndex' of size 7
2025-04-15T08:02:10.8765558Z #11 81.21 /opt/netdata.git/src/libnetdata/libjudy/vendored/JudyL/JudyLDel.c:1247:13: warning: writing 1 byte into a region of size 0 [-Wstringop-overflow=]
2025-04-15T08:02:10.8770851Z #11 81.21  1247 |             JU_LEAF(3,
2025-04-15T08:02:10.8771264Z #11 81.21       |             ^
2025-04-15T08:02:10.8772398Z #11 81.21 /opt/netdata.git/src/libnetdata/libjudy/vendored/JudyCommon/JudyPrivateBranch.h:84:21: note: at offset [9, 16] into destination object 'j_pL_LIndex' of size 7
2025-04-15T08:02:10.8773682Z #11 81.21    84 |             uint8_t j_pL_LIndex[sizeof(Word_t) - 1];    // see above.
2025-04-15T08:02:10.8774545Z #11 81.21       |                     ^
2025-04-15T08:02:10.8775678Z #11 81.21 /opt/netdata.git/src/libnetdata/libjudy/vendored/JudyCommon/JudyPrivateBranch.h:84:21: note: at offset 9 into destination object 'j_pL_LIndex' of size 7
2025-04-15T08:02:12.4890701Z #11 82.97 [246/711] Building C object CMakeFiles/systemd-cat-native.dir/src/libnetdata/log/systemd-cat-native.c.o
2025-04-15T08:02:25.5729247Z #11 96.06 [247/711] Linking CXX executable local-listeners
2025-04-15T08:02:25.7259351Z #11 96.06 /opt/netdata.git/src/libnetdata/libjudy/vendored/JudyL/JudyLDel.c: In function 'j__udyDelWalk':
2025-04-15T08:02:25.7260794Z #11 96.06 /opt/netdata.git/src/libnetdata/libjudy/vendored/JudyL/JudyLDel.c:1211:13: warning: writing 1 byte into a region of size 0 [-Wstringop-overflow=]
2025-04-15T08:02:25.7261798Z #11 96.06  1211 |             JU_LEAF(1,
2025-04-15T08:02:25.7262140Z #11 96.06       |             ^
2025-04-15T08:02:25.7263092Z #11 96.06 /opt/netdata.git/src/libnetdata/libjudy/vendored/JudyCommon/JudyPrivateBranch.h:84:21: note: at offset 7 into destination object 'j_pL_LIndex' of size 7
2025-04-15T08:02:25.7264295Z #11 96.06    84 |             uint8_t j_pL_LIndex[sizeof(Word_t) - 1];    // see above.
2025-04-15T08:02:25.7264795Z #11 96.06       |                     ^
2025-04-15T08:02:25.7265791Z #11 96.06 /opt/netdata.git/src/libnetdata/libjudy/vendored/JudyL/JudyLDel.c:1247:13: warning: writing 1 byte into a region of size 0 [-Wstringop-overflow=]
2025-04-15T08:02:25.7266979Z #11 96.06  1247 |             JU_LEAF(3,
2025-04-15T08:02:25.7267353Z #11 96.06       |             ^
2025-04-15T08:02:25.7268823Z #11 96.06 /opt/netdata.git/src/libnetdata/libjudy/vendored/JudyCommon/JudyPrivateBranch.h:84:21: note: at offset 7 into destination object 'j_pL_LIndex' of size 7
2025-04-15T08:02:25.7270030Z #11 96.06    84 |             uint8_t j_pL_LIndex[sizeof(Word_t) - 1];    // see above.
2025-04-15T08:02:25.7270533Z #11 96.06       |                     ^
2025-04-15T08:02:25.7271586Z #11 96.06 /opt/netdata.git/src/libnetdata/libjudy/vendored/JudyCommon/JudyPrivateBranch.h:84:21: note: at offset 7 into destination object 'j_pL_LIndex' of size 7
2025-04-15T08:02:25.7273288Z #11 96.06 /opt/netdata.git/src/libnetdata/libjudy/vendored/JudyL/JudyLDel.c:1247:13: warning: writing 1 byte into a region of size 0 [-Wstringop-overflow=]
2025-04-15T08:02:25.7274290Z #11 96.06  1247 |             JU_LEAF(3,
2025-04-15T08:02:25.7274639Z #11 96.06       |             ^
2025-04-15T08:02:25.7275633Z #11 96.06 /opt/netdata.git/src/libnetdata/libjudy/vendored/JudyCommon/JudyPrivateBranch.h:84:21: note: at offset [8, 15] into destination object 'j_pL_LIndex' of size 7
2025-04-15T08:02:25.7279449Z #11 96.06    84 |             uint8_t j_pL_LIndex[sizeof(Word_t) - 1];    // see above.
2025-04-15T08:02:25.7280004Z #11 96.06       |                     ^
2025-04-15T08:02:25.7281094Z #11 96.06 /opt/netdata.git/src/libnetdata/libjudy/vendored/JudyCommon/JudyPrivateBranch.h:84:21: note: at offset 8 into destination object 'j_pL_LIndex' of size 7
2025-04-15T08:02:25.7282843Z #11 96.06 /opt/netdata.git/src/libnetdata/libjudy/vendored/JudyL/JudyLDel.c:1247:13: warning: writing 1 byte into a region of size 0 [-Wstringop-overflow=]
2025-04-15T08:02:25.7283935Z #11 96.06  1247 |             JU_LEAF(3,
2025-04-15T08:02:25.7284326Z #11 96.06       |             ^
2025-04-15T08:02:25.7285301Z #11 96.06 /opt/netdata.git/src/libnetdata/libjudy/vendored/JudyCommon/JudyPrivateBranch.h:84:21: note: at offset [9, 16] into destination object 'j_pL_LIndex' of size 7
2025-04-15T08:02:25.7286657Z #11 96.06    84 |             uint8_t j_pL_LIndex[sizeof(Word_t) - 1];    // see above.
2025-04-15T08:02:25.7287177Z #11 96.06       |                     ^
2025-04-15T08:02:25.7288197Z #11 96.06 /opt/netdata.git/src/libnetdata/libjudy/vendored/JudyCommon/JudyPrivateBranch.h:84:21: note: at offset 9 into destination object 'j_pL_LIndex' of size 7
2025-04-15T08:02:27.3173425Z #11 97.80 [248/711] Building C object CMakeFiles/log2journal.dir/src/collectors/log2journal/log2journal.c.o
2025-04-15T08:02:28.5069735Z #11 98.99 [249/711] Building C object CMakeFiles/log2journal.dir/src/collectors/log2journal/log2journal-help.c.o
2025-04-15T08:02:30.0063356Z #11 100.5 [250/711] Building C object CMakeFiles/log2journal.dir/src/collectors/log2journal/log2journal-yaml.c.o
2025-04-15T08:02:30.7399519Z #11 101.2 [251/711] Building C object CMakeFiles/log2journal.dir/src/collectors/log2journal/log2journal-json.c.o
2025-04-15T08:02:31.3862704Z #11 101.9 [252/711] Building C object CMakeFiles/log2journal.dir/src/collectors/log2journal/log2journal-logfmt.c.o
2025-04-15T08:02:31.7438902Z #11 102.2 [253/711] Building C object CMakeFiles/log2journal.dir/src/collectors/log2journal/log2journal-pcre2.c.o
2025-04-15T08:02:31.9797433Z #11 102.3 [254/711] Linking CXX executable systemd-journal.plugin
2025-04-15T08:02:31.9798948Z #11 102.3 /opt/netdata.git/src/libnetdata/libjudy/vendored/JudyL/JudyLDel.c: In function 'j__udyDelWalk':
2025-04-15T08:02:31.9803048Z #11 102.3 /opt/netdata.git/src/libnetdata/libjudy/vendored/JudyL/JudyLDel.c:1211:13: warning: writing 1 byte into a region of size 0 [-Wstringop-overflow=]
2025-04-15T08:02:31.9804083Z #11 102.3  1211 |             JU_LEAF(1,
2025-04-15T08:02:31.9804482Z #11 102.3       |             ^
2025-04-15T08:02:31.9805413Z #11 102.3 /opt/netdata.git/src/libnetdata/libjudy/vendored/JudyCommon/JudyPrivateBranch.h:84:21: note: at offset 7 into destination object 'j_pL_LIndex' of size 7
2025-04-15T08:02:31.9806762Z #11 102.3    84 |             uint8_t j_pL_LIndex[sizeof(Word_t) - 1];    // see above.
2025-04-15T08:02:31.9807252Z #11 102.3       |                     ^
2025-04-15T08:02:31.9808672Z #11 102.3 /opt/netdata.git/src/libnetdata/libjudy/vendored/JudyL/JudyLDel.c:1247:13: warning: writing 1 byte into a region of size 0 [-Wstringop-overflow=]
2025-04-15T08:02:31.9809687Z #11 102.3  1247 |             JU_LEAF(3,
2025-04-15T08:02:31.9810075Z #11 102.3       |             ^
2025-04-15T08:02:31.9811137Z #11 102.3 /opt/netdata.git/src/libnetdata/libjudy/vendored/JudyCommon/JudyPrivateBranch.h:84:21: note: at offset 7 into destination object 'j_pL_LIndex' of size 7
2025-04-15T08:02:31.9812390Z #11 102.3    84 |             uint8_t j_pL_LIndex[sizeof(Word_t) - 1];    // see above.
2025-04-15T08:02:31.9812932Z #11 102.3       |                     ^
2025-04-15T08:02:31.9814025Z #11 102.3 /opt/netdata.git/src/libnetdata/libjudy/vendored/JudyCommon/JudyPrivateBranch.h:84:21: note: at offset 7 into destination object 'j_pL_LIndex' of size 7
2025-04-15T08:02:31.9815828Z #11 102.3 /opt/netdata.git/src/libnetdata/libjudy/vendored/JudyL/JudyLDel.c:1247:13: warning: writing 1 byte into a region of size 0 [-Wstringop-overflow=]
2025-04-15T08:02:31.9828160Z #11 102.3  1247 |             JU_LEAF(3,
2025-04-15T08:02:31.9828591Z #11 102.3       |             ^
2025-04-15T08:02:31.9829704Z #11 102.3 /opt/netdata.git/src/libnetdata/libjudy/vendored/JudyCommon/JudyPrivateBranch.h:84:21: note: at offset [8, 15] into destination object 'j_pL_LIndex' of size 7
2025-04-15T08:02:31.9830981Z #11 102.3    84 |             uint8_t j_pL_LIndex[sizeof(Word_t) - 1];    // see above.
2025-04-15T08:02:31.9831545Z #11 102.3       |                     ^
2025-04-15T08:02:31.9832651Z #11 102.3 /opt/netdata.git/src/libnetdata/libjudy/vendored/JudyCommon/JudyPrivateBranch.h:84:21: note: at offset 8 into destination object 'j_pL_LIndex' of size 7
2025-04-15T08:02:31.9834425Z #11 102.3 /opt/netdata.git/src/libnetdata/libjudy/vendored/JudyL/JudyLDel.c:1247:13: warning: writing 1 byte into a region of size 0 [-Wstringop-overflow=]
2025-04-15T08:02:31.9835480Z #11 102.3  1247 |             JU_LEAF(3,
2025-04-15T08:02:31.9835874Z #11 102.3       |             ^
2025-04-15T08:02:31.9837169Z #11 102.3 /opt/netdata.git/src/libnetdata/libjudy/vendored/JudyCommon/JudyPrivateBranch.h:84:21: note: at offset [9, 16] into destination object 'j_pL_LIndex' of size 7
2025-04-15T08:02:31.9838415Z #11 102.3    84 |             uint8_t j_pL_LIndex[sizeof(Word_t) - 1];    // see above.
2025-04-15T08:02:31.9838948Z #11 102.3       |                     ^
2025-04-15T08:02:31.9840361Z #11 102.3 /opt/netdata.git/src/libnetdata/libjudy/vendored/JudyCommon/JudyPrivateBranch.h:84:21: note: at offset 9 into destination object 'j_pL_LIndex' of size 7
2025-04-15T08:02:32.2229097Z #11 102.7 [255/711] Building C object CMakeFiles/log2journal.dir/src/collectors/log2journal/log2journal-params.c.o
2025-04-15T08:02:32.3303040Z #11 102.8 [256/711] Building C object CMakeFiles/log2journal.dir/src/collectors/log2journal/log2journal-inject.c.o
2025-04-15T08:02:32.4414421Z #11 102.9 [257/711] Linking CXX executable network-viewer.plugin
2025-04-15T08:02:32.5538183Z #11 102.9 /opt/netdata.git/src/libnetdata/libjudy/vendored/JudyL/JudyLDel.c: In function 'j__udyDelWalk':
2025-04-15T08:02:32.5539744Z #11 102.9 /opt/netdata.git/src/libnetdata/libjudy/vendored/JudyL/JudyLDel.c:1211:13: warning: writing 1 byte into a region of size 0 [-Wstringop-overflow=]
2025-04-15T08:02:32.5540802Z #11 102.9  1211 |             JU_LEAF(1,
2025-04-15T08:02:32.5541205Z #11 102.9       |             ^
2025-04-15T08:02:32.5542300Z #11 102.9 /opt/netdata.git/src/libnetdata/libjudy/vendored/JudyCommon/JudyPrivateBranch.h:84:21: note: at offset 7 into destination object 'j_pL_LIndex' of size 7
2025-04-15T08:02:32.5543559Z #11 102.9    84 |             uint8_t j_pL_LIndex[sizeof(Word_t) - 1];    // see above.
2025-04-15T08:02:32.5544167Z #11 102.9       |                     ^
2025-04-15T08:02:32.5545246Z #11 102.9 /opt/netdata.git/src/libnetdata/libjudy/vendored/JudyL/JudyLDel.c:1247:13: warning: writing 1 byte into a region of size 0 [-Wstringop-overflow=]
2025-04-15T08:02:32.5546519Z #11 102.9  1247 |             JU_LEAF(3,
2025-04-15T08:02:32.5546926Z #11 102.9       |             ^
2025-04-15T08:02:32.5548312Z #11 102.9 /opt/netdata.git/src/libnetdata/libjudy/vendored/JudyCommon/JudyPrivateBranch.h:84:21: note: at offset 7 into destination object 'j_pL_LIndex' of size 7
2025-04-15T08:02:32.5549601Z #11 102.9    84 |             uint8_t j_pL_LIndex[sizeof(Word_t) - 1];    // see above.
2025-04-15T08:02:32.5550144Z #11 102.9       |                     ^
2025-04-15T08:02:32.5551259Z #11 102.9 /opt/netdata.git/src/libnetdata/libjudy/vendored/JudyCommon/JudyPrivateBranch.h:84:21: note: at offset 7 into destination object 'j_pL_LIndex' of size 7
2025-04-15T08:02:32.5553043Z #11 102.9 /opt/netdata.git/src/libnetdata/libjudy/vendored/JudyL/JudyLDel.c:1247:13: warning: writing 1 byte into a region of size 0 [-Wstringop-overflow=]
2025-04-15T08:02:32.5554104Z #11 102.9  1247 |             JU_LEAF(3,
2025-04-15T08:02:32.5554501Z #11 102.9       |             ^
2025-04-15T08:02:32.5555601Z #11 102.9 /opt/netdata.git/src/libnetdata/libjudy/vendored/JudyCommon/JudyPrivateBranch.h:84:21: note: at offset [8, 15] into destination object 'j_pL_LIndex' of size 7
2025-04-15T08:02:32.5557020Z #11 102.9    84 |             uint8_t j_pL_LIndex[sizeof(Word_t) - 1];    // see above.
2025-04-15T08:02:32.5557545Z #11 102.9       |                     ^
2025-04-15T08:02:32.5558672Z #11 102.9 /opt/netdata.git/src/libnetdata/libjudy/vendored/JudyCommon/JudyPrivateBranch.h:84:21: note: at offset 8 into destination object 'j_pL_LIndex' of size 7
2025-04-15T08:02:32.5560420Z #11 102.9 /opt/netdata.git/src/libnetdata/libjudy/vendored/JudyL/JudyLDel.c:1247:13: warning: writing 1 byte into a region of size 0 [-Wstringop-overflow=]
2025-04-15T08:02:32.5561491Z #11 102.9  1247 |             JU_LEAF(3,
2025-04-15T08:02:32.5561887Z #11 102.9       |             ^
2025-04-15T08:02:32.5562949Z #11 102.9 /opt/netdata.git/src/libnetdata/libjudy/vendored/JudyCommon/JudyPrivateBranch.h:84:21: note: at offset [9, 16] into destination object 'j_pL_LIndex' of size 7
2025-04-15T08:02:32.5564159Z #11 102.9    84 |             uint8_t j_pL_LIndex[sizeof(Word_t) - 1];    // see above.
2025-04-15T08:02:32.5564698Z #11 102.9       |                     ^
2025-04-15T08:02:32.5565792Z #11 102.9 /opt/netdata.git/src/libnetdata/libjudy/vendored/JudyCommon/JudyPrivateBranch.h:84:21: note: at offset 9 into destination object 'j_pL_LIndex' of size 7
2025-04-15T08:02:32.5568927Z #11 103.0 [258/711] Building C object CMakeFiles/log2journal.dir/src/collectors/log2journal/log2journal-pattern.c.o
2025-04-15T08:02:32.6604989Z #11 103.1 [259/711] Linking CXX executable systemd-cat-native
2025-04-15T08:02:32.6605887Z #11 103.1 /opt/netdata.git/src/libnetdata/libjudy/vendored/JudyL/JudyLDel.c: In function 'j__udyDelWalk':
2025-04-15T08:02:32.6607362Z #11 103.1 /opt/netdata.git/src/libnetdata/libjudy/vendored/JudyL/JudyLDel.c:1211:13: warning: writing 1 byte into a region of size 0 [-Wstringop-overflow=]
2025-04-15T08:02:32.6608308Z #11 103.1  1211 |             JU_LEAF(1,
2025-04-15T08:02:32.6608659Z #11 103.1       |             ^
2025-04-15T08:02:32.6609668Z #11 103.1 /opt/netdata.git/src/libnetdata/libjudy/vendored/JudyCommon/JudyPrivateBranch.h:84:21: note: at offset 7 into destination object 'j_pL_LIndex' of size 7
2025-04-15T08:02:32.6610791Z #11 103.1    84 |             uint8_t j_pL_LIndex[sizeof(Word_t) - 1];    // see above.
2025-04-15T08:02:32.6611280Z #11 103.1       |                     ^
2025-04-15T08:02:32.6612218Z #11 103.1 /opt/netdata.git/src/libnetdata/libjudy/vendored/JudyL/JudyLDel.c:1247:13: warning: writing 1 byte into a region of size 0 [-Wstringop-overflow=]
2025-04-15T08:02:32.6613183Z #11 103.1  1247 |             JU_LEAF(3,
2025-04-15T08:02:32.6613523Z #11 103.1       |             ^
2025-04-15T08:02:32.6614494Z #11 103.1 /opt/netdata.git/src/libnetdata/libjudy/vendored/JudyCommon/JudyPrivateBranch.h:84:21: note: at offset 7 into destination object 'j_pL_LIndex' of size 7
2025-04-15T08:02:32.6615596Z #11 103.1    84 |             uint8_t j_pL_LIndex[sizeof(Word_t) - 1];    // see above.
2025-04-15T08:02:32.6616343Z #11 103.1       |                     ^
2025-04-15T08:02:32.6617602Z #11 103.1 /opt/netdata.git/src/libnetdata/libjudy/vendored/JudyCommon/JudyPrivateBranch.h:84:21: note: at offset 7 into destination object 'j_pL_LIndex' of size 7
2025-04-15T08:02:32.6619174Z #11 103.1 /opt/netdata.git/src/libnetdata/libjudy/vendored/JudyL/JudyLDel.c:1247:13: warning: writing 1 byte into a region of size 0 [-Wstringop-overflow=]
2025-04-15T08:02:32.6620114Z #11 103.1  1247 |             JU_LEAF(3,
2025-04-15T08:02:32.6620451Z #11 103.1       |             ^
2025-04-15T08:02:32.6621402Z #11 103.1 /opt/netdata.git/src/libnetdata/libjudy/vendored/JudyCommon/JudyPrivateBranch.h:84:21: note: at offset [8, 15] into destination object 'j_pL_LIndex' of size 7
2025-04-15T08:02:32.6622510Z #11 103.1    84 |             uint8_t j_pL_LIndex[sizeof(Word_t) - 1];    // see above.
2025-04-15T08:02:32.6622963Z #11 103.1       |                     ^
2025-04-15T08:02:32.6623935Z #11 103.1 /opt/netdata.git/src/libnetdata/libjudy/vendored/JudyCommon/JudyPrivateBranch.h:84:21: note: at offset 8 into destination object 'j_pL_LIndex' of size 7
2025-04-15T08:02:32.6625478Z #11 103.1 /opt/netdata.git/src/libnetdata/libjudy/vendored/JudyL/JudyLDel.c:1247:13: warning: writing 1 byte into a region of size 0 [-Wstringop-overflow=]
2025-04-15T08:02:32.6626623Z #11 103.1  1247 |             JU_LEAF(3,
2025-04-15T08:02:32.6626985Z #11 103.1       |             ^
2025-04-15T08:02:32.6627950Z #11 103.1 /opt/netdata.git/src/libnetdata/libjudy/vendored/JudyCommon/JudyPrivateBranch.h:84:21: note: at offset [9, 16] into destination object 'j_pL_LIndex' of size 7
2025-04-15T08:02:32.6629051Z #11 103.1    84 |             uint8_t j_pL_LIndex[sizeof(Word_t) - 1];    // see above.
2025-04-15T08:02:32.6629520Z #11 103.1       |                     ^
2025-04-15T08:02:32.6630483Z #11 103.1 /opt/netdata.git/src/libnetdata/libjudy/vendored/JudyCommon/JudyPrivateBranch.h:84:21: note: at offset 9 into destination object 'j_pL_LIndex' of size 7
2025-04-15T08:02:32.8339303Z #11 103.2 [260/711] Building C object CMakeFiles/log2journal.dir/src/collectors/log2journal/log2journal-replace.c.o
2025-04-15T08:02:32.8343311Z #11 103.3 [261/711] Building C object CMakeFiles/log2journal.dir/src/collectors/log2journal/log2journal-rename.c.o
2025-04-15T08:02:32.9633453Z #11 103.4 [262/711] Building C object CMakeFiles/log2journal.dir/src/collectors/log2journal/log2journal-rewrite.c.o
2025-04-15T08:02:33.1346270Z #11 103.5 [263/711] Building C object CMakeFiles/netdatacli.dir/src/daemon/pipename.c.o
2025-04-15T08:02:33.1526832Z #11 103.6 [264/711] Building C object CMakeFiles/netdatacli.dir/src/cli/cli.c.o
2025-04-15T08:02:36.2367381Z #11 106.7 [265/711] Building CXX object _deps/dlib-build/dlib/CMakeFiles/dlib.dir/sockstreambuf/sockstreambuf_unbuffered.cpp.o
2025-04-15T08:02:37.7122719Z #11 108.2 [266/711] Building CXX object _deps/dlib-build/dlib/CMakeFiles/dlib.dir/server/server_kernel.cpp.o
2025-04-15T08:02:40.8099662Z #11 111.3 [267/711] Building CXX object _deps/dlib-build/dlib/CMakeFiles/dlib.dir/server/server_iostream.cpp.o
2025-04-15T08:02:43.2499192Z #11 113.7 [268/711] Building CXX object _deps/dlib-build/dlib/CMakeFiles/dlib.dir/server/server_http.cpp.o
2025-04-15T08:02:45.5384079Z #11 116.0 [269/711] Building CXX object _deps/dlib-build/dlib/CMakeFiles/dlib.dir/threads/multithreaded_object_extension.cpp.o
2025-04-15T08:02:45.7167429Z #11 116.0 [270/711] Building CXX object _deps/dlib-build/dlib/CMakeFiles/dlib.dir/threads/threads_kernel_1.cpp.o
2025-04-15T08:02:47.2326384Z #11 117.7 [271/711] Building CXX object _deps/dlib-build/dlib/CMakeFiles/dlib.dir/threads/threaded_object_extension.cpp.o
2025-04-15T08:02:47.8268658Z #11 118.3 [272/711] Linking CXX executable netdatacli
2025-04-15T08:02:48.0702643Z #11 118.3 /opt/netdata.git/src/libnetdata/libjudy/vendored/JudyL/JudyLDel.c: In function 'j__udyDelWalk':
2025-04-15T08:02:48.0704615Z #11 118.3 /opt/netdata.git/src/libnetdata/libjudy/vendored/JudyL/JudyLDel.c:1211:13: warning: writing 1 byte into a region of size 0 [-Wstringop-overflow=]
2025-04-15T08:02:48.0737564Z #11 118.3  1211 |             JU_LEAF(1,
2025-04-15T08:02:48.0738325Z #11 118.3       |             ^
2025-04-15T08:02:48.0739663Z #11 118.3 /opt/netdata.git/src/libnetdata/libjudy/vendored/JudyCommon/JudyPrivateBranch.h:84:21: note: at offset 7 into destination object 'j_pL_LIndex' of size 7
2025-04-15T08:02:48.0741142Z #11 118.3    84 |             uint8_t j_pL_LIndex[sizeof(Word_t) - 1];    // see above.
2025-04-15T08:02:48.0741878Z #11 118.3       |                     ^
2025-04-15T08:02:48.0743118Z #11 118.3 /opt/netdata.git/src/libnetdata/libjudy/vendored/JudyL/JudyLDel.c:1247:13: warning: writing 1 byte into a region of size 0 [-Wstringop-overflow=]
2025-04-15T08:02:48.0745543Z #11 118.3  1247 |             JU_LEAF(3,
2025-04-15T08:02:48.0745988Z #11 118.3       |             ^
2025-04-15T08:02:48.0747583Z #11 118.3 /opt/netdata.git/src/libnetdata/libjudy/vendored/JudyCommon/JudyPrivateBranch.h:84:21: note: at offset 7 into destination object 'j_pL_LIndex' of size 7
2025-04-15T08:02:48.0748908Z #11 118.3    84 |             uint8_t j_pL_LIndex[sizeof(Word_t) - 1];    // see above.
2025-04-15T08:02:48.0749488Z #11 118.3       |                     ^
2025-04-15T08:02:48.0750613Z #11 118.3 /opt/netdata.git/src/libnetdata/libjudy/vendored/JudyCommon/JudyPrivateBranch.h:84:21: note: at offset 7 into destination object 'j_pL_LIndex' of size 7
2025-04-15T08:02:48.0752467Z #11 118.3 /opt/netdata.git/src/libnetdata/libjudy/vendored/JudyL/JudyLDel.c:1247:13: warning: writing 1 byte into a region of size 0 [-Wstringop-overflow=]
2025-04-15T08:02:48.0753559Z #11 118.3  1247 |             JU_LEAF(3,
2025-04-15T08:02:48.0753950Z #11 118.3       |             ^
2025-04-15T08:02:48.0755048Z #11 118.3 /opt/netdata.git/src/libnetdata/libjudy/vendored/JudyCommon/JudyPrivateBranch.h:84:21: note: at offset [8, 15] into destination object 'j_pL_LIndex' of size 7
2025-04-15T08:02:48.0757842Z #11 118.3    84 |             uint8_t j_pL_LIndex[sizeof(Word_t) - 1];    // see above.
2025-04-15T08:02:48.0758432Z #11 118.3       |                     ^
2025-04-15T08:02:48.0759610Z #11 118.3 /opt/netdata.git/src/libnetdata/libjudy/vendored/JudyCommon/JudyPrivateBranch.h:84:21: note: at offset 8 into destination object 'j_pL_LIndex' of size 7
2025-04-15T08:02:48.0761439Z #11 118.3 /opt/netdata.git/src/libnetdata/libjudy/vendored/JudyL/JudyLDel.c:1247:13: warning: writing 1 byte into a region of size 0 [-Wstringop-overflow=]
2025-04-15T08:02:48.0762924Z #11 118.3  1247 |             JU_LEAF(3,
2025-04-15T08:02:48.0763354Z #11 118.3       |             ^
2025-04-15T08:02:48.0764481Z #11 118.3 /opt/netdata.git/src/libnetdata/libjudy/vendored/JudyCommon/JudyPrivateBranch.h:84:21: note: at offset [9, 16] into destination object 'j_pL_LIndex' of size 7
2025-04-15T08:02:48.0765784Z #11 118.3    84 |             uint8_t j_pL_LIndex[sizeof(Word_t) - 1];    // see above.
2025-04-15T08:02:48.0766548Z #11 118.3       |                     ^
2025-04-15T08:02:48.0767708Z #11 118.3 /opt/netdata.git/src/libnetdata/libjudy/vendored/JudyCommon/JudyPrivateBranch.h:84:21: note: at offset 9 into destination object 'j_pL_LIndex' of size 7
2025-04-15T08:02:48.0769228Z #11 118.4 [273/711] Building CXX object _deps/dlib-build/dlib/CMakeFiles/dlib.dir/threads/threads_kernel_2.cpp.o
2025-04-15T08:02:48.5353908Z #11 119.0 [274/711] Linking CXX executable log2journal
2025-04-15T08:02:48.6872519Z #11 119.0 /opt/netdata.git/src/libnetdata/libjudy/vendored/JudyL/JudyLDel.c: In function 'j__udyDelWalk':
2025-04-15T08:02:48.6873872Z #11 119.0 /opt/netdata.git/src/libnetdata/libjudy/vendored/JudyL/JudyLDel.c:1211:13: warning: writing 1 byte into a region of size 0 [-Wstringop-overflow=]
2025-04-15T08:02:48.6874826Z #11 119.0  1211 |             JU_LEAF(1,
2025-04-15T08:02:48.6875172Z #11 119.0       |             ^
2025-04-15T08:02:48.6876324Z #11 119.0 /opt/netdata.git/src/libnetdata/libjudy/vendored/JudyCommon/JudyPrivateBranch.h:84:21: note: at offset 7 into destination object 'j_pL_LIndex' of size 7
2025-04-15T08:02:48.6877880Z #11 119.0    84 |             uint8_t j_pL_LIndex[sizeof(Word_t) - 1];    // see above.
2025-04-15T08:02:48.6878395Z #11 119.0       |                     ^
2025-04-15T08:02:48.6879329Z #11 119.0 /opt/netdata.git/src/libnetdata/libjudy/vendored/JudyL/JudyLDel.c:1247:13: warning: writing 1 byte into a region of size 0 [-Wstringop-overflow=]
2025-04-15T08:02:48.6880286Z #11 119.0  1247 |             JU_LEAF(3,
2025-04-15T08:02:48.6880643Z #11 119.0       |             ^
2025-04-15T08:02:48.6881575Z #11 119.0 /opt/netdata.git/src/libnetdata/libjudy/vendored/JudyCommon/JudyPrivateBranch.h:84:21: note: at offset 7 into destination object 'j_pL_LIndex' of size 7
2025-04-15T08:02:48.6882669Z #11 119.0    84 |             uint8_t j_pL_LIndex[sizeof(Word_t) - 1];    // see above.
2025-04-15T08:02:48.6883133Z #11 119.0       |                     ^
2025-04-15T08:02:48.6884087Z #11 119.0 /opt/netdata.git/src/libnetdata/libjudy/vendored/JudyCommon/JudyPrivateBranch.h:84:21: note: at offset 7 into destination object 'j_pL_LIndex' of size 7
2025-04-15T08:02:48.6885598Z #11 119.0 /opt/netdata.git/src/libnetdata/libjudy/vendored/JudyL/JudyLDel.c:1247:13: warning: writing 1 byte into a region of size 0 [-Wstringop-overflow=]
2025-04-15T08:02:48.6886719Z #11 119.0  1247 |             JU_LEAF(3,
2025-04-15T08:02:48.6887063Z #11 119.0       |             ^
2025-04-15T08:02:48.6888132Z #11 119.0 /opt/netdata.git/src/libnetdata/libjudy/vendored/JudyCommon/JudyPrivateBranch.h:84:21: note: at offset [8, 15] into destination object 'j_pL_LIndex' of size 7
2025-04-15T08:02:48.6889468Z #11 119.0    84 |             uint8_t j_pL_LIndex[sizeof(Word_t) - 1];    // see above.
2025-04-15T08:02:48.6890022Z #11 119.0       |                     ^
2025-04-15T08:02:48.6891118Z #11 119.0 /opt/netdata.git/src/libnetdata/libjudy/vendored/JudyCommon/JudyPrivateBranch.h:84:21: note: at offset 8 into destination object 'j_pL_LIndex' of size 7
2025-04-15T08:02:48.6892808Z #11 119.0 /opt/netdata.git/src/libnetdata/libjudy/vendored/JudyL/JudyLDel.c:1247:13: warning: writing 1 byte into a region of size 0 [-Wstringop-overflow=]
2025-04-15T08:02:48.6893821Z #11 119.0  1247 |             JU_LEAF(3,
2025-04-15T08:02:48.6894202Z #11 119.0       |             ^
2025-04-15T08:02:48.6895260Z #11 119.0 /opt/netdata.git/src/libnetdata/libjudy/vendored/JudyCommon/JudyPrivateBranch.h:84:21: note: at offset [9, 16] into destination object 'j_pL_LIndex' of size 7
2025-04-15T08:02:48.6909838Z #11 119.0    84 |             uint8_t j_pL_LIndex[sizeof(Word_t) - 1];    // see above.
2025-04-15T08:02:48.6910440Z #11 119.0       |                     ^
2025-04-15T08:02:48.6911598Z #11 119.0 /opt/netdata.git/src/libnetdata/libjudy/vendored/JudyCommon/JudyPrivateBranch.h:84:21: note: at offset 9 into destination object 'j_pL_LIndex' of size 7
2025-04-15T08:02:49.0034456Z #11 119.5 [275/711] Building CXX object _deps/dlib-build/dlib/CMakeFiles/dlib.dir/threads/threads_kernel_shared.cpp.o
2025-04-15T08:02:49.1693531Z #11 119.5 [276/711] Building CXX object _deps/dlib-build/dlib/CMakeFiles/dlib.dir/stack_trace.cpp.o
2025-04-15T08:02:49.6115269Z #11 120.1 [277/711] Building CXX object _deps/dlib-build/dlib/CMakeFiles/dlib.dir/threads/thread_pool_extension.cpp.o
2025-04-15T08:02:49.7848979Z #11 120.1 [278/711] Building CXX object _deps/dlib-build/dlib/CMakeFiles/dlib.dir/threads/async.cpp.o
2025-04-15T08:02:50.4020171Z #11 120.9 [279/711] Building CXX object _deps/dlib-build/dlib/CMakeFiles/dlib.dir/timer/timer.cpp.o
2025-04-15T08:02:52.8237481Z #11 123.3 [280/711] Building CXX object _deps/dlib-build/dlib/CMakeFiles/dlib.dir/data_io/mnist.cpp.o
2025-04-15T08:02:53.9059798Z #11 124.4 [281/711] Building CXX object _deps/dlib-build/dlib/CMakeFiles/dlib.dir/data_io/image_dataset_metadata.cpp.o
2025-04-15T08:02:54.9290453Z #11 125.4 [282/711] Building CXX object _deps/dlib-build/dlib/CMakeFiles/dlib.dir/cuda/tensor_tools.cpp.o
2025-04-15T08:02:55.1649137Z #11 125.6 [283/711] Building CXX object _deps/dlib-build/dlib/CMakeFiles/dlib.dir/data_io/cifar.cpp.o
2025-04-15T08:02:55.8945315Z #11 126.4 [284/711] Building CXX object _deps/dlib-build/dlib/CMakeFiles/dlib.dir/cuda/cpu_dlib.cpp.o
2025-04-15T08:02:56.1381668Z #11 126.5 [285/711] [BISON][LibsensorsParser] Building parser with bison 3.8.2
2025-04-15T08:02:56.1397396Z #11 126.5 [286/711] [FLEX][LibsensorsLexer] Building scanner with flex 2.6.4
2025-04-15T08:02:56.4379442Z #11 126.9 [287/711] Building C object CMakeFiles/debugfs.plugin.dir/src/collectors/debugfs.plugin/debugfs_plugin.c.o
2025-04-15T08:02:56.8916643Z #11 127.4 [288/711] Building C object CMakeFiles/debugfs.plugin.dir/src/collectors/debugfs.plugin/module-numa-extfrag.c.o
2025-04-15T08:02:57.3031236Z #11 127.8 [289/711] Building C object CMakeFiles/debugfs.plugin.dir/src/collectors/debugfs.plugin/module-zswap.c.o
2025-04-15T08:02:57.7858121Z #11 128.3 [290/711] Building C object CMakeFiles/debugfs.plugin.dir/src/collectors/debugfs.plugin/module-devices-powercap.c.o
2025-04-15T08:02:58.3107873Z #11 128.8 [291/711] Building C object CMakeFiles/debugfs.plugin.dir/src/collectors/debugfs.plugin/module-libsensors.c.o
2025-04-15T08:02:58.4285350Z #11 128.9 [292/711] Building C object src/collectors/debugfs.plugin/libsensors/CMakeFiles/vendored_libsensors.dir/vendored/lib/access.c.o
2025-04-15T08:02:58.5330290Z #11 129.0 [293/711] Building C object src/collectors/debugfs.plugin/libsensors/CMakeFiles/vendored_libsensors.dir/vendored/lib/data.c.o
2025-04-15T08:02:58.5332341Z #11 129.0 /opt/netdata.git/src/collectors/debugfs.plugin/libsensors/vendored/lib/data.c:23: warning: "_GNU_SOURCE" redefined
2025-04-15T08:02:58.5340596Z #11 129.0    23 | #define _GNU_SOURCE
2025-04-15T08:02:58.5341024Z #11 129.0       | 
2025-04-15T08:02:58.5341568Z #11 129.0 <command-line>: note: this is the location of the previous definition
2025-04-15T08:02:58.5342720Z #11 129.0 [294/711] Building C object src/collectors/debugfs.plugin/libsensors/CMakeFiles/vendored_libsensors.dir/vendored/lib/error.c.o
2025-04-15T08:02:58.6723083Z #11 129.1 [295/711] Building C object src/collectors/debugfs.plugin/libsensors/CMakeFiles/vendored_libsensors.dir/vendored/lib/general.c.o
2025-04-15T08:02:58.6728232Z #11 129.2 [296/711] Building C object src/collectors/debugfs.plugin/libsensors/CMakeFiles/vendored_libsensors.dir/vendored/lib/init.c.o
2025-04-15T08:02:58.7949433Z #11 129.3 [297/711] Building C object src/collectors/debugfs.plugin/libsensors/CMakeFiles/vendored_libsensors.dir/vendored/lib/sysfs.c.o
2025-04-15T08:02:58.9944628Z #11 129.3 /opt/netdata.git/src/collectors/debugfs.plugin/libsensors/vendored/lib/sysfs.c:23: warning: "_GNU_SOURCE" redefined
2025-04-15T08:02:58.9946376Z #11 129.3    23 | #define _GNU_SOURCE
2025-04-15T08:02:58.9947260Z #11 129.3       | 
2025-04-15T08:02:58.9949027Z #11 129.3 <command-line>: note: this is the location of the previous definition
2025-04-15T08:02:58.9950164Z #11 129.4 [298/711] Building C object src/collectors/debugfs.plugin/libsensors/CMakeFiles/vendored_libsensors.dir/conf-parse.c.o
2025-04-15T08:02:58.9951561Z #11 129.5 [299/711] Building C object src/collectors/debugfs.plugin/libsensors/CMakeFiles/vendored_libsensors.dir/conf-lex.c.o
2025-04-15T08:02:59.1750922Z #11 129.5 [300/711] Linking C static library src/collectors/debugfs.plugin/libsensors/libvendored_libsensors.a
2025-04-15T08:03:01.5003835Z #11 132.0 [301/711] Building CXX object _deps/dlib-build/dlib/CMakeFiles/dlib.dir/filtering/kalman_filter.cpp.o
2025-04-15T08:03:03.6734970Z #11 134.2 [302/711] Building CXX object _deps/dlib-build/dlib/CMakeFiles/dlib.dir/global_optimization/global_function_search.cpp.o
2025-04-15T08:03:06.1194596Z #11 136.6 [303/711] Building CXX object _deps/dlib-build/dlib/CMakeFiles/dlib.dir/svm/auto.cpp.o
2025-04-15T08:03:06.7915467Z #11 137.3 [304/711] Linking CXX static library _deps/dlib-build/dlib/libdlib.a
2025-04-15T08:03:06.8935414Z #11 137.3 [305/711] Generating C++ protocol buffer files from src/aclk/aclk-schemas/proto/aclk/v1/lib.proto
2025-04-15T08:03:06.8937170Z #11 137.3 [306/711] Generating C++ protocol buffer files from src/aclk/aclk-schemas/proto/agent/v1/disconnect.proto
2025-04-15T08:03:06.8939371Z #11 137.3 [307/711] Generating C++ protocol buffer files from src/aclk/aclk-schemas/proto/agent/v1/connection.proto
2025-04-15T08:03:06.8940940Z #11 137.4 [308/711] Generating C++ protocol buffer files from src/aclk/aclk-schemas/proto/alarm/v1/config.proto
2025-04-15T08:03:06.8942392Z #11 137.4 [309/711] Generating C++ protocol buffer files from src/aclk/aclk-schemas/proto/nodeinstance/connection/v1/connection.proto
2025-04-15T08:03:06.9979195Z #11 137.4 [310/711] Generating C++ protocol buffer files from src/aclk/aclk-schemas/proto/nodeinstance/create/v1/creation.proto
2025-04-15T08:03:06.9980768Z #11 137.4 [311/711] Generating C++ protocol buffer files from src/aclk/aclk-schemas/proto/alarm/v1/stream.proto
2025-04-15T08:03:06.9984900Z #11 137.4 [312/711] Generating C++ protocol buffer files from src/aclk/aclk-schemas/proto/context/v1/context.proto
2025-04-15T08:03:06.9986241Z #11 137.4 [313/711] Generating C++ protocol buffer files from src/aclk/aclk-schemas/proto/context/v1/stream.proto
2025-04-15T08:03:06.9987436Z #11 137.4 [314/711] Generating C++ protocol buffer files from src/aclk/aclk-schemas/proto/nodeinstance/info/v1/info.proto
2025-04-15T08:03:06.9988575Z #11 137.5 [315/711] Generating C++ protocol buffer files from src/aclk/aclk-schemas/proto/agent/v1/cmds.proto
2025-04-15T08:03:06.9989681Z #11 137.5 [316/711] Generating C++ protocol buffer files from src/exporting/prometheus/remote_write/remote_write.proto
2025-04-15T08:03:07.4744418Z #11 137.9 [317/711] Building C object CMakeFiles/netdata.dir/src/daemon/h2o-common.c.o
2025-04-15T08:03:07.6423525Z #11 138.1 [318/711] Building C object CMakeFiles/netdata.dir/src/daemon/daemon.c.o
2025-04-15T08:03:07.8245962Z #11 138.3 [319/711] Building C object CMakeFiles/netdata.dir/src/daemon/libuv_workers.c.o
2025-04-15T08:03:08.0321718Z #11 138.5 [320/711] Building C object CMakeFiles/netdata.dir/src/daemon/buildinfo.c.o
2025-04-15T08:03:08.4677377Z #11 139.0 [321/711] Building C object CMakeFiles/netdata.dir/src/daemon/pulse/pulse.c.o
2025-04-15T08:03:08.7297578Z #11 139.2 [322/711] Building C object CMakeFiles/netdata.dir/src/daemon/main.c.o
2025-04-15T08:03:08.8348827Z #11 139.3 [323/711] Building C object CMakeFiles/netdata.dir/src/daemon/analytics.c.o
2025-04-15T08:03:09.0691955Z #11 139.4 [324/711] Building C object CMakeFiles/netdata.dir/src/daemon/environment.c.o
2025-04-15T08:03:09.1759609Z #11 139.7 [325/711] Building C object CMakeFiles/netdata.dir/src/daemon/win_system-info.c.o
2025-04-15T08:03:09.3585526Z #11 139.8 [326/711] Building C object CMakeFiles/netdata.dir/src/daemon/signal-handler.c.o
2025-04-15T08:03:09.5194552Z #11 140.0 [327/711] Building C object CMakeFiles/netdata.dir/src/daemon/service.c.o
2025-04-15T08:03:09.6843987Z #11 140.0 [328/711] Building C object CMakeFiles/netdata.dir/src/daemon/daemon-shutdown-watcher.c.o
2025-04-15T08:03:09.7211146Z #11 140.2 [329/711] Linking CXX executable debugfs.plugin
2025-04-15T08:03:09.8572335Z #11 140.2 /opt/netdata.git/src/libnetdata/libjudy/vendored/JudyL/JudyLDel.c: In function 'j__udyDelWalk':
2025-04-15T08:03:09.8575983Z #11 140.2 /opt/netdata.git/src/libnetdata/libjudy/vendored/JudyL/JudyLDel.c:1211:13: warning: writing 1 byte into a region of size 0 [-Wstringop-overflow=]
2025-04-15T08:03:09.8577193Z #11 140.2  1211 |             JU_LEAF(1,
2025-04-15T08:03:09.8577569Z #11 140.2       |             ^
2025-04-15T08:03:09.8578614Z #11 140.2 /opt/netdata.git/src/libnetdata/libjudy/vendored/JudyCommon/JudyPrivateBranch.h:84:21: note: at offset 7 into destination object 'j_pL_LIndex' of size 7
2025-04-15T08:03:09.8579881Z #11 140.2    84 |             uint8_t j_pL_LIndex[sizeof(Word_t) - 1];    // see above.
2025-04-15T08:03:09.8580418Z #11 140.2       |                     ^
2025-04-15T08:03:09.8581473Z #11 140.2 /opt/netdata.git/src/libnetdata/libjudy/vendored/JudyL/JudyLDel.c:1247:13: warning: writing 1 byte into a region of size 0 [-Wstringop-overflow=]
2025-04-15T08:03:09.8582556Z #11 140.2  1247 |             JU_LEAF(3,
2025-04-15T08:03:09.8583046Z #11 140.2       |             ^
2025-04-15T08:03:09.8584417Z #11 140.2 /opt/netdata.git/src/libnetdata/libjudy/vendored/JudyCommon/JudyPrivateBranch.h:84:21: note: at offset 7 into destination object 'j_pL_LIndex' of size 7
2025-04-15T08:03:09.8585678Z #11 140.2    84 |             uint8_t j_pL_LIndex[sizeof(Word_t) - 1];    // see above.
2025-04-15T08:03:09.8591287Z #11 140.2       |                     ^
2025-04-15T08:03:09.8592758Z #11 140.2 /opt/netdata.git/src/libnetdata/libjudy/vendored/JudyCommon/JudyPrivateBranch.h:84:21: note: at offset 7 into destination object 'j_pL_LIndex' of size 7
2025-04-15T08:03:09.8594550Z #11 140.2 /opt/netdata.git/src/libnetdata/libjudy/vendored/JudyL/JudyLDel.c:1247:13: warning: writing 1 byte into a region of size 0 [-Wstringop-overflow=]
2025-04-15T08:03:09.8595646Z #11 140.2  1247 |             JU_LEAF(3,
2025-04-15T08:03:09.8596255Z #11 140.2       |             ^
2025-04-15T08:03:09.8597365Z #11 140.2 /opt/netdata.git/src/libnetdata/libjudy/vendored/JudyCommon/JudyPrivateBranch.h:84:21: note: at offset [8, 15] into destination object 'j_pL_LIndex' of size 7
2025-04-15T08:03:09.8598658Z #11 140.2    84 |             uint8_t j_pL_LIndex[sizeof(Word_t) - 1];    // see above.
2025-04-15T08:03:09.8599216Z #11 140.2       |                     ^
2025-04-15T08:03:09.8600333Z #11 140.2 /opt/netdata.git/src/libnetdata/libjudy/vendored/JudyCommon/JudyPrivateBranch.h:84:21: note: at offset 8 into destination object 'j_pL_LIndex' of size 7
2025-04-15T08:03:09.8602142Z #11 140.2 /opt/netdata.git/src/libnetdata/libjudy/vendored/JudyL/JudyLDel.c:1247:13: warning: writing 1 byte into a region of size 0 [-Wstringop-overflow=]
2025-04-15T08:03:09.8603252Z #11 140.2  1247 |             JU_LEAF(3,
2025-04-15T08:03:09.8603664Z #11 140.2       |             ^
2025-04-15T08:03:09.8604762Z #11 140.2 /opt/netdata.git/src/libnetdata/libjudy/vendored/JudyCommon/JudyPrivateBranch.h:84:21: note: at offset [9, 16] into destination object 'j_pL_LIndex' of size 7
2025-04-15T08:03:09.8606038Z #11 140.2    84 |             uint8_t j_pL_LIndex[sizeof(Word_t) - 1];    // see above.
2025-04-15T08:03:09.8606805Z #11 140.2       |                     ^
2025-04-15T08:03:09.8607934Z #11 140.2 /opt/netdata.git/src/libnetdata/libjudy/vendored/JudyCommon/JudyPrivateBranch.h:84:21: note: at offset 9 into destination object 'j_pL_LIndex' of size 7
2025-04-15T08:03:09.8609303Z #11 140.3 [330/711] Building C object CMakeFiles/netdata.dir/src/daemon/static_threads.c.o
2025-04-15T08:03:09.8610529Z #11 140.3 [331/711] Building C object CMakeFiles/netdata.dir/src/daemon/pipename.c.o
2025-04-15T08:03:10.0017303Z #11 140.5 [332/711] Building C object CMakeFiles/netdata.dir/src/daemon/commands.c.o
2025-04-15T08:03:10.2089089Z #11 140.7 [333/711] Building C object CMakeFiles/netdata.dir/src/daemon/dyncfg/dyncfg.c.o
2025-04-15T08:03:10.4592217Z #11 140.8 [334/711] Building C object CMakeFiles/netdata.dir/src/daemon/unit_test.c.o
2025-04-15T08:03:10.4593197Z #11 140.8 [335/711] Building C object CMakeFiles/netdata.dir/src/daemon/dyncfg/dyncfg-files.c.o
2025-04-15T08:03:10.4847841Z #11 141.0 [336/711] Building C object CMakeFiles/netdata.dir/src/daemon/dyncfg/dyncfg-unittest.c.o
2025-04-15T08:03:10.5950949Z #11 141.1 [337/711] Building C object CMakeFiles/netdata.dir/src/daemon/dyncfg/dyncfg-inline.c.o
2025-04-15T08:03:10.7376832Z #11 141.2 [338/711] Building C object CMakeFiles/netdata.dir/src/daemon/dyncfg/dyncfg-echo.c.o
2025-04-15T08:03:10.7378545Z #11 141.2 [339/711] Building C object CMakeFiles/netdata.dir/src/daemon/dyncfg/dyncfg-intercept.c.o
2025-04-15T08:03:10.9878974Z #11 141.5 [340/711] Building C object CMakeFiles/netdata.dir/src/daemon/dyncfg/dyncfg-tree.c.o
2025-04-15T08:03:11.1218160Z #11 141.5 [341/711] Building C object CMakeFiles/netdata.dir/src/daemon/pulse/pulse-http-api.c.o
2025-04-15T08:03:11.1219388Z #11 141.5 [342/711] Building C object CMakeFiles/netdata.dir/src/daemon/pulse/pulse-queries.c.o
2025-04-15T08:03:11.1220450Z #11 141.6 [343/711] Building C object CMakeFiles/netdata.dir/src/daemon/pulse/pulse-ingestion.c.o
2025-04-15T08:03:11.3481069Z #11 141.8 [344/711] Building C object CMakeFiles/netdata.dir/src/daemon/pulse/pulse-ml.c.o
2025-04-15T08:03:11.4589296Z #11 141.8 [345/711] Building C object CMakeFiles/netdata.dir/src/daemon/pulse/pulse-gorilla.c.o
2025-04-15T08:03:11.4591991Z #11 141.9 [346/711] Building C object CMakeFiles/netdata.dir/src/daemon/pulse/pulse-daemon.c.o
2025-04-15T08:03:11.6681024Z #11 142.0 [347/711] Building C object CMakeFiles/netdata.dir/src/daemon/pulse/pulse-daemon-memory.c.o
2025-04-15T08:03:11.7409679Z #11 142.2 [348/711] Building C object CMakeFiles/netdata.dir/src/daemon/pulse/pulse-sqlite3.c.o
2025-04-15T08:03:11.8412388Z #11 142.3 [349/711] Building C object CMakeFiles/netdata.dir/src/daemon/pulse/pulse-string.c.o
2025-04-15T08:03:12.0577619Z #11 142.4 [350/711] Building C object CMakeFiles/netdata.dir/src/daemon/pulse/pulse-heartbeat.c.o
2025-04-15T08:03:12.0578637Z #11 142.4 [351/711] Building C object CMakeFiles/netdata.dir/src/daemon/pulse/pulse-db-dbengine.c.o
2025-04-15T08:03:12.1273143Z #11 142.6 [352/711] Building C object CMakeFiles/netdata.dir/src/daemon/pulse/pulse-dictionary.c.o
2025-04-15T08:03:12.2647265Z #11 142.7 [353/711] Building C object CMakeFiles/netdata.dir/src/daemon/pulse/pulse-trace-allocations.c.o
2025-04-15T08:03:12.4739474Z #11 142.8 [354/711] Building C object CMakeFiles/netdata.dir/src/daemon/pulse/pulse-aral.c.o
2025-04-15T08:03:12.4747359Z #11 142.8 [355/711] Building C object CMakeFiles/netdata.dir/src/daemon/pulse/pulse-workers.c.o
2025-04-15T08:03:12.5446975Z #11 143.0 [356/711] Building C object CMakeFiles/netdata.dir/src/daemon/config/netdata-conf-db.c.o
2025-04-15T08:03:12.6626536Z #11 143.1 [357/711] Building C object CMakeFiles/netdata.dir/src/daemon/config/netdata-conf-backwards-compatibility.c.o
2025-04-15T08:03:12.8452523Z #11 143.2 [358/711] Building C object CMakeFiles/netdata.dir/src/daemon/config/netdata-conf-web.c.o
2025-04-15T08:03:12.8453706Z #11 143.2 [359/711] Building C object CMakeFiles/netdata.dir/src/daemon/config/netdata-conf-directories.c.o
2025-04-15T08:03:12.9408801Z #11 143.4 [360/711] Building C object CMakeFiles/netdata.dir/src/daemon/config/netdata-conf-logs.c.o
2025-04-15T08:03:13.0584869Z #11 143.5 [361/711] Building C object CMakeFiles/netdata.dir/src/daemon/config/netdata-conf-global.c.o
2025-04-15T08:03:13.2636254Z #11 143.5 [362/711] Building C object CMakeFiles/netdata.dir/src/daemon/config/netdata-conf.c.o
2025-04-15T08:03:13.2637806Z #11 143.6 [363/711] Building C object CMakeFiles/netdata.dir/src/daemon/daemon-shutdown.c.o
2025-04-15T08:03:13.3171413Z #11 143.8 [364/711] Building C object CMakeFiles/netdata.dir/src/daemon/daemon-service.c.o
2025-04-15T08:03:13.4299798Z #11 143.9 [365/711] Building C object CMakeFiles/netdata.dir/src/daemon/pulse/pulse-db-rrd.c.o
2025-04-15T08:03:13.4301490Z #11 143.9 [366/711] Building C object CMakeFiles/netdata.dir/src/daemon/config/netdata-conf-cloud.c.o
2025-04-15T08:03:13.6459516Z #11 144.0 [367/711] Building C object CMakeFiles/netdata.dir/src/daemon/config/netdata-conf-profile.c.o
2025-04-15T08:03:13.7417653Z #11 144.2 [368/711] Building C object CMakeFiles/netdata.dir/src/daemon/pulse/pulse-daemon-memory-system.c.o
2025-04-15T08:03:13.9331656Z #11 144.3 [369/711] Building C object CMakeFiles/netdata.dir/src/daemon/pulse/pulse-network.c.o
2025-04-15T08:03:13.9337317Z #11 144.3 [370/711] Building C object CMakeFiles/netdata.dir/src/daemon/pulse/pulse-db-dbengine-retention.c.o
2025-04-15T08:03:13.9338445Z #11 144.4 [371/711] Building C object CMakeFiles/netdata.dir/src/daemon/pulse/pulse-parents.c.o
2025-04-15T08:03:14.1794698Z #11 144.7 [372/711] Building C object CMakeFiles/netdata.dir/src/daemon/config/netdata-conf-ssl.c.o
2025-04-15T08:03:14.2960558Z #11 144.7 [373/711] Building C object CMakeFiles/netdata.dir/src/daemon/machine-guid.c.o
2025-04-15T08:03:14.2962596Z #11 144.8 [374/711] Building C object CMakeFiles/netdata.dir/src/daemon/status-file-dedup.c.o
2025-04-15T08:03:14.5975342Z #11 145.1 [375/711] Building C object CMakeFiles/netdata.dir/src/daemon/status-file-io.c.o
2025-04-15T08:03:14.8288760Z #11 145.1 [376/711] Building C object CMakeFiles/netdata.dir/src/daemon/status-file-dmi.c.o
2025-04-15T08:03:14.8291782Z #11 145.1 [377/711] Building C object CMakeFiles/netdata.dir/src/daemon/status-file.c.o
2025-04-15T08:03:14.8294072Z #11 145.2 [378/711] Building C object CMakeFiles/netdata.dir/src/daemon/status-file-product.c.o
2025-04-15T08:03:14.9099244Z #11 145.4 [379/711] Building C object CMakeFiles/netdata.dir/src/daemon/protected-access.c.o
2025-04-15T08:03:15.0525074Z #11 145.4 [380/711] Building C object CMakeFiles/netdata.dir/src/daemon/daemon-systemd-watcher.c.o
2025-04-15T08:03:15.0528948Z #11 145.5 [381/711] Building C object CMakeFiles/netdata.dir/src/web/api/web_api_v1.c.o
2025-04-15T08:03:15.2200331Z #11 145.6 [382/711] Building C object CMakeFiles/netdata.dir/src/web/api/web_api.c.o
2025-04-15T08:03:15.2908622Z #11 145.8 [383/711] Building C object CMakeFiles/netdata.dir/src/web/api/web_api_v2.c.o
2025-04-15T08:03:15.4719448Z #11 145.8 [384/711] Building C object CMakeFiles/netdata.dir/src/web/api/web_api_v3.c.o
2025-04-15T08:03:15.4853684Z #11 146.0 [385/711] Building C object CMakeFiles/netdata.dir/src/web/api/http_header.c.o
2025-04-15T08:03:15.6277398Z #11 146.1 [386/711] Building C object CMakeFiles/netdata.dir/src/web/api/http_auth.c.o
2025-04-15T08:03:15.8053931Z #11 146.2 [387/711] Building C object CMakeFiles/netdata.dir/src/web/api/maps/rrdr_options.c.o
2025-04-15T08:03:15.8055010Z #11 146.2 [388/711] Building C object CMakeFiles/netdata.dir/src/web/api/maps/contexts_options.c.o
2025-04-15T08:03:15.8056032Z #11 146.3 [389/711] Building C object CMakeFiles/netdata.dir/src/web/api/maps/datasource_formats.c.o
2025-04-15T08:03:16.0065853Z #11 146.5 [390/711] Building C object CMakeFiles/netdata.dir/src/web/api/maps/contexts_alert_statuses.c.o
2025-04-15T08:03:16.1124819Z #11 146.6 [391/711] Building C object CMakeFiles/netdata.dir/src/web/api/v1/api_v1_allmetrics.c.o
2025-04-15T08:03:16.2144845Z #11 146.7 [392/711] Building C object CMakeFiles/netdata.dir/src/web/api/v1/api_v1_badge/web_buffer_svg.c.o
2025-04-15T08:03:16.2146433Z #11 146.7 [393/711] Building C object CMakeFiles/netdata.dir/src/web/api/v1/api_v1_function.c.o
2025-04-15T08:03:16.4149781Z #11 146.9 [394/711] Building C object CMakeFiles/netdata.dir/src/web/api/v1/api_v1_manage.c.o
2025-04-15T08:03:16.5941414Z #11 147.0 [395/711] Building C object CMakeFiles/netdata.dir/src/web/api/v1/api_v1_dbengine.c.o
2025-04-15T08:03:16.5946278Z #11 147.1 [396/711] Building C object CMakeFiles/netdata.dir/src/web/api/v1/api_v1_functions.c.o
2025-04-15T08:03:16.7663345Z #11 147.1 [397/711] Building C object CMakeFiles/netdata.dir/src/web/api/v1/api_v1_config.c.o
2025-04-15T08:03:16.7809433Z #11 147.3 [398/711] Building C object CMakeFiles/netdata.dir/src/web/api/v1/api_v1_weights.c.o
2025-04-15T08:03:17.0209510Z #11 147.5 [399/711] Building C object CMakeFiles/netdata.dir/src/web/api/v1/api_v1_registry.c.o
2025-04-15T08:03:17.1990432Z #11 147.5 [400/711] Building C object CMakeFiles/netdata.dir/src/web/api/v1/api_v1_info.c.o
2025-04-15T08:03:17.1991712Z #11 147.6 [401/711] Building C object CMakeFiles/netdata.dir/src/web/api/v1/api_v1_data.c.o
2025-04-15T08:03:17.1994655Z #11 147.7 [402/711] Building C object CMakeFiles/netdata.dir/src/web/api/v1/api_v1_contexts.c.o
2025-04-15T08:03:17.3977911Z #11 147.9 [403/711] Building C object CMakeFiles/netdata.dir/src/web/api/v1/api_v1_ml_info.c.o
2025-04-15T08:03:17.6274699Z #11 147.9 [404/711] Building C object CMakeFiles/netdata.dir/src/web/api/v1/api_v1_aclk.c.o
2025-04-15T08:03:17.6276019Z #11 148.0 [405/711] Building C object CMakeFiles/netdata.dir/src/web/api/v1/api_v1_context.c.o
2025-04-15T08:03:17.6279746Z #11 148.1 [406/711] Building C object CMakeFiles/netdata.dir/src/web/api/v1/api_v1_alarms.c.o
2025-04-15T08:03:17.7830423Z #11 148.3 [407/711] Building C object CMakeFiles/netdata.dir/src/web/api/v2/api_v2_info.c.o
2025-04-15T08:03:18.0004153Z #11 148.3 [408/711] Building C object CMakeFiles/netdata.dir/src/web/api/v1/api_v1_charts.c.o
2025-04-15T08:03:18.0017042Z #11 148.4 [409/711] Building C object CMakeFiles/netdata.dir/src/web/api/v2/api_v2_nodes.c.o
2025-04-15T08:03:18.0020256Z #11 148.5 [410/711] Building C object CMakeFiles/netdata.dir/src/web/api/v2/api_v2_node_instances.c.o
2025-04-15T08:03:18.1559422Z #11 148.6 [411/711] Building C object CMakeFiles/netdata.dir/src/web/api/v2/api_v2_q.c.o
2025-04-15T08:03:18.3746495Z #11 148.7 [412/711] Building C object CMakeFiles/netdata.dir/src/web/api/v2/api_v2_versions.c.o
2025-04-15T08:03:18.3749211Z #11 148.7 [413/711] Building C object CMakeFiles/netdata.dir/src/web/api/v2/api_v2_functions.c.o
2025-04-15T08:03:18.3750689Z #11 148.9 [414/711] Building C object CMakeFiles/netdata.dir/src/web/api/v2/api_v2_alerts.c.o
2025-04-15T08:03:18.5248465Z #11 149.0 [415/711] Building C object CMakeFiles/netdata.dir/src/web/api/v2/api_v2_alert_transitions.c.o
2025-04-15T08:03:18.6677704Z #11 149.2 [416/711] Building C object CMakeFiles/netdata.dir/src/web/api/v2/api_v2_bearer.c.o
2025-04-15T08:03:18.7801028Z #11 149.2 [417/711] Building C object CMakeFiles/netdata.dir/src/web/api/v2/api_v2_data.c.o
2025-04-15T08:03:18.7802383Z #11 149.3 [418/711] Building C object CMakeFiles/netdata.dir/src/web/api/v2/api_v2_progress.c.o
2025-04-15T08:03:18.9480817Z #11 149.4 [419/711] Building C object CMakeFiles/netdata.dir/src/web/api/v2/api_v2_weights.c.o
2025-04-15T08:03:19.0778817Z #11 149.6 [420/711] Building C object CMakeFiles/netdata.dir/src/web/api/v2/api_v2_alert_config.c.o
2025-04-15T08:03:19.2444096Z #11 149.6 [421/711] Building C object CMakeFiles/netdata.dir/src/web/api/v2/api_v2_contexts.c.o
2025-04-15T08:03:19.2446842Z #11 149.7 [422/711] Building C object CMakeFiles/netdata.dir/src/web/api/v2/api_v2_claim.c.o
2025-04-15T08:03:19.4773539Z #11 149.8 [423/711] Building C object CMakeFiles/netdata.dir/src/web/api/v2/api_v2_webrtc.c.o
2025-04-15T08:03:19.4906497Z #11 150.0 [424/711] Building C object CMakeFiles/netdata.dir/src/web/api/functions/functions.c.o
2025-04-15T08:03:19.6245260Z #11 150.0 [425/711] Building C object CMakeFiles/netdata.dir/src/web/api/v3/api_v3_settings.c.o
2025-04-15T08:03:19.6247892Z #11 150.1 [426/711] Building C object CMakeFiles/netdata.dir/src/web/api/functions/function-progress.c.o
2025-04-15T08:03:19.8759115Z #11 150.4 [427/711] Building C object CMakeFiles/netdata.dir/src/web/api/queries/rrdr.c.o
2025-04-15T08:03:19.9959738Z #11 150.4 [428/711] Building C object CMakeFiles/netdata.dir/src/web/api/functions/function-streaming.c.o
2025-04-15T08:03:19.9962774Z #11 150.5 [429/711] Building C object CMakeFiles/netdata.dir/src/web/api/queries/average/average.c.o
2025-04-15T08:03:20.2558608Z #11 150.7 [430/711] Building C object CMakeFiles/netdata.dir/src/web/api/queries/countif/countif.c.o
2025-04-15T08:03:20.3622344Z #11 150.8 [431/711] Building C object CMakeFiles/netdata.dir/src/web/api/queries/incremental_sum/incremental_sum.c.o
2025-04-15T08:03:20.3623468Z #11 150.8 [432/711] Building C object CMakeFiles/netdata.dir/src/web/api/queries/max/max.c.o
2025-04-15T08:03:20.5521707Z #11 150.8 [433/711] Building C object CMakeFiles/netdata.dir/src/web/api/queries/query.c.o
2025-04-15T08:03:20.6159662Z #11 151.1 [434/711] Building C object CMakeFiles/netdata.dir/src/web/api/queries/min/min.c.o
2025-04-15T08:03:20.7213897Z #11 151.1 [435/711] Building C object CMakeFiles/netdata.dir/src/web/api/queries/sum/sum.c.o
2025-04-15T08:03:20.7227279Z #11 151.2 [436/711] Building C object CMakeFiles/netdata.dir/src/web/api/queries/median/median.c.o
2025-04-15T08:03:20.8761383Z #11 151.2 [437/711] Building C object CMakeFiles/netdata.dir/src/web/api/queries/percentile/percentile.c.o
2025-04-15T08:03:20.9823243Z #11 151.5 [438/711] Building C object CMakeFiles/netdata.dir/src/web/api/queries/stddev/stddev.c.o
2025-04-15T08:03:21.2295651Z #11 151.5 [439/711] Building C object CMakeFiles/netdata.dir/src/web/api/queries/ses/ses.c.o
2025-04-15T08:03:21.2298467Z #11 151.6 [440/711] Building C object CMakeFiles/netdata.dir/src/web/api/queries/des/des.c.o
2025-04-15T08:03:21.2299833Z #11 151.6 [441/711] Building C object CMakeFiles/netdata.dir/src/web/api/queries/trimmed_mean/trimmed_mean.c.o
2025-04-15T08:03:21.4278977Z #11 151.9 [442/711] Building C object CMakeFiles/netdata.dir/src/web/api/formatters/rrd2json.c.o
2025-04-15T08:03:21.5500587Z #11 152.0 [443/711] Building C object CMakeFiles/netdata.dir/src/web/api/formatters/csv/csv.c.o
2025-04-15T08:03:21.7207586Z #11 152.1 [444/711] Building C object CMakeFiles/netdata.dir/src/web/api/formatters/json/json.c.o
2025-04-15T08:03:21.7214918Z #11 152.2 [445/711] Building C object CMakeFiles/netdata.dir/src/web/api/queries/weights.c.o
2025-04-15T08:03:21.8503816Z #11 152.3 [446/711] Building C object CMakeFiles/netdata.dir/src/web/api/formatters/ssv/ssv.c.o
2025-04-15T08:03:22.0928295Z #11 152.4 [447/711] Building C object CMakeFiles/netdata.dir/src/web/api/formatters/value/value.c.o
2025-04-15T08:03:22.1984079Z #11 152.7 [448/711] Building C object CMakeFiles/netdata.dir/src/web/api/formatters/charts2json.c.o
2025-04-15T08:03:22.3030292Z #11 152.8 [449/711] Building C object CMakeFiles/netdata.dir/src/web/api/formatters/json_wrapper.c.o
2025-04-15T08:03:22.4780313Z #11 152.8 [450/711] Building C object CMakeFiles/netdata.dir/src/web/api/formatters/rrdset2json.c.o
2025-04-15T08:03:22.4785070Z #11 152.8 [451/711] Building C object CMakeFiles/netdata.dir/src/web/rtc/webrtc.c.o
2025-04-15T08:03:22.6506495Z #11 153.1 [452/711] Building C object CMakeFiles/netdata.dir/src/web/api/functions/function-bearer_get_token.c.o
2025-04-15T08:03:22.7524023Z #11 153.2 [453/711] Building C object CMakeFiles/netdata.dir/src/web/api/v3/api_v3_me.c.o
2025-04-15T08:03:22.7530233Z #11 153.2 [454/711] Building C object CMakeFiles/netdata.dir/src/exporting/graphite/graphite.c.o
2025-04-15T08:03:22.7531237Z #11 153.2 [455/711] Building C object CMakeFiles/netdata.dir/src/exporting/exporting_engine.c.o
2025-04-15T08:03:23.0642488Z #11 153.5 [456/711] Building C object CMakeFiles/netdata.dir/src/exporting/json/json.c.o
2025-04-15T08:03:23.2452829Z #11 153.6 [457/711] Building C object CMakeFiles/netdata.dir/src/exporting/opentsdb/opentsdb.c.o
2025-04-15T08:03:23.2454213Z #11 153.7 [458/711] Building C object CMakeFiles/netdata.dir/src/exporting/read_config.c.o
2025-04-15T08:03:23.4088025Z #11 153.7 [459/711] Building C object CMakeFiles/netdata.dir/src/exporting/prometheus/prometheus.c.o
2025-04-15T08:03:23.4607021Z #11 153.9 [460/711] Building C object CMakeFiles/netdata.dir/src/exporting/clean_connectors.c.o
2025-04-15T08:03:23.6205168Z #11 154.1 [461/711] Building C object CMakeFiles/netdata.dir/src/exporting/init_connectors.c.o
2025-04-15T08:03:23.8220657Z #11 154.1 [462/711] Building C object CMakeFiles/netdata.dir/src/exporting/check_filters.c.o
2025-04-15T08:03:23.8224091Z #11 154.2 [463/711] Building C object CMakeFiles/netdata.dir/src/exporting/process_data.c.o
2025-04-15T08:03:23.8777178Z #11 154.4 [464/711] Building C object CMakeFiles/netdata.dir/src/exporting/send_data.c.o
2025-04-15T08:03:24.0233712Z #11 154.5 [465/711] Building C object CMakeFiles/netdata.dir/src/exporting/send_internal_metrics.c.o
2025-04-15T08:03:24.1799171Z #11 154.5 [466/711] Building C object CMakeFiles/netdata.dir/src/health/health.c.o
2025-04-15T08:03:24.1926818Z #11 154.7 [467/711] Building C object CMakeFiles/netdata.dir/src/health/health_config.c.o
2025-04-15T08:03:24.3919208Z #11 154.9 [468/711] Building C object CMakeFiles/netdata.dir/src/health/health_json.c.o
2025-04-15T08:03:24.5351678Z #11 154.9 [469/711] Building C object CMakeFiles/netdata.dir/src/health/health_log.c.o
2025-04-15T08:03:24.5354315Z #11 155.0 [470/711] Building C object CMakeFiles/netdata.dir/src/health/health_prototypes.c.o
2025-04-15T08:03:24.6597020Z #11 155.1 [471/711] Building C object CMakeFiles/netdata.dir/src/health/health_silencers.c.o
2025-04-15T08:03:24.8582664Z #11 155.3 [472/711] Building C object CMakeFiles/netdata.dir/src/health/health_event_loop.c.o
2025-04-15T08:03:25.0117999Z #11 155.3 [473/711] Building C object CMakeFiles/netdata.dir/src/health/health_notifications.c.o
2025-04-15T08:03:25.1662573Z #11 155.7 [474/711] Building C object CMakeFiles/netdata.dir/src/health/health_variable.c.o
2025-04-15T08:03:25.2969930Z #11 155.7 [475/711] Building C object CMakeFiles/netdata.dir/src/health/health_dyncfg.c.o
2025-04-15T08:03:25.2971011Z #11 155.8 [476/711] Building C object CMakeFiles/netdata.dir/src/health/rrdcalc.c.o
2025-04-15T08:03:25.4839190Z #11 155.8 [477/711] Building C object CMakeFiles/netdata.dir/src/health/rrdvar.c.o
2025-04-15T08:03:25.5402632Z #11 156.0 [478/711] Building C object CMakeFiles/netdata.dir/src/collectors/idlejitter.plugin/plugin_idlejitter.c.o
2025-04-15T08:03:25.7088521Z #11 156.0 [479/711] Building CXX object CMakeFiles/netdata.dir/src/ml/ml_enums.cc.o
2025-04-15T08:03:28.0705307Z #11 158.6 [480/711] Building CXX object CMakeFiles/netdata.dir/src/ml/ad_charts.cc.o
2025-04-15T08:03:28.2160528Z #11 158.7 [481/711] Building CXX object CMakeFiles/netdata.dir/src/ml/ml_config.cc.o
2025-04-15T08:03:28.4271811Z #11 158.9 [482/711] Building CXX object CMakeFiles/netdata.dir/src/ml/ml_features.cc.o
2025-04-15T08:03:28.8362464Z #11 159.3 [483/711] Building CXX object CMakeFiles/netdata.dir/src/ml/ml.cc.o
2025-04-15T08:03:29.6639829Z #11 160.1 [484/711] Building CXX object CMakeFiles/netdata.dir/src/ml/ml_memory.cc.o
2025-04-15T08:03:30.1371835Z #11 160.6 [485/711] Building C object CMakeFiles/netdata.dir/src/plugins.d/plugins_d.c.o
2025-04-15T08:03:30.5690021Z #11 161.1 [486/711] Building C object CMakeFiles/netdata.dir/src/plugins.d/pluginsd_dyncfg.c.o
2025-04-15T08:03:31.0671285Z #11 161.6 [487/711] Building C object CMakeFiles/netdata.dir/src/plugins.d/pluginsd_functions.c.o
2025-04-15T08:03:31.2243324Z #11 161.7 [488/711] Building CXX object CMakeFiles/netdata.dir/src/ml/ml_queue.cc.o
2025-04-15T08:03:31.4721061Z #11 162.0 [489/711] Building C object CMakeFiles/netdata.dir/src/plugins.d/pluginsd_internals.c.o
2025-04-15T08:03:31.9681466Z #11 162.5 [490/711] Building CXX object CMakeFiles/netdata.dir/src/ml/ml_public.cc.o
2025-04-15T08:03:32.1093227Z #11 162.5 /opt/netdata.git/src/ml/ml_public.cc:325:25: warning: 'always_inline' function might not be inlinable [-Wattributes]
2025-04-15T08:03:32.1098657Z #11 162.5   325 | ALWAYS_INLINE_ONLY void ml_dimension_received_anomaly(RRDDIM *rd, bool is_anomalous) {
2025-04-15T08:03:32.1103276Z #11 162.5       |                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
2025-04-15T08:03:32.1109205Z #11 162.5 /opt/netdata.git/src/ml/ml_public.cc:247:25: warning: 'always_inline' function might not be inlinable [-Wattributes]
2025-04-15T08:03:32.1113408Z #11 162.5   247 | ALWAYS_INLINE_ONLY bool ml_chart_update_begin(RRDSET *rs)
2025-04-15T08:03:32.1114531Z #11 162.5       |                         ^~~~~~~~~~~~~~~~~~~~~
2025-04-15T08:03:32.1116381Z #11 162.6 [491/711] Building C object CMakeFiles/netdata.dir/src/plugins.d/pluginsd_replication.c.o
2025-04-15T08:03:32.2979044Z #11 162.6 [492/711] Building C object CMakeFiles/netdata.dir/src/plugins.d/pluginsd_parser.c.o
2025-04-15T08:03:32.4937590Z #11 163.0 [493/711] Building C object CMakeFiles/netdata.dir/src/database/contexts/api_v1_contexts.c.o
2025-04-15T08:03:32.6902604Z #11 163.2 [494/711] Building C object CMakeFiles/netdata.dir/src/database/contexts/api_v2_contexts_agents.c.o
2025-04-15T08:03:32.9135701Z #11 163.2 [495/711] Building C object CMakeFiles/netdata.dir/src/database/contexts/api_v2_contexts.c.o
2025-04-15T08:03:32.9672284Z #11 163.5 [496/711] Building CXX object CMakeFiles/netdata.dir/src/ml/ml_kmeans.cc.o
2025-04-15T08:03:33.2106974Z #11 163.5 [497/711] Building C object CMakeFiles/netdata.dir/src/database/contexts/api_v2_contexts_alerts.c.o
2025-04-15T08:03:33.2603485Z #11 163.7 [498/711] Building C object CMakeFiles/netdata.dir/src/database/contexts/api_v2_contexts_alert_transitions.c.o
2025-04-15T08:03:33.3845997Z #11 163.8 [499/711] Building C object CMakeFiles/netdata.dir/src/database/contexts/api_v2_contexts_alert_config.c.o
2025-04-15T08:03:33.3849532Z #11 163.9 [500/711] Building C object CMakeFiles/netdata.dir/src/database/contexts/context.c.o
2025-04-15T08:03:33.5032103Z #11 164.0 [501/711] Building C object CMakeFiles/netdata.dir/src/database/contexts/instance.c.o
2025-04-15T08:03:33.6844422Z #11 164.2 [502/711] Building C object CMakeFiles/netdata.dir/src/database/contexts/metric.c.o
2025-04-15T08:03:33.8800673Z #11 164.2 [503/711] Building C object CMakeFiles/netdata.dir/src/database/contexts/query_scope.c.o
2025-04-15T08:03:33.8859542Z #11 164.4 [504/711] Building C object CMakeFiles/netdata.dir/src/database/contexts/query_target.c.o
2025-04-15T08:03:34.0879792Z #11 164.4 [505/711] Building C object CMakeFiles/netdata.dir/src/database/contexts/rrdcontext.c.o
2025-04-15T08:03:34.1193545Z #11 164.6 [506/711] Building C object CMakeFiles/netdata.dir/src/database/rrdcollector.c.o
2025-04-15T08:03:34.3212678Z #11 164.7 [507/711] Building C object CMakeFiles/netdata.dir/src/database/contexts/worker.c.o
2025-04-15T08:03:34.3215758Z #11 164.8 [508/711] Building C object CMakeFiles/netdata.dir/src/database/rrddim.c.o
2025-04-15T08:03:34.4942069Z #11 164.8 [509/711] Building C object CMakeFiles/netdata.dir/src/database/rrdfunctions.c.o
2025-04-15T08:03:34.4967469Z #11 165.0 [510/711] Building C object CMakeFiles/netdata.dir/src/database/rrdfunctions-inline.c.o
2025-04-15T08:03:34.6354078Z #11 165.1 [511/711] Building C object CMakeFiles/netdata.dir/src/database/rrdhost.c.o
2025-04-15T08:03:34.7643722Z #11 165.2 [512/711] Building C object CMakeFiles/netdata.dir/src/database/rrd.c.o
2025-04-15T08:03:34.8739609Z #11 165.4 [513/711] Building C object CMakeFiles/netdata.dir/src/database/rrdlabels.c.o
2025-04-15T08:03:35.0269953Z #11 165.4 [514/711] Building C object CMakeFiles/netdata.dir/src/database/rrd-metadata.c.o
2025-04-15T08:03:35.0321374Z #11 165.5 [515/711] Building C object CMakeFiles/netdata.dir/src/database/rrdset.c.o
2025-04-15T08:03:35.1532605Z #11 165.6 [516/711] Building C object CMakeFiles/netdata.dir/src/database/storage-engine.c.o
2025-04-15T08:03:35.3249201Z #11 165.8 [517/711] Building C object CMakeFiles/netdata.dir/src/database/ram/rrddim_mem.c.o
2025-04-15T08:03:35.4659790Z #11 166.0 [518/711] Building C object CMakeFiles/netdata.dir/src/database/sqlite/sqlite_functions.c.o
2025-04-15T08:03:35.7147808Z #11 166.0 [519/711] Building C object CMakeFiles/netdata.dir/src/database/sqlite/sqlite_metadata.c.o
2025-04-15T08:03:35.7150768Z #11 166.0 [520/711] Building C object CMakeFiles/netdata.dir/src/database/sqlite/sqlite_context.c.o
2025-04-15T08:03:35.7591433Z #11 166.2 [521/711] Building C object CMakeFiles/netdata.dir/src/database/sqlite/sqlite_db_migration.c.o
2025-04-15T08:03:35.9579226Z #11 166.4 [522/711] Building C object CMakeFiles/netdata.dir/src/database/sqlite/sqlite_aclk_node.c.o
2025-04-15T08:03:36.1129171Z #11 166.4 [523/711] Building C object CMakeFiles/netdata.dir/src/database/sqlite/sqlite_aclk.c.o
2025-04-15T08:03:36.1253470Z #11 166.6 [524/711] Building C object CMakeFiles/netdata.dir/src/database/sqlite/vendored/sqlite3recover.c.o
2025-04-15T08:03:36.2446635Z #11 166.7 [525/711] Building C object CMakeFiles/netdata.dir/src/database/sqlite/sqlite_health.c.o
2025-04-15T08:03:36.2448084Z #11 166.7 [526/711] Building C object CMakeFiles/netdata.dir/src/database/sqlite/vendored/dbdata.c.o
2025-04-15T08:03:36.2451927Z #11 166.7 [527/711] Building C object CMakeFiles/netdata.dir/src/database/sqlite/sqlite_aclk_alert.c.o
2025-04-15T08:03:36.4468485Z #11 166.8 [528/711] Building C object CMakeFiles/netdata.dir/src/web/api/queries/KolmogorovSmirnovDist.c.o
2025-04-15T08:03:36.6642881Z #11 167.1 [529/711] Building C object CMakeFiles/netdata.dir/src/database/rrdfunctions-inflight.c.o
2025-04-15T08:03:36.8811094Z #11 167.2 [530/711] Building C object CMakeFiles/netdata.dir/src/database/rrd-database-mode.c.o
2025-04-15T08:03:36.8815532Z #11 167.2 [531/711] Building C object CMakeFiles/netdata.dir/src/database/rrdfunctions-exporters.c.o
2025-04-15T08:03:37.0686663Z #11 167.6 [532/711] Building C object CMakeFiles/netdata.dir/src/database/contexts/contexts-loading.c.o
2025-04-15T08:03:37.2000025Z #11 167.6 [533/711] Building C object CMakeFiles/netdata.dir/src/database/rrdset-index-id.c.o
2025-04-15T08:03:37.2001102Z #11 167.7 [534/711] Building C object CMakeFiles/netdata.dir/src/database/rrdhost-system-info.c.o
2025-04-15T08:03:37.4577695Z #11 167.9 [535/711] Building C object CMakeFiles/netdata.dir/src/database/rrdset-index-name.c.o
2025-04-15T08:03:37.6190764Z #11 168.0 [536/711] Building C object CMakeFiles/netdata.dir/src/database/rrdset-slots.c.o
2025-04-15T08:03:37.6191783Z #11 168.1 [537/711] Building C object CMakeFiles/netdata.dir/src/database/rrdset-collection.c.o
2025-04-15T08:03:37.8927531Z #11 168.4 [538/711] Building C object CMakeFiles/netdata.dir/src/database/rrdhost-status.c.o
2025-04-15T08:03:38.0518629Z #11 168.4 [539/711] Building C object CMakeFiles/netdata.dir/src/database/rrddim-backfill.c.o
2025-04-15T08:03:38.0551563Z #11 168.5 [540/711] Building C object CMakeFiles/netdata.dir/src/database/rrddim-collection.c.o
2025-04-15T08:03:38.1890327Z #11 168.7 [541/711] Building C object CMakeFiles/netdata.dir/src/database/rrdset-type.c.o
2025-04-15T08:03:38.3976217Z #11 168.7 [542/711] Building C object CMakeFiles/netdata.dir/src/database/rrdhost-slots.c.o
2025-04-15T08:03:38.3977202Z #11 168.9 [543/711] Building C object CMakeFiles/netdata.dir/src/database/rrd-algorithm.c.o
2025-04-15T08:03:38.5916937Z #11 169.1 [544/711] Building C object CMakeFiles/netdata.dir/src/database/rrdhost-labels.c.o
2025-04-15T08:03:38.7519837Z #11 169.1 [545/711] Building C object CMakeFiles/netdata.dir/src/database/rrdhost-collection.c.o
2025-04-15T08:03:38.7520863Z #11 169.2 [546/711] Building C object CMakeFiles/netdata.dir/src/database/pattern-array.c.o
2025-04-15T08:03:39.2460893Z #11 169.7 [547/711] Building C object CMakeFiles/netdata.dir/src/database/engine/rrdengine.c.o
2025-04-15T08:03:39.3597749Z #11 169.8 [548/711] Building C object CMakeFiles/netdata.dir/src/database/engine/datafile.c.o
2025-04-15T08:03:39.3598708Z #11 169.8 [549/711] Building C object CMakeFiles/netdata.dir/src/database/engine/journalfile.c.o
2025-04-15T08:03:39.7528937Z #11 170.2 [550/711] Building C object CMakeFiles/netdata.dir/src/database/engine/rrdenginelib.c.o
2025-04-15T08:03:39.9710833Z #11 170.3 [551/711] Building C object CMakeFiles/netdata.dir/src/database/engine/rrdengineapi.c.o
2025-04-15T08:03:40.2251728Z #11 170.7 [552/711] Building C object CMakeFiles/netdata.dir/src/database/engine/page.c.o
2025-04-15T08:03:40.4433980Z #11 170.8 [553/711] Building C object CMakeFiles/netdata.dir/src/database/engine/pagecache.c.o
2025-04-15T08:03:40.5951307Z #11 171.1 [554/711] Building CXX object CMakeFiles/netdata.dir/src/database/engine/page_test.cc.o
2025-04-15T08:03:40.8150911Z #11 171.3 [555/711] Building C object CMakeFiles/netdata.dir/src/database/engine/mrg.c.o
2025-04-15T08:03:40.9816868Z #11 171.5 [556/711] Building C object CMakeFiles/netdata.dir/src/database/engine/mrg-unittest.c.o
2025-04-15T08:03:41.1738070Z #11 171.5 [557/711] Building C object CMakeFiles/netdata.dir/src/database/engine/cache.c.o
2025-04-15T08:03:41.2052067Z #11 171.7 [558/711] Building C object CMakeFiles/netdata.dir/src/database/engine/mrg-load.c.o
2025-04-15T08:03:41.4644957Z #11 171.9 [559/711] Building C object CMakeFiles/netdata.dir/src/database/engine/dbengine-unittest.c.o
2025-04-15T08:03:41.6434582Z #11 172.0 [560/711] Building C object CMakeFiles/netdata.dir/src/database/engine/pdc.c.o
2025-04-15T08:03:41.6435787Z #11 172.1 [561/711] Building C object CMakeFiles/netdata.dir/src/database/engine/dbengine-stresstest.c.o
2025-04-15T08:03:41.8608608Z #11 172.3 [562/711] Building C object CMakeFiles/netdata.dir/src/database/engine/dbengine-compression.c.o
2025-04-15T08:03:42.0879994Z #11 172.6 [563/711] Building C object CMakeFiles/netdata.dir/src/registry/registry_db.c.o
2025-04-15T08:03:42.2443445Z #11 172.6 [564/711] Building C object CMakeFiles/netdata.dir/src/registry/registry.c.o
2025-04-15T08:03:42.2657510Z #11 172.8 [565/711] Building C object CMakeFiles/netdata.dir/src/registry/registry_init.c.o
2025-04-15T08:03:42.4850789Z #11 173.0 [566/711] Building C object CMakeFiles/netdata.dir/src/registry/registry_internals.c.o
2025-04-15T08:03:42.6377561Z #11 173.0 [567/711] Building C object CMakeFiles/netdata.dir/src/registry/registry_log.c.o
2025-04-15T08:03:42.6414846Z #11 173.1 [568/711] Building C object CMakeFiles/netdata.dir/src/registry/registry_machine.c.o
2025-04-15T08:03:42.7597399Z #11 173.2 [569/711] Building C object CMakeFiles/netdata.dir/src/database/sqlite/vendored/sqlite3.c.o
2025-04-15T08:03:42.8627239Z #11 173.3 [570/711] Building C object CMakeFiles/netdata.dir/src/registry/registry_person.c.o
2025-04-15T08:03:43.0681534Z #11 173.6 [571/711] Building C object CMakeFiles/netdata.dir/src/streaming/stream-compression/brotli.c.o
2025-04-15T08:03:43.1696383Z #11 173.6 [572/711] Building C object CMakeFiles/netdata.dir/src/collectors/statsd.plugin/statsd.c.o
2025-04-15T08:03:43.1707259Z #11 173.7 [573/711] Building C object CMakeFiles/netdata.dir/src/streaming/stream-compression/compression.c.o
2025-04-15T08:03:43.3534782Z #11 173.7 [574/711] Building C object CMakeFiles/netdata.dir/src/streaming/stream-compression/gzip.c.o
2025-04-15T08:03:43.3982939Z #11 173.9 [575/711] Building C object CMakeFiles/netdata.dir/src/streaming/stream-compression/lz4.c.o
2025-04-15T08:03:43.5696867Z #11 173.9 [576/711] Building C object CMakeFiles/netdata.dir/src/streaming/stream-compression/zstd.c.o
2025-04-15T08:03:43.6971604Z #11 174.2 [577/711] Building C object CMakeFiles/netdata.dir/src/streaming/stream-sender.c.o
2025-04-15T08:03:43.8261102Z #11 174.2 [578/711] Building C object CMakeFiles/netdata.dir/src/streaming/stream-receiver.c.o
2025-04-15T08:03:43.8262656Z #11 174.3 [579/711] Building C object CMakeFiles/netdata.dir/src/streaming/protocol/command-nodeid.c.o
2025-04-15T08:03:44.0708448Z #11 174.6 [580/711] Building C object CMakeFiles/netdata.dir/src/streaming/protocol/commands.c.o
2025-04-15T08:03:44.2501408Z #11 174.6 [581/711] Building C object CMakeFiles/netdata.dir/src/streaming/protocol/command-claimed_id.c.o
2025-04-15T08:03:44.2502811Z #11 174.6 [582/711] Building C object CMakeFiles/netdata.dir/src/streaming/stream-replication-sender.c.o
2025-04-15T08:03:44.4780377Z #11 175.0 [583/711] Building C object CMakeFiles/netdata.dir/src/streaming/stream-path.c.o
2025-04-15T08:03:44.7148016Z #11 175.0 [584/711] Building C object CMakeFiles/netdata.dir/src/streaming/stream-capabilities.c.o
2025-04-15T08:03:44.7149331Z #11 175.0 [585/711] Building C object CMakeFiles/netdata.dir/src/streaming/stream-connector.c.o
2025-04-15T08:03:44.7150590Z #11 175.0 [586/711] Building C object CMakeFiles/netdata.dir/src/streaming/stream-sender-execute.c.o
2025-04-15T08:03:44.8912801Z #11 175.4 [587/711] Building C object CMakeFiles/netdata.dir/src/streaming/stream-sender-commit.c.o
2025-04-15T08:03:45.1079166Z #11 175.4 [588/711] Building C object CMakeFiles/netdata.dir/src/streaming/stream-handshake.c.o
2025-04-15T08:03:45.1080484Z #11 175.4 [589/711] Building C object CMakeFiles/netdata.dir/src/streaming/protocol/command-function.c.o
2025-04-15T08:03:45.1149091Z #11 175.6 [590/711] Building C object CMakeFiles/netdata.dir/src/streaming/stream-parents.c.o
2025-04-15T08:03:45.2793155Z #11 175.8 [591/711] Building C object CMakeFiles/netdata.dir/src/streaming/protocol/command-host-labels.c.o
2025-04-15T08:03:45.4534071Z #11 175.8 [592/711] Building C object CMakeFiles/netdata.dir/src/streaming/protocol/command-chart-definition.c.o
2025-04-15T08:03:45.4537126Z #11 175.9 [593/711] Building C object CMakeFiles/netdata.dir/src/streaming/protocol/command-begin-set-end-v2.c.o
2025-04-15T08:03:45.6615473Z #11 176.0 [594/711] Building C object CMakeFiles/netdata.dir/src/streaming/protocol/command-host-variables.c.o
2025-04-15T08:03:45.6810543Z #11 176.2 [595/711] Building C object CMakeFiles/netdata.dir/src/streaming/stream-conf.c.o
2025-04-15T08:03:45.8399562Z #11 176.2 [596/711] Building C object CMakeFiles/netdata.dir/src/streaming/stream-sender-api.c.o
2025-04-15T08:03:45.8402911Z #11 176.3 [597/711] Building C object CMakeFiles/netdata.dir/src/streaming/stream-receiver-api.c.o
2025-04-15T08:03:45.9729602Z #11 176.5 [598/711] Building C object CMakeFiles/netdata.dir/src/streaming/stream-thread.c.o
2025-04-15T08:03:46.1382198Z #11 176.6 [599/711] Building C object CMakeFiles/netdata.dir/src/streaming/stream-circular-buffer.c.o
2025-04-15T08:03:46.3620515Z #11 176.6 [600/711] Building C object CMakeFiles/netdata.dir/src/streaming/stream-receiver-connection.c.o
2025-04-15T08:03:46.3623715Z #11 176.7 [601/711] Building C object CMakeFiles/netdata.dir/src/streaming/stream-control.c.o
2025-04-15T08:03:46.3886424Z #11 176.9 [602/711] Building C object CMakeFiles/netdata.dir/src/streaming/stream-waiting-list.c.o
2025-04-15T08:03:46.5192300Z #11 177.0 [603/711] Building C object CMakeFiles/netdata.dir/src/streaming/stream-replication-tracking.c.o
2025-04-15T08:03:46.7682505Z #11 177.0 [604/711] Building C object CMakeFiles/netdata.dir/src/streaming/stream-replication-receiver.c.o
2025-04-15T08:03:46.7684842Z #11 177.1 [605/711] Building C object CMakeFiles/netdata.dir/src/streaming/protocol/command-begin-set-end-v1.c.o
2025-04-15T08:03:46.7857897Z #11 177.3 [606/711] Building C object CMakeFiles/netdata.dir/src/streaming/protocol/command-begin-set-end-init.c.o
2025-04-15T08:03:46.9163407Z #11 177.4 [607/711] Building C object CMakeFiles/netdata.dir/src/web/server/web_server.c.o
2025-04-15T08:03:47.0447408Z #11 177.5 [608/711] Building C object CMakeFiles/netdata.dir/src/web/server/static/static-threaded.c.o
2025-04-15T08:03:47.1682701Z #11 177.6 [609/711] Building C object CMakeFiles/netdata.dir/src/web/server/web_client.c.o
2025-04-15T08:03:47.1685055Z #11 177.7 [610/711] Building C object CMakeFiles/netdata.dir/src/web/server/web_client_cache.c.o
2025-04-15T08:03:47.3139616Z #11 177.8 [611/711] Building C object CMakeFiles/netdata.dir/src/web/api/v3/api_v3_stream_info.c.o
2025-04-15T08:03:47.4188637Z #11 177.9 [612/711] Building C object CMakeFiles/netdata.dir/src/web/api/v3/api_v3_stream_path.c.o
2025-04-15T08:03:47.6572441Z #11 178.0 [613/711] Building C object CMakeFiles/netdata.dir/src/web/api/queries/backfill.c.o
2025-04-15T08:03:47.7151280Z #11 178.2 [614/711] Building C object CMakeFiles/netdata.dir/src/web/api/request_source.c.o
2025-04-15T08:03:47.8467159Z #11 178.2 [615/711] Building C object CMakeFiles/netdata.dir/src/web/api/functions/function-metrics-cardinality.c.o
2025-04-15T08:03:47.8468178Z #11 178.3 [616/711] Building C object CMakeFiles/netdata.dir/src/claim/claim.c.o
2025-04-15T08:03:48.0431565Z #11 178.4 [617/711] Building C object CMakeFiles/netdata.dir/src/claim/claim_id.c.o
2025-04-15T08:03:48.1284417Z #11 178.6 [618/711] Building C object CMakeFiles/netdata.dir/src/claim/cloud-conf.c.o
2025-04-15T08:03:48.2915118Z #11 178.8 [619/711] Building C object CMakeFiles/netdata.dir/src/aclk/aclk_proxy.c.o
2025-04-15T08:03:48.4709378Z #11 178.8 [620/711] Building C object CMakeFiles/netdata.dir/src/claim/cloud-status.c.o
2025-04-15T08:03:48.4710378Z #11 178.8 [621/711] Building C object CMakeFiles/netdata.dir/src/claim/claim-with-api.c.o
2025-04-15T08:03:48.6141257Z #11 179.1 [622/711] Building C object CMakeFiles/netdata.dir/src/aclk/aclk.c.o
2025-04-15T08:03:48.7178518Z #11 179.2 [623/711] Building C object CMakeFiles/netdata.dir/src/aclk/aclk_capas.c.o
2025-04-15T08:03:48.7182520Z #11 179.2 [624/711] Building C object CMakeFiles/netdata.dir/src/aclk/aclk_util.c.o
2025-04-15T08:03:48.9358706Z #11 179.3 [625/711] Building C object CMakeFiles/netdata.dir/src/aclk/https_client.c.o
2025-04-15T08:03:48.9392202Z #11 179.4 [626/711] Building C object CMakeFiles/netdata.dir/src/libnetdata/c_rhash/c_rhash.c.o
2025-04-15T08:03:49.0843567Z #11 179.6 [627/711] Building C object CMakeFiles/netdata.dir/src/daemon/static_threads_linux.c.o
2025-04-15T08:03:49.3492144Z #11 179.8 [628/711] Building C object CMakeFiles/netdata.dir/src/collectors/cgroups.plugin/sys_fs_cgroup.c.o
2025-04-15T08:03:49.5084036Z #11 180.0 [629/711] Building C object CMakeFiles/netdata.dir/src/collectors/cgroups.plugin/cgroup-discovery.c.o
2025-04-15T08:03:49.7304317Z #11 180.1 [630/711] Building C object CMakeFiles/netdata.dir/src/collectors/cgroups.plugin/cgroup-charts.c.o
2025-04-15T08:03:49.9311546Z #11 180.4 [631/711] Building C object CMakeFiles/netdata.dir/src/collectors/cgroups.plugin/cgroup-top.c.o
2025-04-15T08:03:50.0459933Z #11 180.5 [632/711] Building C object CMakeFiles/netdata.dir/src/collectors/proc.plugin/ipc.c.o
2025-04-15T08:03:50.1525193Z #11 180.6 [633/711] Building CXX object CMakeFiles/netdata.dir/src/collectors/profile.plugin/plugin_profile.cc.o
2025-04-15T08:03:50.1526662Z #11 180.6 [634/711] Building C object CMakeFiles/netdata.dir/src/collectors/diskspace.plugin/plugin_diskspace.c.o
2025-04-15T08:03:50.3708951Z #11 180.9 [635/711] Building C object CMakeFiles/netdata.dir/src/collectors/proc.plugin/plugin_proc.c.o
2025-04-15T08:03:50.6167002Z #11 181.0 [636/711] Building C object CMakeFiles/netdata.dir/src/collectors/proc.plugin/proc_sys_fs_file_nr.c.o
2025-04-15T08:03:50.6490056Z #11 181.1 [637/711] Building C object CMakeFiles/netdata.dir/src/collectors/proc.plugin/proc_mdstat.c.o
2025-04-15T08:03:50.8040200Z #11 181.3 [638/711] Building C object CMakeFiles/netdata.dir/src/collectors/proc.plugin/proc_interrupts.c.o
2025-04-15T08:03:51.0435492Z #11 181.3 [639/711] Building C object CMakeFiles/netdata.dir/src/collectors/proc.plugin/proc_diskstats.c.o
2025-04-15T08:03:51.0436803Z #11 181.4 [640/711] Building C object CMakeFiles/netdata.dir/src/collectors/proc.plugin/proc_softirqs.c.o
2025-04-15T08:03:51.0638649Z #11 181.5 [641/711] Building C object CMakeFiles/netdata.dir/src/collectors/proc.plugin/proc_loadavg.c.o
2025-04-15T08:03:51.2333808Z #11 181.7 [642/711] Building C object CMakeFiles/netdata.dir/src/collectors/proc.plugin/proc_meminfo.c.o
2025-04-15T08:03:51.4252751Z #11 181.8 [643/711] Building C object CMakeFiles/netdata.dir/src/collectors/proc.plugin/proc_pagetypeinfo.c.o
2025-04-15T08:03:51.4569123Z #11 181.9 [644/711] Building C object CMakeFiles/netdata.dir/src/collectors/proc.plugin/proc_net_dev_renames.c.o
2025-04-15T08:03:51.5913092Z #11 182.1 [645/711] Building C object CMakeFiles/netdata.dir/src/collectors/proc.plugin/proc_net_dev.c.o
2025-04-15T08:03:51.7127782Z #11 182.2 [646/711] Building C object CMakeFiles/netdata.dir/src/collectors/proc.plugin/proc_net_ip_vs_stats.c.o
2025-04-15T08:03:51.7129502Z #11 182.2 [647/711] Building C object CMakeFiles/netdata.dir/src/collectors/proc.plugin/proc_net_wireless.c.o
2025-04-15T08:03:51.9994135Z #11 182.5 [648/711] Building C object CMakeFiles/netdata.dir/src/collectors/proc.plugin/proc_net_netstat.c.o
2025-04-15T08:03:52.1110336Z #11 182.5 [649/711] Building C object CMakeFiles/netdata.dir/src/collectors/proc.plugin/proc_net_rpc_nfs.c.o
2025-04-15T08:03:52.1113531Z #11 182.6 [650/711] Building C object CMakeFiles/netdata.dir/src/collectors/proc.plugin/proc_net_sctp_snmp.c.o
2025-04-15T08:03:52.3021420Z #11 182.6 [651/711] Building C object CMakeFiles/netdata.dir/src/collectors/proc.plugin/proc_net_rpc_nfsd.c.o
2025-04-15T08:03:52.4324695Z #11 182.9 [652/711] Building C object CMakeFiles/netdata.dir/src/collectors/proc.plugin/proc_net_sockstat6.c.o
2025-04-15T08:03:52.5985063Z #11 182.9 [653/711] Building C object CMakeFiles/netdata.dir/src/collectors/proc.plugin/proc_net_sockstat.c.o
2025-04-15T08:03:52.5987150Z #11 183.0 [654/711] Building C object CMakeFiles/netdata.dir/src/collectors/proc.plugin/proc_net_softnet_stat.c.o
2025-04-15T08:03:52.5989296Z #11 183.1 [655/711] Building C object CMakeFiles/netdata.dir/src/collectors/proc.plugin/proc_net_stat_conntrack.c.o
2025-04-15T08:03:52.8433911Z #11 183.3 [656/711] Building C object CMakeFiles/netdata.dir/src/collectors/proc.plugin/proc_net_stat_synproxy.c.o
2025-04-15T08:03:52.9469083Z #11 183.4 [657/711] Building C object CMakeFiles/netdata.dir/src/collectors/proc.plugin/proc_self_mountinfo.c.o
2025-04-15T08:03:52.9470476Z #11 183.4 [658/711] Building C object CMakeFiles/netdata.dir/src/collectors/proc.plugin/zfs_common.c.o
2025-04-15T08:03:53.1657143Z #11 183.5 [659/711] Building C object CMakeFiles/netdata.dir/src/collectors/proc.plugin/proc_spl_kstat_zfs.c.o
2025-04-15T08:03:53.2782080Z #11 183.8 [660/711] Building C object CMakeFiles/netdata.dir/src/collectors/proc.plugin/proc_sys_kernel_random_entropy_avail.c.o
2025-04-15T08:03:53.3953436Z #11 183.9 [661/711] Building C object CMakeFiles/netdata.dir/src/collectors/proc.plugin/proc_stat.c.o
2025-04-15T08:03:53.3957645Z #11 183.9 [662/711] Building C object CMakeFiles/netdata.dir/src/collectors/proc.plugin/proc_uptime.c.o
2025-04-15T08:03:53.5508568Z #11 183.9 [663/711] Building C object CMakeFiles/netdata.dir/src/collectors/proc.plugin/proc_vmstat.c.o
2025-04-15T08:03:53.6737019Z #11 184.2 [664/711] Building C object CMakeFiles/netdata.dir/src/collectors/proc.plugin/run_reboot_required.c.o
2025-04-15T08:03:53.7897867Z #11 184.3 [665/711] Building C object CMakeFiles/netdata.dir/src/collectors/proc.plugin/proc_pressure.c.o
2025-04-15T08:03:53.9799857Z #11 184.3 [666/711] Building C object CMakeFiles/netdata.dir/src/collectors/proc.plugin/sys_kernel_mm_ksm.c.o
2025-04-15T08:03:53.9800889Z #11 184.3 [667/711] Building C object CMakeFiles/netdata.dir/src/collectors/proc.plugin/sys_block_zram.c.o
2025-04-15T08:03:54.1034444Z #11 184.6 [668/711] Building C object CMakeFiles/netdata.dir/src/collectors/proc.plugin/sys_devices_system_edac_mc.c.o
2025-04-15T08:03:54.2184762Z #11 184.7 [669/711] Building C object CMakeFiles/netdata.dir/src/collectors/proc.plugin/sys_devices_system_node.c.o
2025-04-15T08:03:54.3642609Z #11 184.8 [670/711] Building C object CMakeFiles/netdata.dir/src/collectors/proc.plugin/sys_fs_btrfs.c.o
2025-04-15T08:03:54.5417219Z #11 184.9 [671/711] Building C object CMakeFiles/netdata.dir/src/collectors/proc.plugin/sys_class_infiniband.c.o
2025-04-15T08:03:54.5429345Z #11 185.0 [672/711] Building C object CMakeFiles/netdata.dir/src/collectors/proc.plugin/sys_class_power_supply.c.o
2025-04-15T08:03:54.6606829Z #11 185.1 [673/711] Building C object CMakeFiles/netdata.dir/src/collectors/proc.plugin/sys_devices_pci_aer.c.o
2025-04-15T08:03:54.8718386Z #11 185.4 [674/711] Building C object CMakeFiles/netdata.dir/src/collectors/proc.plugin/sys_class_drm.c.o
2025-04-15T08:03:55.0819198Z #11 185.4 [675/711] Building C object CMakeFiles/netdata.dir/src/collectors/tc.plugin/plugin_tc.c.o
2025-04-15T08:03:55.0820791Z #11 185.4 [676/711] Building C object CMakeFiles/netdata.dir/src/collectors/timex.plugin/plugin_timex.c.o
2025-04-15T08:03:55.0904750Z #11 185.6 [677/711] Building C object CMakeFiles/netdata.dir/src/aclk/aclk_query.c.o
2025-04-15T08:03:55.2430910Z #11 185.7 [678/711] Building C object CMakeFiles/netdata.dir/src/aclk/aclk_query_queue.c.o
2025-04-15T08:03:55.4795159Z #11 185.8 [679/711] Building C object CMakeFiles/netdata.dir/src/aclk/aclk_otp.c.o
2025-04-15T08:03:55.4796035Z #11 185.8 [680/711] Building C object CMakeFiles/netdata.dir/src/aclk/aclk_tx_msgs.c.o
2025-04-15T08:03:55.5015503Z #11 186.0 [681/711] Building C object CMakeFiles/netdata.dir/src/aclk/aclk_rx_msgs.c.o
2025-04-15T08:03:55.6243821Z #11 186.1 [682/711] Building C object CMakeFiles/netdata.dir/src/aclk/aclk_alarm_api.c.o
2025-04-15T08:03:55.8254513Z #11 186.2 [683/711] Building C object CMakeFiles/netdata.dir/src/aclk/aclk_contexts_api.c.o
2025-04-15T08:03:57.2306801Z #11 187.7 [684/711] Building CXX object CMakeFiles/netdata.dir/src/aclk/schema-wrappers/connection.cc.o
2025-04-15T08:03:57.3616533Z #11 187.8 [685/711] Building CXX object CMakeFiles/netdata.dir/src/aclk/schema-wrappers/node_connection.cc.o
2025-04-15T08:03:57.6040412Z #11 187.9 [686/711] Building CXX object CMakeFiles/netdata.dir/src/aclk/schema-wrappers/node_creation.cc.o
2025-04-15T08:03:57.6502046Z #11 188.1 [687/711] Building CXX object CMakeFiles/netdata.dir/src/aclk/schema-wrappers/alarm_stream.cc.o
2025-04-15T08:03:58.7252360Z #11 189.2 [688/711] Building CXX object CMakeFiles/netdata.dir/src/aclk/schema-wrappers/capability.cc.o
2025-04-15T08:03:59.1483005Z #11 189.6 [689/711] Building CXX object CMakeFiles/netdata.dir/src/aclk/schema-wrappers/alarm_config.cc.o
2025-04-15T08:03:59.4143146Z #11 189.9 [690/711] Building CXX object CMakeFiles/netdata.dir/src/aclk/schema-wrappers/node_info.cc.o
2025-04-15T08:03:59.8772315Z #11 190.4 [691/711] Building CXX object CMakeFiles/netdata.dir/src/aclk/schema-wrappers/proto_2_json.cc.o
2025-04-15T08:04:00.4440589Z #11 190.9 [692/711] Building CXX object CMakeFiles/netdata.dir/src/aclk/schema-wrappers/context_stream.cc.o
2025-04-15T08:04:01.0207835Z #11 191.5 [693/711] Building CXX object CMakeFiles/netdata.dir/src/aclk/schema-wrappers/context.cc.o
2025-04-15T08:04:01.4924917Z #11 192.0 [694/711] Building CXX object CMakeFiles/netdata.dir/src/aclk/schema-wrappers/schema_wrapper_utils.cc.o
2025-04-15T08:04:01.7301691Z #11 192.2 [695/711] Building CXX object CMakeFiles/netdata.dir/src/aclk/schema-wrappers/agent_cmds.cc.o
2025-04-15T08:04:01.9434498Z #11 192.4 [696/711] Building CXX object CMakeFiles/netdata.dir/src/aclk/aclk-schemas/proto/aclk/v1/lib.pb.cc.o
2025-04-15T08:04:02.4814461Z #11 193.0 [697/711] Building CXX object CMakeFiles/netdata.dir/src/aclk/aclk-schemas/proto/agent/v1/disconnect.pb.cc.o
2025-04-15T08:04:03.2737775Z #11 193.8 [698/711] Building CXX object CMakeFiles/netdata.dir/src/aclk/aclk-schemas/proto/agent/v1/connection.pb.cc.o
2025-04-15T08:04:03.4779268Z #11 194.0 [699/711] Building CXX object CMakeFiles/netdata.dir/src/aclk/aclk-schemas/proto/alarm/v1/config.pb.cc.o
2025-04-15T08:04:04.0266221Z #11 194.5 [700/711] Building CXX object CMakeFiles/netdata.dir/src/aclk/aclk-schemas/proto/nodeinstance/connection/v1/connection.pb.cc.o
2025-04-15T08:04:04.2654746Z #11 194.6 [701/711] Building CXX object CMakeFiles/netdata.dir/src/aclk/aclk-schemas/proto/alarm/v1/stream.pb.cc.o
2025-04-15T08:04:04.7726963Z #11 195.3 [702/711] Building CXX object CMakeFiles/netdata.dir/src/aclk/aclk-schemas/proto/nodeinstance/create/v1/creation.pb.cc.o
2025-04-15T08:04:05.5822441Z #11 196.1 [703/711] Building CXX object CMakeFiles/netdata.dir/src/aclk/aclk-schemas/proto/context/v1/stream.pb.cc.o
2025-04-15T08:04:05.8088895Z #11 196.1 [704/711] Building CXX object CMakeFiles/netdata.dir/src/aclk/aclk-schemas/proto/context/v1/context.pb.cc.o
2025-04-15T08:04:06.0433938Z #11 196.5 [705/711] Building C object CMakeFiles/netdata.dir/src/exporting/mongodb/mongodb.c.o
2025-04-15T08:04:06.2771308Z #11 196.6 [706/711] Building C object CMakeFiles/netdata.dir/src/exporting/prometheus/remote_write/remote_write.c.o
2025-04-15T08:04:06.2773075Z #11 196.6 [707/711] Building CXX object CMakeFiles/netdata.dir/src/aclk/aclk-schemas/proto/nodeinstance/info/v1/info.pb.cc.o
2025-04-15T08:04:06.3212503Z #11 196.8 [708/711] Building CXX object CMakeFiles/netdata.dir/src/aclk/aclk-schemas/proto/agent/v1/cmds.pb.cc.o
2025-04-15T08:04:07.1621603Z #11 197.6 [709/711] Building CXX object CMakeFiles/netdata.dir/src/exporting/prometheus/remote_write/remote_write_request.cc.o
2025-04-15T08:04:07.3464989Z #11 197.8 [710/711] Building CXX object CMakeFiles/netdata.dir/src/exporting/prometheus/remote_write/remote_write.pb.cc.o
2025-04-15T08:06:06.3912432Z #11 316.9 [711/711] Linking CXX executable netdata
2025-04-15T08:06:06.3914684Z #11 316.9 /opt/netdata.git/src/libnetdata/libjudy/vendored/JudyL/JudyLDel.c: In function 'j__udyDelWalk':
2025-04-15T08:06:06.3915924Z #11 316.9 /opt/netdata.git/src/libnetdata/libjudy/vendored/JudyL/JudyLDel.c:1211:13: warning: writing 1 byte into a region of size 0 [-Wstringop-overflow=]
2025-04-15T08:06:06.3917138Z #11 316.9  1211 |             JU_LEAF(1,
2025-04-15T08:06:06.3917508Z #11 316.9       |             ^
2025-04-15T08:06:06.3918314Z #11 316.9 /opt/netdata.git/src/libnetdata/libjudy/vendored/JudyCommon/JudyPrivateBranch.h:84:21: note: at offset 7 into destination object 'j_pL_LIndex' of size 7
2025-04-15T08:06:06.3919037Z #11 316.9    84 |             uint8_t j_pL_LIndex[sizeof(Word_t) - 1];    // see above.
2025-04-15T08:06:06.3919340Z #11 316.9       |                     ^
2025-04-15T08:06:06.3919941Z #11 316.9 /opt/netdata.git/src/libnetdata/libjudy/vendored/JudyL/JudyLDel.c:1247:13: warning: writing 1 byte into a region of size 0 [-Wstringop-overflow=]
2025-04-15T08:06:06.3920532Z #11 316.9  1247 |             JU_LEAF(3,
2025-04-15T08:06:06.3920752Z #11 316.9       |             ^
2025-04-15T08:06:06.3921343Z #11 316.9 /opt/netdata.git/src/libnetdata/libjudy/vendored/JudyCommon/JudyPrivateBranch.h:84:21: note: at offset 7 into destination object 'j_pL_LIndex' of size 7
2025-04-15T08:06:06.3922325Z #11 316.9    84 |             uint8_t j_pL_LIndex[sizeof(Word_t) - 1];    // see above.
2025-04-15T08:06:06.3922640Z #11 316.9       |                     ^
2025-04-15T08:06:06.3923232Z #11 316.9 /opt/netdata.git/src/libnetdata/libjudy/vendored/JudyCommon/JudyPrivateBranch.h:84:21: note: at offset 7 into destination object 'j_pL_LIndex' of size 7
2025-04-15T08:06:06.3924226Z #11 316.9 /opt/netdata.git/src/libnetdata/libjudy/vendored/JudyL/JudyLDel.c:1247:13: warning: writing 1 byte into a region of size 0 [-Wstringop-overflow=]
2025-04-15T08:06:06.3924808Z #11 316.9  1247 |             JU_LEAF(3,
2025-04-15T08:06:06.3925022Z #11 316.9       |             ^
2025-04-15T08:06:06.3925610Z #11 316.9 /opt/netdata.git/src/libnetdata/libjudy/vendored/JudyCommon/JudyPrivateBranch.h:84:21: note: at offset [8, 15] into destination object 'j_pL_LIndex' of size 7
2025-04-15T08:06:06.3926526Z #11 316.9    84 |             uint8_t j_pL_LIndex[sizeof(Word_t) - 1];    // see above.
2025-04-15T08:06:06.3926811Z #11 316.9       |                     ^
2025-04-15T08:06:06.3927409Z #11 316.9 /opt/netdata.git/src/libnetdata/libjudy/vendored/JudyCommon/JudyPrivateBranch.h:84:21: note: at offset 8 into destination object 'j_pL_LIndex' of size 7
2025-04-15T08:06:06.3928361Z #11 316.9 /opt/netdata.git/src/libnetdata/libjudy/vendored/JudyL/JudyLDel.c:1247:13: warning: writing 1 byte into a region of size 0 [-Wstringop-overflow=]
2025-04-15T08:06:06.3928936Z #11 316.9  1247 |             JU_LEAF(3,
2025-04-15T08:06:06.3929145Z #11 316.9       |             ^
2025-04-15T08:06:06.3929726Z #11 316.9 /opt/netdata.git/src/libnetdata/libjudy/vendored/JudyCommon/JudyPrivateBranch.h:84:21: note: at offset [9, 16] into destination object 'j_pL_LIndex' of size 7
2025-04-15T08:06:06.3930400Z #11 316.9    84 |             uint8_t j_pL_LIndex[sizeof(Word_t) - 1];    // see above.
2025-04-15T08:06:06.3930678Z #11 316.9       |                     ^
2025-04-15T08:06:06.3931275Z #11 316.9 /opt/netdata.git/src/libnetdata/libjudy/vendored/JudyCommon/JudyPrivateBranch.h:84:21: note: at offset 9 into destination object 'j_pL_LIndex' of size 7
2025-04-15T08:06:06.4945924Z #11 316.9  OK  ''
2025-04-15T08:06:06.4946527Z #11 316.9 
2025-04-15T08:06:06.4946859Z #11 316.9  --- Install netdata --- 
2025-04-15T08:06:06.4947432Z #11 316.9 [/opt/netdata.git]# /usr/bin/ninja -C ./build/ install 
2025-04-15T08:06:06.4950643Z #11 316.9 ninja: Entering directory `./build/'
2025-04-15T08:06:06.4951149Z #11 316.9 [0/1] Install the project...
2025-04-15T08:06:06.4951628Z #11 316.9 -- Install configuration: "RelWithDebInfo"
2025-04-15T08:06:06.4952253Z #11 316.9 -- Installing: /usr/libexec/netdata/plugins.d/debugfs.plugin
2025-04-15T08:06:06.4952900Z #11 316.9 -- Installing: /usr/lib/netdata/conf.d/sensors3.conf
2025-04-15T08:06:06.4953503Z #11 316.9 -- Installing: /usr/libexec/netdata/plugins.d/apps.plugin
2025-04-15T08:06:06.4954125Z #11 316.9 -- Installing: /usr/lib/netdata/conf.d/apps_groups.conf
2025-04-15T08:06:06.4954764Z #11 316.9 -- Installing: /usr/libexec/netdata/plugins.d/freeipmi.plugin
2025-04-15T08:06:06.4955433Z #11 316.9 -- Installing: /usr/libexec/netdata/plugins.d/perf.plugin
2025-04-15T08:06:06.4956257Z #11 316.9 -- Installing: /usr/libexec/netdata/plugins.d/slabinfo.plugin
2025-04-15T08:06:06.4957546Z #11 317.0 -- Installing: /usr/libexec/netdata/plugins.d/cgroup-network
2025-04-15T08:06:06.4958410Z #11 317.0 -- Installing: /usr/libexec/netdata/plugins.d/systemd-journal.plugin
2025-04-15T08:06:06.4959145Z #11 317.0 -- Installing: /usr/libexec/netdata/plugins.d/local-listeners
2025-04-15T08:06:06.4959862Z #11 317.0 -- Installing: /usr/libexec/netdata/plugins.d/network-viewer.plugin
2025-04-15T08:06:06.4960503Z #11 317.0 -- Installing: /usr/sbin/systemd-cat-native
2025-04-15T08:06:06.4960995Z #11 317.0 -- Installing: /usr/sbin/log2journal
2025-04-15T08:06:06.4961500Z #11 317.0 -- Installing: /usr/lib/netdata/conf.d/log2journal.d
2025-04-15T08:06:06.5944232Z #11 317.0 -- Installing: /usr/lib/netdata/conf.d/log2journal.d/nginx-json.yaml
2025-04-15T08:06:06.5945430Z #11 317.0 -- Installing: /usr/lib/netdata/conf.d/log2journal.d/nginx-combined.yaml
2025-04-15T08:06:06.5946370Z #11 317.0 -- Installing: /usr/lib/netdata/conf.d/log2journal.d/default.yaml
2025-04-15T08:06:06.5946974Z #11 317.0 -- Installing: /usr/sbin/netdatacli
2025-04-15T08:06:06.5947431Z #11 317.0 -- Installing: /usr/sbin/netdata
2025-04-15T08:06:06.5947870Z #11 317.1 -- Installing: /var/cache/netdata
2025-04-15T08:06:06.5948302Z #11 317.1 -- Installing: /var/log/netdata
2025-04-15T08:06:06.5948737Z #11 317.1 -- Installing: /var/lib/netdata/registry
2025-04-15T08:06:06.5949255Z #11 317.1 -- Installing: /var/lib/netdata/cloud.d
2025-04-15T08:06:06.5949763Z #11 317.1 -- Installing: /var/run/netdata
2025-04-15T08:06:06.5950218Z #11 317.1 -- Installing: /etc/netdata
2025-04-15T08:06:06.5950632Z #11 317.1 -- Installing: /etc/netdata/custom-plugins.d
2025-04-15T08:06:06.5951118Z #11 317.1 -- Installing: /etc/netdata/health.d
2025-04-15T08:06:06.5951526Z #11 317.1 -- Installing: /etc/netdata/ssl
2025-04-15T08:06:06.5951999Z #11 317.1 -- Installing: /etc/netdata/statsd.d
2025-04-15T08:06:06.5952520Z #11 317.1 -- Installing: /usr/lib/netdata/conf.d/schema.d
2025-04-15T08:06:06.5953037Z #11 317.1 -- Installing: /usr/share/netdata/web
2025-04-15T08:06:06.5953538Z #11 317.1 -- Installing: /usr/sbin/netdata-claim.sh
2025-04-15T08:06:06.5954194Z #11 317.1 -- Installing: /usr/libexec/netdata/plugins.d/cgroup-network-helper.sh
2025-04-15T08:06:06.5954916Z #11 317.1 -- Installing: /usr/libexec/netdata/plugins.d/cgroup-name.sh
2025-04-15T08:06:06.5955584Z #11 317.1 -- Installing: /usr/lib/netdata/conf.d/statsd.d/asterisk.conf
2025-04-15T08:06:06.5956422Z #11 317.1 -- Installing: /usr/lib/netdata/conf.d/statsd.d/example.conf
2025-04-15T08:06:06.5957064Z #11 317.1 -- Installing: /usr/lib/netdata/conf.d/statsd.d/k6.conf
2025-04-15T08:06:06.5957688Z #11 317.1 -- Installing: /usr/lib/netdata/conf.d/exporting.conf
2025-04-15T08:06:06.5958274Z #11 317.1 -- Installing: /usr/lib/netdata/conf.d/ioping.conf
2025-04-15T08:06:06.5958845Z #11 317.1 -- Installing: /usr/lib/netdata/conf.d/stream.conf
2025-04-15T08:06:06.5959444Z #11 317.1 -- Installing: /usr/share/netdata/web/netdata-swagger.json
2025-04-15T08:06:06.5960036Z #11 317.1 -- Installing: /usr/share/netdata/web/netdata-swagger.yaml
2025-04-15T08:06:06.5960661Z #11 317.1 -- Installing: /usr/libexec/netdata/install-service.sh
2025-04-15T08:06:06.5961584Z #11 317.1 -- Installing: /usr/lib/netdata/system/launchd/netdata.plist
2025-04-15T08:06:06.5962233Z #11 317.1 -- Installing: /usr/lib/netdata/system/freebsd/rc.d/netdata
2025-04-15T08:06:06.5962866Z #11 317.1 -- Installing: /usr/lib/netdata/system/initd/init.d/netdata
2025-04-15T08:06:06.5963481Z #11 317.1 -- Installing: /usr/lib/netdata/system/logrotate/netdata
2025-04-15T08:06:06.5964029Z #11 317.1 -- Installing: /etc/logrotate.d/netdata
2025-04-15T08:06:06.5964567Z #11 317.1 -- Installing: /usr/lib/netdata/system/lsb/init.d/netdata
2025-04-15T08:06:06.5965195Z #11 317.1 -- Installing: /usr/lib/netdata/system/openrc/conf.d/netdata
2025-04-15T08:06:06.5965853Z #11 317.1 -- Installing: /usr/lib/netdata/system/openrc/init.d/netdata
2025-04-15T08:06:06.5966654Z #11 317.1 -- Installing: /usr/lib/netdata/system/runit/run
2025-04-15T08:06:06.5967230Z #11 317.1 -- Installing: /usr/lib/netdata/system/dinit/netdata
2025-04-15T08:06:06.5967882Z #11 317.1 -- Installing: /usr/lib/netdata/system/systemd/netdata.service
2025-04-15T08:06:06.5968633Z #11 317.1 -- Installing: /usr/lib/netdata/system/systemd/journald@netdata.conf
2025-04-15T08:06:06.5969430Z #11 317.1 -- Installing: /usr/lib/netdata/system/systemd/netdata.service.v235
2025-04-15T08:06:06.5970147Z #11 317.1 -- Installing: /usr/lib/netdata/system/systemd/50-netdata.preset
2025-04-15T08:06:06.5970846Z #11 317.1 -- Installing: /usr/lib/netdata/conf.d/vnodes/vnodes.conf
2025-04-15T08:06:06.5971358Z #11 317.1 -- Installing: /etc/netdata/.install-type
2025-04-15T08:06:06.5971881Z #11 317.1 -- Installing: /etc/netdata/edit-config
2025-04-15T08:06:06.5972427Z #11 317.1 -- Installing: /usr/libexec/netdata/netdata-updater.sh
2025-04-15T08:06:06.5973239Z #11 317.1 -- Installing: /usr/lib/netdata/conf.d/netdata.conf
2025-04-15T08:06:06.5973909Z #11 317.1 -- Installing: /usr/lib/netdata/conf.d/netdata-updater.conf
2025-04-15T08:06:06.5974623Z #11 317.1 -- Installing: /usr/lib/netdata/system/cron/netdata-updater-daily
2025-04-15T08:06:06.5975470Z #11 317.1 -- Installing: /usr/lib/netdata/system/systemd/netdata-updater.service
2025-04-15T08:06:06.5976453Z #11 317.1 -- Installing: /usr/lib/netdata/system/systemd/netdata-updater.timer
2025-04-15T08:06:06.5977260Z #11 317.1 -- Installing: /usr/libexec/netdata/plugins.d/anonymous-statistics.sh
2025-04-15T08:06:06.5978086Z #11 317.1 -- Installing: /usr/libexec/netdata/plugins.d/get-kubernetes-labels.sh
2025-04-15T08:06:06.5978791Z #11 317.1 -- Installing: /usr/libexec/netdata/plugins.d/system-info.sh
2025-04-15T08:06:06.5979460Z #11 317.1 -- Installing: /usr/lib/netdata/conf.d/health.d/adaptec_raid.conf
2025-04-15T08:06:06.5980180Z #11 317.1 -- Installing: /usr/lib/netdata/conf.d/health.d/apcupsd.conf
2025-04-15T08:06:06.5980865Z #11 317.1 -- Installing: /usr/lib/netdata/conf.d/health.d/bcache.conf
2025-04-15T08:06:06.5981560Z #11 317.1 -- Installing: /usr/lib/netdata/conf.d/health.d/beanstalkd.conf
2025-04-15T08:06:06.5982257Z #11 317.1 -- Installing: /usr/lib/netdata/conf.d/health.d/boinc.conf
2025-04-15T08:06:06.5982923Z #11 317.1 -- Installing: /usr/lib/netdata/conf.d/health.d/btrfs.conf
2025-04-15T08:06:06.5983561Z #11 317.1 -- Installing: /usr/lib/netdata/conf.d/health.d/ceph.conf
2025-04-15T08:06:06.5984224Z #11 317.1 -- Installing: /usr/lib/netdata/conf.d/health.d/cgroups.conf
2025-04-15T08:06:06.5984859Z #11 317.1 -- Installing: /usr/lib/netdata/conf.d/health.d/clickhouse.conf
2025-04-15T08:06:06.6946580Z #11 317.1 -- Installing: /usr/lib/netdata/conf.d/health.d/cockroachdb.conf
2025-04-15T08:06:06.6951231Z #11 317.1 -- Installing: /usr/lib/netdata/conf.d/health.d/consul.conf
2025-04-15T08:06:06.6951932Z #11 317.1 -- Installing: /usr/lib/netdata/conf.d/health.d/cpu.conf
2025-04-15T08:06:06.6952634Z #11 317.1 -- Installing: /usr/lib/netdata/conf.d/health.d/dbengine.conf
2025-04-15T08:06:06.6953301Z #11 317.1 -- Installing: /usr/lib/netdata/conf.d/health.d/disks.conf
2025-04-15T08:06:06.6953965Z #11 317.1 -- Installing: /usr/lib/netdata/conf.d/health.d/dns_query.conf
2025-04-15T08:06:06.6955008Z #11 317.1 -- Installing: /usr/lib/netdata/conf.d/health.d/dnsmasq_dhcp.conf
2025-04-15T08:06:06.6955780Z #11 317.1 -- Installing: /usr/lib/netdata/conf.d/health.d/docker.conf
2025-04-15T08:06:06.6956639Z #11 317.1 -- Installing: /usr/lib/netdata/conf.d/health.d/elasticsearch.conf
2025-04-15T08:06:06.6957324Z #11 317.1 -- Installing: /usr/lib/netdata/conf.d/health.d/entropy.conf
2025-04-15T08:06:06.6957994Z #11 317.1 -- Installing: /usr/lib/netdata/conf.d/health.d/exporting.conf
2025-04-15T08:06:06.6958720Z #11 317.1 -- Installing: /usr/lib/netdata/conf.d/health.d/file_descriptors.conf
2025-04-15T08:06:06.6959422Z #11 317.1 -- Installing: /usr/lib/netdata/conf.d/health.d/gearman.conf
2025-04-15T08:06:06.6960084Z #11 317.1 -- Installing: /usr/lib/netdata/conf.d/health.d/geth.conf
2025-04-15T08:06:06.6960737Z #11 317.1 -- Installing: /usr/lib/netdata/conf.d/health.d/go.d.plugin.conf
2025-04-15T08:06:06.6961420Z #11 317.1 -- Installing: /usr/lib/netdata/conf.d/health.d/haproxy.conf
2025-04-15T08:06:06.6962068Z #11 317.1 -- Installing: /usr/lib/netdata/conf.d/health.d/hdfs.conf
2025-04-15T08:06:06.6962696Z #11 317.1 -- Installing: /usr/lib/netdata/conf.d/health.d/httpcheck.conf
2025-04-15T08:06:06.6963340Z #11 317.1 -- Installing: /usr/lib/netdata/conf.d/health.d/ioping.conf
2025-04-15T08:06:06.6963965Z #11 317.1 -- Installing: /usr/lib/netdata/conf.d/health.d/ipc.conf
2025-04-15T08:06:06.6964581Z #11 317.1 -- Installing: /usr/lib/netdata/conf.d/health.d/ipfs.conf
2025-04-15T08:06:06.6965196Z #11 317.1 -- Installing: /usr/lib/netdata/conf.d/health.d/ipmi.conf
2025-04-15T08:06:06.6965827Z #11 317.1 -- Installing: /usr/lib/netdata/conf.d/health.d/isc_dhcpd.conf
2025-04-15T08:06:06.6966887Z #11 317.1 -- Installing: /usr/lib/netdata/conf.d/health.d/k8sstate.conf
2025-04-15T08:06:06.6967565Z #11 317.1 -- Installing: /usr/lib/netdata/conf.d/health.d/kubelet.conf
2025-04-15T08:06:06.6968292Z #11 317.1 -- Installing: /usr/lib/netdata/conf.d/health.d/linux_power_supply.conf
2025-04-15T08:06:06.6968997Z #11 317.1 -- Installing: /usr/lib/netdata/conf.d/health.d/load.conf
2025-04-15T08:06:06.6969603Z #11 317.1 -- Installing: /usr/lib/netdata/conf.d/health.d/lvm.conf
2025-04-15T08:06:06.6970223Z #11 317.1 -- Installing: /usr/lib/netdata/conf.d/health.d/mdstat.conf
2025-04-15T08:06:06.6970864Z #11 317.1 -- Installing: /usr/lib/netdata/conf.d/health.d/megacli.conf
2025-04-15T08:06:06.6971524Z #11 317.1 -- Installing: /usr/lib/netdata/conf.d/health.d/memcached.conf
2025-04-15T08:06:06.6972173Z #11 317.1 -- Installing: /usr/lib/netdata/conf.d/health.d/memory.conf
2025-04-15T08:06:06.6972802Z #11 317.1 -- Installing: /usr/lib/netdata/conf.d/health.d/ml.conf
2025-04-15T08:06:06.6973420Z #11 317.1 -- Installing: /usr/lib/netdata/conf.d/health.d/mysql.conf
2025-04-15T08:06:06.6974035Z #11 317.1 -- Installing: /usr/lib/netdata/conf.d/health.d/net.conf
2025-04-15T08:06:06.6974659Z #11 317.1 -- Installing: /usr/lib/netdata/conf.d/health.d/netfilter.conf
2025-04-15T08:06:06.6975299Z #11 317.1 -- Installing: /usr/lib/netdata/conf.d/health.d/nvme.conf
2025-04-15T08:06:06.6975937Z #11 317.1 -- Installing: /usr/lib/netdata/conf.d/health.d/pihole.conf
2025-04-15T08:06:06.6976778Z #11 317.1 -- Installing: /usr/lib/netdata/conf.d/health.d/ping.conf
2025-04-15T08:06:06.6977401Z #11 317.1 -- Installing: /usr/lib/netdata/conf.d/health.d/plugin.conf
2025-04-15T08:06:06.6978051Z #11 317.1 -- Installing: /usr/lib/netdata/conf.d/health.d/portcheck.conf
2025-04-15T08:06:06.6978727Z #11 317.1 -- Installing: /usr/lib/netdata/conf.d/health.d/postgres.conf
2025-04-15T08:06:06.6979393Z #11 317.1 -- Installing: /usr/lib/netdata/conf.d/health.d/processes.conf
2025-04-15T08:06:06.6980129Z #11 317.1 -- Installing: /usr/lib/netdata/conf.d/health.d/python.d.plugin.conf
2025-04-15T08:06:06.6980834Z #11 317.1 -- Installing: /usr/lib/netdata/conf.d/health.d/qos.conf
2025-04-15T08:06:06.6981468Z #11 317.1 -- Installing: /usr/lib/netdata/conf.d/health.d/rabbitmq.conf
2025-04-15T08:06:06.6982097Z #11 317.1 -- Installing: /usr/lib/netdata/conf.d/health.d/ram.conf
2025-04-15T08:06:06.6982905Z #11 317.1 -- Installing: /usr/lib/netdata/conf.d/health.d/reboot.conf
2025-04-15T08:06:06.6984510Z #11 317.1 -- Installing: /usr/lib/netdata/conf.d/health.d/redis.conf
2025-04-15T08:06:06.6985225Z #11 317.1 -- Installing: /usr/lib/netdata/conf.d/health.d/retroshare.conf
2025-04-15T08:06:06.6985901Z #11 317.1 -- Installing: /usr/lib/netdata/conf.d/health.d/riakkv.conf
2025-04-15T08:06:06.6986740Z #11 317.1 -- Installing: /usr/lib/netdata/conf.d/health.d/scaleio.conf
2025-04-15T08:06:06.6987381Z #11 317.1 -- Installing: /usr/lib/netdata/conf.d/health.d/softnet.conf
2025-04-15T08:06:06.6988047Z #11 317.1 -- Installing: /usr/lib/netdata/conf.d/health.d/storcli.conf
2025-04-15T08:06:06.6988733Z #11 317.1 -- Installing: /usr/lib/netdata/conf.d/health.d/streaming.conf
2025-04-15T08:06:06.6989390Z #11 317.1 -- Installing: /usr/lib/netdata/conf.d/health.d/swap.conf
2025-04-15T08:06:06.6990069Z #11 317.1 -- Installing: /usr/lib/netdata/conf.d/health.d/synchronization.conf
2025-04-15T08:06:06.6990862Z #11 317.1 -- Installing: /usr/lib/netdata/conf.d/health.d/systemdunits.conf
2025-04-15T08:06:06.6991583Z #11 317.1 -- Installing: /usr/lib/netdata/conf.d/health.d/tcp_conn.conf
2025-04-15T08:06:06.6992260Z #11 317.1 -- Installing: /usr/lib/netdata/conf.d/health.d/tcp_listen.conf
2025-04-15T08:06:06.6992920Z #11 317.1 -- Installing: /usr/lib/netdata/conf.d/health.d/tcp_mem.conf
2025-04-15T08:06:06.6993597Z #11 317.1 -- Installing: /usr/lib/netdata/conf.d/health.d/tcp_orphans.conf
2025-04-15T08:06:06.6994283Z #11 317.1 -- Installing: /usr/lib/netdata/conf.d/health.d/tcp_resets.conf
2025-04-15T08:06:06.6994932Z #11 317.1 -- Installing: /usr/lib/netdata/conf.d/health.d/timex.conf
2025-04-15T08:06:06.6995750Z #11 317.1 -- Installing: /usr/lib/netdata/conf.d/health.d/udp_errors.conf
2025-04-15T08:06:06.6996587Z #11 317.1 -- Installing: /usr/lib/netdata/conf.d/health.d/unbound.conf
2025-04-15T08:06:06.6997259Z #11 317.1 -- Installing: /usr/lib/netdata/conf.d/health.d/upsd.conf
2025-04-15T08:06:06.6997879Z #11 317.1 -- Installing: /usr/lib/netdata/conf.d/health.d/vcsa.conf
2025-04-15T08:06:06.6998498Z #11 317.1 -- Installing: /usr/lib/netdata/conf.d/health.d/vernemq.conf
2025-04-15T08:06:06.6999132Z #11 317.1 -- Installing: /usr/lib/netdata/conf.d/health.d/vsphere.conf
2025-04-15T08:06:06.6999774Z #11 317.1 -- Installing: /usr/lib/netdata/conf.d/health.d/web_log.conf
2025-04-15T08:06:06.7000429Z #11 317.1 -- Installing: /usr/lib/netdata/conf.d/health.d/whoisquery.conf
2025-04-15T08:06:06.7001120Z #11 317.1 -- Installing: /usr/lib/netdata/conf.d/health.d/x509check.conf
2025-04-15T08:06:06.7001752Z #11 317.1 -- Installing: /usr/lib/netdata/conf.d/health.d/zfs.conf
2025-04-15T08:06:06.7002410Z #11 317.1 -- Installing: /usr/libexec/netdata/plugins.d/alarm-notify.sh
2025-04-15T08:06:06.7003077Z #11 317.1 -- Installing: /usr/lib/netdata/conf.d/health_alarm_notify.conf
2025-04-15T08:06:06.7003774Z #11 317.1 -- Installing: /usr/lib/netdata/conf.d/health_email_recipients.conf
2025-04-15T08:06:06.7004387Z #11 317.1 -- Installing: /etc/netdata/charts.d
2025-04-15T08:06:06.7004959Z #11 317.1 -- Installing: /usr/libexec/netdata/plugins.d/charts.d.plugin
2025-04-15T08:06:06.7005702Z #11 317.1 -- Installing: /usr/libexec/netdata/plugins.d/charts.d.dryrun-helper.sh
2025-04-15T08:06:06.7006567Z #11 317.1 -- Installing: /usr/lib/netdata/conf.d/charts.d.conf
2025-04-15T08:06:06.7007198Z #11 317.1 -- Installing: /usr/libexec/netdata/charts.d/example.chart.sh
2025-04-15T08:06:06.7007872Z #11 317.1 -- Installing: /usr/libexec/netdata/charts.d/libreswan.chart.sh
2025-04-15T08:06:06.7008570Z #11 317.1 -- Installing: /usr/libexec/netdata/charts.d/opensips.chart.sh
2025-04-15T08:06:06.7009233Z #11 317.1 -- Installing: /usr/lib/netdata/conf.d/charts.d/example.conf
2025-04-15T08:06:06.7009909Z #11 317.1 -- Installing: /usr/lib/netdata/conf.d/charts.d/libreswan.conf
2025-04-15T08:06:06.7010569Z #11 317.1 -- Installing: /usr/lib/netdata/conf.d/charts.d/opensips.conf
2025-04-15T08:06:06.7011267Z #11 317.1 -- Installing: /usr/libexec/netdata/plugins.d/loopsleepms.sh.inc
2025-04-15T08:06:06.7012141Z #11 317.1 -- Installing: /usr/libexec/netdata/plugins.d/tc-qos-helper.sh
2025-04-15T08:06:06.7012994Z #11 317.1 -- Installing: /usr/lib/netdata/conf.d/schema.d/systemd-journal%3Amonitored-directories.json
2025-04-15T08:06:06.7013960Z #11 317.1 -- Installing: /usr/lib/netdata/conf.d/schema.d/health%3Aalert%3Aprototype.json
2025-04-15T08:06:06.7014646Z #11 317.1 -- Installing: /etc/netdata/python.d
2025-04-15T08:06:06.7015210Z #11 317.1 -- Installing: /usr/libexec/netdata/plugins.d/python.d.plugin
2025-04-15T08:06:06.7015874Z #11 317.1 -- Installing: /usr/libexec/netdata/python.d/python_modules
2025-04-15T08:06:06.7016732Z #11 317.1 -- Installing: /usr/libexec/netdata/python.d/python_modules/bases
2025-04-15T08:06:06.7017554Z #11 317.1 -- Installing: /usr/libexec/netdata/python.d/python_modules/bases/FrameworkServices
2025-04-15T08:06:06.7018566Z #11 317.1 -- Installing: /usr/libexec/netdata/python.d/python_modules/bases/FrameworkServices/UrlService.py
2025-04-15T08:06:06.7019711Z #11 317.1 -- Installing: /usr/libexec/netdata/python.d/python_modules/bases/FrameworkServices/ExecutableService.py
2025-04-15T08:06:06.7020839Z #11 317.1 -- Installing: /usr/libexec/netdata/python.d/python_modules/bases/FrameworkServices/SocketService.py
2025-04-15T08:06:06.7021932Z #11 317.1 -- Installing: /usr/libexec/netdata/python.d/python_modules/bases/FrameworkServices/LogService.py
2025-04-15T08:06:06.7023036Z #11 317.1 -- Installing: /usr/libexec/netdata/python.d/python_modules/bases/FrameworkServices/SimpleService.py
2025-04-15T08:06:06.7024125Z #11 317.1 -- Installing: /usr/libexec/netdata/python.d/python_modules/bases/FrameworkServices/__init__.py
2025-04-15T08:06:06.7025352Z #11 317.1 -- Installing: /usr/libexec/netdata/python.d/python_modules/bases/FrameworkServices/MySQLService.py
2025-04-15T08:06:06.7026517Z #11 317.1 -- Installing: /usr/libexec/netdata/python.d/python_modules/bases/loaders.py
2025-04-15T08:06:06.7027371Z #11 317.1 -- Installing: /usr/libexec/netdata/python.d/python_modules/bases/loggers.py
2025-04-15T08:06:06.7028222Z #11 317.1 -- Installing: /usr/libexec/netdata/python.d/python_modules/bases/__init__.py
2025-04-15T08:06:06.7029052Z #11 317.1 -- Installing: /usr/libexec/netdata/python.d/python_modules/bases/charts.py
2025-04-15T08:06:06.7029886Z #11 317.1 -- Installing: /usr/libexec/netdata/python.d/python_modules/bases/collection.py
2025-04-15T08:06:06.7056545Z #11 317.1 -- Installing: /usr/libexec/netdata/python.d/python_modules/third_party
2025-04-15T08:06:06.7057450Z #11 317.1 -- Installing: /usr/libexec/netdata/python.d/python_modules/third_party/filelock.py
2025-04-15T08:06:06.7058432Z #11 317.1 -- Installing: /usr/libexec/netdata/python.d/python_modules/third_party/ordereddict.py
2025-04-15T08:06:06.7059389Z #11 317.1 -- Installing: /usr/libexec/netdata/python.d/python_modules/third_party/monotonic.py
2025-04-15T08:06:06.7060341Z #11 317.1 -- Installing: /usr/libexec/netdata/python.d/python_modules/third_party/__init__.py
2025-04-15T08:06:06.7061213Z #11 317.1 -- Installing: /usr/libexec/netdata/python.d/python_modules/pyyaml3
2025-04-15T08:06:06.7062031Z #11 317.1 -- Installing: /usr/libexec/netdata/python.d/python_modules/pyyaml3/parser.py
2025-04-15T08:06:06.7062906Z #11 317.1 -- Installing: /usr/libexec/netdata/python.d/python_modules/pyyaml3/dumper.py
2025-04-15T08:06:06.7063782Z #11 317.1 -- Installing: /usr/libexec/netdata/python.d/python_modules/pyyaml3/composer.py
2025-04-15T08:06:06.7064687Z #11 317.1 -- Installing: /usr/libexec/netdata/python.d/python_modules/pyyaml3/constructor.py
2025-04-15T08:06:06.7065575Z #11 317.1 -- Installing: /usr/libexec/netdata/python.d/python_modules/pyyaml3/cyaml.py
2025-04-15T08:06:06.7066619Z #11 317.1 -- Installing: /usr/libexec/netdata/python.d/python_modules/pyyaml3/tokens.py
2025-04-15T08:06:06.7067461Z #11 317.1 -- Installing: /usr/libexec/netdata/python.d/python_modules/pyyaml3/reader.py
2025-04-15T08:06:06.7068305Z #11 317.1 -- Installing: /usr/libexec/netdata/python.d/python_modules/pyyaml3/events.py
2025-04-15T08:06:06.7069400Z #11 317.1 -- Installing: /usr/libexec/netdata/python.d/python_modules/pyyaml3/representer.py
2025-04-15T08:06:06.7070278Z #11 317.1 -- Installing: /usr/libexec/netdata/python.d/python_modules/pyyaml3/loader.py
2025-04-15T08:06:06.7071133Z #11 317.1 -- Installing: /usr/libexec/netdata/python.d/python_modules/pyyaml3/emitter.py
2025-04-15T08:06:06.7071985Z #11 317.1 -- Installing: /usr/libexec/netdata/python.d/python_modules/pyyaml3/nodes.py
2025-04-15T08:06:06.7072833Z #11 317.1 -- Installing: /usr/libexec/netdata/python.d/python_modules/pyyaml3/__init__.py
2025-04-15T08:06:06.7073684Z #11 317.1 -- Installing: /usr/libexec/netdata/python.d/python_modules/pyyaml3/serializer.py
2025-04-15T08:06:06.7074494Z #11 317.1 -- Installing: /usr/libexec/netdata/python.d/python_modules/pyyaml3/error.py
2025-04-15T08:06:06.7075328Z #11 317.1 -- Installing: /usr/libexec/netdata/python.d/python_modules/pyyaml3/resolver.py
2025-04-15T08:06:06.7076367Z #11 317.1 -- Installing: /usr/libexec/netdata/python.d/python_modules/pyyaml3/scanner.py
2025-04-15T08:06:06.7077205Z #11 317.1 -- Installing: /usr/libexec/netdata/python.d/python_modules/__init__.py
2025-04-15T08:06:06.7077976Z #11 317.1 -- Installing: /usr/libexec/netdata/python.d/python_modules/urllib3
2025-04-15T08:06:06.7078797Z #11 317.1 -- Installing: /usr/libexec/netdata/python.d/python_modules/urllib3/connection.py
2025-04-15T08:06:06.7079667Z #11 317.1 -- Installing: /usr/libexec/netdata/python.d/python_modules/urllib3/fields.py
2025-04-15T08:06:06.7080558Z #11 317.1 -- Installing: /usr/libexec/netdata/python.d/python_modules/urllib3/_collections.py
2025-04-15T08:06:06.7081466Z #11 317.1 -- Installing: /usr/libexec/netdata/python.d/python_modules/urllib3/filepost.py
2025-04-15T08:06:06.7082572Z #11 317.1 -- Installing: /usr/libexec/netdata/python.d/python_modules/urllib3/poolmanager.py
2025-04-15T08:06:06.7083475Z #11 317.1 -- Installing: /usr/libexec/netdata/python.d/python_modules/urllib3/contrib
2025-04-15T08:06:06.7084405Z #11 317.1 -- Installing: /usr/libexec/netdata/python.d/python_modules/urllib3/contrib/_securetransport
2025-04-15T08:06:06.7085574Z #11 317.1 -- Installing: /usr/libexec/netdata/python.d/python_modules/urllib3/contrib/_securetransport/bindings.py
2025-04-15T08:06:06.7086939Z #11 317.1 -- Installing: /usr/libexec/netdata/python.d/python_modules/urllib3/contrib/_securetransport/low_level.py
2025-04-15T08:06:06.7088110Z #11 317.1 -- Installing: /usr/libexec/netdata/python.d/python_modules/urllib3/contrib/_securetransport/__init__.py
2025-04-15T08:06:06.7089288Z #11 317.1 -- Installing: /usr/libexec/netdata/python.d/python_modules/urllib3/contrib/securetransport.py
2025-04-15T08:06:06.7090345Z #11 317.1 -- Installing: /usr/libexec/netdata/python.d/python_modules/urllib3/contrib/appengine.py
2025-04-15T08:06:06.7091318Z #11 317.1 -- Installing: /usr/libexec/netdata/python.d/python_modules/urllib3/contrib/__init__.py
2025-04-15T08:06:06.7092265Z #11 317.1 -- Installing: /usr/libexec/netdata/python.d/python_modules/urllib3/contrib/socks.py
2025-04-15T08:06:06.7093239Z #11 317.1 -- Installing: /usr/libexec/netdata/python.d/python_modules/urllib3/contrib/ntlmpool.py
2025-04-15T08:06:06.7094228Z #11 317.1 -- Installing: /usr/libexec/netdata/python.d/python_modules/urllib3/contrib/pyopenssl.py
2025-04-15T08:06:06.7095153Z #11 317.1 -- Installing: /usr/libexec/netdata/python.d/python_modules/urllib3/response.py
2025-04-15T08:06:06.7095992Z #11 317.1 -- Installing: /usr/libexec/netdata/python.d/python_modules/urllib3/util
2025-04-15T08:06:06.7097105Z #11 317.1 -- Installing: /usr/libexec/netdata/python.d/python_modules/urllib3/util/timeout.py
2025-04-15T08:06:06.7098060Z #11 317.1 -- Installing: /usr/libexec/netdata/python.d/python_modules/urllib3/util/connection.py
2025-04-15T08:06:06.7099074Z #11 317.1 -- Installing: /usr/libexec/netdata/python.d/python_modules/urllib3/util/selectors.py
2025-04-15T08:06:06.7100005Z #11 317.1 -- Installing: /usr/libexec/netdata/python.d/python_modules/urllib3/util/retry.py
2025-04-15T08:06:06.7101080Z #11 317.1 -- Installing: /usr/libexec/netdata/python.d/python_modules/urllib3/util/ssl_.py
2025-04-15T08:06:06.7101996Z #11 317.1 -- Installing: /usr/libexec/netdata/python.d/python_modules/urllib3/util/response.py
2025-04-15T08:06:06.7102904Z #11 317.1 -- Installing: /usr/libexec/netdata/python.d/python_modules/urllib3/util/url.py
2025-04-15T08:06:06.7103802Z #11 317.1 -- Installing: /usr/libexec/netdata/python.d/python_modules/urllib3/util/request.py
2025-04-15T08:06:06.7104716Z #11 317.1 -- Installing: /usr/libexec/netdata/python.d/python_modules/urllib3/util/__init__.py
2025-04-15T08:06:06.7105631Z #11 317.1 -- Installing: /usr/libexec/netdata/python.d/python_modules/urllib3/util/wait.py
2025-04-15T08:06:06.7106752Z #11 317.1 -- Installing: /usr/libexec/netdata/python.d/python_modules/urllib3/exceptions.py
2025-04-15T08:06:06.7107632Z #11 317.1 -- Installing: /usr/libexec/netdata/python.d/python_modules/urllib3/request.py
2025-04-15T08:06:06.7108505Z #11 317.1 -- Installing: /usr/libexec/netdata/python.d/python_modules/urllib3/__init__.py
2025-04-15T08:06:06.7109365Z #11 317.1 -- Installing: /usr/libexec/netdata/python.d/python_modules/urllib3/packages
2025-04-15T08:06:06.7110307Z #11 317.1 -- Installing: /usr/libexec/netdata/python.d/python_modules/urllib3/packages/ordered_dict.py
2025-04-15T08:06:06.7111295Z #11 317.1 -- Installing: /usr/libexec/netdata/python.d/python_modules/urllib3/packages/six.py
2025-04-15T08:06:06.7112236Z #11 317.1 -- Installing: /usr/libexec/netdata/python.d/python_modules/urllib3/packages/__init__.py
2025-04-15T08:06:06.7113302Z #11 317.1 -- Installing: /usr/libexec/netdata/python.d/python_modules/urllib3/packages/ssl_match_hostname
2025-04-15T08:06:06.7114717Z #11 317.1 -- Installing: /usr/libexec/netdata/python.d/python_modules/urllib3/packages/ssl_match_hostname/_implementation.py
2025-04-15T08:06:06.7115988Z #11 317.1 -- Installing: /usr/libexec/netdata/python.d/python_modules/urllib3/packages/ssl_match_hostname/__init__.py
2025-04-15T08:06:06.7117248Z #11 317.1 -- Installing: /usr/libexec/netdata/python.d/python_modules/urllib3/packages/backports
2025-04-15T08:06:06.7118290Z #11 317.1 -- Installing: /usr/libexec/netdata/python.d/python_modules/urllib3/packages/backports/makefile.py
2025-04-15T08:06:06.7119388Z #11 317.1 -- Installing: /usr/libexec/netdata/python.d/python_modules/urllib3/packages/backports/__init__.py
2025-04-15T08:06:06.7120426Z #11 317.1 -- Installing: /usr/libexec/netdata/python.d/python_modules/urllib3/connectionpool.py
2025-04-15T08:06:06.7121197Z #11 317.1 -- Installing: /usr/lib/netdata/conf.d/python.d.conf
2025-04-15T08:06:06.7121822Z #11 317.1 -- Installing: /usr/lib/netdata/conf.d/python.d/am2320.conf
2025-04-15T08:06:06.7122500Z #11 317.1 -- Installing: /usr/lib/netdata/conf.d/python.d/go_expvar.conf
2025-04-15T08:06:06.7123186Z #11 317.1 -- Installing: /usr/lib/netdata/conf.d/python.d/haproxy.conf
2025-04-15T08:06:06.7123833Z #11 317.1 -- Installing: /usr/lib/netdata/conf.d/python.d/pandas.conf
2025-04-15T08:06:06.7124474Z #11 317.1 -- Installing: /usr/lib/netdata/conf.d/python.d/traefik.conf
2025-04-15T08:06:06.7125136Z #11 317.1 -- Installing: /usr/libexec/netdata/python.d/am2320.chart.py
2025-04-15T08:06:06.7125815Z #11 317.1 -- Installing: /usr/libexec/netdata/python.d/go_expvar.chart.py
2025-04-15T08:06:06.7126698Z #11 317.1 -- Installing: /usr/libexec/netdata/python.d/haproxy.chart.py
2025-04-15T08:06:06.7127374Z #11 317.1 -- Installing: /usr/libexec/netdata/python.d/pandas.chart.py
2025-04-15T08:06:06.7128047Z #11 317.1 -- Installing: /usr/libexec/netdata/python.d/traefik.chart.py
2025-04-15T08:06:06.7128721Z #11 317.1 -- Installing: /usr/libexec/netdata/plugins.d/ioping.plugin
2025-04-15T08:06:06.7129364Z #11 317.1 -- Installing: /usr/share/netdata/web/static/splash.css
2025-04-15T08:06:06.7130042Z #11 317.1 -- Installing: /usr/share/netdata/web/v3/1040.981a2288c9e1e16c0af4.js
2025-04-15T08:06:06.7130851Z #11 317.1 -- Installing: /usr/share/netdata/web/v3/1040.981a2288c9e1e16c0af4.js.LICENSE.txt
2025-04-15T08:06:06.7131695Z #11 317.1 -- Installing: /usr/share/netdata/web/v3/1220.4fafcc3e416e149c6df4.chunk.js
2025-04-15T08:06:06.7132742Z #11 317.1 -- Installing: /usr/share/netdata/web/v3/1391.5a48c70fcf7cf96c7840.chunk.js
2025-04-15T08:06:06.7133539Z #11 317.1 -- Installing: /usr/share/netdata/web/v3/1396.6d2546b6cbe7770153f9.chunk.js
2025-04-15T08:06:06.7134414Z #11 317.1 -- Installing: /usr/share/netdata/web/v3/1396.6d2546b6cbe7770153f9.chunk.js.LICENSE.txt
2025-04-15T08:06:06.7135306Z #11 317.1 -- Installing: /usr/share/netdata/web/v3/1418.9b2ed617cd773e5bfbbe.chunk.js
2025-04-15T08:06:06.7136281Z #11 317.1 -- Installing: /usr/share/netdata/web/v3/146.a86f914bf1e58149a5ad.chunk.js
2025-04-15T08:06:06.7137087Z #11 317.1 -- Installing: /usr/share/netdata/web/v3/1726.d24feb94e507c04e59c4.chunk.js
2025-04-15T08:06:06.7137908Z #11 317.1 -- Installing: /usr/share/netdata/web/v3/1741.5c0fab0e22c4deff601a.chunk.js
2025-04-15T08:06:06.7138693Z #11 317.1 -- Installing: /usr/share/netdata/web/v3/1778.b783647191054616d933.chunk.js
2025-04-15T08:06:06.7139562Z #11 317.1 -- Installing: /usr/share/netdata/web/v3/1778.b783647191054616d933.chunk.js.LICENSE.txt
2025-04-15T08:06:06.7140424Z #11 317.1 -- Installing: /usr/share/netdata/web/v3/1839.1d78c1ba5cf4e3a99176.chunk.js
2025-04-15T08:06:06.7141223Z #11 317.1 -- Installing: /usr/share/netdata/web/v3/185.1ddb5051b50e8775ba1e.chunk.js
2025-04-15T08:06:06.7142016Z #11 317.1 -- Installing: /usr/share/netdata/web/v3/1876.d03194e4fd56e6bf3cbf.chunk.js
2025-04-15T08:06:06.7142818Z #11 317.1 -- Installing: /usr/share/netdata/web/v3/195.beb35753d23aa84a2aa1.chunk.js
2025-04-15T08:06:06.7143622Z #11 317.1 -- Installing: /usr/share/netdata/web/v3/2007.1fc87ec9328298eb0acb.chunk.js
2025-04-15T08:06:06.7144632Z #11 317.1 -- Installing: /usr/share/netdata/web/v3/2039.a9704cecddaa26ac059a.chunk.js
2025-04-15T08:06:06.7145571Z #11 317.1 -- Installing: /usr/share/netdata/web/v3/2039.a9704cecddaa26ac059a.chunk.js.LICENSE.txt
2025-04-15T08:06:06.7146635Z #11 317.1 -- Installing: /usr/share/netdata/web/v3/2103.aad4322d8cc95bdb09dc.css
2025-04-15T08:06:06.7147437Z #11 317.1 -- Installing: /usr/share/netdata/web/v3/2103.b8b62ac3c9bd04dd71ff.chunk.js
2025-04-15T08:06:06.7148322Z #11 317.1 -- Installing: /usr/share/netdata/web/v3/2103.b8b62ac3c9bd04dd71ff.chunk.js.LICENSE.txt
2025-04-15T08:06:06.7149208Z #11 317.1 -- Installing: /usr/share/netdata/web/v3/2121.6bf5645d76bc2fc0f0e0.chunk.js
2025-04-15T08:06:06.7149986Z #11 317.1 -- Installing: /usr/share/netdata/web/v3/23.fdc9b64a399917807bb5.chunk.js
2025-04-15T08:06:06.7150767Z #11 317.1 -- Installing: /usr/share/netdata/web/v3/2490.7cbd7d1705330d4b8bdf.chunk.js
2025-04-15T08:06:06.7151576Z #11 317.1 -- Installing: /usr/share/netdata/web/v3/2653.888a13b14cb0e6c07307.chunk.js
2025-04-15T08:06:06.7152359Z #11 317.1 -- Installing: /usr/share/netdata/web/v3/2812.677c337d61a90a941d82.css
2025-04-15T08:06:06.7153118Z #11 317.1 -- Installing: /usr/share/netdata/web/v3/2812.bc3115eff19ac74fdba8.chunk.js
2025-04-15T08:06:06.7153899Z #11 317.1 -- Installing: /usr/share/netdata/web/v3/2820.d3559405a8dccd622ecd.chunk.js
2025-04-15T08:06:06.7154770Z #11 317.1 -- Installing: /usr/share/netdata/web/v3/2820.d3559405a8dccd622ecd.chunk.js.LICENSE.txt
2025-04-15T08:06:06.7155617Z #11 317.1 -- Installing: /usr/share/netdata/web/v3/2946.677c337d61a90a941d82.css
2025-04-15T08:06:06.7156573Z #11 317.1 -- Installing: /usr/share/netdata/web/v3/2946.b8be01c9d8cc29cc1fa8.chunk.js
2025-04-15T08:06:06.7157371Z #11 317.2 -- Installing: /usr/share/netdata/web/v3/3105.bd1c7d2670e94f396fc2.chunk.js
2025-04-15T08:06:06.7158149Z #11 317.2 -- Installing: /usr/share/netdata/web/v3/3187.8d218082eadc5c47291d.chunk.js
2025-04-15T08:06:06.7158932Z #11 317.2 -- Installing: /usr/share/netdata/web/v3/3225.a5d924b0f7b9f98557c2.chunk.js
2025-04-15T08:06:06.7159736Z #11 317.2 -- Installing: /usr/share/netdata/web/v3/3249.e1119ece53e11c3de4bb.chunk.js
2025-04-15T08:06:06.7160529Z #11 317.2 -- Installing: /usr/share/netdata/web/v3/3266.1868d5c27913bfbcbdbc.chunk.js
2025-04-15T08:06:06.7161403Z #11 317.2 -- Installing: /usr/share/netdata/web/v3/3266.1868d5c27913bfbcbdbc.chunk.js.LICENSE.txt
2025-04-15T08:06:06.7162454Z #11 317.2 -- Installing: /usr/share/netdata/web/v3/3350.796465456783ef242f80.chunk.js
2025-04-15T08:06:06.7163215Z #11 317.2 -- Installing: /usr/share/netdata/web/v3/3621.864b011a147b22a67a89.chunk.js
2025-04-15T08:06:06.7163989Z #11 317.2 -- Installing: /usr/share/netdata/web/v3/3730.cf4ffa681709687318f5.chunk.js
2025-04-15T08:06:06.7164768Z #11 317.2 -- Installing: /usr/share/netdata/web/v3/3736.930448897dc39f1a0068.chunk.js
2025-04-15T08:06:06.7165558Z #11 317.2 -- Installing: /usr/share/netdata/web/v3/3750.d8eb008da1cdeb79c9a1.chunk.js
2025-04-15T08:06:06.7166493Z #11 317.2 -- Installing: /usr/share/netdata/web/v3/3961.35846f5798e9d13824e1.chunk.js
2025-04-15T08:06:06.7167353Z #11 317.2 -- Installing: /usr/share/netdata/web/v3/3961.35846f5798e9d13824e1.chunk.js.LICENSE.txt
2025-04-15T08:06:06.7168224Z #11 317.2 -- Installing: /usr/share/netdata/web/v3/3968.17de275a078a9ba51112.chunk.js
2025-04-15T08:06:06.7168964Z #11 317.2 -- Installing: /usr/share/netdata/web/v3/3D_PARTY_LICENSES.txt
2025-04-15T08:06:06.7169697Z #11 317.2 -- Installing: /usr/share/netdata/web/v3/4034.9db872632291516ad17e.chunk.js
2025-04-15T08:06:06.7170478Z #11 317.2 -- Installing: /usr/share/netdata/web/v3/4474.32fabc925a518439ee08.chunk.js
2025-04-15T08:06:06.7171243Z #11 317.2 -- Installing: /usr/share/netdata/web/v3/4670.677c337d61a90a941d82.css
2025-04-15T08:06:06.7171996Z #11 317.2 -- Installing: /usr/share/netdata/web/v3/4670.dca9da19142d105bcd97.chunk.js
2025-04-15T08:06:06.7172776Z #11 317.2 -- Installing: /usr/share/netdata/web/v3/4862.2f1ea3619bb3596841c0.chunk.js
2025-04-15T08:06:06.7173534Z #11 317.2 -- Installing: /usr/share/netdata/web/v3/511.677c337d61a90a941d82.css
2025-04-15T08:06:06.7174461Z #11 317.2 -- Installing: /usr/share/netdata/web/v3/511.7062fb9863bfebf16506.chunk.js
2025-04-15T08:06:06.7175253Z #11 317.2 -- Installing: /usr/share/netdata/web/v3/5126.9ea70e746436e6cb8c98.chunk.js
2025-04-15T08:06:06.7176035Z #11 317.2 -- Installing: /usr/share/netdata/web/v3/5246.ed4e0a487f4ee9f95093.chunk.js
2025-04-15T08:06:06.7177084Z #11 317.2 -- Installing: /usr/share/netdata/web/v3/5304.0fd82c5d80fc9cd88901.chunk.js
2025-04-15T08:06:06.7177878Z #11 317.2 -- Installing: /usr/share/netdata/web/v3/5476.3dabad702c9d956c3723.chunk.js
2025-04-15T08:06:06.7178655Z #11 317.2 -- Installing: /usr/share/netdata/web/v3/5578.a9a66d53eec79b0b6804.chunk.js
2025-04-15T08:06:06.7179436Z #11 317.2 -- Installing: /usr/share/netdata/web/v3/5581.959f4366beb6bd920c3e.chunk.js
2025-04-15T08:06:06.7180224Z #11 317.2 -- Installing: /usr/share/netdata/web/v3/5794.e31bba7354a7cdce6694.chunk.js
2025-04-15T08:06:06.7181002Z #11 317.2 -- Installing: /usr/share/netdata/web/v3/5923.e27ca557a39165353524.chunk.js
2025-04-15T08:06:06.7181792Z #11 317.2 -- Installing: /usr/share/netdata/web/v3/5947.d70041f770abe52c577b.chunk.js
2025-04-15T08:06:06.7182574Z #11 317.2 -- Installing: /usr/share/netdata/web/v3/60.ed51557578e3cc5f6533.chunk.js
2025-04-15T08:06:06.7183358Z #11 317.2 -- Installing: /usr/share/netdata/web/v3/6008.fdb47f5f93cb91688a21.chunk.js
2025-04-15T08:06:06.7184159Z #11 317.2 -- Installing: /usr/share/netdata/web/v3/6147.9bb32fbb38c5c503df63.chunk.js
2025-04-15T08:06:06.7184938Z #11 317.2 -- Installing: /usr/share/netdata/web/v3/6299.235cb599d48fb4facc2a.chunk.js
2025-04-15T08:06:06.7185724Z #11 317.2 -- Installing: /usr/share/netdata/web/v3/6308.11bf1c9a370e5e9ad066.chunk.js
2025-04-15T08:06:06.7186720Z #11 317.2 -- Installing: /usr/share/netdata/web/v3/6384.fe40af53ceab0bcdb09c.chunk.js
2025-04-15T08:06:06.7187505Z #11 317.2 -- Installing: /usr/share/netdata/web/v3/6620.4d87376727e8b0a10a73.chunk.js
2025-04-15T08:06:06.7188255Z #11 317.2 -- Installing: /usr/share/netdata/web/v3/6620.677c337d61a90a941d82.css
2025-04-15T08:06:06.7189043Z #11 317.2 -- Installing: /usr/share/netdata/web/v3/6654.44123ee0615c31ccb00b.chunk.js
2025-04-15T08:06:06.7189835Z #11 317.2 -- Installing: /usr/share/netdata/web/v3/6661.3acea72d554afa1a83d5.chunk.js
2025-04-15T08:06:06.7190608Z #11 317.2 -- Installing: /usr/share/netdata/web/v3/6760.0f42f4240339dd1d8840.chunk.js
2025-04-15T08:06:06.7191629Z #11 317.2 -- Installing: /usr/share/netdata/web/v3/6815.2deeb5e0f1afce404a6b.chunk.js
2025-04-15T08:06:06.7192398Z #11 317.2 -- Installing: /usr/share/netdata/web/v3/683.02c03135f21b9a47bc8c.css
2025-04-15T08:06:06.7193150Z #11 317.2 -- Installing: /usr/share/netdata/web/v3/683.463a6db96f6cd42cf8f8.chunk.js
2025-04-15T08:06:06.7193923Z #11 317.2 -- Installing: /usr/share/netdata/web/v3/6891.0112b654bb6ecb3b5f21.chunk.js
2025-04-15T08:06:06.7194709Z #11 317.2 -- Installing: /usr/share/netdata/web/v3/7103.f8ede8bd84f3d9360ae5.chunk.js
2025-04-15T08:06:06.7195542Z #11 317.2 -- Installing: /usr/share/netdata/web/v3/7146.a4fbc5d90a1bf4ba23dc.chunk.js
2025-04-15T08:06:06.7196553Z #11 317.2 -- Installing: /usr/share/netdata/web/v3/7332.aa3ced98d10dd7e90ff8.chunk.js
2025-04-15T08:06:06.7197391Z #11 317.2 -- Installing: /usr/share/netdata/web/v3/7436.e930f9d341aea6e88595.chunk.js
2025-04-15T08:06:06.7198178Z #11 317.2 -- Installing: /usr/share/netdata/web/v3/7471.d0f1b2bc3998a53315e1.chunk.js
2025-04-15T08:06:06.7198958Z #11 317.2 -- Installing: /usr/share/netdata/web/v3/7529.884d100d211763c31765.chunk.js
2025-04-15T08:06:06.7199773Z #11 317.2 -- Installing: /usr/share/netdata/web/v3/7840.42f5312d87c796388973.chunk.js
2025-04-15T08:06:06.7200551Z #11 317.2 -- Installing: /usr/share/netdata/web/v3/7866.bdf4d3ddffcca79b4178.chunk.js
2025-04-15T08:06:06.7201463Z #11 317.2 -- Installing: /usr/share/netdata/web/v3/7866.bdf4d3ddffcca79b4178.chunk.js.LICENSE.txt
2025-04-15T08:06:06.7202342Z #11 317.2 -- Installing: /usr/share/netdata/web/v3/7959.5ad7018c8e4b8976a274.chunk.js
2025-04-15T08:06:06.7203304Z #11 317.2 -- Installing: /usr/share/netdata/web/v3/813.bdc228127ea4b0235ef9.chunk.js
2025-04-15T08:06:06.7204103Z #11 317.2 -- Installing: /usr/share/netdata/web/v3/8164.5081e129915f80ae6853.chunk.js
2025-04-15T08:06:06.7204882Z #11 317.2 -- Installing: /usr/share/netdata/web/v3/8252.3abc9022982bb4c2d93c.chunk.js
2025-04-15T08:06:06.7205677Z #11 317.2 -- Installing: /usr/share/netdata/web/v3/8505.042a73840a51df74a48d.chunk.js
2025-04-15T08:06:06.7206633Z #11 317.2 -- Installing: /usr/share/netdata/web/v3/8506.0aa9bfbcff803ac6ab2b.chunk.js
2025-04-15T08:06:06.7207445Z #11 317.2 -- Installing: /usr/share/netdata/web/v3/8583.b6fb88f0e5bda91e52aa.chunk.js
2025-04-15T08:06:06.7208242Z #11 317.2 -- Installing: /usr/share/netdata/web/v3/86.264c3facace433bccffe.chunk.js
2025-04-15T08:06:06.7209035Z #11 317.2 -- Installing: /usr/share/netdata/web/v3/8714.87ffeccc28e0fd47c302.chunk.js
2025-04-15T08:06:06.7209821Z #11 317.2 -- Installing: /usr/share/netdata/web/v3/8773.49376d809a33021bd657.chunk.js
2025-04-15T08:06:06.7954009Z #11 317.2 -- Installing: /usr/share/netdata/web/v3/8784.33c94575f9e45dc53ab7.chunk.js
2025-04-15T08:06:06.7955492Z #11 317.2 -- Installing: /usr/share/netdata/web/v3/8811.3fc79031347f8d71bd50.chunk.js
2025-04-15T08:06:06.7958165Z #11 317.2 -- Installing: /usr/share/netdata/web/v3/8853.0f983b1c2bd0b6e746e7.chunk.js
2025-04-15T08:06:06.7962151Z #11 317.2 -- Installing: /usr/share/netdata/web/v3/8938.fdfb840517bf01ce39c2.chunk.js
2025-04-15T08:06:06.7962941Z #11 317.2 -- Installing: /usr/share/netdata/web/v3/916.d62d9ca6cbfb1796d8e1.chunk.js
2025-04-15T08:06:06.7963718Z #11 317.2 -- Installing: /usr/share/netdata/web/v3/934.60ca29e41d9ce9dcf7e4.chunk.js
2025-04-15T08:06:06.7964477Z #11 317.2 -- Installing: /usr/share/netdata/web/v3/9473.d6c7e84660240cab23be.chunk.js
2025-04-15T08:06:06.7965104Z #11 317.2 -- Installing: /usr/share/netdata/web/v3/966.97375c75f940d70f155b.chunk.js
2025-04-15T08:06:06.7965593Z #11 317.2 -- Installing: /usr/share/netdata/web/v3/9687.9b335887241d8c0f536f.chunk.js
2025-04-15T08:06:06.7966285Z #11 317.2 -- Installing: /usr/share/netdata/web/v3/9818.dc32425359dc3f42388b.chunk.js
2025-04-15T08:06:06.7966752Z #11 317.2 -- Installing: /usr/share/netdata/web/v3/9892.b9564fcf6f400222fa60.chunk.js
2025-04-15T08:06:06.7967190Z #11 317.2 -- Installing: /usr/share/netdata/web/v3/9912.bba272395b95057fa79f.chunk.js
2025-04-15T08:06:06.7972100Z #11 317.2 -- Installing: /usr/share/netdata/web/v3/LICENSE.md
2025-04-15T08:06:06.7972450Z #11 317.2 -- Installing: /usr/share/netdata/web/v3/LICENSE.txt
2025-04-15T08:06:06.7972830Z #11 317.2 -- Installing: /usr/share/netdata/web/v3/agent.html
2025-04-15T08:06:06.7973425Z #11 317.2 -- Installing: /usr/share/netdata/web/v3/allFiles.7.48.0.json
2025-04-15T08:06:06.7973868Z #11 317.2 -- Installing: /usr/share/netdata/web/v3/allFiles.7.json
2025-04-15T08:06:06.7974383Z #11 317.2 -- Installing: /usr/share/netdata/web/v3/app.4da0883c6ce016bf3d81.css
2025-04-15T08:06:06.7974822Z #11 317.2 -- Installing: /usr/share/netdata/web/v3/app.ddaab1eb59572bfe1999.js
2025-04-15T08:06:06.7975261Z #11 317.2 -- Installing: /usr/share/netdata/web/v3/apple-app-site-association
2025-04-15T08:06:06.7975676Z #11 317.2 -- Installing: /usr/share/netdata/web/v3/bundlesManifest.7.json
2025-04-15T08:06:06.7976043Z #11 317.2 -- Installing: /usr/share/netdata/web/v3/favicon.ico
2025-04-15T08:06:06.7976669Z #11 317.2 -- Installing: /usr/share/netdata/web/v3/index.html
2025-04-15T08:06:06.7977011Z #11 317.2 -- Installing: /usr/share/netdata/web/v3/local-agent.html
2025-04-15T08:06:06.7977449Z #11 317.2 -- Installing: /usr/share/netdata/web/v3/netdata.charts.4e44a3cd5eface585116.js
2025-04-15T08:06:06.7977933Z #11 317.2 -- Installing: /usr/share/netdata/web/v3/netdata.ui.102823fd2ac58dd4c301.js
2025-04-15T08:06:06.7978441Z #11 317.2 -- Installing: /usr/share/netdata/web/v3/netdata.ui.102823fd2ac58dd4c301.js.LICENSE.txt
2025-04-15T08:06:06.7978967Z #11 317.2 -- Installing: /usr/share/netdata/web/v3/npm.react.dom.6a0f313b566a03f0816a.js
2025-04-15T08:06:06.7979496Z #11 317.2 -- Installing: /usr/share/netdata/web/v3/npm.react.dom.6a0f313b566a03f0816a.js.LICENSE.txt
2025-04-15T08:06:06.7980208Z #11 317.2 -- Installing: /usr/share/netdata/web/v3/registry-access.html
2025-04-15T08:06:06.7980636Z #11 317.2 -- Installing: /usr/share/netdata/web/v3/registry-alert-redirect.html
2025-04-15T08:06:06.7981070Z #11 317.2 -- Installing: /usr/share/netdata/web/v3/registry-hello.html
2025-04-15T08:06:06.7981594Z #11 317.2 -- Installing: /usr/share/netdata/web/v3/runtime.8a9335ae8943d8e939bb.js
2025-04-15T08:06:06.7982115Z #11 317.2 -- Installing: /usr/share/netdata/web/v3/sw.js
2025-04-15T08:06:06.7982472Z #11 317.2 -- Installing: /usr/share/netdata/web/v3/.well-known/assetlinks.json
2025-04-15T08:06:06.7982914Z #11 317.2 -- Installing: /usr/share/netdata/web/v3/static/apple-app-site-association
2025-04-15T08:06:06.7983333Z #11 317.2 -- Installing: /usr/share/netdata/web/v3/static/splash.css
2025-04-15T08:06:06.7983738Z #11 317.2 -- Installing: /usr/share/netdata/web/v3/static/.well-known/assetlinks.json
2025-04-15T08:06:06.7984220Z #11 317.2 -- Installing: /usr/share/netdata/web/v3/static/email/img/clea_badge.png
2025-04-15T08:06:06.7984667Z #11 317.2 -- Installing: /usr/share/netdata/web/v3/static/email/img/clea_siren.png
2025-04-15T08:06:06.7985142Z #11 317.2 -- Installing: /usr/share/netdata/web/v3/static/email/img/community_icon.png
2025-04-15T08:06:06.7985693Z #11 317.2 -- Installing: /usr/share/netdata/web/v3/static/email/img/configure_icon.png
2025-04-15T08:06:06.7986392Z #11 317.2 -- Installing: /usr/share/netdata/web/v3/static/email/img/crit_badge.png
2025-04-15T08:06:06.7986845Z #11 317.2 -- Installing: /usr/share/netdata/web/v3/static/email/img/crit_siren.png
2025-04-15T08:06:06.7987294Z #11 317.2 -- Installing: /usr/share/netdata/web/v3/static/email/img/flood_siren.png
2025-04-15T08:06:06.7987741Z #11 317.2 -- Installing: /usr/share/netdata/web/v3/static/email/img/full_logo.png
2025-04-15T08:06:06.7988165Z #11 317.2 -- Installing: /usr/share/netdata/web/v3/static/email/img/header.png
2025-04-15T08:06:06.7988596Z #11 317.2 -- Installing: /usr/share/netdata/web/v3/static/email/img/isotype_600.png
2025-04-15T08:06:06.7989053Z #11 317.2 -- Installing: /usr/share/netdata/web/v3/static/email/img/label_critical.png
2025-04-15T08:06:06.7989524Z #11 317.2 -- Installing: /usr/share/netdata/web/v3/static/email/img/label_recovered.png
2025-04-15T08:06:06.7990171Z #11 317.2 -- Installing: /usr/share/netdata/web/v3/static/email/img/label_warning.png
2025-04-15T08:06:06.7990654Z #11 317.2 -- Installing: /usr/share/netdata/web/v3/static/email/img/reachability_siren.png
2025-04-15T08:06:06.7991140Z #11 317.2 -- Installing: /usr/share/netdata/web/v3/static/email/img/warn_badge.png
2025-04-15T08:06:06.7991612Z #11 317.2 -- Installing: /usr/share/netdata/web/v3/static/email/img/warn_siren.png
2025-04-15T08:06:06.7992153Z #11 317.2 -- Installing: /usr/share/netdata/web/v3/static/img/list-style-image.svg
2025-04-15T08:06:06.7992590Z #11 317.2 -- Installing: /usr/share/netdata/web/v3/static/img/new-dashboard.svg
2025-04-15T08:06:06.7993035Z #11 317.2 -- Installing: /usr/share/netdata/web/v3/static/img/no-filter-results.png
2025-04-15T08:06:06.7993472Z #11 317.2 -- Installing: /usr/share/netdata/web/v3/static/img/no-nodes-room.svg
2025-04-15T08:06:06.7993865Z #11 317.2 -- Installing: /usr/share/netdata/web/v3/static/img/rack.png
2025-04-15T08:06:06.7994252Z #11 317.2 -- Installing: /usr/share/netdata/web/v3/static/img/logos/netdata.svg
2025-04-15T08:06:06.7994680Z #11 317.2 -- Installing: /usr/share/netdata/web/v3/static/img/logos/os/alpine.svg
2025-04-15T08:06:06.7995102Z #11 317.2 -- Installing: /usr/share/netdata/web/v3/static/img/logos/os/arch.svg
2025-04-15T08:06:06.7995518Z #11 317.2 -- Installing: /usr/share/netdata/web/v3/static/img/logos/os/centos.svg
2025-04-15T08:06:06.7995945Z #11 317.2 -- Installing: /usr/share/netdata/web/v3/static/img/logos/os/coreos.svg
2025-04-15T08:06:06.7996870Z #11 317.2 -- Installing: /usr/share/netdata/web/v3/static/img/logos/os/debian.svg
2025-04-15T08:06:06.7997303Z #11 317.2 -- Installing: /usr/share/netdata/web/v3/static/img/logos/os/docker.svg
2025-04-15T08:06:06.7998098Z #11 317.2 -- Installing: /usr/share/netdata/web/v3/static/img/logos/os/fedora.svg
2025-04-15T08:06:06.7998550Z #11 317.2 -- Installing: /usr/share/netdata/web/v3/static/img/logos/os/freebsd.svg
2025-04-15T08:06:06.7998989Z #11 317.2 -- Installing: /usr/share/netdata/web/v3/static/img/logos/os/freenas.svg
2025-04-15T08:06:06.7999429Z #11 317.2 -- Installing: /usr/share/netdata/web/v3/static/img/logos/os/gentoo.svg
2025-04-15T08:06:06.8000047Z #11 317.2 -- Installing: /usr/share/netdata/web/v3/static/img/logos/os/kubernetes.svg
2025-04-15T08:06:06.8000518Z #11 317.2 -- Installing: /usr/share/netdata/web/v3/static/img/logos/os/linux-small.svg
2025-04-15T08:06:06.8001072Z #11 317.2 -- Installing: /usr/share/netdata/web/v3/static/img/logos/os/linux.svg
2025-04-15T08:06:06.8001506Z #11 317.2 -- Installing: /usr/share/netdata/web/v3/static/img/logos/os/macos.svg
2025-04-15T08:06:06.8001934Z #11 317.2 -- Installing: /usr/share/netdata/web/v3/static/img/logos/os/manjaro.svg
2025-04-15T08:06:06.8002382Z #11 317.2 -- Installing: /usr/share/netdata/web/v3/static/img/logos/os/openstack.svg
2025-04-15T08:06:06.8002834Z #11 317.2 -- Installing: /usr/share/netdata/web/v3/static/img/logos/os/opensuse.svg
2025-04-15T08:06:06.8003268Z #11 317.2 -- Installing: /usr/share/netdata/web/v3/static/img/logos/os/openwrt.svg
2025-04-15T08:06:06.8003706Z #11 317.2 -- Installing: /usr/share/netdata/web/v3/static/img/logos/os/oracle.svg
2025-04-15T08:06:06.8004219Z #11 317.2 -- Installing: /usr/share/netdata/web/v3/static/img/logos/os/pfsense.svg
2025-04-15T08:06:06.8004798Z #11 317.2 -- Installing: /usr/share/netdata/web/v3/static/img/logos/os/placeholder.svg
2025-04-15T08:06:06.8005282Z #11 317.2 -- Installing: /usr/share/netdata/web/v3/static/img/logos/os/raspberry-pi.svg
2025-04-15T08:06:06.8005739Z #11 317.2 -- Installing: /usr/share/netdata/web/v3/static/img/logos/os/redhat.svg
2025-04-15T08:06:06.8006331Z #11 317.2 -- Installing: /usr/share/netdata/web/v3/static/img/logos/os/rocky.svg
2025-04-15T08:06:06.8006916Z #11 317.2 -- Installing: /usr/share/netdata/web/v3/static/img/logos/os/suse.svg
2025-04-15T08:06:06.8007340Z #11 317.2 -- Installing: /usr/share/netdata/web/v3/static/img/logos/os/ubuntu.svg
2025-04-15T08:06:06.8007929Z #11 317.2 -- Installing: /usr/share/netdata/web/v3/static/img/logos/services/access-point.svg
2025-04-15T08:06:06.8008616Z #11 317.2 -- Installing: /usr/share/netdata/web/v3/static/img/logos/services/activemq.svg
2025-04-15T08:06:06.8009110Z #11 317.2 -- Installing: /usr/share/netdata/web/v3/static/img/logos/services/adaptec.svg
2025-04-15T08:06:06.8009586Z #11 317.2 -- Installing: /usr/share/netdata/web/v3/static/img/logos/services/alerta.svg
2025-04-15T08:06:06.8010056Z #11 317.2 -- Installing: /usr/share/netdata/web/v3/static/img/logos/services/apache.svg
2025-04-15T08:06:06.8010518Z #11 317.2 -- Installing: /usr/share/netdata/web/v3/static/img/logos/services/apc.svg
2025-04-15T08:06:06.8010988Z #11 317.2 -- Installing: /usr/share/netdata/web/v3/static/img/logos/services/aws-sns.svg
2025-04-15T08:06:06.8011456Z #11 317.2 -- Installing: /usr/share/netdata/web/v3/static/img/logos/services/aws.svg
2025-04-15T08:06:06.8011956Z #11 317.2 -- Installing: /usr/share/netdata/web/v3/static/img/logos/services/beanstalkd.svg
2025-04-15T08:06:06.8012439Z #11 317.2 -- Installing: /usr/share/netdata/web/v3/static/img/logos/services/boinc.svg
2025-04-15T08:06:06.8012905Z #11 317.2 -- Installing: /usr/share/netdata/web/v3/static/img/logos/services/btrfs.svg
2025-04-15T08:06:06.8013367Z #11 317.2 -- Installing: /usr/share/netdata/web/v3/static/img/logos/services/ceph.svg
2025-04-15T08:06:06.8013832Z #11 317.2 -- Installing: /usr/share/netdata/web/v3/static/img/logos/services/chrony.svg
2025-04-15T08:06:06.8014296Z #11 317.2 -- Installing: /usr/share/netdata/web/v3/static/img/logos/services/cloud.svg
2025-04-15T08:06:06.8014757Z #11 317.2 -- Installing: /usr/share/netdata/web/v3/static/img/logos/services/concul.svg
2025-04-15T08:06:06.8015336Z #11 317.2 -- Installing: /usr/share/netdata/web/v3/static/img/logos/services/consul.svg
2025-04-15T08:06:06.8016037Z #11 317.2 -- Installing: /usr/share/netdata/web/v3/static/img/logos/services/container.svg
2025-04-15T08:06:06.8016733Z #11 317.2 -- Installing: /usr/share/netdata/web/v3/static/img/logos/services/couchdb.svg
2025-04-15T08:06:06.8017225Z #11 317.2 -- Installing: /usr/share/netdata/web/v3/static/img/logos/services/cups.svg
2025-04-15T08:06:06.8017737Z #11 317.2 -- Installing: /usr/share/netdata/web/v3/static/img/logos/services/data-encryption.svg
2025-04-15T08:06:06.8018242Z #11 317.2 -- Installing: /usr/share/netdata/web/v3/static/img/logos/services/ddos.svg
2025-04-15T08:06:06.8018711Z #11 317.2 -- Installing: /usr/share/netdata/web/v3/static/img/logos/services/discord.svg
2025-04-15T08:06:06.8019289Z #11 317.2 -- Installing: /usr/share/netdata/web/v3/static/img/logos/services/dns.svg
2025-04-15T08:06:06.8019844Z #11 317.2 -- Installing: /usr/share/netdata/web/v3/static/img/logos/services/docker.svg
2025-04-15T08:06:06.8020326Z #11 317.2 -- Installing: /usr/share/netdata/web/v3/static/img/logos/services/dovecot.svg
2025-04-15T08:06:06.8020834Z #11 317.2 -- Installing: /usr/share/netdata/web/v3/static/img/logos/services/elasticsearch.svg
2025-04-15T08:06:06.8021377Z #11 317.2 -- Installing: /usr/share/netdata/web/v3/static/img/logos/services/email.svg
2025-04-15T08:06:06.8021946Z #11 317.2 -- Installing: /usr/share/netdata/web/v3/static/img/logos/services/exim.svg
2025-04-15T08:06:06.8022435Z #11 317.2 -- Installing: /usr/share/netdata/web/v3/static/img/logos/services/fail2ban.svg
2025-04-15T08:06:06.8022909Z #11 317.2 -- Installing: /usr/share/netdata/web/v3/static/img/logos/services/flock.svg
2025-04-15T08:06:06.8023578Z #11 317.2 -- Installing: /usr/share/netdata/web/v3/static/img/logos/services/fluentd.svg
2025-04-15T08:06:06.8024054Z #11 317.2 -- Installing: /usr/share/netdata/web/v3/static/img/logos/services/fping.svg
2025-04-15T08:06:06.8024537Z #11 317.2 -- Installing: /usr/share/netdata/web/v3/static/img/logos/services/freeradius.svg
2025-04-15T08:06:06.8025261Z #11 317.2 -- Installing: /usr/share/netdata/web/v3/static/img/logos/services/fronius.svg
2025-04-15T08:06:06.8025770Z #11 317.2 -- Installing: /usr/share/netdata/web/v3/static/img/logos/services/gnu-freeipmi.svg
2025-04-15T08:06:06.8026405Z #11 317.2 -- Installing: /usr/share/netdata/web/v3/static/img/logos/services/golang.svg
2025-04-15T08:06:06.8027053Z #11 317.2 -- Installing: /usr/share/netdata/web/v3/static/img/logos/services/grafana.svg
2025-04-15T08:06:06.8027536Z #11 317.2 -- Installing: /usr/share/netdata/web/v3/static/img/logos/services/graphite.svg
2025-04-15T08:06:06.8028131Z #11 317.2 -- Installing: /usr/share/netdata/web/v3/static/img/logos/services/haproxy.svg
2025-04-15T08:06:06.8028650Z #11 317.2 -- Installing: /usr/share/netdata/web/v3/static/img/logos/services/hub.svg
2025-04-15T08:06:06.8029114Z #11 317.2 -- Installing: /usr/share/netdata/web/v3/static/img/logos/services/icecast.svg
2025-04-15T08:06:06.8029625Z #11 317.2 -- Installing: /usr/share/netdata/web/v3/static/img/logos/services/influxdb.svg
2025-04-15T08:06:06.8030109Z #11 317.2 -- Installing: /usr/share/netdata/web/v3/static/img/logos/services/ipfs.svg
2025-04-15T08:06:06.8030590Z #11 317.2 -- Installing: /usr/share/netdata/web/v3/static/img/logos/services/irc.svg
2025-04-15T08:06:06.8031038Z #11 317.2 -- Installing: /usr/share/netdata/web/v3/static/img/logos/services/isc.svg
2025-04-15T08:06:06.8031727Z #11 317.2 -- Installing: /usr/share/netdata/web/v3/static/img/logos/services/kafka.svg
2025-04-15T08:06:06.8032208Z #11 317.2 -- Installing: /usr/share/netdata/web/v3/static/img/logos/services/kairosdb.svg
2025-04-15T08:06:06.8032817Z #11 317.2 -- Installing: /usr/share/netdata/web/v3/static/img/logos/services/kavenegar.svg
2025-04-15T08:06:06.8033367Z #11 317.2 -- Installing: /usr/share/netdata/web/v3/static/img/logos/services/key-file.svg
2025-04-15T08:06:06.8033870Z #11 317.2 -- Installing: /usr/share/netdata/web/v3/static/img/logos/services/kubernetes.svg
2025-04-15T08:06:06.8034548Z #11 317.2 -- Installing: /usr/share/netdata/web/v3/static/img/logos/services/libreswan.svg
2025-04-15T08:06:06.8035072Z #11 317.2 -- Installing: /usr/share/netdata/web/v3/static/img/logos/services/libvirt.svg
2025-04-15T08:06:06.8035579Z #11 317.2 -- Installing: /usr/share/netdata/web/v3/static/img/logos/services/lighthttpd.svg
2025-04-15T08:06:06.8036188Z #11 317.2 -- Installing: /usr/share/netdata/web/v3/static/img/logos/services/linux.svg
2025-04-15T08:06:06.8036763Z #11 317.2 -- Installing: /usr/share/netdata/web/v3/static/img/logos/services/litespeed.svg
2025-04-15T08:06:06.8037343Z #11 317.2 -- Installing: /usr/share/netdata/web/v3/static/img/logos/services/lm-sensors.svg
2025-04-15T08:06:06.8037867Z #11 317.2 -- Installing: /usr/share/netdata/web/v3/static/img/logos/services/load-balancer.svg
2025-04-15T08:06:06.8038377Z #11 317.2 -- Installing: /usr/share/netdata/web/v3/static/img/logos/services/log-file.svg
2025-04-15T08:06:06.8038867Z #11 317.2 -- Installing: /usr/share/netdata/web/v3/static/img/logos/services/logstash.svg
2025-04-15T08:06:06.8039360Z #11 317.2 -- Installing: /usr/share/netdata/web/v3/static/img/logos/services/lxd.svg
2025-04-15T08:06:06.8040039Z #11 317.2 -- Installing: /usr/share/netdata/web/v3/static/img/logos/services/mariadb.svg
2025-04-15T08:06:06.8040535Z #11 317.2 -- Installing: /usr/share/netdata/web/v3/static/img/logos/services/memcached.svg
2025-04-15T08:06:06.8041044Z #11 317.2 -- Installing: /usr/share/netdata/web/v3/static/img/logos/services/messagebird.svg
2025-04-15T08:06:06.8041778Z #11 317.2 -- Installing: /usr/share/netdata/web/v3/static/img/logos/services/mongodb.svg
2025-04-15T08:06:06.8042264Z #11 317.2 -- Installing: /usr/share/netdata/web/v3/static/img/logos/services/monit.svg
2025-04-15T08:06:06.8042745Z #11 317.2 -- Installing: /usr/share/netdata/web/v3/static/img/logos/services/monitoring.svg
2025-04-15T08:06:06.8043223Z #11 317.2 -- Installing: /usr/share/netdata/web/v3/static/img/logos/services/mysql.svg
2025-04-15T08:06:06.8043705Z #11 317.2 -- Installing: /usr/share/netdata/web/v3/static/img/logos/services/netfilter.svg
2025-04-15T08:06:06.8044238Z #11 317.2 -- Installing: /usr/share/netdata/web/v3/static/img/logos/services/network-protocol.svg
2025-04-15T08:06:06.8044911Z #11 317.2 -- Installing: /usr/share/netdata/web/v3/static/img/logos/services/network.svg
2025-04-15T08:06:06.8045560Z #11 317.2 -- Installing: /usr/share/netdata/web/v3/static/img/logos/services/nfs.svg
2025-04-15T08:06:06.8046041Z #11 317.2 -- Installing: /usr/share/netdata/web/v3/static/img/logos/services/nginx-plus.svg
2025-04-15T08:06:06.8046651Z #11 317.2 -- Installing: /usr/share/netdata/web/v3/static/img/logos/services/nginx.svg
2025-04-15T08:06:06.8047168Z #11 317.2 -- Installing: /usr/share/netdata/web/v3/static/img/logos/services/notification-bell.svg
2025-04-15T08:06:06.8047680Z #11 317.2 -- Installing: /usr/share/netdata/web/v3/static/img/logos/services/nsd.svg
2025-04-15T08:06:06.8048135Z #11 317.2 -- Installing: /usr/share/netdata/web/v3/static/img/logos/services/ntpd.svg
2025-04-15T08:06:06.8048593Z #11 317.2 -- Installing: /usr/share/netdata/web/v3/static/img/logos/services/nut.svg
2025-04-15T08:06:06.8049065Z #11 317.2 -- Installing: /usr/share/netdata/web/v3/static/img/logos/services/nvidia.svg
2025-04-15T08:06:06.8049547Z #11 317.2 -- Installing: /usr/share/netdata/web/v3/static/img/logos/services/openldap.svg
2025-04-15T08:06:06.8050340Z #11 317.2 -- Installing: /usr/share/netdata/web/v3/static/img/logos/services/opensips.svg
2025-04-15T08:06:06.8050838Z #11 317.2 -- Installing: /usr/share/netdata/web/v3/static/img/logos/services/opentsdb.svg
2025-04-15T08:06:06.8051462Z #11 317.2 -- Installing: /usr/share/netdata/web/v3/static/img/logos/services/openvpn.svg
2025-04-15T08:06:06.8051991Z #11 317.2 -- Installing: /usr/share/netdata/web/v3/static/img/logos/services/openzfs.svg
2025-04-15T08:06:06.8052465Z #11 317.2 -- Installing: /usr/share/netdata/web/v3/static/img/logos/services/oracle.svg
2025-04-15T08:06:06.8052955Z #11 317.2 -- Installing: /usr/share/netdata/web/v3/static/img/logos/services/pagerduty.svg
2025-04-15T08:06:06.8053733Z #11 317.2 -- Installing: /usr/share/netdata/web/v3/static/img/logos/services/php-fpm.svg
2025-04-15T08:06:06.8054255Z #11 317.2 -- Installing: /usr/share/netdata/web/v3/static/img/logos/services/placeholder.svg
2025-04-15T08:06:06.8054754Z #11 317.2 -- Installing: /usr/share/netdata/web/v3/static/img/logos/services/postfix.svg
2025-04-15T08:06:06.8055249Z #11 317.2 -- Installing: /usr/share/netdata/web/v3/static/img/logos/services/postgresql.svg
2025-04-15T08:06:06.8055746Z #11 317.2 -- Installing: /usr/share/netdata/web/v3/static/img/logos/services/powerdns.svg
2025-04-15T08:06:06.8056376Z #11 317.2 -- Installing: /usr/share/netdata/web/v3/static/img/logos/services/processor.svg
2025-04-15T08:06:06.8057058Z #11 317.2 -- Installing: /usr/share/netdata/web/v3/static/img/logos/services/prometheus.svg
2025-04-15T08:06:06.8057588Z #11 317.2 -- Installing: /usr/share/netdata/web/v3/static/img/logos/services/prowl.svg
2025-04-15T08:06:06.8058108Z #11 317.2 -- Installing: /usr/share/netdata/web/v3/static/img/logos/services/proxysql.svg
2025-04-15T08:06:06.8058734Z #11 317.2 -- Installing: /usr/share/netdata/web/v3/static/img/logos/services/puppet.svg
2025-04-15T08:06:06.8059238Z #11 317.2 -- Installing: /usr/share/netdata/web/v3/static/img/logos/services/pushbullet.svg
2025-04-15T08:06:06.8059747Z #11 317.2 -- Installing: /usr/share/netdata/web/v3/static/img/logos/services/pushover.svg
2025-04-15T08:06:06.8060223Z #11 317.2 -- Installing: /usr/share/netdata/web/v3/static/img/logos/services/qos.svg
2025-04-15T08:06:06.8060698Z #11 317.2 -- Installing: /usr/share/netdata/web/v3/static/img/logos/services/rabbitmq.svg
2025-04-15T08:06:06.8061214Z #11 317.2 -- Installing: /usr/share/netdata/web/v3/static/img/logos/services/raspberry-pi.svg
2025-04-15T08:06:06.8061714Z #11 317.2 -- Installing: /usr/share/netdata/web/v3/static/img/logos/services/redis.svg
2025-04-15T08:06:06.8062199Z #11 317.2 -- Installing: /usr/share/netdata/web/v3/static/img/logos/services/rethinkdb.svg
2025-04-15T08:06:06.8062738Z #11 317.2 -- Installing: /usr/share/netdata/web/v3/static/img/logos/services/retroshare.svg
2025-04-15T08:06:06.8063334Z #11 317.2 -- Installing: /usr/share/netdata/web/v3/static/img/logos/services/rocketchat.svg
2025-04-15T08:06:06.8063819Z #11 317.2 -- Installing: /usr/share/netdata/web/v3/static/img/logos/services/samba.svg
2025-04-15T08:06:06.8064511Z #11 317.2 -- Installing: /usr/share/netdata/web/v3/static/img/logos/services/server-connection.svg
2025-04-15T08:06:06.8065027Z #11 317.2 -- Installing: /usr/share/netdata/web/v3/static/img/logos/services/slack.svg
2025-04-15T08:06:06.8065487Z #11 317.2 -- Installing: /usr/share/netdata/web/v3/static/img/logos/services/sma.svg
2025-04-15T08:06:06.8065959Z #11 317.2 -- Installing: /usr/share/netdata/web/v3/static/img/logos/services/smstools3.svg
2025-04-15T08:06:06.8066548Z #11 317.2 -- Installing: /usr/share/netdata/web/v3/static/img/logos/services/solr.svg
2025-04-15T08:06:06.8067017Z #11 317.2 -- Installing: /usr/share/netdata/web/v3/static/img/logos/services/spigot.svg
2025-04-15T08:06:06.8067512Z #11 317.2 -- Installing: /usr/share/netdata/web/v3/static/img/logos/services/springboot.svg
2025-04-15T08:06:06.8067992Z #11 317.2 -- Installing: /usr/share/netdata/web/v3/static/img/logos/services/squid.svg
2025-04-15T08:06:06.8068457Z #11 317.2 -- Installing: /usr/share/netdata/web/v3/static/img/logos/services/statsd.svg
2025-04-15T08:06:06.8068941Z #11 317.2 -- Installing: /usr/share/netdata/web/v3/static/img/logos/services/stiebel.svg
2025-04-15T08:06:06.8069420Z #11 317.2 -- Installing: /usr/share/netdata/web/v3/static/img/logos/services/systemd.svg
2025-04-15T08:06:06.8069909Z #11 317.2 -- Installing: /usr/share/netdata/web/v3/static/img/logos/services/telegram.svg
2025-04-15T08:06:06.8070417Z #11 317.2 -- Installing: /usr/share/netdata/web/v3/static/img/logos/services/temperature.svg
2025-04-15T08:06:06.8070909Z #11 317.2 -- Installing: /usr/share/netdata/web/v3/static/img/logos/services/tomcat.svg
2025-04-15T08:06:06.8071491Z #11 317.2 -- Installing: /usr/share/netdata/web/v3/static/img/logos/services/tor.svg
2025-04-15T08:06:06.8071965Z #11 317.2 -- Installing: /usr/share/netdata/web/v3/static/img/logos/services/traefik.svg
2025-04-15T08:06:06.8072436Z #11 317.2 -- Installing: /usr/share/netdata/web/v3/static/img/logos/services/twilio.svg
2025-04-15T08:06:06.8072913Z #11 317.2 -- Installing: /usr/share/netdata/web/v3/static/img/logos/services/unbound.svg
2025-04-15T08:06:06.8073393Z #11 317.3 -- Installing: /usr/share/netdata/web/v3/static/img/logos/services/uwsgi.svg
2025-04-15T08:06:06.8073866Z #11 317.3 -- Installing: /usr/share/netdata/web/v3/static/img/logos/services/varnish.svg
2025-04-15T08:06:06.8074343Z #11 317.3 -- Installing: /usr/share/netdata/web/v3/static/img/logos/services/veritas.svg
2025-04-15T08:06:06.8074950Z #11 317.3 -- Installing: /usr/share/netdata/web/v3/static/img/logos/services/xen.svg
2025-04-15T08:06:06.8075410Z #11 317.3 -- Installing: /usr/share/netdata/web/v3/static/img/mail/hourglass-0.png
2025-04-15T08:06:06.8075982Z #11 317.3 -- Installing: /usr/share/netdata/web/v3/static/img/mail/hourglass-1.png
2025-04-15T08:06:06.8076518Z #11 317.3 -- Installing: /usr/share/netdata/web/v3/static/img/mail/hourglass-7.png
2025-04-15T08:06:06.8076951Z #11 317.3 -- Installing: /usr/share/netdata/web/v3/static/img/mail/isotype.png
2025-04-15T08:06:06.8077373Z #11 317.3 -- Installing: /usr/share/netdata/web/v3/static/img/mail/isotype.svg
2025-04-15T08:06:06.8077777Z #11 317.3 -- Installing: /usr/share/netdata/web/v3/static/img/mail/logo.png
2025-04-15T08:06:06.8078183Z #11 317.3 -- Installing: /usr/share/netdata/web/v3/static/img/mail/logotype.png
2025-04-15T08:06:06.8078601Z #11 317.3 -- Installing: /usr/share/netdata/web/v3/static/img/mail/logotype.svg
2025-04-15T08:06:06.8079057Z #11 317.3 -- Installing: /usr/share/netdata/web/v3/static/img/onboarding/dockerpulls.svg
2025-04-15T08:06:06.8079562Z #11 317.3 -- Installing: /usr/share/netdata/web/v3/static/img/onboarding/node-heatmap-1.svg
2025-04-15T08:06:06.8080075Z #11 317.3 -- Installing: /usr/share/netdata/web/v3/static/img/onboarding/node-heatmap-2.svg
2025-04-15T08:06:06.8080941Z #11 317.3 -- Installing: /usr/share/netdata/web/v3/static/img/onboarding/noise-light.svg
2025-04-15T08:06:06.8081987Z #11 317.3 -- Installing: /usr/share/netdata/web/v3/static/img/onboarding/noise.svg
2025-04-15T08:06:06.8083313Z #11 317.3 -- Installing: /usr/share/netdata/web/v3/static/img/onboarding/onprem.svg
2025-04-15T08:06:06.8084170Z #11 317.3 -- Installing: /usr/share/netdata/web/v3/static/img/referral/application.jpg
2025-04-15T08:06:06.8085262Z #11 317.3 -- Installing: /usr/share/netdata/web/v3/static/img/referral/infrastructure-monitoring.png
2025-04-15T08:06:06.8086423Z #11 317.3 -- Installing: /usr/share/netdata/web/v3/static/img/referral/infrastructure.jpg
2025-04-15T08:06:06.8087279Z #11 317.3 -- Installing: /usr/share/netdata/web/v3/static/img/referral/logs.jpg
2025-04-15T08:06:06.8088060Z #11 317.3 -- Installing: /usr/share/netdata/web/v3/static/img/referral/metrics.png
2025-04-15T08:06:06.8088857Z #11 317.3 -- Installing: /usr/share/netdata/web/v3/static/img/referral/network.jpg
2025-04-15T08:06:06.8089700Z #11 317.3 -- Installing: /usr/share/netdata/web/v3/static/img/referral/peer-insights.svg
2025-04-15T08:06:06.8090562Z #11 317.3 -- Installing: /usr/share/netdata/web/v3/static/img/referral/synthetic.jpg
2025-04-15T08:06:06.8091390Z #11 317.3 -- Installing: /usr/share/netdata/web/v3/static/site/pages/holding-page-503/holding-page-503.css
2025-04-15T08:06:06.8092584Z #11 317.3 -- Installing: /usr/share/netdata/web/v3/static/site/pages/holding-page-503/holding-page-503.svg
2025-04-15T08:06:06.8093643Z #11 317.3 -- Installing: /usr/share/netdata/web/v3/static/site/pages/holding-page-503/index.html
2025-04-15T08:06:06.8094754Z #11 317.3 -- Installing: /usr/share/netdata/web/v3/static/site/pages/holding-page-503/multiple-logos-group.svg
2025-04-15T08:06:06.8095941Z #11 317.3 -- Installing: /usr/share/netdata/web/v3/static/site/pages/holding-page-503/netdata-logo-white.svg
2025-04-15T08:06:06.8097358Z #11 317.3 -- Installing: /usr/share/netdata/web/v3/static/site/pages/holding-page-503/reset.svg
2025-04-15T08:06:06.8098156Z #11 317.3 -- Installing: /usr/share/netdata/web/index.html
2025-04-15T08:06:06.8098775Z #11 317.3 -- Installing: /usr/share/netdata/web/registry-access.html
2025-04-15T08:06:06.8099513Z #11 317.3 -- Installing: /usr/share/netdata/web/registry-alert-redirect.html
2025-04-15T08:06:06.8100224Z #11 317.3 -- Installing: /usr/share/netdata/web/registry-hello.html
2025-04-15T08:06:06.8100887Z #11 317.3 -- Installing: /usr/share/netdata/build-info-cmake-cache.gz
2025-04-15T08:06:06.8101525Z #11 317.3  OK  ''
2025-04-15T08:06:06.8101823Z #11 317.3 
2025-04-15T08:06:06.8102234Z #11 317.3  --- Creating standard user and groups for netdata --- 
2025-04-15T08:06:06.8102778Z #11 317.3  --- Adding group 'netdata' --- 
2025-04-15T08:06:06.8103235Z #11 317.3 Adding netdata user group ...
2025-04-15T08:06:06.9052076Z #11 317.3 [/opt/netdata.git]# groupadd -r netdata 
2025-04-15T08:06:06.9052552Z #11 317.3  OK  ''
2025-04-15T08:06:06.9052866Z #11 317.3 
2025-04-15T08:06:06.9053212Z #11 317.3  --- Adding user 'netdata' --- 
2025-04-15T08:06:06.9053761Z #11 317.3 Adding netdata user account with home //var/lib/netdata ...
2025-04-15T08:06:06.9054521Z #11 317.3 [/opt/netdata.git]# useradd -r -g netdata -c netdata -s /usr/sbin/nologin --no-create-home -d //var/lib/netdata netdata 
2025-04-15T08:06:06.9055059Z #11 317.3  OK  ''
2025-04-15T08:06:06.9055243Z #11 317.3 
2025-04-15T08:06:06.9055519Z #11 317.3  --- Assign user 'netdata' to required groups --- 
2025-04-15T08:06:06.9055871Z #11 317.3 Group 'docker' does not exist.
2025-04-15T08:06:06.9056534Z #11 317.3 Group 'nginx' does not exist.
2025-04-15T08:06:06.9056829Z #11 317.3 Group 'varnish' does not exist.
2025-04-15T08:06:06.9057109Z #11 317.3 Group 'haproxy' does not exist.
2025-04-15T08:06:06.9057523Z #11 317.3 Adding netdata user to the adm group ...
2025-04-15T08:06:06.9057879Z #11 317.3 [/opt/netdata.git]# usermod -a -G adm netdata 
2025-04-15T08:06:06.9058177Z #11 317.3  OK  ''
2025-04-15T08:06:06.9058374Z #11 317.3 
2025-04-15T08:06:06.9058566Z #11 317.3 Group 'nsd' does not exist.
2025-04-15T08:06:06.9058863Z #11 317.3 Adding netdata user to the proxy group ...
2025-04-15T08:06:06.9059218Z #11 317.3 [/opt/netdata.git]# usermod -a -G proxy netdata 
2025-04-15T08:06:06.9059798Z #11 317.3  OK  ''
2025-04-15T08:06:06.9059985Z #11 317.3 
2025-04-15T08:06:06.9060176Z #11 317.3 Group 'squid' does not exist.
2025-04-15T08:06:06.9060440Z #11 317.3 Group 'ceph' does not exist.
2025-04-15T08:06:06.9060707Z #11 317.3 Group 'nobody' does not exist.
2025-04-15T08:06:06.9061037Z #11 317.3  --- Install logrotate configuration for netdata --- 
2025-04-15T08:06:06.9061424Z #11 317.3 [/opt/netdata.git]# chmod 644 /etc/logrotate.d/netdata 
2025-04-15T08:06:06.9061703Z #11 317.3  OK  ''
2025-04-15T08:06:06.9061865Z #11 317.3 
2025-04-15T08:06:06.9062091Z #11 317.3  --- Install journald configuration for netdata --- 
2025-04-15T08:06:06.9062483Z #11 317.3 [/opt/netdata.git]# mkdir /usr/lib/systemd/journald@netdata.conf.d/ 
2025-04-15T08:06:06.9062806Z #11 317.3  OK  ''
2025-04-15T08:06:06.9062964Z #11 317.3 
2025-04-15T08:06:06.9063446Z #11 317.3 [/opt/netdata.git]# cp //usr/lib/netdata/system/systemd/journald@netdata.conf /usr/lib/systemd/journald@netdata.conf.d/netdata.conf 
2025-04-15T08:06:06.9063984Z #11 317.3  OK  ''
2025-04-15T08:06:06.9064140Z #11 317.3 
2025-04-15T08:06:06.9064466Z #11 317.3 [/opt/netdata.git]# chmod 644 /usr/lib/systemd/journald@netdata.conf.d/netdata.conf 
2025-04-15T08:06:06.9065084Z #11 317.3  OK  ''
2025-04-15T08:06:06.9065345Z #11 317.3 
2025-04-15T08:06:06.9065718Z #11 317.3  --- Read installation options from netdata.conf --- 
2025-04-15T08:06:06.9066795Z #11 317.4 time=2025-04-15T08:06:06.876Z comm=netdata source=daemon level=notice errno="2, No such file or directory" tid=8939  msg="CONFIG: cannot load user config '/etc/netdata/stream.conf'. Will try stock config."
2025-04-15T08:06:06.9068089Z #11 317.4 time=2025-04-15T08:06:06.890Z comm=netdata source=daemon level=notice errno="2, No such file or directory" tid=8941  msg="CONFIG: cannot load user config '/etc/netdata/stream.conf'. Will try stock config."
2025-04-15T08:06:06.9069184Z #11 317.4 time=2025-04-15T08:06:06.904Z comm=netdata source=daemon level=notice errno="2, No such file or directory" tid=8943  msg="CONFIG: cannot load user config '/etc/netdata/stream.conf'. Will try stock config."
2025-04-15T08:06:07.1135066Z #11 317.4 time=2025-04-15T08:06:06.918Z comm=netdata source=daemon level=notice errno="2, No such file or directory" tid=8945  msg="CONFIG: cannot load user config '/etc/netdata/stream.conf'. Will try stock config."
2025-04-15T08:06:07.1137488Z #11 317.4 time=2025-04-15T08:06:06.931Z comm=netdata source=daemon level=notice errno="2, No such file or directory" tid=8947  msg="CONFIG: cannot load user config '/etc/netdata/stream.conf'. Will try stock config."
2025-04-15T08:06:07.1138901Z #11 317.4 time=2025-04-15T08:06:06.944Z comm=netdata source=daemon level=notice errno="2, No such file or directory" tid=8949  msg="CONFIG: cannot load user config '/etc/netdata/stream.conf'. Will try stock config."
2025-04-15T08:06:07.1140139Z #11 317.4 time=2025-04-15T08:06:06.958Z comm=netdata source=daemon level=notice errno="2, No such file or directory" tid=8951  msg="CONFIG: cannot load user config '/etc/netdata/stream.conf'. Will try stock config."
2025-04-15T08:06:07.1140884Z #11 317.4 
2025-04-15T08:06:07.1141069Z #11 317.4     Permissions
2025-04-15T08:06:07.1141332Z #11 317.4     - netdata user             : netdata
2025-04-15T08:06:07.1141638Z #11 317.4     - netdata group            : netdata
2025-04-15T08:06:07.1141950Z #11 317.4     - root user                : root
2025-04-15T08:06:07.1142212Z #11 317.4 
2025-04-15T08:06:07.1142391Z #11 317.4     Directories
2025-04-15T08:06:07.1142656Z #11 317.4     - netdata user config dir  : //etc/netdata
2025-04-15T08:06:07.1143031Z #11 317.4     - netdata stock config dir : //usr/lib/netdata/conf.d
2025-04-15T08:06:07.1143419Z #11 317.4     - netdata log dir          : //var/log/netdata
2025-04-15T08:06:07.1143746Z #11 317.4     - netdata run dir          : //var/run
2025-04-15T08:06:07.1144076Z #11 317.4     - netdata lib dir          : //var/lib/netdata
2025-04-15T08:06:07.1144420Z #11 317.4     - netdata web dir          : //usr/share/netdata/web
2025-04-15T08:06:07.1145086Z #11 317.4     - netdata cache dir        : //var/cache/netdata
2025-04-15T08:06:07.1145379Z #11 317.4 
2025-04-15T08:06:07.1145555Z #11 317.4     Other
2025-04-15T08:06:07.1145760Z #11 317.4     - netdata port             : 19999
2025-04-15T08:06:07.1146009Z #11 317.4 
2025-04-15T08:06:07.1146567Z #11 317.4  --- Fix permissions of netdata directories (using user 'netdata') --- 
2025-04-15T08:06:07.1147027Z #11 317.4 [/opt/netdata.git]# ln -s //usr/lib/netdata/conf.d //etc/netdata/orig 
2025-04-15T08:06:07.1147345Z #11 317.4  OK  ''
2025-04-15T08:06:07.1147507Z #11 317.4 
2025-04-15T08:06:07.1147797Z #11 317.4 [/opt/netdata.git]# find //usr/share/netdata/web -type f -exec chmod 0664 {} ; 
2025-04-15T08:06:07.1877112Z #11 317.7  OK  ''
2025-04-15T08:06:07.1877724Z #11 317.7 
2025-04-15T08:06:07.2913735Z #11 317.7 [/opt/netdata.git]# find //usr/share/netdata/web -type d -exec chmod 0775 {} ; 
2025-04-15T08:06:07.2914467Z #11 317.7  OK  ''
2025-04-15T08:06:07.2914807Z #11 317.7 
2025-04-15T08:06:07.2915261Z #11 317.7 [/opt/netdata.git]# chown -R netdata:netdata //var/lib/netdata 
2025-04-15T08:06:07.2915793Z #11 317.7  OK  ''
2025-04-15T08:06:07.2916789Z #11 317.7 
2025-04-15T08:06:07.2917311Z #11 317.7 [/opt/netdata.git]# chown -R netdata:netdata //var/cache/netdata 
2025-04-15T08:06:07.2917883Z #11 317.7  OK  ''
2025-04-15T08:06:07.2918172Z #11 317.7 
2025-04-15T08:06:07.2918619Z #11 317.7 [/opt/netdata.git]# chown -R netdata:netdata //var/log/netdata 
2025-04-15T08:06:07.2919139Z #11 317.7  OK  ''
2025-04-15T08:06:07.2919422Z #11 317.7 
2025-04-15T08:06:07.2919774Z #11 317.7 [/opt/netdata.git]# chmod 755 //var/log/netdata 
2025-04-15T08:06:07.2920222Z #11 317.7  OK  ''
2025-04-15T08:06:07.2920497Z #11 317.7 
2025-04-15T08:06:07.2921258Z #11 317.7 [/opt/netdata.git]# chown -R netdata:netdata //var/lib/netdata/cloud.d 
2025-04-15T08:06:07.2921855Z #11 317.7  OK  ''
2025-04-15T08:06:07.2922147Z #11 317.7 
2025-04-15T08:06:07.2922556Z #11 317.7 [/opt/netdata.git]# chmod 770 //var/lib/netdata/cloud.d 
2025-04-15T08:06:07.2923043Z #11 317.7  OK  ''
2025-04-15T08:06:07.2923215Z #11 317.7 
2025-04-15T08:06:07.2923468Z #11 317.7 [/opt/netdata.git]# chown netdata:root //var/log/netdata 
2025-04-15T08:06:07.2923764Z #11 317.7  OK  ''
2025-04-15T08:06:07.2923927Z #11 317.7 
2025-04-15T08:06:07.2924196Z #11 317.7 [/opt/netdata.git]# chown -R root:root //usr/libexec/netdata 
2025-04-15T08:06:07.2924495Z #11 317.7  OK  ''
2025-04-15T08:06:07.2924654Z #11 317.7 
2025-04-15T08:06:07.2924934Z #11 317.7 [/opt/netdata.git]# find //usr/libexec/netdata -type d -exec chmod 0755 {} ; 
2025-04-15T08:06:07.2925271Z #11 317.7  OK  ''
2025-04-15T08:06:07.2925429Z #11 317.7 
2025-04-15T08:06:07.2925704Z #11 317.7 [/opt/netdata.git]# find //usr/libexec/netdata -type f -exec chmod 0644 {} ; 
2025-04-15T08:06:07.2926030Z #11 317.8  OK  ''
2025-04-15T08:06:07.2926670Z #11 317.8 
2025-04-15T08:06:07.3928713Z #11 317.8 [/opt/netdata.git]# find //usr/libexec/netdata -type f -a -name *.plugin -exec chown :netdata {} ; 
2025-04-15T08:06:07.3931245Z #11 317.8  OK  ''
2025-04-15T08:06:07.3931565Z #11 317.8 
2025-04-15T08:06:07.3932523Z #11 317.8 [/opt/netdata.git]# find //usr/libexec/netdata -type f -a -name *.plugin -exec chmod 0750 {} ; 
2025-04-15T08:06:07.3933241Z #11 317.8  OK  ''
2025-04-15T08:06:07.3933540Z #11 317.8 
2025-04-15T08:06:07.3934096Z #11 317.8 [/opt/netdata.git]# find //usr/libexec/netdata -type f -a -name *.sh -exec chmod 0755 {} ; 
2025-04-15T08:06:07.3935196Z #11 317.8  OK  ''
2025-04-15T08:06:07.3935499Z #11 317.8 
2025-04-15T08:06:07.3936462Z #11 317.8 [/opt/netdata.git]# chown root:netdata //usr/libexec/netdata/plugins.d/apps.plugin 
2025-04-15T08:06:07.3937126Z #11 317.8  OK  ''
2025-04-15T08:06:07.3937412Z #11 317.8 
2025-04-15T08:06:07.3937916Z #11 317.8 [/opt/netdata.git]# chmod 4750 //usr/libexec/netdata/plugins.d/apps.plugin 
2025-04-15T08:06:07.3938516Z #11 317.8  OK  ''
2025-04-15T08:06:07.3938799Z #11 317.8 
2025-04-15T08:06:07.3939340Z #11 317.8 [/opt/netdata.git]# chown root:netdata //usr/libexec/netdata/plugins.d/debugfs.plugin 
2025-04-15T08:06:07.3940309Z #11 317.8  OK  ''
2025-04-15T08:06:07.3940602Z #11 317.8 
2025-04-15T08:06:07.3940985Z #11 317.8 [/opt/netdata.git]# chmod 4750 //usr/libexec/netdata/plugins.d/debugfs.plugin 
2025-04-15T08:06:07.3941374Z #11 317.8  OK  ''
2025-04-15T08:06:07.3941540Z #11 317.8 
2025-04-15T08:06:07.3942128Z #11 317.8 [/opt/netdata.git]# chown root:netdata //usr/libexec/netdata/plugins.d/systemd-journal.plugin 
2025-04-15T08:06:07.3942842Z #11 317.8  OK  ''
2025-04-15T08:06:07.3943351Z #11 317.8 
2025-04-15T08:06:07.3944134Z #11 317.8 [/opt/netdata.git]# chmod 4750 //usr/libexec/netdata/plugins.d/systemd-journal.plugin 
2025-04-15T08:06:07.3944791Z #11 317.8  OK  ''
2025-04-15T08:06:07.3945090Z #11 317.8 
2025-04-15T08:06:07.3945608Z #11 317.8 [/opt/netdata.git]# chown root:netdata //usr/libexec/netdata/plugins.d/perf.plugin 
2025-04-15T08:06:07.3946396Z #11 317.8  OK  ''
2025-04-15T08:06:07.3946686Z #11 317.8 
2025-04-15T08:06:07.3947163Z #11 317.8 [/opt/netdata.git]# chmod 4750 //usr/libexec/netdata/plugins.d/perf.plugin 
2025-04-15T08:06:07.3947759Z #11 317.8  OK  ''
2025-04-15T08:06:07.3948041Z #11 317.8 
2025-04-15T08:06:07.3948473Z #11 317.8 [/opt/netdata.git]# chown root:netdata //usr/libexec/netdata/plugins.d/slabinfo.plugin 
2025-04-15T08:06:07.3949058Z #11 317.8  OK  ''
2025-04-15T08:06:07.3949220Z #11 317.8 
2025-04-15T08:06:07.3949606Z #11 317.8 [/opt/netdata.git]# chmod 4750 //usr/libexec/netdata/plugins.d/slabinfo.plugin 
2025-04-15T08:06:07.3950212Z #11 317.8  OK  ''
2025-04-15T08:06:07.3950511Z #11 317.8 
2025-04-15T08:06:07.3951052Z #11 317.8 [/opt/netdata.git]# chown root:netdata //usr/libexec/netdata/plugins.d/freeipmi.plugin 
2025-04-15T08:06:07.3951703Z #11 317.8  OK  ''
2025-04-15T08:06:07.3952290Z #11 317.8 
2025-04-15T08:06:07.3952848Z #11 317.8 [/opt/netdata.git]# chmod 4750 //usr/libexec/netdata/plugins.d/freeipmi.plugin 
2025-04-15T08:06:07.3953495Z #11 317.8  OK  ''
2025-04-15T08:06:07.3953713Z #11 317.8 
2025-04-15T08:06:07.3954056Z #11 317.8 [/opt/netdata.git]# chown root:netdata //usr/libexec/netdata/plugins.d/cgroup-network 
2025-04-15T08:06:07.3954421Z #11 317.8  OK  ''
2025-04-15T08:06:07.3954577Z #11 317.8 
2025-04-15T08:06:07.3954856Z #11 317.8 [/opt/netdata.git]# chmod 4750 //usr/libexec/netdata/plugins.d/cgroup-network 
2025-04-15T08:06:07.3955190Z #11 317.8  OK  ''
2025-04-15T08:06:07.3955346Z #11 317.8 
2025-04-15T08:06:07.3955687Z #11 317.8 [/opt/netdata.git]# chown root:netdata //usr/libexec/netdata/plugins.d/cgroup-network-helper.sh 
2025-04-15T08:06:07.3956270Z #11 317.8  OK  ''
2025-04-15T08:06:07.3956455Z #11 317.8 
2025-04-15T08:06:07.3956769Z #11 317.8 [/opt/netdata.git]# chmod 0750 //usr/libexec/netdata/plugins.d/cgroup-network-helper.sh 
2025-04-15T08:06:07.3957181Z #11 317.8  OK  ''
2025-04-15T08:06:07.3957446Z #11 317.8 
2025-04-15T08:06:07.3958000Z #11 317.8 [/opt/netdata.git]# chown root:netdata //usr/libexec/netdata/plugins.d/local-listeners 
2025-04-15T08:06:07.3958660Z #11 317.8  OK  ''
2025-04-15T08:06:07.3959160Z #11 317.8 
2025-04-15T08:06:07.3959669Z #11 317.8 [/opt/netdata.git]# chmod 4750 //usr/libexec/netdata/plugins.d/local-listeners 
2025-04-15T08:06:07.3960443Z #11 317.8  OK  ''
2025-04-15T08:06:07.3960729Z #11 317.8 
2025-04-15T08:06:07.3961332Z #11 317.8 [/opt/netdata.git]# chown root:netdata //usr/libexec/netdata/plugins.d/network-viewer.plugin 
2025-04-15T08:06:07.3962057Z #11 317.8  OK  ''
2025-04-15T08:06:07.3962535Z #11 317.8 
2025-04-15T08:06:07.3963243Z #11 317.8 [/opt/netdata.git]# chmod 4750 //usr/libexec/netdata/plugins.d/network-viewer.plugin 
2025-04-15T08:06:07.3964135Z #11 317.8  OK  ''
2025-04-15T08:06:07.3964376Z #11 317.8 
2025-04-15T08:06:07.3964643Z #11 317.8  --- Telemetry configuration --- 
2025-04-15T08:06:07.3965113Z #11 317.8  --- Install netdata at system init --- 
2025-04-15T08:06:07.3965974Z #11 317.8 You can opt out from anonymous statistics via the --disable-telemetry option, or by creating an empty file //etc/netdata/.opt-out-from-anonymous-statistics 
2025-04-15T08:06:07.3967486Z #11 317.8 
2025-04-15T08:06:07.3967752Z #11 317.8 Installing LSB service file.
2025-04-15T08:06:07.3967999Z #11 317.8 Enabling Netdata service.
2025-04-15T08:06:07.3968299Z #11 317.9 [/opt/netdata.git]# chmod 0644 //etc/netdata/netdata.conf 
2025-04-15T08:06:07.3968594Z #11 317.9  OK  ''
2025-04-15T08:06:07.3968755Z #11 317.9 
2025-04-15T08:06:07.3968953Z #11 317.9  --- Check KSM (kernel memory deduper) --- 
2025-04-15T08:06:07.3969199Z #11 317.9 
2025-04-15T08:06:07.3969382Z #11 317.9 Memory de-duplication instructions
2025-04-15T08:06:07.3969616Z #11 317.9 
2025-04-15T08:06:07.3969872Z #11 317.9 You have kernel memory de-duper (called Kernel Same-page Merging,
2025-04-15T08:06:07.3970251Z #11 317.9 or KSM) available, but it is not currently enabled.
2025-04-15T08:06:07.3970512Z #11 317.9 
2025-04-15T08:06:07.3970672Z #11 317.9 To enable it run:
2025-04-15T08:06:07.3970858Z #11 317.9 
2025-04-15T08:06:07.3971027Z #11 317.9     echo 1 >/sys/kernel/mm/ksm/run
2025-04-15T08:06:07.3971298Z #11 317.9     echo 1000 >/sys/kernel/mm/ksm/sleep_millisecs
2025-04-15T08:06:07.3971556Z #11 317.9 
2025-04-15T08:06:07.3971779Z #11 317.9 If you enable it, you will save 40-60% of netdata memory.
2025-04-15T08:06:07.3972232Z #11 317.9 
2025-04-15T08:06:07.3972513Z #11 317.9  --- Check apps.plugin --- 
2025-04-15T08:06:07.3972880Z #11 317.9  --- Copy uninstaller --- 
2025-04-15T08:06:07.3973282Z #11 317.9  --- Basic netdata instructions --- 
2025-04-15T08:06:07.3973683Z #11 317.9 
2025-04-15T08:06:07.3974058Z #11 317.9 netdata by default listens on all IPs on port 19999,
2025-04-15T08:06:07.3974619Z #11 317.9 so you can access it with:
2025-04-15T08:06:07.3974974Z #11 317.9 
2025-04-15T08:06:07.3975320Z #11 317.9   http://this.machine.ip:19999/
2025-04-15T08:06:07.3975952Z #11 317.9 
2025-04-15T08:06:07.3976634Z #11 317.9 To stop netdata run:
2025-04-15T08:06:07.3977055Z #11 317.9 
2025-04-15T08:06:07.3977339Z #11 317.9   /etc/init.d/netdata stop
2025-04-15T08:06:07.3977670Z #11 317.9 
2025-04-15T08:06:07.3977928Z #11 317.9 To start netdata run:
2025-04-15T08:06:07.3978223Z #11 317.9 
2025-04-15T08:06:07.3978478Z #11 317.9   /etc/init.d/netdata start
2025-04-15T08:06:07.3978799Z #11 317.9 
2025-04-15T08:06:07.3979241Z #11 317.9 Uninstall script copied to: //usr/libexec/netdata/netdata-uninstaller.sh
2025-04-15T08:06:07.3979770Z #11 317.9 
2025-04-15T08:06:07.3980151Z #11 317.9  --- Installing (but not enabling) the netdata updater tool --- 
2025-04-15T08:06:07.3980785Z #11 317.9 Update script is located at //usr/libexec/netdata/netdata-updater.sh
2025-04-15T08:06:07.3981259Z #11 317.9 
2025-04-15T08:06:07.3981540Z #11 317.9  --- Wrap up environment set up --- 
2025-04-15T08:06:07.3981936Z #11 317.9 Preparing .environment file
2025-04-15T08:06:07.5471107Z #11 317.9 [/opt/netdata.git]# chmod 0644 //etc/netdata/.environment 
2025-04-15T08:06:07.5471756Z #11 317.9  OK  ''
2025-04-15T08:06:07.5471980Z #11 317.9 
2025-04-15T08:06:07.5472286Z #11 317.9 Setting netdata.tarball.checksum to 'new_installation'
2025-04-15T08:06:07.5472662Z #11 317.9 
2025-04-15T08:06:07.5472883Z #11 317.9  --- We are done! --- 
2025-04-15T08:06:07.5473152Z #11 317.9 
2025-04-15T08:06:07.5473335Z #11 317.9   ^
2025-04-15T08:06:07.5473596Z #11 317.9   |.-.   .-.   .-.   .-.   .-.   .  netdata  .-.   .-.   .-.   .-.   .-.   .-
2025-04-15T08:06:07.5473981Z #11 317.9   |   '-'   '-'   '-'   '-'   '-'               '-'   '-'   '-'   '-'   '-'   
2025-04-15T08:06:07.5474370Z #11 317.9   +----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+--->
2025-04-15T08:06:07.5474708Z #11 317.9 
2025-04-15T08:06:07.5474915Z #11 317.9  --- is installed now! --- 
2025-04-15T08:06:07.5475250Z #11 317.9   Enjoy X-Ray Vision for your infrastructure...
2025-04-15T08:06:07.5475565Z #11 317.9 
2025-04-15T08:06:07.5833269Z #11 DONE 318.1s
2025-04-15T08:06:07.7351911Z 
2025-04-15T08:06:07.7357676Z #12 [builder 5/5] RUN mkdir -p /app/usr/sbin/              /app/usr/share              /app/usr/libexec              /app/usr/local              /app/usr/lib              /app/var/cache              /app/var/lib              /app/etc &&     mv /usr/share/netdata   /app/usr/share/ &&     mv /usr/libexec/netdata /app/usr/libexec/ &&     mv /usr/lib/netdata     /app/usr/lib/ &&     mv /var/cache/netdata   /app/var/cache/ &&     mv /var/lib/netdata     /app/var/lib/ &&     mv /etc/netdata         /app/etc/ &&     mv /usr/sbin/netdata    /app/usr/sbin/ &&     mv /usr/sbin/netdatacli    /app/usr/sbin/ &&     mv /usr/sbin/systemd-cat-native /app/usr/sbin/ &&     mv packaging/docker/run.sh        /app/usr/sbin/ &&     mv packaging/docker/health.sh     /app/usr/sbin/ &&     mkdir -p /deps/etc &&     cp -rp /deps/etc /app/usr/local/etc &&     chmod -R o+rX /app &&     chmod +x /app/usr/sbin/run.sh
2025-04-15T08:06:08.4593183Z #12 DONE 0.9s
2025-04-15T08:06:10.2127768Z 
2025-04-15T08:06:10.2128339Z #13 [base 3/4] COPY --from=builder /app /
2025-04-15T08:06:10.4878508Z #13 DONE 0.3s
2025-04-15T08:06:10.5887139Z 
2025-04-15T08:06:10.5892716Z #14 [base 4/4] RUN addgroup --gid 201 --system "netdata" &&     adduser --system --no-create-home --shell /usr/sbin/nologin --uid 201 --home /etc/netdata --group "netdata" &&     chown -R root:root         /etc/netdata         /usr/share/netdata         /usr/libexec/netdata &&     chown -R netdata:root         /usr/lib/netdata         /var/cache/netdata         /var/lib/netdata         /var/log/netdata &&     chown -R netdata:netdata /var/lib/netdata/cloud.d &&     chmod 0700 /var/lib/netdata/cloud.d &&     chmod 0755 /usr/libexec/netdata/plugins.d/*.plugin &&     for name in cgroup-network                 local-listeners                 apps.plugin                 debugfs.plugin                 freeipmi.plugin                 go.d.plugin                 perf.plugin                 ndsudo                 slabinfo.plugin                 network-viewer.plugin                 systemd-journal.plugin; do         [ -f "/usr/libexec/netdata/plugins.d/$name" ] && chmod 4755 "/usr/libexec/netdata/plugins.d/$name";     done &&     find /var/lib/netdata /var/cache/netdata -type d -exec chmod 0770 {} ; &&     find /var/lib/netdata /var/cache/netdata -type f -exec chmod 0660 {} ; &&     cp -va /etc/netdata /etc/netdata.stock
2025-04-15T08:06:10.5896303Z #14 0.089 Adding group `netdata' (GID 201) ...
2025-04-15T08:06:10.5896629Z #14 0.100 Done.
2025-04-15T08:06:10.7784212Z #14 0.126 Adding system user `netdata' (UID 201) ...
2025-04-15T08:06:10.7784791Z #14 0.126 Adding new user `netdata' (UID 201) with group `netdata' ...
2025-04-15T08:06:10.7785213Z #14 0.139 Not creating home directory `/etc/netdata'.
2025-04-15T08:06:11.3532406Z #14 0.864 '/etc/netdata' -> '/etc/netdata.stock'
2025-04-15T08:06:11.3533150Z #14 0.864 '/etc/netdata/.environment' -> '/etc/netdata.stock/.environment'
2025-04-15T08:06:11.3533978Z #14 0.864 '/etc/netdata/.install-type' -> '/etc/netdata.stock/.install-type'
2025-04-15T08:06:11.3534806Z #14 0.864 '/etc/netdata/charts.d' -> '/etc/netdata.stock/charts.d'
2025-04-15T08:06:11.3535607Z #14 0.864 '/etc/netdata/custom-plugins.d' -> '/etc/netdata.stock/custom-plugins.d'
2025-04-15T08:06:11.3536885Z #14 0.864 '/etc/netdata/edit-config' -> '/etc/netdata.stock/edit-config'
2025-04-15T08:06:11.3537743Z #14 0.864 '/etc/netdata/health.d' -> '/etc/netdata.stock/health.d'
2025-04-15T08:06:11.3538606Z #14 0.864 '/etc/netdata/netdata.conf' -> '/etc/netdata.stock/netdata.conf'
2025-04-15T08:06:11.3561329Z #14 0.864 '/etc/netdata/orig' -> '/etc/netdata.stock/orig'
2025-04-15T08:06:11.3561972Z #14 0.864 '/etc/netdata/python.d' -> '/etc/netdata.stock/python.d'
2025-04-15T08:06:11.3562549Z #14 0.864 '/etc/netdata/ssl' -> '/etc/netdata.stock/ssl'
2025-04-15T08:06:11.3563097Z #14 0.864 '/etc/netdata/statsd.d' -> '/etc/netdata.stock/statsd.d'
2025-04-15T08:06:11.5159915Z #14 DONE 0.9s
2025-04-15T08:06:11.5160410Z 
2025-04-15T08:06:11.5160806Z #15 exporting to docker image format
2025-04-15T08:06:11.5161241Z #15 exporting layers
2025-04-15T08:06:15.1860014Z #15 exporting layers 3.8s done
2025-04-15T08:06:15.3477721Z #15 exporting manifest sha256:90c054ef65274d3c0ce7de4390e6992d85d6d60ccf01a773c4325d237a94248d done
2025-04-15T08:06:15.3479097Z #15 exporting config sha256:86d1de8531af34b44cd279c3cf3220379335713cbec2ec4f9032137b40952c41 done
2025-04-15T08:06:15.3479639Z #15 sending tarball
2025-04-15T08:06:19.7109426Z #15 ...
2025-04-15T08:06:19.7109675Z 
2025-04-15T08:06:19.7109829Z #16 importing to docker
2025-04-15T08:06:19.7110263Z #16 loading layer f7f2b929d8a5 491.52kB / 48.49MB
2025-04-15T08:06:19.7110588Z #16 loading layer 0e19071c96a1 70.19MB / 72.04MB 2.0s
2025-04-15T08:06:21.0802077Z #16 loading layer fc405b783f05 297B / 297B
2025-04-15T08:06:21.2848038Z #16 loading layer 6b3c7664dd7a 491.52kB / 47.49MB
2025-04-15T08:06:21.8658412Z #16 loading layer bd5e8bb224f6 131.07kB / 12.66MB
2025-04-15T08:06:22.1476224Z #16 loading layer fc405b783f05 297B / 297B 1.1s done
2025-04-15T08:06:22.2994241Z #16 loading layer f7f2b929d8a5 48.49MB / 48.49MB 6.1s done
2025-04-15T08:06:22.3015750Z #16 loading layer 0e19071c96a1 72.04MB / 72.04MB 4.4s done
2025-04-15T08:06:22.3016901Z #16 loading layer 6b3c7664dd7a 47.49MB / 47.49MB 1.0s done
2025-04-15T08:06:22.3018050Z #16 loading layer bd5e8bb224f6 12.66MB / 12.66MB 0.3s done
2025-04-15T08:06:22.3018686Z #16 DONE 6.1s
2025-04-15T08:06:22.3018960Z 
2025-04-15T08:06:22.3019250Z #15 exporting to docker image format
2025-04-15T08:06:22.3020043Z #15 sending tarball 7.0s done
2025-04-15T08:06:22.3020536Z #15 DONE 10.8s
2025-04-15T08:06:22.3020841Z 
2025-04-15T08:06:22.3022376Z #17 exporting cache to client directory
2025-04-15T08:06:22.3023003Z #17 preparing build cache for export
2025-04-15T08:06:38.9233455Z #17 writing layer sha256:1c1e4db2309ea4d7f127908dc06b52c621cea76c898a040c9d4e5c25071b5f3e
2025-04-15T08:06:39.0844717Z #17 writing layer sha256:1c1e4db2309ea4d7f127908dc06b52c621cea76c898a040c9d4e5c25071b5f3e done
2025-04-15T08:06:39.0846389Z #17 writing layer sha256:23234cb587452c9b107726cec46e7bcea1717e4fa852ec43a73f5f502ecb4e84 done
2025-04-15T08:06:39.0848711Z #17 writing layer sha256:23b7d26ef1d294256da0d70ce374277b9aab5ca683015073316005cb63d33849
2025-04-15T08:06:39.2953214Z #17 writing layer sha256:23b7d26ef1d294256da0d70ce374277b9aab5ca683015073316005cb63d33849 0.4s done
2025-04-15T08:06:39.2954186Z #17 writing layer sha256:2a76eabc8892e0d2ed956eb4c70f7b5869d3699a03e186185ba78e030e3e91a4
2025-04-15T08:06:39.8003857Z #17 writing layer sha256:2a76eabc8892e0d2ed956eb4c70f7b5869d3699a03e186185ba78e030e3e91a4 0.5s done
2025-04-15T08:06:39.8005065Z #17 writing layer sha256:47d7b4b45d97480ac87b407dbda1ce1fe32baa4b8431eed8f751e4f9945c04af
2025-04-15T08:06:40.0108055Z #17 writing layer sha256:47d7b4b45d97480ac87b407dbda1ce1fe32baa4b8431eed8f751e4f9945c04af 0.2s done
2025-04-15T08:06:40.0109016Z #17 writing layer sha256:4df511774be456e20f1a74d46cbb4fbd4f462a2496664dc8203e4443526a4623
2025-04-15T08:06:40.1708607Z #17 writing layer sha256:4df511774be456e20f1a74d46cbb4fbd4f462a2496664dc8203e4443526a4623 done
2025-04-15T08:06:40.1710428Z #17 writing layer sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1 done
2025-04-15T08:06:40.1711460Z #17 writing layer sha256:5e8793387bd7a03784ca95d41d69f4d0570b45d64002a65b62d08664e6825d8c
2025-04-15T08:06:40.3505313Z #17 writing layer sha256:5e8793387bd7a03784ca95d41d69f4d0570b45d64002a65b62d08664e6825d8c 0.3s done
2025-04-15T08:06:40.3506730Z #17 writing layer sha256:9bf4a3d66ed458ddb6798f421f8ea2a048b0ecdf25838cc1594adf867db419ee
2025-04-15T08:06:40.6618786Z #17 writing layer sha256:9bf4a3d66ed458ddb6798f421f8ea2a048b0ecdf25838cc1594adf867db419ee 0.3s done
2025-04-15T08:06:40.6619629Z #17 writing layer sha256:c6597fc0a1c9f4816f04bab3606c1f642f9bbaa5a06ab6cad104778fff08ea2c
2025-04-15T08:06:42.6736377Z #17 writing layer sha256:c6597fc0a1c9f4816f04bab3606c1f642f9bbaa5a06ab6cad104778fff08ea2c 2.0s done
2025-04-15T08:06:42.6737191Z #17 writing layer sha256:cba4091b5f6e57c5e29bc9e1e87b7ac1b7b27449ddd8dfcb4f014a6ce07248e1
2025-04-15T08:06:44.6647859Z #17 writing layer sha256:cba4091b5f6e57c5e29bc9e1e87b7ac1b7b27449ddd8dfcb4f014a6ce07248e1 2.0s done
2025-04-15T08:06:45.1374526Z #17 writing layer sha256:d13e85eca31f8e9a530041e204da3a6674f1202da739817e1dcb93b2bab5d06f
2025-04-15T08:06:45.1375644Z #17 writing layer sha256:d13e85eca31f8e9a530041e204da3a6674f1202da739817e1dcb93b2bab5d06f 0.5s done
2025-04-15T08:06:45.1376630Z #17 writing layer sha256:f952ab5a89ccaf258f8662fcc55886ef41a1f7188bb77fe2bec082afaab143a6
2025-04-15T08:06:47.1156871Z #17 writing layer sha256:f952ab5a89ccaf258f8662fcc55886ef41a1f7188bb77fe2bec082afaab143a6 2.0s done
2025-04-15T08:06:47.1157794Z #17 writing layer sha256:fb79b243b2016afa1dfbcadcabb0f9374b258a85458b55f3a674e45b360d7fa8
2025-04-15T08:06:47.2184431Z #17 preparing build cache for export 25.1s done
2025-04-15T08:06:47.2185462Z #17 writing layer sha256:fb79b243b2016afa1dfbcadcabb0f9374b258a85458b55f3a674e45b360d7fa8 0.1s done
2025-04-15T08:06:47.2186806Z #17 writing config sha256:e504b0a7e5e99ad48916a8bcf216957115065365d6940484b1b7f46293faeb1d done
2025-04-15T08:06:47.2187889Z #17 writing cache manifest sha256:5390286dfba508f30b4a0639df91667b239418dc6a3d44be43e28fe08ac96b5a done
2025-04-15T08:06:47.2188662Z #17 DONE 25.1s
2025-04-15T08:06:47.2430251Z 
2025-04-15T08:06:47.2430651Z #18 resolving provenance for metadata file
2025-04-15T08:06:47.2431066Z #18 DONE 0.0s
2025-04-15T08:06:47.2510762Z ##[group]ImageID
2025-04-15T08:06:47.2511320Z sha256:86d1de8531af34b44cd279c3cf3220379335713cbec2ec4f9032137b40952c41
2025-04-15T08:06:47.2513649Z ##[endgroup]
2025-04-15T08:06:47.2514240Z ##[group]Digest
2025-04-15T08:06:47.2514788Z sha256:90c054ef65274d3c0ce7de4390e6992d85d6d60ccf01a773c4325d237a94248d
2025-04-15T08:06:47.2518496Z ##[endgroup]
2025-04-15T08:06:47.2519038Z ##[group]Metadata
2025-04-15T08:06:47.2519308Z {
2025-04-15T08:06:47.2519599Z   "buildx.build.provenance": {
2025-04-15T08:06:47.2520374Z     "buildType": "https://mobyproject.org/buildkit@v1",
2025-04-15T08:06:47.2520857Z     "materials": [
2025-04-15T08:06:47.2521132Z       {
2025-04-15T08:06:47.2521498Z         "uri": "pkg:docker/netdata/base@v2?platform=linux%2Famd64",
2025-04-15T08:06:47.2522005Z         "digest": {
2025-04-15T08:06:47.2522567Z           "sha256": "7765ceb9cfdaf1746de9af3976d29a49f822bb9c2ccbffd70b4275ab05563804"
2025-04-15T08:06:47.2523175Z         }
2025-04-15T08:06:47.2523426Z       },
2025-04-15T08:06:47.2523668Z       {
2025-04-15T08:06:47.2524047Z         "uri": "pkg:docker/netdata/builder@v2?platform=linux%2Famd64",
2025-04-15T08:06:47.2524371Z         "digest": {
2025-04-15T08:06:47.2524695Z           "sha256": "b069c242bd57207d619923b1eda180bdc2bdfadc4ef0e9c4537f5c9b4c17e9b8"
2025-04-15T08:06:47.2525048Z         }
2025-04-15T08:06:47.2525258Z       },
2025-04-15T08:06:47.2525532Z       {
2025-04-15T08:06:47.2525886Z         "uri": "https://github.com/netdata/netdata.git#refs/pull/20112/merge",
2025-04-15T08:06:47.2526419Z         "digest": {
2025-04-15T08:06:47.2526739Z           "sha1": "a5b28a739265453562fff86d47ec8c9cc0a1e296"
2025-04-15T08:06:47.2526997Z         }
2025-04-15T08:06:47.2527181Z       }
2025-04-15T08:06:47.2527406Z     ],
2025-04-15T08:06:47.2527636Z     "invocation": {
2025-04-15T08:06:47.2527951Z       "configSource": {},
2025-04-15T08:06:47.2528286Z       "parameters": {
2025-04-15T08:06:47.2528551Z         "frontend": "dockerfile.v0",
2025-04-15T08:06:47.2528776Z         "args": {
2025-04-15T08:06:47.2528989Z           "build-arg:BUILD_DATE": "2025-04-15T06:02:34Z",
2025-04-15T08:06:47.2529258Z           "build-arg:BUILD_VERSION": "test",
2025-04-15T08:06:47.2529531Z           "build-arg:EXTRA_INSTALL_OPTS": "--disable-go",
2025-04-15T08:06:47.2529844Z           "build-arg:OFFICIAL_IMAGE": ""
2025-04-15T08:06:47.2530072Z         },
2025-04-15T08:06:47.2530230Z         "secrets": [
2025-04-15T08:06:47.2530423Z           {
2025-04-15T08:06:47.2530589Z             "id": "GIT_AUTH_HEADER",
2025-04-15T08:06:47.2530825Z             "optional": true
2025-04-15T08:06:47.2531024Z           },
2025-04-15T08:06:47.2531178Z           {
2025-04-15T08:06:47.2531339Z             "id": "GIT_AUTH_TOKEN",
2025-04-15T08:06:47.2531558Z             "optional": true
2025-04-15T08:06:47.2531749Z           }
2025-04-15T08:06:47.2532167Z         ]
2025-04-15T08:06:47.2532322Z       },
2025-04-15T08:06:47.2532480Z       "environment": {
2025-04-15T08:06:47.2532676Z         "platform": "linux/amd64"
2025-04-15T08:06:47.2532888Z       }
2025-04-15T08:06:47.2533033Z     }
2025-04-15T08:06:47.2533182Z   },
2025-04-15T08:06:47.2533677Z   "buildx.build.ref": "builder-181a0a2c-6979-4ac2-af91-062ff9d1030d/builder-181a0a2c-6979-4ac2-af91-062ff9d1030d0/cf5d53plvdduhlm458naprdba",
2025-04-15T08:06:47.2534664Z   "cache.manifest": "{\"mediaType\":\"application/vnd.oci.image.index.v1+json\",\"digest\":\"sha256:5390286dfba508f30b4a0639df91667b239418dc6a3d44be43e28fe08ac96b5a\",\"size\":4868}",
2025-04-15T08:06:47.2535525Z   "containerimage.config.digest": "sha256:86d1de8531af34b44cd279c3cf3220379335713cbec2ec4f9032137b40952c41",
2025-04-15T08:06:47.2535999Z   "containerimage.descriptor": {
2025-04-15T08:06:47.2537114Z     "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
2025-04-15T08:06:47.2537654Z     "digest": "sha256:90c054ef65274d3c0ce7de4390e6992d85d6d60ccf01a773c4325d237a94248d",
2025-04-15T08:06:47.2538029Z     "size": 1296,
2025-04-15T08:06:47.2538204Z     "annotations": {
2025-04-15T08:06:47.2538465Z       "org.opencontainers.image.created": "2025-04-15T08:06:15Z"
2025-04-15T08:06:47.2538752Z     },
2025-04-15T08:06:47.2538909Z     "platform": {
2025-04-15T08:06:47.2539097Z       "architecture": "amd64",
2025-04-15T08:06:47.2539297Z       "os": "linux"
2025-04-15T08:06:47.2539471Z     }
2025-04-15T08:06:47.2539620Z   },
2025-04-15T08:06:47.2539981Z   "containerimage.digest": "sha256:90c054ef65274d3c0ce7de4390e6992d85d6d60ccf01a773c4325d237a94248d",
2025-04-15T08:06:47.2540442Z   "image.name": "docker.io/netdata/netdata:test"
2025-04-15T08:06:47.2540906Z }
2025-04-15T08:06:47.2541233Z ##[endgroup]
2025-04-15T08:06:47.2541531Z ##[group]Reference
2025-04-15T08:06:47.2541982Z builder-181a0a2c-6979-4ac2-af91-062ff9d1030d/builder-181a0a2c-6979-4ac2-af91-062ff9d1030d0/cf5d53plvdduhlm458naprdba
2025-04-15T08:06:47.2543849Z ##[endgroup]
2025-04-15T08:06:47.2544397Z ##[group]Check build summary support
2025-04-15T08:06:47.2544968Z Build summary supported!
2025-04-15T08:06:47.2545514Z ##[endgroup]
2025-04-15T08:06:47.2618368Z ##[group]Run .github/scripts/docker-test.sh
2025-04-15T08:06:47.2618739Z [36;1m.github/scripts/docker-test.sh[0m
2025-04-15T08:06:47.2720497Z shell: /usr/bin/bash -e {0}
2025-04-15T08:06:47.2720744Z env:
2025-04-15T08:06:47.2720921Z   DISABLE_TELEMETRY: 1
2025-04-15T08:06:47.2721127Z   NIGHTLY_COUNT: 4
2025-04-15T08:06:47.2721313Z ##[endgroup]
2025-04-15T08:06:47.2837668Z ##[group]Netdata buildinfo
2025-04-15T08:06:47.5090186Z time=2025-04-15T08:06:47.508Z comm=netdata source=daemon level=notice errno="2, No such file or directory" tid=1  msg="CONFIG: cannot load user config '/etc/netdata/stream.conf'. Will try stock config."
2025-04-15T08:06:47.6804479Z Packaging:
2025-04-15T08:06:47.6805024Z     Netdata Version ____________________________________________ : v2.4.0-4-nightly
2025-04-15T08:06:47.6805750Z     Installation Type __________________________________________ : oci
2025-04-15T08:06:47.6806557Z     Package Architecture _______________________________________ : x86_64
2025-04-15T08:06:47.6807290Z     Package Distro _____________________________________________ : unknown
2025-04-15T08:06:47.6813473Z     Configure Options __________________________________________ : cmake -DCMAKE_BUILD_TYPE=RelWithDebInfo -DCMAKE_C_STANDARD=11 -DCMAKE_CXX_STANDARD=14 -DBUILD_SHARED_LIBS= -DCMAKE_C_FLAGS='-ffunction-sections -fdata-sections -O2 -funroll-loops -pipe -fexceptions -fstack-protector-strong -D_FORTIFY_SOURCE=3 -fstack-clash-protection -fcf-protection=full -Wno-builtin-macro-redefined -fexceptions -fno-omit-frame-pointer -funwind-tables -fasynchronous-unwind-tables' -DCMAKE_CXX_FLAGS=' -ffunction-sections -fdata-sections -O2 -funroll-loops -pipe -fexceptions -fstack-protector-strong -D_FORTIFY_SOURCE=3 -fstack-clash-protection -fcf-protection=full -Wno-builtin-macro-redefined -fexceptions -fno-omit-frame-pointer -funwind-tables -fasynchronous-unwind-tables' -DCMAKE_COMPILE_DEFINITIONS='_GNU_SOURCE' -DCMAKE_EXE_LINKER_FLAGS='-Wl,--gc-sections -fexceptions -fstack-protector-strong -D_FORTIFY_SOURCE=3 -fstack-clash-protection -fcf-protection=full -Wno-builtin-macro-redefined -fexceptions -rdynamic' -DCMAKE_SHARED_LINKER_FLAGS='-Wl,--gc-sections'
2025-04-15T08:06:47.6819092Z Default Directories:
2025-04-15T08:06:47.6819386Z     User Configurations ________________________________________ : /etc/netdata
2025-04-15T08:06:47.6819821Z     Stock Configurations _______________________________________ : /usr/lib/netdata/conf.d
2025-04-15T08:06:47.6820283Z     Ephemeral Databases (metrics data, metadata) _______________ : /var/cache/netdata
2025-04-15T08:06:47.6820732Z     Permanent Databases ________________________________________ : /var/lib/netdata
2025-04-15T08:06:47.6821177Z     Plugins ____________________________________________________ : /usr/libexec/netdata/plugins.d
2025-04-15T08:06:47.6821601Z     Static Web Files ___________________________________________ : /usr/share/netdata/web
2025-04-15T08:06:47.6821995Z     Log Files __________________________________________________ : /var/log/netdata
2025-04-15T08:06:47.6822373Z     Lock Files _________________________________________________ : /var/lib/netdata/lock
2025-04-15T08:06:47.6822739Z     Home _______________________________________________________ : /var/lib/netdata
2025-04-15T08:06:47.6823028Z Operating System:
2025-04-15T08:06:47.6823266Z     Kernel _____________________________________________________ : Linux
2025-04-15T08:06:47.6823631Z     Kernel Version _____________________________________________ : 6.8.0-1025-azure
2025-04-15T08:06:47.6824013Z     Operating System ___________________________________________ : unknown
2025-04-15T08:06:47.6824377Z     Operating System ID ________________________________________ : unknown
2025-04-15T08:06:47.6824742Z     Operating System ID Like ___________________________________ : unknown
2025-04-15T08:06:47.6825221Z     Operating System Version ___________________________________ : unknown
2025-04-15T08:06:47.6825595Z     Operating System Version ID ________________________________ : 12
2025-04-15T08:06:47.6826396Z     Detection __________________________________________________ : unknown
2025-04-15T08:06:47.6826757Z Hardware:
2025-04-15T08:06:47.6826985Z     CPU Cores __________________________________________________ : 4
2025-04-15T08:06:47.6827331Z     CPU Frequency ______________________________________________ : 3267000000
2025-04-15T08:06:47.6827675Z     RAM Bytes __________________________________________________ : 16766754816
2025-04-15T08:06:47.6828022Z     Disk Capacity ______________________________________________ : 161061273600
2025-04-15T08:06:47.6828387Z     CPU Architecture ___________________________________________ : x86_64
2025-04-15T08:06:47.6828775Z     Virtualization Technology __________________________________ : microsoft
2025-04-15T08:06:47.6829175Z     Virtualization Detection ___________________________________ : lscpu
2025-04-15T08:06:47.6829493Z Container:
2025-04-15T08:06:47.6829719Z     Container __________________________________________________ : docker
2025-04-15T08:06:47.6830087Z     Container Detection ________________________________________ : dockerenv
2025-04-15T08:06:47.6830469Z     Container Orchestrator _____________________________________ : none
2025-04-15T08:06:47.6830872Z     Container Operating System _________________________________ : Debian GNU/Linux
2025-04-15T08:06:47.6831280Z     Container Operating System ID ______________________________ : debian
2025-04-15T08:06:47.6831672Z     Container Operating System ID Like _________________________ : unknown
2025-04-15T08:06:47.6832081Z     Container Operating System Version _________________________ : 12 (bookworm)
2025-04-15T08:06:47.6832487Z     Container Operating System Version ID ______________________ : 12
2025-04-15T08:06:47.6832907Z     Container Operating System Detection _______________________ : /etc/os-release
2025-04-15T08:06:47.6833376Z Features:
2025-04-15T08:06:47.6833589Z     Built For __________________________________________________ : Linux
2025-04-15T08:06:47.6833966Z     Netdata Cloud ______________________________________________ : YES
2025-04-15T08:06:47.6835121Z     Health (trigger alerts and send notifications) _____________ : YES
2025-04-15T08:06:47.6835802Z     Streaming (stream metrics to parent Netdata servers) _______ : YES
2025-04-15T08:06:47.6836656Z     Back-filling (of higher database tiers) ____________________ : YES
2025-04-15T08:06:47.6837297Z     Replication (fill the gaps of parent Netdata servers) ______ : YES
2025-04-15T08:06:47.6838007Z     Streaming and Replication Compression ______________________ : YES (zstd lz4 gzip)
2025-04-15T08:06:47.6838570Z     Contexts (index all active and archived metrics) ___________ : YES
2025-04-15T08:06:47.6838964Z     Tiering (multiple dbs with different metrics resolution) ___ : YES (5)
2025-04-15T08:06:47.6839454Z     Machine Learning ___________________________________________ : YES
2025-04-15T08:06:47.6839821Z     Memory Allocator ___________________________________________ : system
2025-04-15T08:06:47.6840219Z Database Engines:
2025-04-15T08:06:47.6840499Z     dbengine (compression) _____________________________________ : YES (zstd lz4)
2025-04-15T08:06:47.6840956Z     alloc ______________________________________________________ : YES
2025-04-15T08:06:47.6841261Z     ram ________________________________________________________ : YES
2025-04-15T08:06:47.6841595Z     none _______________________________________________________ : YES
2025-04-15T08:06:47.6842034Z Connectivity Capabilities:
2025-04-15T08:06:47.6842319Z     ACLK (Agent-Cloud Link: MQTT over WebSockets over TLS) _____ : YES
2025-04-15T08:06:47.6842912Z     static (Netdata internal web server) _______________________ : YES
2025-04-15T08:06:47.6843362Z     h2o (web server) ___________________________________________ : NO
2025-04-15T08:06:47.6843724Z     WebRTC (experimental) ______________________________________ : NO
2025-04-15T08:06:47.6844186Z     Native HTTPS (TLS Support) _________________________________ : YES
2025-04-15T08:06:47.6844731Z     TLS Host Verification ______________________________________ : YES
2025-04-15T08:06:47.6845145Z Libraries:
2025-04-15T08:06:47.6845389Z     LZ4 (extremely fast lossless compression algorithm) ________ : YES
2025-04-15T08:06:47.6845872Z     ZSTD (fast, lossless compression algorithm) ________________ : YES
2025-04-15T08:06:47.6846503Z     zlib (lossless data-compression library) ___________________ : YES
2025-04-15T08:06:47.6846910Z     Brotli (generic-purpose lossless compression algorithm) ____ : NO
2025-04-15T08:06:47.6847493Z     protobuf (platform-neutral data serialization protocol) ____ : YES (system)
2025-04-15T08:06:47.6848008Z     OpenSSL (cryptography) _____________________________________ : YES
2025-04-15T08:06:47.6848393Z     libdatachannel (stand-alone WebRTC data channels) __________ : NO
2025-04-15T08:06:47.6848887Z     JSON-C (lightweight JSON manipulation) _____________________ : YES
2025-04-15T08:06:47.6849272Z     libcap (Linux capabilities system operations) ______________ : NO
2025-04-15T08:06:47.6849775Z     libcrypto (cryptographic functions) ________________________ : YES
2025-04-15T08:06:47.6850151Z     libyaml (library for parsing and emitting YAML) ____________ : YES
2025-04-15T08:06:47.6850622Z     libmnl (library for working with netfilter) ________________ : YES
2025-04-15T08:06:47.6851176Z     stacktraces (library for getting stack traces) _____________ : libbacktrace (mmap, threads, data)
2025-04-15T08:06:47.6851676Z Plugins:
2025-04-15T08:06:47.6852010Z     apps (monitor processes) ___________________________________ : YES
2025-04-15T08:06:47.6852385Z     cgroups (monitor containers and VMs) _______________________ : YES
2025-04-15T08:06:47.6852993Z     cgroup-network (associate interfaces to CGROUPS) ___________ : YES
2025-04-15T08:06:47.6853575Z     proc (monitor Linux systems) _______________________________ : YES
2025-04-15T08:06:47.6854627Z     tc (monitor Linux network QoS) _____________________________ : YES
2025-04-15T08:06:47.6855282Z     diskspace (monitor Linux mount points) _____________________ : YES
2025-04-15T08:06:47.6855891Z     freebsd (monitor FreeBSD systems) __________________________ : NO
2025-04-15T08:06:47.6856610Z     macos (monitor MacOS systems) ______________________________ : NO
2025-04-15T08:06:47.6857370Z     windows (monitor Windows systems) __________________________ : NO
2025-04-15T08:06:47.6858182Z     statsd (collect custom application metrics) ________________ : YES
2025-04-15T08:06:47.6858590Z     timex (check system clock synchronization) _________________ : YES
2025-04-15T08:06:47.6859230Z     idlejitter (check system latency and jitter) _______________ : YES
2025-04-15T08:06:47.6859675Z     bash (support shell data collection jobs - charts.d) _______ : YES
2025-04-15T08:06:47.6860045Z     debugfs (kernel debugging metrics) _________________________ : YES
2025-04-15T08:06:47.6860414Z     cups (monitor printers and print jobs) _____________________ : NO
2025-04-15T08:06:47.6861008Z     ebpf (monitor system calls) ________________________________ : NO
2025-04-15T08:06:47.6861648Z     freeipmi (monitor enterprise server H/W) ___________________ : YES
2025-04-15T08:06:47.6862321Z     network-viewer (monitor TCP/UDP IPv4/6 sockets) ____________ : YES
2025-04-15T08:06:47.6863023Z     systemd-journal (monitor journal logs) _____________________ : YES
2025-04-15T08:06:47.6863467Z     windows-events (monitor Windows events) ____________________ : NO
2025-04-15T08:06:47.6863944Z     nfacct (gather netfilter accounting) _______________________ : NO
2025-04-15T08:06:47.6864322Z     perf (collect kernel performance events) ___________________ : YES
2025-04-15T08:06:47.6864942Z     slabinfo (monitor kernel object caching) ___________________ : YES
2025-04-15T08:06:47.6865563Z     Xen ________________________________________________________ : NO
2025-04-15T08:06:47.6866582Z     Xen VBD Error Tracking _____________________________________ : NO
2025-04-15T08:06:47.6867120Z Exporters:
2025-04-15T08:06:47.6867526Z     AWS Kinesis ________________________________________________ : NO
2025-04-15T08:06:47.6868366Z     GCP PubSub _________________________________________________ : NO
2025-04-15T08:06:47.6868927Z     MongoDB ____________________________________________________ : YES
2025-04-15T08:06:47.6869525Z     Prometheus (OpenMetrics) Exporter __________________________ : YES
2025-04-15T08:06:47.6870151Z     Prometheus Remote Write ____________________________________ : YES
2025-04-15T08:06:47.6870726Z     Graphite ___________________________________________________ : YES
2025-04-15T08:06:47.6871295Z     Graphite HTTP / HTTPS ______________________________________ : YES
2025-04-15T08:06:47.6871862Z     JSON _______________________________________________________ : YES
2025-04-15T08:06:47.6872414Z     JSON HTTP / HTTPS __________________________________________ : YES
2025-04-15T08:06:47.6872964Z     OpenTSDB ___________________________________________________ : YES
2025-04-15T08:06:47.6873565Z     OpenTSDB HTTP / HTTPS ______________________________________ : YES
2025-04-15T08:06:47.6874199Z     All Metrics API ____________________________________________ : YES
2025-04-15T08:06:47.6874881Z     Shell (use metrics in shell scripts) _______________________ : YES
2025-04-15T08:06:47.6875397Z Debug/Developer Features:
2025-04-15T08:06:47.6875872Z     Trace All Netdata Allocations (with charts) ________________ : NO
2025-04-15T08:06:47.6876709Z     Developer Mode (more runtime checks, slower) _______________ : NO
2025-04-15T08:06:47.6877234Z Runtime Information:
2025-04-15T08:06:47.6877670Z     Profile ____________________________________________________ : standalone
2025-04-15T08:06:47.6878295Z     Stream Parent (accept data from Children) __________________ : NO
2025-04-15T08:06:47.6878893Z     Stream Child (send data to a Parent) _______________________ : NO
2025-04-15T08:06:47.6879531Z     Total System Memory ________________________________________ : 16766754816
2025-04-15T08:06:47.6880494Z     Available System Memory ____________________________________ : 15208206336
2025-04-15T08:06:47.7559656Z ##[endgroup]
2025-04-15T08:06:47.7846665Z 7e771d153550888948265dc15bfef0695b9e65983060bf258d76c26a9e6d2a65
2025-04-15T08:07:18.0745266Z Waiting for netdata on localhost:19999 ... OK
2025-04-15T08:07:18.0846902Z {
2025-04-15T08:07:18.0848534Z     "version":"v2.4.0-4-nightly",
2025-04-15T08:07:18.0848998Z     "uid":"333b2cd1-cf21-443e-97cf-0e7a9e700b95",
2025-04-15T08:07:18.0849473Z     "hosts-available":1,
2025-04-15T08:07:18.0849839Z     "mirrored_hosts":["7e771d153550"],
2025-04-15T08:07:18.0850246Z     "mirrored_hosts_status":[{
2025-04-15T08:07:18.0850625Z             "hostname":"7e771d153550",
2025-04-15T08:07:18.0851004Z             "hops":0,
2025-04-15T08:07:18.0851315Z             "reachable":true,
2025-04-15T08:07:18.0851714Z             "guid":"333b2cd1-cf21-443e-97cf-0e7a9e700b95",
2025-04-15T08:07:18.0852173Z             "node_id":null,
2025-04-15T08:07:18.0852623Z             "claim_id":null
2025-04-15T08:07:18.0852973Z         }],
2025-04-15T08:07:18.0853251Z     "alarms":{
2025-04-15T08:07:18.0853563Z         "normal":117,
2025-04-15T08:07:18.0853896Z         "warning":0,
2025-04-15T08:07:18.0854199Z         "critical":0
2025-04-15T08:07:18.0854478Z     },
2025-04-15T08:07:18.0854750Z     "os_name":"Ubuntu",
2025-04-15T08:07:18.0855074Z     "os_id":"ubuntu",
2025-04-15T08:07:18.0855386Z     "os_id_like":"debian",
2025-04-15T08:07:18.0855764Z     "os_version":"22.04.5 LTS (Jammy Jellyfish)",
2025-04-15T08:07:18.0856407Z     "os_version_id":"22.04",
2025-04-15T08:07:18.0856790Z     "os_detection":"/host/etc/os-release",
2025-04-15T08:07:18.0857191Z     "cores_total":"4",
2025-04-15T08:07:18.0857524Z     "total_disk_space":"161061273600",
2025-04-15T08:07:18.0857907Z     "cpu_freq":"3246000000",
2025-04-15T08:07:18.0858249Z     "ram_total":"16766754816",
2025-04-15T08:07:18.0858614Z     "container_os_name":"Debian GNU/Linux",
2025-04-15T08:07:18.0859036Z     "container_os_id":"debian",
2025-04-15T08:07:18.0859407Z     "container_os_id_like":"unknown",
2025-04-15T08:07:18.0860076Z     "container_os_version":"12 (bookworm)",
2025-04-15T08:07:18.0860423Z     "container_os_version_id":"12",
2025-04-15T08:07:18.0860683Z     "container_os_detection":"/etc/os-release",
2025-04-15T08:07:18.0860943Z     "is_k8s_node":"false",
2025-04-15T08:07:18.0861155Z     "kernel_name":"Linux",
2025-04-15T08:07:18.0861369Z     "kernel_version":"6.8.0-1025-azure",
2025-04-15T08:07:18.0861613Z     "architecture":"x86_64",
2025-04-15T08:07:18.0861826Z     "virtualization":"microsoft",
2025-04-15T08:07:18.0862053Z     "virt_detection":"lscpu",
2025-04-15T08:07:18.0862264Z     "container":"docker",
2025-04-15T08:07:18.0862473Z     "container_detection":"dockerenv",
2025-04-15T08:07:18.0862719Z     "cloud_provider_type":"Azure",
2025-04-15T08:07:18.0862961Z     "cloud_instance_type":"Standard_D4ads_v5",
2025-04-15T08:07:18.0863233Z     "cloud_instance_region":"northcentralus",
2025-04-15T08:07:18.0863491Z     "host_labels":{
2025-04-15T08:07:18.0863688Z         "_cloud_provider_type":"Azure",
2025-04-15T08:07:18.0863929Z         "_hostname":"7e771d153550",
2025-04-15T08:07:18.0864137Z         "_os":"linux",
2025-04-15T08:07:18.0864328Z         "_timezone":"Etc/UTC",
2025-04-15T08:07:18.0864547Z         "_abbrev_timezone":"UTC",
2025-04-15T08:07:18.0864766Z         "_os_name":"Ubuntu",
2025-04-15T08:07:18.0864993Z         "_os_version":"22.04.5 LTS (Jammy Jellyfish)",
2025-04-15T08:07:18.0865260Z         "_kernel_version":"6.8.0-1025-azure",
2025-04-15T08:07:18.0865493Z         "_system_cores":"4",
2025-04-15T08:07:18.0865705Z         "_system_cpu_freq":"3246000000",
2025-04-15T08:07:18.0865984Z         "_system_cpu_model":"AMD EPYC 7763 64-Core Processor",
2025-04-15T08:07:18.0866535Z         "_system_ram_total":"16766754816",
2025-04-15T08:07:18.0866781Z         "_system_disk_space":"161061273600",
2025-04-15T08:07:18.0867020Z         "_architecture":"x86_64",
2025-04-15T08:07:18.0867437Z         "_virtualization":"microsoft",
2025-04-15T08:07:18.0867672Z         "_container":"docker",
2025-04-15T08:07:18.0867909Z         "_container_detection":"dockerenv",
2025-04-15T08:07:18.0868156Z         "_hw_product_type":"vm",
2025-04-15T08:07:18.0868398Z         "_cloud_instance_type":"Standard_D4ads_v5",
2025-04-15T08:07:18.0868662Z         "_virt_detection":"lscpu",
2025-04-15T08:07:18.0868886Z         "_is_k8s_node":"false",
2025-04-15T08:07:18.0869098Z         "_install_type":"oci",
2025-04-15T08:07:18.0869305Z         "_prebuilt_arch":"x86_64",
2025-04-15T08:07:18.0869526Z         "_hw_sys_vendor":"Azure",
2025-04-15T08:07:18.0869762Z         "_hw_product_name":"Standard_D4ads_v5",
2025-04-15T08:07:18.0870010Z         "_aclk_available":"true",
2025-04-15T08:07:18.0870226Z         "_aclk_proxy":"none",
2025-04-15T08:07:18.0870444Z         "_aclk_ng_new_cloud_protocol":"true",
2025-04-15T08:07:18.0870700Z         "_has_unstable_connection":"false",
2025-04-15T08:07:18.0870971Z         "_cloud_instance_region":"northcentralus",
2025-04-15T08:07:18.0871223Z         "_is_parent":"false",
2025-04-15T08:07:18.0871432Z         "_mqtt_version":"5",
2025-04-15T08:07:18.0871638Z         "_is_ephemeral":"false"
2025-04-15T08:07:18.0871838Z     },
2025-04-15T08:07:18.0871992Z     "functions":{
2025-04-15T08:07:18.0872176Z         "netdata-streaming":{
2025-04-15T08:07:18.0872433Z             "help":"Streaming status for parents and children.",
2025-04-15T08:07:18.0872720Z             "timeout":10,
2025-04-15T08:07:18.0872923Z             "version":0,
2025-04-15T08:07:18.0873113Z             "options":["GLOBAL"],
2025-04-15T08:07:18.0873321Z             "tags":"top",
2025-04-15T08:07:18.0873559Z             "access":["signed-in","same-space","sensitive-data"],
2025-04-15T08:07:18.0873831Z             "priority":101
2025-04-15T08:07:18.0874017Z         },
2025-04-15T08:07:18.0874184Z         "netdata-api-calls":{
2025-04-15T08:07:18.0874489Z             "help":"View the progress on the running and latest Netdata API Requests",
2025-04-15T08:07:18.0874815Z             "timeout":10,
2025-04-15T08:07:18.0874996Z             "version":0,
2025-04-15T08:07:18.0875304Z             "options":["GLOBAL"],
2025-04-15T08:07:18.0875515Z             "tags":"top",
2025-04-15T08:07:18.0875750Z             "access":["signed-in","same-space","sensitive-data"],
2025-04-15T08:07:18.0876018Z             "priority":101
2025-04-15T08:07:18.0876404Z         },
2025-04-15T08:07:18.0876588Z         "netdata-metrics-cardinality":{
2025-04-15T08:07:18.0876902Z             "help":"Shows metrics cardinality per context across all nodes.",
2025-04-15T08:07:18.0877202Z             "timeout":10,
2025-04-15T08:07:18.0877385Z             "version":0,
2025-04-15T08:07:18.0877568Z             "options":["GLOBAL"],
2025-04-15T08:07:18.0877770Z             "tags":"top",
2025-04-15T08:07:18.0877968Z             "access":["anonymous-data"],
2025-04-15T08:07:18.0878198Z             "priority":101
2025-04-15T08:07:18.0878381Z         },
2025-04-15T08:07:18.0878548Z         "mount-points":{
2025-04-15T08:07:18.0878764Z             "help":"View mount point statistics",
2025-04-15T08:07:18.0879013Z             "timeout":10,
2025-04-15T08:07:18.0879197Z             "version":0,
2025-04-15T08:07:18.0879382Z             "options":["GLOBAL"],
2025-04-15T08:07:18.0879587Z             "tags":"top",
2025-04-15T08:07:18.0879784Z             "access":["anonymous-data"],
2025-04-15T08:07:18.0880014Z             "priority":100
2025-04-15T08:07:18.0880196Z         },
2025-04-15T08:07:18.0880358Z         "network-interfaces":{
2025-04-15T08:07:18.0880602Z             "help":"View network interface statistics",
2025-04-15T08:07:18.0880854Z             "timeout":10,
2025-04-15T08:07:18.0881039Z             "version":0,
2025-04-15T08:07:18.0881228Z             "options":["GLOBAL"],
2025-04-15T08:07:18.0881431Z             "tags":"top",
2025-04-15T08:07:18.0881631Z             "access":["anonymous-data"],
2025-04-15T08:07:18.0881859Z             "priority":100
2025-04-15T08:07:18.0882173Z         },
2025-04-15T08:07:18.0882341Z         "containers-vms":{
2025-04-15T08:07:18.0882566Z             "help":"View running containers",
2025-04-15T08:07:18.0882814Z             "timeout":10,
2025-04-15T08:07:18.0883008Z             "version":0,
2025-04-15T08:07:18.0883205Z             "options":["GLOBAL"],
2025-04-15T08:07:18.0883416Z             "tags":"top",
2025-04-15T08:07:18.0883612Z             "access":["anonymous-data"],
2025-04-15T08:07:18.0883844Z             "priority":50
2025-04-15T08:07:18.0884030Z         },
2025-04-15T08:07:18.0884197Z         "systemd-services":{
2025-04-15T08:07:18.0884411Z             "help":"View systemd services",
2025-04-15T08:07:18.0884644Z             "timeout":10,
2025-04-15T08:07:18.0884834Z             "version":0,
2025-04-15T08:07:18.0885027Z             "options":["GLOBAL"],
2025-04-15T08:07:18.0885236Z             "tags":"top",
2025-04-15T08:07:18.0885432Z             "access":["anonymous-data"],
2025-04-15T08:07:18.0885663Z             "priority":33
2025-04-15T08:07:18.0885927Z         },
2025-04-15T08:07:18.0886610Z         "processes":{
2025-04-15T08:07:18.0886908Z             "help":"Detailed information on the currently running processes.",
2025-04-15T08:07:18.0887220Z             "timeout":10,
2025-04-15T08:07:18.0887415Z             "version":0,
2025-04-15T08:07:18.0887612Z             "options":["GLOBAL"],
2025-04-15T08:07:18.0887821Z             "tags":"top",
2025-04-15T08:07:18.0888064Z             "access":["signed-in","same-space","sensitive-data"],
2025-04-15T08:07:18.0888328Z             "priority":10
2025-04-15T08:07:18.0888511Z         },
2025-04-15T08:07:18.0888674Z         "block-devices":{
2025-04-15T08:07:18.0888889Z             "help":"View block device statistics",
2025-04-15T08:07:18.0889131Z             "timeout":10,
2025-04-15T08:07:18.0889308Z             "version":0,
2025-04-15T08:07:18.0889504Z             "options":["GLOBAL"],
2025-04-15T08:07:18.0889709Z             "tags":"top",
2025-04-15T08:07:18.0889914Z             "access":["anonymous-data"],
2025-04-15T08:07:18.0890148Z             "priority":100
2025-04-15T08:07:18.0890330Z         },
2025-04-15T08:07:18.0890636Z         "network-connections":{
2025-04-15T08:07:18.0890882Z             "help":"Network connections explorer",
2025-04-15T08:07:18.0891129Z             "timeout":60,
2025-04-15T08:07:18.0891319Z             "version":0,
2025-04-15T08:07:18.0891506Z             "options":["GLOBAL"],
2025-04-15T08:07:18.0891715Z             "tags":"top",
2025-04-15T08:07:18.0891949Z             "access":["signed-in","same-space","sensitive-data"],
2025-04-15T08:07:18.0892222Z             "priority":100
2025-04-15T08:07:18.0892411Z         }
2025-04-15T08:07:18.0892561Z     },
2025-04-15T08:07:18.0892722Z     "collectors":[{
2025-04-15T08:07:18.0892929Z             "plugin":"idlejitter.plugin",
2025-04-15T08:07:18.0893209Z             "module":""
2025-04-15T08:07:18.0893387Z         },{
2025-04-15T08:07:18.0893566Z             "plugin":"statsd.plugin",
2025-04-15T08:07:18.0893807Z             "module":"stats"
2025-04-15T08:07:18.0894003Z         },{
2025-04-15T08:07:18.0894174Z             "plugin":"netdata",
2025-04-15T08:07:18.0894383Z             "module":"pulse"
2025-04-15T08:07:18.0894576Z         },{
2025-04-15T08:07:18.0894740Z             "plugin":"netdata",
2025-04-15T08:07:18.0894941Z             "module":"stats"
2025-04-15T08:07:18.0895132Z         },{
2025-04-15T08:07:18.0895298Z             "plugin":"proc.plugin",
2025-04-15T08:07:18.0895529Z             "module":"/proc/net/dev"
2025-04-15T08:07:18.0895743Z         },{
2025-04-15T08:07:18.0895917Z             "plugin":"debugfs.plugin",
2025-04-15T08:07:18.0896329Z             "module":"/sys/kernel/debug/extfrag"
2025-04-15T08:07:18.0896555Z         },{
2025-04-15T08:07:18.0896732Z             "plugin":"diskspace.plugin",
2025-04-15T08:07:18.0896958Z             "module":""
2025-04-15T08:07:18.0897135Z         },{
2025-04-15T08:07:18.0897301Z             "plugin":"apps.plugin",
2025-04-15T08:07:18.0897643Z             "module":""
2025-04-15T08:07:18.0897816Z         },{
2025-04-15T08:07:18.0897981Z             "plugin":"ml.plugin",
2025-04-15T08:07:18.0898201Z             "module":"training"
2025-04-15T08:07:18.0898391Z         },{
2025-04-15T08:07:18.0898552Z             "plugin":"ml.plugin",
2025-04-15T08:07:18.0898764Z             "module":"detection"
2025-04-15T08:07:18.0898963Z         },{
2025-04-15T08:07:18.0899129Z             "plugin":"proc.plugin",
2025-04-15T08:07:18.0899347Z             "module":"/proc/stat"
2025-04-15T08:07:18.0899547Z         },{
2025-04-15T08:07:18.0899714Z             "plugin":"proc.plugin",
2025-04-15T08:07:18.0899932Z             "module":"/proc/uptime"
2025-04-15T08:07:18.0900133Z         },{
2025-04-15T08:07:18.0900290Z             "plugin":"proc.plugin",
2025-04-15T08:07:18.0900554Z             "module":"/proc/loadavg"
2025-04-15T08:07:18.0900826Z         },{
2025-04-15T08:07:18.0900992Z             "plugin":"proc.plugin",
2025-04-15T08:07:18.0901216Z             "module":"/proc/sys/fs/file-nr"
2025-04-15T08:07:18.0901442Z         },{
2025-04-15T08:07:18.0901602Z             "plugin":"proc.plugin",
2025-04-15T08:07:18.0901855Z             "module":"/proc/sys/kernel/random/entropy_avail"
2025-04-15T08:07:18.0902107Z         },{
2025-04-15T08:07:18.0902276Z             "plugin":"proc.plugin",
2025-04-15T08:07:18.0902493Z             "module":"/proc/pressure"
2025-04-15T08:07:18.0902710Z         },{
2025-04-15T08:07:18.0902873Z             "plugin":"proc.plugin",
2025-04-15T08:07:18.0903097Z             "module":"/proc/interrupts"
2025-04-15T08:07:18.0903311Z         },{
2025-04-15T08:07:18.0903474Z             "plugin":"proc.plugin",
2025-04-15T08:07:18.0903694Z             "module":"/proc/softirqs"
2025-04-15T08:07:18.0903902Z         },{
2025-04-15T08:07:18.0904064Z             "plugin":"proc.plugin",
2025-04-15T08:07:18.0904277Z             "module":"/proc/vmstat"
2025-04-15T08:07:18.0904486Z         },{
2025-04-15T08:07:18.0904653Z             "plugin":"proc.plugin",
2025-04-15T08:07:18.0904878Z             "module":"/proc/meminfo"
2025-04-15T08:07:18.0905089Z         },{
2025-04-15T08:07:18.0905252Z             "plugin":"proc.plugin",
2025-04-15T08:07:18.0905602Z             "module":"/proc/net/sockstat"
2025-04-15T08:07:18.0905835Z         },{
2025-04-15T08:07:18.0906003Z             "plugin":"proc.plugin",
2025-04-15T08:07:18.0906628Z             "module":"/proc/net/sockstat6"
2025-04-15T08:07:18.0906862Z         },{
2025-04-15T08:07:18.0907039Z             "plugin":"proc.plugin",
2025-04-15T08:07:18.0907275Z             "module":"/proc/net/netstat"
2025-04-15T08:07:18.0907495Z         },{
2025-04-15T08:07:18.0907669Z             "plugin":"proc.plugin",
2025-04-15T08:07:18.0907901Z             "module":"/proc/net/softnet_stat"
2025-04-15T08:07:18.0908136Z         },{
2025-04-15T08:07:18.0908307Z             "plugin":"proc.plugin",
2025-04-15T08:07:18.0908557Z             "module":"/proc/net/stat/nf_conntrack"
2025-04-15T08:07:18.0908795Z         },{
2025-04-15T08:07:18.0908968Z             "plugin":"proc",
2025-04-15T08:07:18.0909190Z             "module":"/proc/diskstats"
2025-04-15T08:07:18.0909413Z         },{
2025-04-15T08:07:18.0909588Z             "plugin":"proc.plugin",
2025-04-15T08:07:18.0928168Z             "module":"/proc/diskstats"
2025-04-15T08:07:18.0928622Z         },{
2025-04-15T08:07:18.0928922Z             "plugin":"proc.plugin",
2025-04-15T08:07:18.0929298Z             "module":"ipc"
2025-04-15T08:07:18.0929635Z         },{
2025-04-15T08:07:18.0929839Z             "plugin":"timex.plugin",
2025-04-15T08:07:18.0930081Z             "module":""
2025-04-15T08:07:18.0930270Z         },{
2025-04-15T08:07:18.0930451Z             "plugin":"cgroups.plugin",
2025-04-15T08:07:18.0930696Z             "module":"/sys/fs/cgroup"
2025-04-15T08:07:18.0930915Z         },{
2025-04-15T08:07:18.0931097Z             "plugin":"cgroups.plugin",
2025-04-15T08:07:18.0931343Z             "module":"systemd"
2025-04-15T08:07:18.0931543Z         }],
2025-04-15T08:07:18.0931946Z     "cloud-enabled":true,
2025-04-15T08:07:18.0932166Z     "cloud-available":true,
2025-04-15T08:07:18.0932381Z     "agent-claimed":false,
2025-04-15T08:07:18.0932591Z     "aclk-available":false,
2025-04-15T08:07:18.0932809Z     "memory-mode":"dbengine",
2025-04-15T08:07:18.0933034Z     "multidb-disk-quota":1024,
2025-04-15T08:07:18.0933258Z     "page-cache-size":32,
2025-04-15T08:07:18.0933463Z     "web-enabled":true,
2025-04-15T08:07:18.0933657Z     "stream-enabled":false,
2025-04-15T08:07:18.0933873Z     "stream-compression":false,
2025-04-15T08:07:18.0934094Z     "https-enabled":true,
2025-04-15T08:07:18.0935063Z     "buildinfo":"Netdata Cloud|Stream Compression|Machine Learning|allocator|dbengine|Native HTTPS|TLS Host Verification|zlib|protobuf|JSON-C|libcrypto|libyaml|libmnl|apps|cgroup Network Tracking|debugfs|IPMI|NETWORK-VIEWER|SYSTEMD-JOURNAL|perf|slabinfo|MongoDB|Prometheus Remote Write",
2025-04-15T08:07:18.0936214Z     "release-channel":"nightly",
2025-04-15T08:07:18.0936455Z     "notification-methods":null,
2025-04-15T08:07:18.0936683Z     "exporting-enabled":false,
2025-04-15T08:07:18.0936906Z     "exporting-connectors":null,
2025-04-15T08:07:18.0937145Z     "allmetrics-prometheus-used":0,
2025-04-15T08:07:18.0937392Z     "allmetrics-shell-used":0,
2025-04-15T08:07:18.0937610Z     "allmetrics-json-used":0,
2025-04-15T08:07:18.0937816Z     "dashboard-used":0,
2025-04-15T08:07:18.0938005Z     "charts-count":0,
2025-04-15T08:07:18.0938193Z     "metrics-count":0,
2025-04-15T08:07:18.0938377Z     "ml-info":{
2025-04-15T08:07:18.0938548Z         "version":1,
2025-04-15T08:07:18.0938720Z         "enabled":true,
2025-04-15T08:07:18.0938915Z         "min-train-samples":900,
2025-04-15T08:07:18.0939135Z         "max-train-samples":21600,
2025-04-15T08:07:18.0939361Z         "train-every":10800,
2025-04-15T08:07:18.0939557Z         "diff-n":1,
2025-04-15T08:07:18.0939728Z         "smooth-n":3,
2025-04-15T08:07:18.0939906Z         "lag-n":5,
2025-04-15T08:07:18.0940097Z         "random-sampling-ratio":0.2,
2025-04-15T08:07:18.0940337Z         "max-kmeans-iters":0,
2025-04-15T08:07:18.0940574Z         "dimension-anomaly-score-threshold":0.99,
2025-04-15T08:07:18.0941001Z         "anomaly-detection-grouping-method":"average",
2025-04-15T08:07:18.0941315Z         "anomaly-detection-query-duration":300,
2025-04-15T08:07:18.0941575Z         "hosts-to-skip":"!*",
2025-04-15T08:07:18.0941832Z         "charts-to-skip":"anomaly_detection.* netdata.*"
2025-04-15T08:07:18.0942094Z     }
2025-04-15T08:07:18.0942243Z }
2025-04-15T08:07:18.1350152Z "v2.4.0-4-nightly"
2025-04-15T08:07:18.1402020Z <!doctype html><html lang="en" dir="ltr"><head><meta charset="utf-8"/><title>Netdata</title><script>const CONFIG = {
2025-04-15T08:07:18.1403211Z       cache: {
2025-04-15T08:07:18.1403600Z         agentInfo: false,
2025-04-15T08:07:18.1403978Z         cloudToken: true,
2025-04-15T08:07:18.1404414Z         agentToken: true,
2025-04-15T08:07:18.1404793Z       }
2025-04-15T08:07:18.1405071Z     }
2025-04-15T08:07:18.1405236Z 
2025-04-15T08:07:18.1405535Z     // STATE MANAGEMENT ======================================================================== //
2025-04-15T08:07:18.1406336Z     const state = {
2025-04-15T08:07:18.1406687Z       loading: {
2025-04-15T08:07:18.1407016Z         spaces: false,
2025-04-15T08:07:18.1407367Z         rooms: false,
2025-04-15T08:07:18.1407723Z         claimingToken: false,
2025-04-15T08:07:18.1408138Z         claimingAgent: false
2025-04-15T08:07:18.1408513Z       },
2025-04-15T08:07:18.1408797Z       claim: {
2025-04-15T08:07:18.1409154Z         status: {},
2025-04-15T08:07:18.1409493Z         response: {},
2025-04-15T08:07:18.1409852Z         shouldClaim: false,
2025-04-15T08:07:18.1410218Z         step: 1,
2025-04-15T08:07:18.1410582Z         selectedSpaceIds: [],
2025-04-15T08:07:18.1411026Z         selectedRoomIds: [],
2025-04-15T08:07:18.1411522Z         privateKey: ""
2025-04-15T08:07:18.1411903Z       },
2025-04-15T08:07:18.1412263Z       cache: {
2025-04-15T08:07:18.1412604Z         spaces: undefined,
2025-04-15T08:07:18.1413257Z         rooms: {},
2025-04-15T08:07:18.1413668Z         claimingTokensPerSpace: {}
2025-04-15T08:07:18.1414078Z       }
2025-04-15T08:07:18.1414356Z     }
2025-04-15T08:07:18.1414551Z 
2025-04-15T08:07:18.1414772Z     const getSelectedRooms = state => {
2025-04-15T08:07:18.1415622Z       const spaceId = state.claim.selectedSpaceIds.length ? state.claim.selectedSpaceIds[0] : null;
2025-04-15T08:07:18.1416514Z       if (!spaceId) return [];
2025-04-15T08:07:18.1416942Z       if (state.claim.selectedRoomIds.length) {
2025-04-15T08:07:18.1417718Z         return state.cache?.rooms?.[spaceId]?.filter(({ id }) => state.claim.selectedRoomIds.includes(id)) || [];
2025-04-15T08:07:18.1418412Z       }
2025-04-15T08:07:18.1418679Z       return [];
2025-04-15T08:07:18.1418956Z     }
2025-04-15T08:07:18.1419104Z 
2025-04-15T08:07:18.1419233Z     const syncUI = () => {
2025-04-15T08:07:18.1419565Z       // Elements
2025-04-15T08:07:18.1420071Z       const splashMessage = document.getElementById("splashMessageContainer");
2025-04-15T08:07:18.1420864Z       const claiming = document.getElementById("claimingContentsContainer");
2025-04-15T08:07:18.1421568Z       const step1 = document.getElementById("connectionStep-1");
2025-04-15T08:07:18.1422195Z       const step2 = document.getElementById("connectionStep-2");
2025-04-15T08:07:18.1422863Z       const btnPrev = document.getElementById("btnConnectionStepPrev");
2025-04-15T08:07:18.1423595Z       const btnNext = document.getElementById("btnConnectionStepNext");
2025-04-15T08:07:18.1424247Z       const btnClaim = document.getElementById("btnClaim");
2025-04-15T08:07:18.1424891Z       const roomsSelector = document.getElementById("roomsSelector");
2025-04-15T08:07:18.1425648Z       const claimErrorMessage = document.getElementById("claimErrorMessage");
2025-04-15T08:07:18.1426433Z 
2025-04-15T08:07:18.1426549Z       // State
2025-04-15T08:07:18.1427445Z       const { spaces: spacesLoading, rooms: roomsLoading, claimingToken: claimingTokenLoading, claimingAgent: claimingAgentLoading } = state.loading;
2025-04-15T08:07:18.1428721Z       const { shouldClaim, step, selectedSpaceIds, selectedRoomIds, privateKey } = state.claim;
2025-04-15T08:07:18.1430248Z       const claimingTokenExists = state.claim.selectedSpaceIds.length ? !!state.cache.claimingTokensPerSpace[state.claim.selectedSpaceIds[0]] : false;
2025-04-15T08:07:18.1431186Z 
2025-04-15T08:07:18.1431494Z       splashMessage.style.display = !shouldClaim ? "initial" : "none";
2025-04-15T08:07:18.1432169Z       claiming.style.display = shouldClaim ? "initial" : "none";
2025-04-15T08:07:18.1432569Z 
2025-04-15T08:07:18.1432698Z       // Loading spaces
2025-04-15T08:07:18.1433023Z       if (step1) {
2025-04-15T08:07:18.1433417Z         const spacesLoader = step1.querySelector(".loader");
2025-04-15T08:07:18.1433900Z         if (spacesLoader) {
2025-04-15T08:07:18.1434408Z           spacesLoader.style.display = spacesLoading ? "initial" : "none";
2025-04-15T08:07:18.1434956Z         }
2025-04-15T08:07:18.1435228Z       }
2025-04-15T08:07:18.1435376Z 
2025-04-15T08:07:18.1435499Z       // Loading rooms
2025-04-15T08:07:18.1435827Z       if (roomsSelector) {
2025-04-15T08:07:18.1436503Z         const message = roomsSelector.querySelector(".selected-items");
2025-04-15T08:07:18.1437306Z         const selectedRoomNames = getSelectedRooms(state).map(({ name }) => name).join(", ");
2025-04-15T08:07:18.1437947Z         if (message) {
2025-04-15T08:07:18.1438545Z           message.innerText = roomsLoading ? "Loading rooms..." : (selectedRoomNames || "Select room");
2025-04-15T08:07:18.1439214Z         }
2025-04-15T08:07:18.1439464Z       }
2025-04-15T08:07:18.1439621Z 
2025-04-15T08:07:18.1439747Z       // Steps visibility
2025-04-15T08:07:18.1440167Z       step1.style.display = step == 1 ? "initial" : "none";
2025-04-15T08:07:18.1440718Z       step2.style.display = step == 2 ? "initial" : "none";
2025-04-15T08:07:18.1441059Z 
2025-04-15T08:07:18.1441179Z       // Rooms
2025-04-15T08:07:18.1441467Z       if (step == 1) {
2025-04-15T08:07:18.1441986Z         // Reset rooms
2025-04-15T08:07:18.1442796Z         const checkboxes = document.getElementById("roomsSelectorOptionsContainer").querySelectorAll('input[type="checkbox"]');
2025-04-15T08:07:18.1443711Z         checkboxes.forEach((checkbox) => {
2025-04-15T08:07:18.1444136Z           if (checkbox.checked) {
2025-04-15T08:07:18.1444527Z             checkbox.checked = false;
2025-04-15T08:07:18.1445028Z             checkbox.dispatchEvent(new Event("change"));
2025-04-15T08:07:18.1445465Z           }
2025-04-15T08:07:18.1445726Z         });
2025-04-15T08:07:18.1445989Z       }
2025-04-15T08:07:18.1446299Z 
2025-04-15T08:07:18.1446447Z       if (claimErrorMessage) {
2025-04-15T08:07:18.1447073Z         claimErrorMessage.style.display = state.claim?.response?.error ? "initial" : "none";
2025-04-15T08:07:18.1448053Z         claimErrorMessage.innerText = state.claim?.response?.error ? state.claim.response.error : "";
2025-04-15T08:07:18.1448747Z       }
2025-04-15T08:07:18.1448891Z 
2025-04-15T08:07:18.1449016Z       // Footer
2025-04-15T08:07:18.1449372Z       btnPrev.style.opacity = step == 1 ? "0" : "1";
2025-04-15T08:07:18.1449919Z       btnPrev.style.cursor = step == 1 ? "default" : "pointer";
2025-04-15T08:07:18.1450442Z       btnPrev.disabled = step == 1;
2025-04-15T08:07:18.1450930Z       btnNext.style.display = step == 1 ? "initial" : "none";
2025-04-15T08:07:18.1451470Z       btnNext.disabled = !selectedSpaceIds.length;
2025-04-15T08:07:18.1452015Z       btnClaim.style.display = step == 2 ? "initial" : "none";
2025-04-15T08:07:18.1453026Z       btnClaim.disabled = !selectedRoomIds.length || !privateKey || !claimingTokenExists || claimingTokenLoading || claimingAgentLoading;
2025-04-15T08:07:18.1454124Z       btnClaim.textContent = claimingAgentLoading ? "Claiming..." : "Claim";
2025-04-15T08:07:18.1454594Z 
2025-04-15T08:07:18.1454733Z       return Promise.resolve();
2025-04-15T08:07:18.1455081Z     }
2025-04-15T08:07:18.1455230Z 
2025-04-15T08:07:18.1455437Z     const toggleSpacesLoadingState = isLoading => {
2025-04-15T08:07:18.1456002Z       state.loading = { ...state.loading, spaces: isLoading };
2025-04-15T08:07:18.1456685Z       return syncUI();
2025-04-15T08:07:18.1457201Z     }
2025-04-15T08:07:18.1457365Z 
2025-04-15T08:07:18.1457557Z     const toggleRoomsLoadingState = isLoading => {
2025-04-15T08:07:18.1458102Z       state.loading = { ...state.loading, rooms: isLoading };
2025-04-15T08:07:18.1458579Z       return syncUI();
2025-04-15T08:07:18.1458888Z     }
2025-04-15T08:07:18.1459033Z 
2025-04-15T08:07:18.1459272Z     const toggleClaimingTokenLoadingState = isLoading => {
2025-04-15T08:07:18.1459887Z       state.loading = { ...state.loading, claimingToken: isLoading };
2025-04-15T08:07:18.1460370Z       return syncUI();
2025-04-15T08:07:18.1460649Z     }
2025-04-15T08:07:18.1460784Z 
2025-04-15T08:07:18.1461013Z     const toggleClaimingAgentLoadingState = isLoading => {
2025-04-15T08:07:18.1461618Z       state.loading = { ...state.loading, claimingAgent: isLoading };
2025-04-15T08:07:18.1462129Z       return syncUI();
2025-04-15T08:07:18.1462415Z     }
2025-04-15T08:07:18.1462560Z 
2025-04-15T08:07:18.1462753Z     const setShouldClaimStatus = shouldClaim => {
2025-04-15T08:07:18.1463260Z       state.claim = { ...state.claim, shouldClaim };
2025-04-15T08:07:18.1463673Z       return syncUI();
2025-04-15T08:07:18.1463956Z     }
2025-04-15T08:07:18.1464100Z 
2025-04-15T08:07:18.1464258Z     const setClaimStatusState = status => {
2025-04-15T08:07:18.1464705Z       state.claim = { ...state.claim, status };
2025-04-15T08:07:18.1465109Z       return syncUI();
2025-04-15T08:07:18.1465404Z     }
2025-04-15T08:07:18.1465546Z 
2025-04-15T08:07:18.1465726Z     const setClaimResponseState = response => {
2025-04-15T08:07:18.1466372Z       state.claim = { ...state.claim, response };
2025-04-15T08:07:18.1466792Z       return syncUI();
2025-04-15T08:07:18.1467087Z     }
2025-04-15T08:07:18.1467230Z 
2025-04-15T08:07:18.1467392Z     const setClaimingStep = async arg => {
2025-04-15T08:07:18.1468156Z       const nextStep = typeof arg == "function" ? arg(state.claim.step) : arg;
2025-04-15T08:07:18.1469063Z       state.claim = { ...state.claim, step: nextStep, ...(nextStep == 1 ? { selectedRoomIds: [], privateKey: "" } : {}) };
2025-04-15T08:07:18.1469795Z       await syncUI();
2025-04-15T08:07:18.1470147Z       return Promise.resolve(nextStep);
2025-04-15T08:07:18.1470532Z     }
2025-04-15T08:07:18.1470673Z 
2025-04-15T08:07:18.1470843Z     const setSelectedSpacesStatus = arg => {
2025-04-15T08:07:18.1471630Z       const spaceIds = typeof arg == "function" ? arg(state.claim.selectedSpaceIds) : Array.isArray(arg) ? arg : [arg];
2025-04-15T08:07:18.1472690Z       state.claim = { ...state.claim, selectedSpaceIds: spaceIds, selectedRoomIds: [], privateKey: "" };
2025-04-15T08:07:18.1473378Z       return syncUI();
2025-04-15T08:07:18.1473673Z     }
2025-04-15T08:07:18.1473812Z 
2025-04-15T08:07:18.1473979Z     const setSelectedRoomsStatus = arg => {
2025-04-15T08:07:18.1474764Z       const roomIds = typeof arg == "function" ? arg(state.claim.selectedRoomIds) : Array.isArray(arg) ? arg : [arg];
2025-04-15T08:07:18.1475635Z       state.claim = { ...state.claim, selectedRoomIds: roomIds };
2025-04-15T08:07:18.1476301Z       return syncUI();
2025-04-15T08:07:18.1476609Z     }
2025-04-15T08:07:18.1476756Z 
2025-04-15T08:07:18.1476984Z     const setClaimingPrivateKeyState = (value = "") => {
2025-04-15T08:07:18.1477542Z       state.claim = { ...state.claim, privateKey: value };
2025-04-15T08:07:18.1478017Z       return syncUI();
2025-04-15T08:07:18.1478322Z     }
2025-04-15T08:07:18.1478476Z 
2025-04-15T08:07:18.1478630Z     const cacheSpaces = (spaces) => {
2025-04-15T08:07:18.1479075Z       if (!spaces) return Promise.resolve([]);
2025-04-15T08:07:18.1479520Z       state.cache.spaces = spaces;
2025-04-15T08:07:18.1479928Z       return Promise.resolve(spaces);
2025-04-15T08:07:18.1480306Z     }
2025-04-15T08:07:18.1480454Z 
2025-04-15T08:07:18.1480628Z     const cacheRooms = (spaceId, rooms) => {
2025-04-15T08:07:18.1481099Z       if (!spaceId) return Promise.resolve([]);
2025-04-15T08:07:18.1481656Z       state.cache.rooms = { ...state.cache.rooms, [spaceId]: rooms };
2025-04-15T08:07:18.1482417Z       return Promise.resolve(rooms);
2025-04-15T08:07:18.1482834Z     }
2025-04-15T08:07:18.1482994Z 
2025-04-15T08:07:18.1483171Z     const cacheClaimingToken = (spaceId, token) => {
2025-04-15T08:07:18.1483494Z       if (!spaceId || !token) return Promise.resolve();
2025-04-15T08:07:18.1483963Z       state.cache.claimingTokensPerSpace = { ...state.cache.claimingTokensPerSpace, [spaceId]: token };
2025-04-15T08:07:18.1484524Z       return Promise.resolve(token);
2025-04-15T08:07:18.1484760Z     }
2025-04-15T08:07:18.1485057Z 
2025-04-15T08:07:18.1485225Z     // ========================================================================================= //
2025-04-15T08:07:18.1485428Z 
2025-04-15T08:07:18.1485669Z     const pathsRegex = /\/(spaces|nodes|overview|alerts|dashboards|anomalies|events|cloud|v3)\/?.*/;
2025-04-15T08:07:18.1486271Z     function getBasename() {
2025-04-15T08:07:18.1486670Z       return window.location.origin + window.location.pathname.replace(pathsRegex, "")
2025-04-15T08:07:18.1487187Z     }
2025-04-15T08:07:18.1487350Z 
2025-04-15T08:07:18.1487496Z     let goToOld = function(path) {
2025-04-15T08:07:18.1488036Z       let goToUrl = getBasename() + path;
2025-04-15T08:07:18.1488449Z       if (path !== "/v3") {
2025-04-15T08:07:18.1489083Z         let pathsRegex = /(\/(spaces|nodes|overview|alerts|dashboards|anomalies|events|cloud|v3)\/?.*)/
2025-04-15T08:07:18.1489977Z         if (pathsRegex.test(window.location.origin + window.location.pathname)) {
2025-04-15T08:07:18.1490872Z           goToUrl = (window.location.origin + window.location.pathname).replace(pathsRegex, "/v3$1")
2025-04-15T08:07:18.1491541Z         }
2025-04-15T08:07:18.1491810Z       }
2025-04-15T08:07:18.1492302Z       window.location.replace(ensureOneSlash(goToUrl + window.location.search))
2025-04-15T08:07:18.1492914Z     }
2025-04-15T08:07:18.1493305Z 
2025-04-15T08:07:18.1493554Z     const searchParams = new URLSearchParams(location.search);
2025-04-15T08:07:18.1494094Z     window.envSettings = {
2025-04-15T08:07:18.1494448Z       isAgent: true,
2025-04-15T08:07:18.1494822Z       apiUrl: "https://app.netdata.cloud",
2025-04-15T08:07:18.1495277Z       cloudUrl: "https://app.netdata.cloud",
2025-04-15T08:07:18.1495708Z       demoSlug: "netdata-demo",
2025-04-15T08:07:18.1500237Z       demoFavourites: {"postgresql":["Applications-0_Postgres-1"],"redis":["Applications-0_Redis-1"],"dns-query":["Applications-0_CoreDNS-1"],"http-endpoints":["Applications-0_HTTP_Checks-1"],"nginx":["Applications-0_web_log-1","Applications-0_Nginx-1"],"apache":["Applications-0_Apache-1"],"host-reachability":["Synthetic_Checks-0"],"cassandra":["Applications-0_Cassandra-1"],"coredns":["Applications-0_CoreDNS-1"],"logind":["Applications-0_systemd_LoginD-1"],"iis":["Applications-0_MS_IIS-1"],"active-directory":["Applications-0_MS_Active_Directory-1"],"windows":["Applications-0_Windows-1","Applications-0_MS_Active_Directory-1","Applications-0_MS_IIS-1","Applications-0_MS_SQL-1","Applications-0_MS_Exchange-1","Applications-0__NET_Framework-1"],"docker":["Containers___VMs-0"],"ups":["Hardware___Sensors-0_NUT_UPS-1"]},
2025-04-15T08:07:18.1504658Z       webpackPublicPath: "https://app.netdata.cloud" || (getBasename() + "/v3"),
2025-04-15T08:07:18.1505365Z       agentApiUrl: searchParams.get("agent") || getBasename(),
2025-04-15T08:07:18.1506042Z       posthogToken: "phc_hnhlqe6D2Q4IcQNrFItaqdXJAxQ8RcHkPAFAp74pubv",
2025-04-15T08:07:18.1506775Z       version: "7.48.0",
2025-04-15T08:07:18.1507054Z       tracking: !false,
2025-04-15T08:07:18.1507276Z       cookieDomain: ".netdata.cloud",
2025-04-15T08:07:18.1507514Z       onprem: false,
2025-04-15T08:07:18.1507703Z       isLocal: false,
2025-04-15T08:07:18.1507895Z       nodeEnv: "production"
2025-04-15T08:07:18.1508087Z     }
2025-04-15T08:07:18.1508176Z 
2025-04-15T08:07:18.1508262Z     window.visitedNodes = []
2025-04-15T08:07:18.1508403Z 
2025-04-15T08:07:18.1508494Z     const getHashValueByKey = key => {
2025-04-15T08:07:18.1509077Z       return location.hash.substr(1).split("&").find(pair => pair.split("=")[0] == key)?.split("=")[1]
2025-04-15T08:07:18.1509468Z     }
2025-04-15T08:07:18.1509554Z 
2025-04-15T08:07:18.1509633Z     // Check cloud token
2025-04-15T08:07:18.1509844Z     const CLOUD_TOKEN_KEY = "netdataJWT"
2025-04-15T08:07:18.1510138Z     const redirectUri = getHashValueByKey("redirect_uri")
2025-04-15T08:07:18.1510442Z     const token = getHashValueByKey("token")
2025-04-15T08:07:18.1510682Z     if (token) {
2025-04-15T08:07:18.1510895Z       localStorage.setItem(CLOUD_TOKEN_KEY, token)
2025-04-15T08:07:18.1511145Z     }
2025-04-15T08:07:18.1511540Z     if (redirectUri) {
2025-04-15T08:07:18.1511724Z       try {
2025-04-15T08:07:18.1511938Z         const decodedUrl = decodeURIComponent(redirectUri)
2025-04-15T08:07:18.1512293Z         const parsedUrl = new URL(decodedUrl, window.location.origin)
2025-04-15T08:07:18.1512530Z 
2025-04-15T08:07:18.1512661Z         if (parsedUrl.origin === window.location.origin) {
2025-04-15T08:07:18.1512956Z           window.location.href = parsedUrl.href
2025-04-15T08:07:18.1513206Z         } else {
2025-04-15T08:07:18.1513474Z           console.error("Blocked potentially unsafe redirect to: ", decodedUrl)
2025-04-15T08:07:18.1513784Z         }
2025-04-15T08:07:18.1513946Z       } catch (error) {
2025-04-15T08:07:18.1514188Z         console.error("Invalid URL detected: ", error.message)
2025-04-15T08:07:18.1514459Z       }
2025-04-15T08:07:18.1514638Z     }</script><style>body.netdata-splash {
2025-04-15T08:07:18.1514867Z       height: 100%;
2025-04-15T08:07:18.1515049Z       overflow: hidden;
2025-04-15T08:07:18.1515251Z       background: var(--main-bg);
2025-04-15T08:07:18.1515463Z       margin: 0;
2025-04-15T08:07:18.1515629Z       padding: 0;
2025-04-15T08:07:18.1515812Z       color: var(--text);
2025-04-15T08:07:18.1516312Z       font-family: system-ui, "Segoe UI", Roboto, Helvetica, Arial, sans-serif,
2025-04-15T08:07:18.1517717Z         "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
2025-04-15T08:07:18.1517987Z     }
2025-04-15T08:07:18.1518072Z 
2025-04-15T08:07:18.1518145Z     :root {
2025-04-15T08:07:18.1518318Z       --scrollbar-thumb: #fcfffd;
2025-04-15T08:07:18.1518539Z       --primary: #00ab44;
2025-04-15T08:07:18.1518736Z       --text: #93a4a4;
2025-04-15T08:07:18.1518926Z       --text-dark: #001107;
2025-04-15T08:07:18.1519128Z       --text-light: #fcfffd;
2025-04-15T08:07:18.1519334Z       --menu-item: #5b6c6c;
2025-04-15T08:07:18.1519529Z       --main-bg: #000;
2025-04-15T08:07:18.1519713Z       --highlight: #00ef5f;
2025-04-15T08:07:18.1519914Z       --tab-active: #ddffeb;
2025-04-15T08:07:18.1520110Z       --tab-hover: #d2d9d9;
2025-04-15T08:07:18.1520316Z       --panel-bg: transparent;
2025-04-15T08:07:18.1520534Z       --font-small: 14px;
2025-04-15T08:07:18.1520738Z       --font-medium: 16px;
2025-04-15T08:07:18.1520935Z       --row-2n: #101313;
2025-04-15T08:07:18.1521127Z       --border: #00ab4436;
2025-04-15T08:07:18.1521328Z       --border-neutral: #252c2c;
2025-04-15T08:07:18.1521552Z       --key-value-table: #93a4a4;
2025-04-15T08:07:18.1521768Z       --accent: #ddffeb;
2025-04-15T08:07:18.1521964Z       --module-height: 45vh;
2025-04-15T08:07:18.1522189Z       --list-option-bg: rgba(12, 15, 15, 0.5);
2025-04-15T08:07:18.1522449Z       --list-option-selected-bg: #000;
2025-04-15T08:07:18.1522714Z       --list-option-hover-bg: rgba(12, 15, 15, 1);
2025-04-15T08:07:18.1522974Z       --footer-height: 70px;
2025-04-15T08:07:18.1523181Z       --code-bg: #00220e;
2025-04-15T08:07:18.1523381Z       --progress-bar-height: 2px;
2025-04-15T08:07:18.1523628Z       background-color: var(--main-bg);
2025-04-15T08:07:18.1523855Z     }
2025-04-15T08:07:18.1523940Z 
2025-04-15T08:07:18.1524013Z     :root iframe {
2025-04-15T08:07:18.1524193Z       border-width: 0;
2025-04-15T08:07:18.1524367Z     }
2025-04-15T08:07:18.1524456Z 
2025-04-15T08:07:18.1524569Z     body.netdata-splash.loading .frame-right {
2025-04-15T08:07:18.1524837Z       display: none;
2025-04-15T08:07:18.1525018Z     }
2025-04-15T08:07:18.1525103Z 
2025-04-15T08:07:18.1525335Z     body.netdata-splash.loading .frame-left {
2025-04-15T08:07:18.1525595Z       grid-column: auto / span 12;
2025-04-15T08:07:18.1525807Z     }
2025-04-15T08:07:18.1525894Z 
2025-04-15T08:07:18.1526027Z     body.netdata-splash.loading .sphere-stats-container,
2025-04-15T08:07:18.1526554Z     body.netdata-splash.loading .head-summary,
2025-04-15T08:07:18.1526828Z     body.netdata-splash.loading .tabs {
2025-04-15T08:07:18.1527059Z       display: none;
2025-04-15T08:07:18.1527229Z     }
2025-04-15T08:07:18.1527319Z 
2025-04-15T08:07:18.1527431Z     body.netdata-splash.loading .loading-message {
2025-04-15T08:07:18.1527691Z       display: flex;
2025-04-15T08:07:18.1527871Z       position: absolute;
2025-04-15T08:07:18.1528055Z       inset: 0;
2025-04-15T08:07:18.1528222Z       margin: auto;
2025-04-15T08:07:18.1528401Z       align-items: center;
2025-04-15T08:07:18.1528610Z       justify-content: center;
2025-04-15T08:07:18.1528819Z       color: var(--accent);
2025-04-15T08:07:18.1529006Z     }
2025-04-15T08:07:18.1529099Z 
2025-04-15T08:07:18.1529182Z     body.netdata-splash .error {
2025-04-15T08:07:18.1529397Z       color: #DB162F;
2025-04-15T08:07:18.1529570Z     }
2025-04-15T08:07:18.1529652Z 
2025-04-15T08:07:18.1529752Z     body.netdata-splash .loading-message {
2025-04-15T08:07:18.1529982Z       display: none;
2025-04-15T08:07:18.1530150Z     }
2025-04-15T08:07:18.1530236Z 
2025-04-15T08:07:18.1530314Z     body.netdata-splash h1 {
2025-04-15T08:07:18.1530521Z       font-size: 36px;
2025-04-15T08:07:18.1530706Z       margin-top: 8px;
2025-04-15T08:07:18.1530893Z       margin-bottom: 8px;
2025-04-15T08:07:18.1531103Z       color: var(--text-light);
2025-04-15T08:07:18.1531316Z       filter: blur(0.6px);
2025-04-15T08:07:18.1531503Z     }
2025-04-15T08:07:18.1531585Z 
2025-04-15T08:07:18.1531669Z     body.netdata-splash h2 {
2025-04-15T08:07:18.1532005Z       font-size: 16px;
2025-04-15T08:07:18.1532178Z     }
2025-04-15T08:07:18.1532264Z 
2025-04-15T08:07:18.1532340Z     body.netdata-splash h4 {
2025-04-15T08:07:18.1532550Z       font-size: 12px;
2025-04-15T08:07:18.1532737Z       margin-bottom: 12px;
2025-04-15T08:07:18.1532930Z       margin-top: 8px;
2025-04-15T08:07:18.1533105Z     }
2025-04-15T08:07:18.1533191Z 
2025-04-15T08:07:18.1533273Z     body.netdata-splash a:link,
2025-04-15T08:07:18.1533502Z     body.netdata-splash a:visited,
2025-04-15T08:07:18.1533742Z     body.netdata-splash a:active {
2025-04-15T08:07:18.1533966Z       text-decoration: none;
2025-04-15T08:07:18.1534178Z       color: var(--primary);
2025-04-15T08:07:18.1534372Z     }
2025-04-15T08:07:18.1534454Z 
2025-04-15T08:07:18.1534542Z     body.netdata-splash a:hover {
2025-04-15T08:07:18.1534771Z       color: var(--highlight);
2025-04-15T08:07:18.1534967Z     }
2025-04-15T08:07:18.1535055Z 
2025-04-15T08:07:18.1535140Z     body.netdata-splash canvas {
2025-04-15T08:07:18.1535368Z       display: block;
2025-04-15T08:07:18.1535545Z     }
2025-04-15T08:07:18.1535632Z 
2025-04-15T08:07:18.1535720Z     body.netdata-splash code {
2025-04-15T08:07:18.1535946Z       background: var(--code-bg);
2025-04-15T08:07:18.1536364Z       color: var(--highlight);
2025-04-15T08:07:18.1536586Z       border: 1px solid var(--border);
2025-04-15T08:07:18.1536819Z       border-radius: 2px;
2025-04-15T08:07:18.1537014Z       padding: 12px;
2025-04-15T08:07:18.1537199Z       line-break: anywhere;
2025-04-15T08:07:18.1537405Z       word-break: break-all;
2025-04-15T08:07:18.1537594Z     }
2025-04-15T08:07:18.1537677Z 
2025-04-15T08:07:18.1537770Z     body.netdata-splash .text-small {
2025-04-15T08:07:18.1537997Z       font-size: 12px;
2025-04-15T08:07:18.1538166Z     }
2025-04-15T08:07:18.1538253Z 
2025-04-15T08:07:18.1538333Z     body.netdata-splash .logo {
2025-04-15T08:07:18.1538632Z       filter: drop-shadow(2px 2px 32px rgba(255, 255, 255, 0.7)) blur(1px);
2025-04-15T08:07:18.1538942Z       opacity: 0.9;
2025-04-15T08:07:18.1539122Z       width: 150px;
2025-04-15T08:07:18.1539305Z       height: 150px;
2025-04-15T08:07:18.1539487Z     }
2025-04-15T08:07:18.1539578Z 
2025-04-15T08:07:18.1539804Z     body.netdata-splash .claim-message .logo {
2025-04-15T08:07:18.1540067Z       width: 100px;
2025-04-15T08:07:18.1540243Z       height: 100px;
2025-04-15T08:07:18.1540408Z     }
2025-04-15T08:07:18.1540499Z 
2025-04-15T08:07:18.1540585Z     body.netdata-splash .grid {
2025-04-15T08:07:18.1540799Z       display: grid;
2025-04-15T08:07:18.1540988Z       grid-column-gap: 16px;
2025-04-15T08:07:18.1541205Z       grid-row-gap: 16px;
2025-04-15T08:07:18.1541428Z       grid-template-columns: repeat(12, 1fr);
2025-04-15T08:07:18.1541695Z       grid-template-rows: repeat(12, 1fr);
2025-04-15T08:07:18.1541945Z       grid-auto-rows: min-content;
2025-04-15T08:07:18.1542159Z     }
2025-04-15T08:07:18.1542243Z 
2025-04-15T08:07:18.1542347Z     body.netdata-splash .grid-columns-10 {
2025-04-15T08:07:18.1542590Z       display: grid;
2025-04-15T08:07:18.1542777Z       grid-column-gap: 16px;
2025-04-15T08:07:18.1542987Z       grid-row-gap: 16px;
2025-04-15T08:07:18.1543217Z       grid-template-columns: repeat(10, 1fr);
2025-04-15T08:07:18.1543454Z     }
2025-04-15T08:07:18.1543538Z 
2025-04-15T08:07:18.1543629Z     body.netdata-splash .col-span-1 {
2025-04-15T08:07:18.1543872Z       grid-column: auto / span 1;
2025-04-15T08:07:18.1544080Z     }
2025-04-15T08:07:18.1544168Z 
2025-04-15T08:07:18.1544258Z     body.netdata-splash .col-span-2 {
2025-04-15T08:07:18.1544497Z       grid-column: auto / span 2;
2025-04-15T08:07:18.1544695Z     }
2025-04-15T08:07:18.1544783Z 
2025-04-15T08:07:18.1544900Z     body.netdata-splash .col-span-3 {
2025-04-15T08:07:18.1545134Z       grid-column: auto / span 3;
2025-04-15T08:07:18.1545336Z     }
2025-04-15T08:07:18.1545418Z 
2025-04-15T08:07:18.1545509Z     body.netdata-splash .col-span-4 {
2025-04-15T08:07:18.1545735Z       grid-column: auto / span 4;
2025-04-15T08:07:18.1545939Z     }
2025-04-15T08:07:18.1546309Z 
2025-04-15T08:07:18.1546397Z     body.netdata-splash .col-span-5 {
2025-04-15T08:07:18.1546642Z       grid-column: auto / span 5;
2025-04-15T08:07:18.1546846Z     }
2025-04-15T08:07:18.1546934Z 
2025-04-15T08:07:18.1547019Z     body.netdata-splash .col-span-6 {
2025-04-15T08:07:18.1547253Z       grid-column: auto / span 6;
2025-04-15T08:07:18.1547453Z     }
2025-04-15T08:07:18.1547534Z 
2025-04-15T08:07:18.1547624Z     body.netdata-splash .col-span-7 {
2025-04-15T08:07:18.1547853Z       grid-column: auto / span 7;
2025-04-15T08:07:18.1548045Z     }
2025-04-15T08:07:18.1548132Z 
2025-04-15T08:07:18.1548215Z     body.netdata-splash .col-span-8 {
2025-04-15T08:07:18.1548440Z       grid-column: auto / span 8;
2025-04-15T08:07:18.1548642Z     }
2025-04-15T08:07:18.1548755Z 
2025-04-15T08:07:18.1548915Z     body.netdata-splash .col-span-9 {
2025-04-15T08:07:18.1549303Z       grid-column: auto / span 9;
2025-04-15T08:07:18.1549637Z     }
2025-04-15T08:07:18.1549777Z 
2025-04-15T08:07:18.1549929Z     body.netdata-splash .col-span-10 {
2025-04-15T08:07:18.1550318Z       grid-column: auto / span 10;
2025-04-15T08:07:18.1550595Z     }
2025-04-15T08:07:18.1550680Z 
2025-04-15T08:07:18.1550777Z     body.netdata-splash .col-span-11 {
2025-04-15T08:07:18.1551014Z       grid-column: auto / span 11;
2025-04-15T08:07:18.1551321Z     }
2025-04-15T08:07:18.1551413Z 
2025-04-15T08:07:18.1551500Z     body.netdata-splash .col-span-12 {
2025-04-15T08:07:18.1551735Z       grid-column: auto / span 12;
2025-04-15T08:07:18.1551992Z     }
2025-04-15T08:07:18.1552123Z 
2025-04-15T08:07:18.1552213Z     body.netdata-splash .col-start-1 {
2025-04-15T08:07:18.1552450Z       grid-column-start: 1;
2025-04-15T08:07:18.1552763Z     }
2025-04-15T08:07:18.1553246Z 
2025-04-15T08:07:18.1553427Z     body.netdata-splash .col-start-2 {
2025-04-15T08:07:18.1553857Z       grid-column-start: 2;
2025-04-15T08:07:18.1554217Z     }
2025-04-15T08:07:18.1554379Z 
2025-04-15T08:07:18.1554543Z     body.netdata-splash .col-start-3 {
2025-04-15T08:07:18.1554989Z       grid-column-start: 3;
2025-04-15T08:07:18.1555337Z     }
2025-04-15T08:07:18.1555488Z 
2025-04-15T08:07:18.1555653Z     body.netdata-splash .col-start-4 {
2025-04-15T08:07:18.1556563Z       grid-column-start: 4;
2025-04-15T08:07:18.1556962Z     }
2025-04-15T08:07:18.1557138Z 
2025-04-15T08:07:18.1557302Z     body.netdata-splash .col-start-5 {
2025-04-15T08:07:18.1557739Z       grid-column-start: 5;
2025-04-15T08:07:18.1558064Z     }
2025-04-15T08:07:18.1558224Z 
2025-04-15T08:07:18.1558374Z     body.netdata-splash .col-start-6 {
2025-04-15T08:07:18.1558783Z       grid-column-start: 6;
2025-04-15T08:07:18.1559110Z     }
2025-04-15T08:07:18.1559246Z 
2025-04-15T08:07:18.1559397Z     body.netdata-splash .col-start-7 {
2025-04-15T08:07:18.1559710Z       grid-column-start: 7;
2025-04-15T08:07:18.1559898Z     }
2025-04-15T08:07:18.1559986Z 
2025-04-15T08:07:18.1560074Z     body.netdata-splash .col-start-8 {
2025-04-15T08:07:18.1560305Z       grid-column-start: 8;
2025-04-15T08:07:18.1560502Z     }
2025-04-15T08:07:18.1560584Z 
2025-04-15T08:07:18.1560674Z     body.netdata-splash .col-start-9 {
2025-04-15T08:07:18.1560896Z       grid-column-start: 9;
2025-04-15T08:07:18.1561091Z     }
2025-04-15T08:07:18.1561178Z 
2025-04-15T08:07:18.1561268Z     body.netdata-splash .col-start-10 {
2025-04-15T08:07:18.1561513Z       grid-column-start: 10;
2025-04-15T08:07:18.1561712Z     }
2025-04-15T08:07:18.1561796Z 
2025-04-15T08:07:18.1561885Z     body.netdata-splash .col-start-12 {
2025-04-15T08:07:18.1562130Z       grid-column-start: 11;
2025-04-15T08:07:18.1562325Z     }
2025-04-15T08:07:18.1562408Z 
2025-04-15T08:07:18.1562499Z     body.netdata-splash .col-start-12 {
2025-04-15T08:07:18.1562730Z       grid-column-start: 12;
2025-04-15T08:07:18.1562915Z     }
2025-04-15T08:07:18.1563004Z 
2025-04-15T08:07:18.1563097Z     @media screen and (max-width: 1280px) {
2025-04-15T08:07:18.1563369Z       body.netdata-splash .md-grid-columns-12 {
2025-04-15T08:07:18.1563633Z         display: grid;
2025-04-15T08:07:18.1564055Z         grid-column-gap: 16px;
2025-04-15T08:07:18.1564263Z         grid-row-gap: 16px;
2025-04-15T08:07:18.1564490Z         grid-template-columns: repeat(12, 1fr);
2025-04-15T08:07:18.1564738Z       }
2025-04-15T08:07:18.1564824Z 
2025-04-15T08:07:18.1564926Z       body.netdata-splash .md-col-span-1 {
2025-04-15T08:07:18.1565178Z         grid-column: auto / span 1;
2025-04-15T08:07:18.1565382Z       }
2025-04-15T08:07:18.1565476Z 
2025-04-15T08:07:18.1565567Z       body.netdata-splash .md-col-span-2 {
2025-04-15T08:07:18.1565807Z         grid-column: auto / span 2;
2025-04-15T08:07:18.1566014Z       }
2025-04-15T08:07:18.1566291Z 
2025-04-15T08:07:18.1566417Z       body.netdata-splash .md-col-span-3 {
2025-04-15T08:07:18.1566673Z         grid-column: auto / span 3;
2025-04-15T08:07:18.1566878Z       }
2025-04-15T08:07:18.1566969Z 
2025-04-15T08:07:18.1567062Z       body.netdata-splash .md-col-span-4 {
2025-04-15T08:07:18.1567304Z         grid-column: auto / span 4;
2025-04-15T08:07:18.1567518Z       }
2025-04-15T08:07:18.1567606Z 
2025-04-15T08:07:18.1567705Z       body.netdata-splash .md-col-span-5 {
2025-04-15T08:07:18.1567939Z         grid-column: auto / span 5;
2025-04-15T08:07:18.1568152Z       }
2025-04-15T08:07:18.1568243Z 
2025-04-15T08:07:18.1568332Z       body.netdata-splash .md-col-span-6 {
2025-04-15T08:07:18.1568579Z         grid-column: auto / span 6;
2025-04-15T08:07:18.1568798Z       }
2025-04-15T08:07:18.1568885Z 
2025-04-15T08:07:18.1568979Z       body.netdata-splash .md-col-span-7 {
2025-04-15T08:07:18.1569225Z         grid-column: auto / span 7;
2025-04-15T08:07:18.1569440Z       }
2025-04-15T08:07:18.1569528Z 
2025-04-15T08:07:18.1569627Z       body.netdata-splash .md-col-span-8 {
2025-04-15T08:07:18.1569877Z         grid-column: auto / span 8;
2025-04-15T08:07:18.1570087Z       }
2025-04-15T08:07:18.1570179Z 
2025-04-15T08:07:18.1570270Z       body.netdata-splash .md-col-span-9 {
2025-04-15T08:07:18.1570515Z         grid-column: auto / span 9;
2025-04-15T08:07:18.1570723Z       }
2025-04-15T08:07:18.1570814Z 
2025-04-15T08:07:18.1570916Z       body.netdata-splash .md-col-span-10 {
2025-04-15T08:07:18.1571172Z         grid-column: auto / span 10;
2025-04-15T08:07:18.1571519Z       }
2025-04-15T08:07:18.1571612Z 
2025-04-15T08:07:18.1571707Z       body.netdata-splash .md-col-span-11 {
2025-04-15T08:07:18.1571955Z         grid-column: auto / span 11;
2025-04-15T08:07:18.1572166Z       }
2025-04-15T08:07:18.1572250Z 
2025-04-15T08:07:18.1572348Z       body.netdata-splash .md-col-span-12 {
2025-04-15T08:07:18.1572585Z         grid-column: auto / span 12;
2025-04-15T08:07:18.1572797Z       }
2025-04-15T08:07:18.1572947Z     }
2025-04-15T08:07:18.1573035Z 
2025-04-15T08:07:18.1573131Z     body.netdata-splash .row-span-1 {
2025-04-15T08:07:18.1573374Z       grid-row: auto / span 1;
2025-04-15T08:07:18.1573572Z     }
2025-04-15T08:07:18.1573661Z 
2025-04-15T08:07:18.1573749Z     body.netdata-splash .row-span-2 {
2025-04-15T08:07:18.1573980Z       grid-row: auto / span 2;
2025-04-15T08:07:18.1574185Z     }
2025-04-15T08:07:18.1574268Z 
2025-04-15T08:07:18.1574358Z     body.netdata-splash .row-span-3 {
2025-04-15T08:07:18.1574613Z       grid-row: auto / span 3;
2025-04-15T08:07:18.1574819Z     }
2025-04-15T08:07:18.1574906Z 
2025-04-15T08:07:18.1574990Z     body.netdata-splash .row-span-4 {
2025-04-15T08:07:18.1575369Z       grid-row: auto / span 4;
2025-04-15T08:07:18.1575697Z     }
2025-04-15T08:07:18.1575834Z 
2025-04-15T08:07:18.1575972Z     body.netdata-splash .row-span-5 {
2025-04-15T08:07:18.1576489Z       grid-row: auto / span 5;
2025-04-15T08:07:18.1576843Z     }
2025-04-15T08:07:18.1576998Z 
2025-04-15T08:07:18.1577165Z     body.netdata-splash .row-span-6 {
2025-04-15T08:07:18.1577583Z       grid-row: auto / span 6;
2025-04-15T08:07:18.1577919Z     }
2025-04-15T08:07:18.1578065Z 
2025-04-15T08:07:18.1578212Z     body.netdata-splash .row-span-7 {
2025-04-15T08:07:18.1578620Z       grid-row: auto / span 7;
2025-04-15T08:07:18.1578959Z     }
2025-04-15T08:07:18.1579102Z 
2025-04-15T08:07:18.1579453Z     body.netdata-splash .row-span-8 {
2025-04-15T08:07:18.1579853Z       grid-row: auto / span 8;
2025-04-15T08:07:18.1580185Z     }
2025-04-15T08:07:18.1580331Z 
2025-04-15T08:07:18.1580484Z     body.netdata-splash .row-span-9 {
2025-04-15T08:07:18.1580878Z       grid-row: auto / span 9;
2025-04-15T08:07:18.1581204Z     }
2025-04-15T08:07:18.1581343Z 
2025-04-15T08:07:18.1581503Z     body.netdata-splash .row-span-10 {
2025-04-15T08:07:18.1581905Z       grid-row: auto / span 10;
2025-04-15T08:07:18.1582243Z     }
2025-04-15T08:07:18.1582391Z 
2025-04-15T08:07:18.1582541Z     body.netdata-splash .row-span-11 {
2025-04-15T08:07:18.1582936Z       grid-row: auto / span 11;
2025-04-15T08:07:18.1583268Z     }
2025-04-15T08:07:18.1583410Z 
2025-04-15T08:07:18.1583559Z     body.netdata-splash .row-span-12 {
2025-04-15T08:07:18.1583963Z       grid-row: auto / span 12;
2025-04-15T08:07:18.1584295Z     }
2025-04-15T08:07:18.1584433Z 
2025-04-15T08:07:18.1584584Z     body.netdata-splash .relative {
2025-04-15T08:07:18.1584982Z       position: relative;
2025-04-15T08:07:18.1585293Z     }
2025-04-15T08:07:18.1585447Z 
2025-04-15T08:07:18.1585580Z     body.netdata-splash .absolute {
2025-04-15T08:07:18.1585828Z       position: absolute;
2025-04-15T08:07:18.1586017Z     }
2025-04-15T08:07:18.1586295Z 
2025-04-15T08:07:18.1586416Z     body.netdata-splash .index-10 {
2025-04-15T08:07:18.1586639Z       z-index: 10;
2025-04-15T08:07:18.1586808Z     }
2025-04-15T08:07:18.1586896Z 
2025-04-15T08:07:18.1586982Z     body.netdata-splash .m-auto {
2025-04-15T08:07:18.1587199Z       margin: auto;
2025-04-15T08:07:18.1587368Z     }
2025-04-15T08:07:18.1587450Z 
2025-04-15T08:07:18.1587532Z     body.netdata-splash .full-h {
2025-04-15T08:07:18.1587755Z       height: 100%;
2025-04-15T08:07:18.1587929Z     }
2025-04-15T08:07:18.1588011Z 
2025-04-15T08:07:18.1588099Z     body.netdata-splash .flex {
2025-04-15T08:07:18.1588319Z       display: flex;
2025-04-15T08:07:18.1588488Z     }
2025-04-15T08:07:18.1588574Z 
2025-04-15T08:07:18.1588665Z     body.netdata-splash .flex-col {
2025-04-15T08:07:18.1588898Z       flex-direction: column;
2025-04-15T08:07:18.1589097Z     }
2025-04-15T08:07:18.1589180Z 
2025-04-15T08:07:18.1589421Z     body.netdata-splash .space-between {
2025-04-15T08:07:18.1589680Z       justify-content: space-between;
2025-04-15T08:07:18.1589904Z     }
2025-04-15T08:07:18.1589993Z 
2025-04-15T08:07:18.1590083Z     body.netdata-splash .align-center {
2025-04-15T08:07:18.1590323Z       align-items: center;
2025-04-15T08:07:18.1590519Z     }
2025-04-15T08:07:18.1590600Z 
2025-04-15T08:07:18.1590690Z     body.netdata-splash .container {
2025-04-15T08:07:18.1590929Z       background: var(--main-bg);
2025-04-15T08:07:18.1591147Z       height: 100vh;
2025-04-15T08:07:18.1591330Z       column-gap: 0;
2025-04-15T08:07:18.1591507Z     }
2025-04-15T08:07:18.1591592Z 
2025-04-15T08:07:18.1591676Z     body.netdata-splash .frame {
2025-04-15T08:07:18.1591888Z       height: 100vh;
2025-04-15T08:07:18.1592058Z     }
2025-04-15T08:07:18.1592145Z 
2025-04-15T08:07:18.1592246Z     body.netdata-splash .light-beam:after {
2025-04-15T08:07:18.1592490Z       content: "";
2025-04-15T08:07:18.1592670Z       position: absolute;
2025-04-15T08:07:18.1592870Z       top: 0;
2025-04-15T08:07:18.1593035Z       bottom: 0;
2025-04-15T08:07:18.1593198Z       left: 0;
2025-04-15T08:07:18.1593364Z       width: 1px;
2025-04-15T08:07:18.1593585Z       box-shadow: 20px 0px 110px 55px rgb(0 255 100 / 10%);
2025-04-15T08:07:18.1593842Z     }
2025-04-15T08:07:18.1593928Z 
2025-04-15T08:07:18.1594016Z     body.netdata-splash #setupGrid {
2025-04-15T08:07:18.1594246Z       opacity: 0.15;
2025-04-15T08:07:18.1594430Z       position: absolute;
2025-04-15T08:07:18.1594615Z       inset: 0;
2025-04-15T08:07:18.1594786Z     }
2025-04-15T08:07:18.1594874Z 
2025-04-15T08:07:18.1594965Z     body.netdata-splash #monitorGrid {
2025-04-15T08:07:18.1595209Z       opacity: 0.4;
2025-04-15T08:07:18.1595396Z       transition: 1s ease;
2025-04-15T08:07:18.1595589Z     }
2025-04-15T08:07:18.1595805Z 
2025-04-15T08:07:18.1595913Z     body.netdata-splash #monitorGrid.hovered {
2025-04-15T08:07:18.1596361Z       opacity: 0.7;
2025-04-15T08:07:18.1596539Z     }
2025-04-15T08:07:18.1596631Z 
2025-04-15T08:07:18.1596735Z     body.netdata-splash #sphereContainer {
2025-04-15T08:07:18.1596983Z       height: calc(100vh);
2025-04-15T08:07:18.1597189Z       position: relative;
2025-04-15T08:07:18.1597377Z     }
2025-04-15T08:07:18.1597464Z 
2025-04-15T08:07:18.1597573Z     body.netdata-splash #sphereContainer h4 {
2025-04-15T08:07:18.1597820Z       display: none;
2025-04-15T08:07:18.1597989Z     }
2025-04-15T08:07:18.1598078Z 
2025-04-15T08:07:18.1598163Z     body.netdata-splash .setup {
2025-04-15T08:07:18.1598384Z       z-index: 10;
2025-04-15T08:07:18.1598571Z       position: relative;
2025-04-15T08:07:18.1598797Z       box-shadow: 20px 0px 160px 5px #012f13c2;
2025-04-15T08:07:18.1599058Z       background: linear-gradient(90deg,
2025-04-15T08:07:18.1599300Z           rgba(0, 0, 0, 1) 0%,
2025-04-15T08:07:18.1599515Z           rgb(0 19 7 / 76%) 100%);
2025-04-15T08:07:18.1599728Z     }
2025-04-15T08:07:18.1599814Z 
2025-04-15T08:07:18.1599910Z     body.netdata-splash .setup>.stats {
2025-04-15T08:07:18.1600149Z       padding: 16px;
2025-04-15T08:07:18.1600341Z       overflow: auto;
2025-04-15T08:07:18.1600531Z       height: 100%;
2025-04-15T08:07:18.1600718Z       position: absolute;
2025-04-15T08:07:18.1600914Z       top: 65px;
2025-04-15T08:07:18.1601084Z       left: 0;
2025-04-15T08:07:18.1601253Z       right: 0;
2025-04-15T08:07:18.1601429Z       bottom: 0;
2025-04-15T08:07:18.1601598Z     }
2025-04-15T08:07:18.1601684Z 
2025-04-15T08:07:18.1601777Z     body.netdata-splash .setup .header {
2025-04-15T08:07:18.1602019Z       position: sticky;
2025-04-15T08:07:18.1602209Z       top: 0;
2025-04-15T08:07:18.1602390Z       padding: 8px 16px;
2025-04-15T08:07:18.1602803Z       margin: 0;
2025-04-15T08:07:18.1603079Z       backdrop-filter: blur(8px);
2025-04-15T08:07:18.1603410Z       background: rgba(0, 0, 0, 0.1);
2025-04-15T08:07:18.1603828Z       /* border-bottom: 1px solid var(--border); */
2025-04-15T08:07:18.1604201Z       display: flex;
2025-04-15T08:07:18.1604597Z       align-items: center;
2025-04-15T08:07:18.1604978Z       justify-content: space-between;
2025-04-15T08:07:18.1634409Z     }
2025-04-15T08:07:18.1634612Z 
2025-04-15T08:07:18.1634801Z     body.netdata-splash .header .title {
2025-04-15T08:07:18.1635267Z       display: flex;
2025-04-15T08:07:18.1635636Z       align-items: center;
2025-04-15T08:07:18.1635974Z       gap: 8px;
2025-04-15T08:07:18.1636503Z     }
2025-04-15T08:07:18.1636656Z 
2025-04-15T08:07:18.1636808Z     body.netdata-splash .header .logo {
2025-04-15T08:07:18.1637201Z       width: 32px;
2025-04-15T08:07:18.1637505Z       height: auto;
2025-04-15T08:07:18.1637795Z     }
2025-04-15T08:07:18.1637948Z 
2025-04-15T08:07:18.1638113Z     body.netdata-splash .splash-message {
2025-04-15T08:07:18.1638580Z       position: absolute;
2025-04-15T08:07:18.1638938Z       inset: 0;
2025-04-15T08:07:18.1639270Z       margin: auto;
2025-04-15T08:07:18.1639564Z       display: flex;
2025-04-15T08:07:18.1639896Z       align-items: center;
2025-04-15T08:07:18.1640251Z       justify-content: center;
2025-04-15T08:07:18.1640660Z       flex-direction: column;
2025-04-15T08:07:18.1641020Z       overflow-y: auto;
2025-04-15T08:07:18.1641312Z     }
2025-04-15T08:07:18.1641462Z 
2025-04-15T08:07:18.1641636Z     body.netdata-splash .splash-message p {
2025-04-15T08:07:18.1642057Z       margin-top: 0;
2025-04-15T08:07:18.1642378Z       margin-bottom: 24px;
2025-04-15T08:07:18.1642731Z       color: var(--text-light);
2025-04-15T08:07:18.1643082Z       filter: blur(0.6px);
2025-04-15T08:07:18.1643398Z     }
2025-04-15T08:07:18.1643550Z 
2025-04-15T08:07:18.1643697Z     body.netdata-splash .tagline {
2025-04-15T08:07:18.1644086Z       position: absolute;
2025-04-15T08:07:18.1644412Z       bottom: 24px;
2025-04-15T08:07:18.1644708Z       font-size: 12px;
2025-04-15T08:07:18.1645084Z       color: var(--text-light);
2025-04-15T08:07:18.1645641Z     }
2025-04-15T08:07:18.1645790Z 
2025-04-15T08:07:18.1645949Z     body.netdata-splash .skip-link {
2025-04-15T08:07:18.1646538Z       font-size: 12px;
2025-04-15T08:07:18.1646861Z       color: var(--text-light);
2025-04-15T08:07:18.1647218Z       text-align: center;
2025-04-15T08:07:18.1647528Z     }
2025-04-15T08:07:18.1647671Z 
2025-04-15T08:07:18.1647830Z     body.netdata-splash .license-link {
2025-04-15T08:07:18.1648232Z       padding: 0 16px 4px;
2025-04-15T08:07:18.1648554Z       font-size: 12px;
2025-04-15T08:07:18.1648880Z       color: var(--text-light);
2025-04-15T08:07:18.1649200Z     }
2025-04-15T08:07:18.1649331Z 
2025-04-15T08:07:18.1649460Z     body.netdata-splash .button {
2025-04-15T08:07:18.1649807Z       padding: 8px 12px;
2025-04-15T08:07:18.1650113Z       border-radius: 2px;
2025-04-15T08:07:18.1650430Z       font-size: 16px;
2025-04-15T08:07:18.1650639Z       min-width: 88px;
2025-04-15T08:07:18.1650844Z       text-align: center;
2025-04-15T08:07:18.1651045Z       cursor: pointer;
2025-04-15T08:07:18.1651239Z       transition: 250ms ease;
2025-04-15T08:07:18.1651444Z       border: none;
2025-04-15T08:07:18.1651618Z     }
2025-04-15T08:07:18.1651709Z 
2025-04-15T08:07:18.1651818Z     body.netdata-splash .button-primary {
2025-04-15T08:07:18.1652077Z       background: var(--primary);
2025-04-15T08:07:18.1652318Z       color: var(--text-light);
2025-04-15T08:07:18.1652532Z     }
2025-04-15T08:07:18.1652624Z 
2025-04-15T08:07:18.1652746Z     body.netdata-splash .button-primary:hover {
2025-04-15T08:07:18.1653023Z       background: var(--highlight);
2025-04-15T08:07:18.1653241Z     }
2025-04-15T08:07:18.1653332Z 
2025-04-15T08:07:18.1653420Z     body.netdata-splash a.button {
2025-04-15T08:07:18.1653652Z       color: var(--text-dark);
2025-04-15T08:07:18.1653849Z     }
2025-04-15T08:07:18.1653931Z 
2025-04-15T08:07:18.1654029Z     body.netdata-splash .button-ghost {
2025-04-15T08:07:18.1654296Z       background: transparent;
2025-04-15T08:07:18.1654507Z       color: var(--primary);
2025-04-15T08:07:18.1654831Z     }
2025-04-15T08:07:18.1654975Z 
2025-04-15T08:07:18.1655148Z     body.netdata-splash .button-ghost:hover {
2025-04-15T08:07:18.1655798Z       color: var(--highlight);
2025-04-15T08:07:18.1656224Z     }
2025-04-15T08:07:18.1656377Z 
2025-04-15T08:07:18.1656475Z     body.netdata-splash .clear-button {
2025-04-15T08:07:18.1656719Z       font-size: 12px;
2025-04-15T08:07:18.1656911Z       padding: 0;
2025-04-15T08:07:18.1657091Z       min-width: auto;
2025-04-15T08:07:18.1657265Z     }
2025-04-15T08:07:18.1657348Z 
2025-04-15T08:07:18.1657432Z     body.netdata-splash .tabs {
2025-04-15T08:07:18.1657643Z       display: flex;
2025-04-15T08:07:18.1657831Z       align-items: center;
2025-04-15T08:07:18.1658037Z       justify-content: center;
2025-04-15T08:07:18.1658264Z       border-top: 1px solid var(--border);
2025-04-15T08:07:18.1658512Z       backdrop-filter: blur(4px);
2025-04-15T08:07:18.1658723Z     }
2025-04-15T08:07:18.1658816Z 
2025-04-15T08:07:18.1658913Z     body.netdata-splash button.tab {
2025-04-15T08:07:18.1659150Z       background: rgba(0, 0, 0, 0.2);
2025-04-15T08:07:18.1659365Z       border: none;
2025-04-15T08:07:18.1659554Z       color: var(--menu-item);
2025-04-15T08:07:18.1659766Z       padding: 8px 0 24px;
2025-04-15T08:07:18.1659970Z       border-left: 0;
2025-04-15T08:07:18.1660166Z       cursor: pointer;
2025-04-15T08:07:18.1660361Z       backdrop-filter: blur(2px);
2025-04-15T08:07:18.1660578Z       width: 100%;
2025-04-15T08:07:18.1660753Z       font-size: 12px;
2025-04-15T08:07:18.1660934Z       display: flex;
2025-04-15T08:07:18.1661122Z       flex-direction: column;
2025-04-15T08:07:18.1661326Z       align-items: center;
2025-04-15T08:07:18.1661521Z       gap: 8px;
2025-04-15T08:07:18.1661689Z     }
2025-04-15T08:07:18.1661776Z 
2025-04-15T08:07:18.1661894Z     body.netdata-splash button.tab:first-child {
2025-04-15T08:07:18.1662198Z       /* border-left: 1px solid var(--primary); */
2025-04-15T08:07:18.1662447Z     }
2025-04-15T08:07:18.1662676Z 
2025-04-15T08:07:18.1662801Z     body.netdata-splash button.tab:not(.active):hover {
2025-04-15T08:07:18.1663075Z       color: var(--tab-hover);
2025-04-15T08:07:18.1663284Z       transition: 100ms ease;
2025-04-15T08:07:18.1663471Z     }
2025-04-15T08:07:18.1663555Z 
2025-04-15T08:07:18.1663656Z     body.netdata-splash button.tab.active {
2025-04-15T08:07:18.1663903Z       background: transparent;
2025-04-15T08:07:18.1664130Z       /* border-bottom: 1px solid transparent; */
2025-04-15T08:07:18.1664379Z       backdrop-filter: blur(0);
2025-04-15T08:07:18.1664584Z       color: var(--tab-active);
2025-04-15T08:07:18.1664780Z       cursor: default;
2025-04-15T08:07:18.1664953Z     }
2025-04-15T08:07:18.1665033Z 
2025-04-15T08:07:18.1665122Z     body.netdata-splash .tab-icon {
2025-04-15T08:07:18.1665341Z       width: 24px;
2025-04-15T08:07:18.1665509Z       height: 24px;
2025-04-15T08:07:18.1665673Z     }
2025-04-15T08:07:18.1665758Z 
2025-04-15T08:07:18.1665846Z     body.netdata-splash .tab-icon svg {
2025-04-15T08:07:18.1666248Z       height: 100%;
2025-04-15T08:07:18.1666422Z       width: 100%;
2025-04-15T08:07:18.1666578Z     }
2025-04-15T08:07:18.1666665Z 
2025-04-15T08:07:18.1666770Z     body.netdata-splash .tab-icon svg path {
2025-04-15T08:07:18.1667021Z       fill: var(--menu-item);
2025-04-15T08:07:18.1667225Z       transition: 100ms ease;
2025-04-15T08:07:18.1667411Z     }
2025-04-15T08:07:18.1667492Z 
2025-04-15T08:07:18.1667618Z     body.netdata-splash .tab.active .tab-icon svg path {
2025-04-15T08:07:18.1667895Z       fill: var(--tab-active);
2025-04-15T08:07:18.1668087Z     }
2025-04-15T08:07:18.1668167Z 
2025-04-15T08:07:18.1668261Z     button.tab:not(.active):hover svg path {
2025-04-15T08:07:18.1668333Z       fill: var(--tab-hover);
2025-04-15T08:07:18.1668394Z     }
2025-04-15T08:07:18.1668397Z 
2025-04-15T08:07:18.1668480Z     body.netdata-splash .panel {
2025-04-15T08:07:18.1668562Z       background: var(--panel-bg);
2025-04-15T08:07:18.1668636Z       padding: 16px;
2025-04-15T08:07:18.1668715Z       border-radius: 4px;
2025-04-15T08:07:18.1668801Z       border: 1px solid var(--border);
2025-04-15T08:07:18.1668880Z       backdrop-filter: blur(0px);
2025-04-15T08:07:18.1669067Z     }
2025-04-15T08:07:18.1669072Z 
2025-04-15T08:07:18.1669165Z     body.netdata-splash .panel-tab {
2025-04-15T08:07:18.1669242Z       border-radius: 0 0 4px 4px;
2025-04-15T08:07:18.1669317Z       border-top: 0;
2025-04-15T08:07:18.1669409Z       border-left: 1px solid var(--primary);
2025-04-15T08:07:18.1669507Z       border-bottom: 1px solid var(--primary);
2025-04-15T08:07:18.1669600Z       border-right: 1px solid var(--primary);
2025-04-15T08:07:18.1669675Z       padding: 4px 24px;
2025-04-15T08:07:18.1669749Z       display: none;
2025-04-15T08:07:18.1669817Z       height: 70%;
2025-04-15T08:07:18.1669889Z       overflow: auto;
2025-04-15T08:07:18.1669950Z     }
2025-04-15T08:07:18.1669953Z 
2025-04-15T08:07:18.1670043Z     body.netdata-splash .data-tab {
2025-04-15T08:07:18.1670111Z       display: block;
2025-04-15T08:07:18.1670184Z       opacity: 0;
2025-04-15T08:07:18.1670263Z       transition: 800ms ease;
2025-04-15T08:07:18.1670340Z       pointer-events: none;
2025-04-15T08:07:18.1670408Z     }
2025-04-15T08:07:18.1670412Z 
2025-04-15T08:07:18.1670508Z     body.netdata-splash .data-tab.active {
2025-04-15T08:07:18.1670575Z       opacity: 1;
2025-04-15T08:07:18.1670652Z       pointer-events: all;
2025-04-15T08:07:18.1670714Z     }
2025-04-15T08:07:18.1670718Z 
2025-04-15T08:07:18.1670821Z     body.netdata-splash .data-tab-container {
2025-04-15T08:07:18.1670902Z       position: absolute;
2025-04-15T08:07:18.1670970Z       left: 0;
2025-04-15T08:07:18.1671035Z       right: 0;
2025-04-15T08:07:18.1671101Z       top: 45%;
2025-04-15T08:07:18.1671178Z       /* height: 40vh; */
2025-04-15T08:07:18.1671239Z     }
2025-04-15T08:07:18.1671243Z 
2025-04-15T08:07:18.1671344Z     body.netdata-splash .system-container {
2025-04-15T08:07:18.1671413Z       overflow: auto;
2025-04-15T08:07:18.1671498Z       height: calc(100% - 330px);
2025-04-15T08:07:18.1671697Z       padding: 0 24px 24px;
2025-04-15T08:07:18.1671769Z       margin: 0 -24px;
2025-04-15T08:07:18.1671896Z       scrollbar-color: var(--scrollbar-thumb) #293030;
2025-04-15T08:07:18.1671973Z       scrollbar-width: thin;
2025-04-15T08:07:18.1672034Z     }
2025-04-15T08:07:18.1672043Z 
2025-04-15T08:07:18.1672176Z     body.netdata-splash .data-tab-container .system>div {
2025-04-15T08:07:18.1672245Z       display: flex;
2025-04-15T08:07:18.1672331Z       /* margin-bottom: 24px; */
2025-04-15T08:07:18.1672418Z       /* backdrop-filter: blur(1px); */
2025-04-15T08:07:18.1672489Z       height: auto;
2025-04-15T08:07:18.1672560Z       min-height: 40px;
2025-04-15T08:07:18.1672630Z       overflow: hidden;
2025-04-15T08:07:18.1672697Z     }
2025-04-15T08:07:18.1672700Z 
2025-04-15T08:07:18.1672849Z     body.netdata-splash .data-tab-container .system .key-value {
2025-04-15T08:07:18.1672930Z       flex-direction: column;
2025-04-15T08:07:18.1672995Z       gap: 8px;
2025-04-15T08:07:18.1673079Z       align-items: flex-start;
2025-04-15T08:07:18.1673159Z       justify-content: start;
2025-04-15T08:07:18.1673225Z       width: 100%;
2025-04-15T08:07:18.1673302Z       padding: 0;
2025-04-15T08:07:18.1673365Z     }
2025-04-15T08:07:18.1673369Z 
2025-04-15T08:07:18.1673579Z     body.netdata-splash .data-tab-container .system .key-value span:nth-child(1) {
2025-04-15T08:07:18.1673659Z       padding: 8px 16px;
2025-04-15T08:07:18.1673756Z       border-bottom: 1px solid var(--border);
2025-04-15T08:07:18.1673829Z       width: 100%;
2025-04-15T08:07:18.1673898Z       color: #8eae9b;
2025-04-15T08:07:18.1673988Z       background: rgba(0, 0, 0, 0.8);
2025-04-15T08:07:18.1674051Z     }
2025-04-15T08:07:18.1674054Z 
2025-04-15T08:07:18.1674259Z     body.netdata-splash .data-tab-container .system .key-value span:nth-child(2) {
2025-04-15T08:07:18.1674337Z       /* font-size: 16px; */
2025-04-15T08:07:18.1674416Z       padding: 4px 16px 12px;
2025-04-15T08:07:18.1674494Z       text-align: left;
2025-04-15T08:07:18.1674571Z       color: var(--accent);
2025-04-15T08:07:18.1674637Z     }
2025-04-15T08:07:18.1674640Z 
2025-04-15T08:07:18.1674734Z     body.netdata-splash .panel:hover h4 {
2025-04-15T08:07:18.1674899Z       color: var(--highlight);
2025-04-15T08:07:18.1674968Z     }
2025-04-15T08:07:18.1674972Z 
2025-04-15T08:07:18.1675063Z     body.netdata-splash .hide-title h4 {
2025-04-15T08:07:18.1675146Z       visibility: hidden;
2025-04-15T08:07:18.1675209Z     }
2025-04-15T08:07:18.1675212Z 
2025-04-15T08:07:18.1675330Z     body.netdata-splash .no-key span:first-child {
2025-04-15T08:07:18.1675402Z       display: none;
2025-04-15T08:07:18.1675463Z     }
2025-04-15T08:07:18.1675467Z 
2025-04-15T08:07:18.1675558Z     body.netdata-splash .no-title h4 {
2025-04-15T08:07:18.1675627Z       display: none;
2025-04-15T08:07:18.1675693Z     }
2025-04-15T08:07:18.1675696Z 
2025-04-15T08:07:18.1675791Z     body.netdata-splash .absolute-center {
2025-04-15T08:07:18.1675870Z       position: absolute;
2025-04-15T08:07:18.1675942Z       inset: 0;
2025-04-15T08:07:18.1676008Z       margin: auto;
2025-04-15T08:07:18.1676221Z     }
2025-04-15T08:07:18.1676227Z 
2025-04-15T08:07:18.1676388Z     body.netdata-splash .align-end {
2025-04-15T08:07:18.1676475Z       align-content: flex-end;
2025-04-15T08:07:18.1676540Z     }
2025-04-15T08:07:18.1676547Z 
2025-04-15T08:07:18.1676655Z     body.netdata-splash .panel-tab .separator {
2025-04-15T08:07:18.1676750Z       border-bottom: 1px solid var(--border);
2025-04-15T08:07:18.1676826Z       margin: 8px -24px;
2025-04-15T08:07:18.1676891Z     }
2025-04-15T08:07:18.1676894Z 
2025-04-15T08:07:18.1676985Z     body.netdata-splash .section-image {
2025-04-15T08:07:18.1677057Z       height: 16px;
2025-04-15T08:07:18.1677123Z       width: 16px;
2025-04-15T08:07:18.1677183Z     }
2025-04-15T08:07:18.1677186Z 
2025-04-15T08:07:18.1677288Z     body.netdata-splash .section-image svg {
2025-04-15T08:07:18.1677354Z       width: 100%;
2025-04-15T08:07:18.1677424Z       height: 100%;
2025-04-15T08:07:18.1677618Z     }
2025-04-15T08:07:18.1677622Z 
2025-04-15T08:07:18.1677714Z     body.netdata-splash .section-title {
2025-04-15T08:07:18.1677792Z       font-size: 14px;
2025-04-15T08:07:18.1677869Z       font-weight: bold;
2025-04-15T08:07:18.1677943Z       margin: 8px 0;
2025-04-15T08:07:18.1678021Z       display: inline-block;
2025-04-15T08:07:18.1678087Z     }
2025-04-15T08:07:18.1678090Z 
2025-04-15T08:07:18.1678205Z     body.netdata-splash .sphere-stats-container {
2025-04-15T08:07:18.1678270Z       width: 80%;
2025-04-15T08:07:18.1678344Z       height: 100vh;
2025-04-15T08:07:18.1678412Z       display: flex;
2025-04-15T08:07:18.1678491Z       align-items: center;
2025-04-15T08:07:18.1678569Z       flex-direction: column;
2025-04-15T08:07:18.1678646Z       justify-content: center;
2025-04-15T08:07:18.1678725Z       margin-bottom: 10vmin;
2025-04-15T08:07:18.1678791Z       gap: 16px;
2025-04-15T08:07:18.1678856Z     }
2025-04-15T08:07:18.1678860Z 
2025-04-15T08:07:18.1678947Z     body.netdata-splash .key-value {
2025-04-15T08:07:18.1679043Z       font-size: var(--font-small);
2025-04-15T08:07:18.1679114Z       display: flex;
2025-04-15T08:07:18.1679207Z       justify-content: space-between;
2025-04-15T08:07:18.1679290Z       align-items: center;
2025-04-15T08:07:18.1679363Z       padding: 8px 0;
2025-04-15T08:07:18.1679450Z       color: var(--key-value-table);
2025-04-15T08:07:18.1679512Z     }
2025-04-15T08:07:18.1679515Z 
2025-04-15T08:07:18.1679594Z     /* .key-value:nth-child(2n) {
2025-04-15T08:07:18.1679677Z       background: var(--row-2n);
2025-04-15T08:07:18.1679740Z     } */
2025-04-15T08:07:18.1679837Z     body.netdata-splash .key-value:hover {
2025-04-15T08:07:18.1679913Z       color: var(--highlight);
2025-04-15T08:07:18.1679974Z     }
2025-04-15T08:07:18.1679983Z 
2025-04-15T08:07:18.1680102Z     body.netdata-splash .key-value span:nth-child(2) {
2025-04-15T08:07:18.1680175Z       text-align: right;
2025-04-15T08:07:18.1680240Z     }
2025-04-15T08:07:18.1680243Z 
2025-04-15T08:07:18.1680345Z     body.netdata-splash .metrics-container {
2025-04-15T08:07:18.1680426Z       position: absolute;
2025-04-15T08:07:18.1680495Z       top: 150px;
2025-04-15T08:07:18.1680561Z     }
2025-04-15T08:07:18.1680682Z 
2025-04-15T08:07:18.1680821Z     body.netdata-splash .collected-metrics .key-value {
2025-04-15T08:07:18.1680900Z       flex-direction: column;
2025-04-15T08:07:18.1680978Z       align-items: center;
2025-04-15T08:07:18.1681056Z       justify-content: center;
2025-04-15T08:07:18.1681134Z       background: none;
2025-04-15T08:07:18.1681206Z       text-align: center;
2025-04-15T08:07:18.1681290Z       text-transform: uppercase;
2025-04-15T08:07:18.1681368Z       font-size: 12px;
2025-04-15T08:07:18.1681441Z       color: var(--text);
2025-04-15T08:07:18.1681510Z     }
2025-04-15T08:07:18.1681513Z 
2025-04-15T08:07:18.1681697Z     body.netdata-splash .collected-metrics .key-value span:nth-child(2) {
2025-04-15T08:07:18.1681771Z       font-size: 7vmin;
2025-04-15T08:07:18.1681850Z       font-weight: 700;
2025-04-15T08:07:18.1681930Z       color: rgb(254 254 254 / 80%);
2025-04-15T08:07:18.1682008Z       filter: blur(0.8px);
2025-04-15T08:07:18.1682079Z       text-align: center;
2025-04-15T08:07:18.1682149Z     }
2025-04-15T08:07:18.1682158Z 
2025-04-15T08:07:18.1682250Z     #server .key-value span:first-child,
2025-04-15T08:07:18.1682345Z     #package .key-value span:first-child {
2025-04-15T08:07:18.1682420Z       display: none;
2025-04-15T08:07:18.1682482Z     }
2025-04-15T08:07:18.1682485Z 
2025-04-15T08:07:18.1682578Z     #server .key-value span:nth-child(2),
2025-04-15T08:07:18.1682673Z     #package .key-value span:nth-child(2) {
2025-04-15T08:07:18.1682745Z       font-size: 12px;
2025-04-15T08:07:18.1682825Z       color: var(--primary);
2025-04-15T08:07:18.1682901Z       font-family: monospace;
2025-04-15T08:07:18.1682967Z     }
2025-04-15T08:07:18.1682970Z 
2025-04-15T08:07:18.1683058Z     body.netdata-splash .head-summary {
2025-04-15T08:07:18.1683128Z       left: 0;
2025-04-15T08:07:18.1683284Z       padding: 16px;
2025-04-15T08:07:18.1683350Z       right: 0;
2025-04-15T08:07:18.1683422Z       display: flex;
2025-04-15T08:07:18.1683496Z       flex-direction: row;
2025-04-15T08:07:18.1683593Z       justify-content: space-between;
2025-04-15T08:07:18.1683654Z     }
2025-04-15T08:07:18.1683658Z 
2025-04-15T08:07:18.1683740Z     body.netdata-splash .module {
2025-04-15T08:07:18.1683828Z       border: 2px solid var(--border);
2025-04-15T08:07:18.1683902Z       border-radius: 16px;
2025-04-15T08:07:18.1684056Z       box-shadow: -1px 1px var(--main-bg), -2px 2px var(--main-bg),
2025-04-15T08:07:18.1684177Z         -3px 3px var(--border), -4px 4px 24px var(--border);
2025-04-15T08:07:18.1684264Z       height: var(--module-height);
2025-04-15T08:07:18.1684335Z       overflow: auto;
2025-04-15T08:07:18.1684447Z       scrollbar-color: var(--scrollbar-thumb) #293030;
2025-04-15T08:07:18.1684531Z       scrollbar-width: thin;
2025-04-15T08:07:18.1684619Z       /* backdrop-filter: blur(2px); */
2025-04-15T08:07:18.1684690Z     }
2025-04-15T08:07:18.1684694Z 
2025-04-15T08:07:18.1684783Z     body.netdata-splash .module-header {
2025-04-15T08:07:18.1684851Z       display: flex;
2025-04-15T08:07:18.1684932Z       align-items: center;
2025-04-15T08:07:18.1684998Z       gap: 4px;
2025-04-15T08:07:18.1685077Z       padding: 4px 16px;
2025-04-15T08:07:18.1685156Z       background: rgba(0, 0, 0, 0.8);
2025-04-15T08:07:18.1685237Z       border-radius: 16px 16px 0 0;
2025-04-15T08:07:18.1685312Z       color: #8eae9b;
2025-04-15T08:07:18.1685407Z       border-bottom: 1px solid var(--border);
2025-04-15T08:07:18.1685487Z       position: sticky;
2025-04-15T08:07:18.1685553Z       top: 0;
2025-04-15T08:07:18.1685620Z     }
2025-04-15T08:07:18.1685624Z 
2025-04-15T08:07:18.1685734Z     body.netdata-splash .module-header svg path {
2025-04-15T08:07:18.1685807Z       fill: var(--accent);
2025-04-15T08:07:18.1685875Z     }
2025-04-15T08:07:18.1685879Z 
2025-04-15T08:07:18.1685977Z     body.netdata-splash .modules-container {
2025-04-15T08:07:18.1686202Z       max-height: 100%;
2025-04-15T08:07:18.1686326Z       text-align: center;
2025-04-15T08:07:18.1686440Z       margin: auto;
2025-04-15T08:07:18.1686774Z       column-gap: 24px;
2025-04-15T08:07:18.1686848Z     }
2025-04-15T08:07:18.1686853Z 
2025-04-15T08:07:18.1686954Z     body.netdata-splash .module-content {
2025-04-15T08:07:18.1687027Z       padding: 4px 16px;
2025-04-15T08:07:18.1687095Z     }
2025-04-15T08:07:18.1687099Z 
2025-04-15T08:07:18.1687204Z     body.netdata-splash .db-metrics-container {
2025-04-15T08:07:18.1687274Z       display: flex;
2025-04-15T08:07:18.1687355Z       justify-content: center;
2025-04-15T08:07:18.1687422Z       gap: 16px;
2025-04-15T08:07:18.1687486Z     }
2025-04-15T08:07:18.1687490Z 
2025-04-15T08:07:18.1687585Z     body.netdata-splash .db-metrics-blocks {
2025-04-15T08:07:18.1687662Z       /* display: flex; */
2025-04-15T08:07:18.1687742Z       /* flex-direction: column; */
2025-04-15T08:07:18.1687815Z       /* align-items: center;
2025-04-15T08:07:18.1687903Z       justify-content: center;
2025-04-15T08:07:18.1687970Z       gap: 24px; */
2025-04-15T08:07:18.1688056Z       height: var(--module-height);
2025-04-15T08:07:18.1688129Z       width: 100%;
2025-04-15T08:07:18.1688190Z     }
2025-04-15T08:07:18.1688194Z 
2025-04-15T08:07:18.1688272Z     /* .db-metrics-block {
2025-04-15T08:07:18.1688339Z       display: flex;
2025-04-15T08:07:18.1688418Z       flex-direction: column;
2025-04-15T08:07:18.1688491Z       text-align: center;
2025-04-15T08:07:18.1688563Z       min-width: 15vmax;
2025-04-15T08:07:18.1688636Z       height: 150px;
2025-04-15T08:07:18.1688707Z       padding: 0 24px;
2025-04-15T08:07:18.1688774Z     } */
2025-04-15T08:07:18.1688910Z     body.netdata-splash .db-metrics-blocks .module-content {
2025-04-15T08:07:18.1688984Z       padding: 0;
2025-04-15T08:07:18.1689046Z     }
2025-04-15T08:07:18.1689049Z 
2025-04-15T08:07:18.1689140Z     /* .db-metrics-block:not(:last-child) {
2025-04-15T08:07:18.1689234Z       border-right: 1px solid var(--border);
2025-04-15T08:07:18.1689416Z     } */
2025-04-15T08:07:18.1689513Z     body.netdata-splash .db-metrics-title {
2025-04-15T08:07:18.1689584Z       font-size: 1.5vmin;
2025-04-15T08:07:18.1689652Z     }
2025-04-15T08:07:18.1689656Z 
2025-04-15T08:07:18.1689771Z     body.netdata-splash .db-metrics-block-title {
2025-04-15T08:07:18.1689841Z       font-size: 14px;
2025-04-15T08:07:18.1689918Z       padding: 8px 16px;
2025-04-15T08:07:18.1689987Z       z-index: 100;
2025-04-15T08:07:18.1690058Z       font-weight: bold;
2025-04-15T08:07:18.1690130Z       color: #fff;
2025-04-15T08:07:18.1690190Z     }
2025-04-15T08:07:18.1690194Z 
2025-04-15T08:07:18.1690301Z     body.netdata-splash .db-metrics .key-value {
2025-04-15T08:07:18.1690368Z       display: flex;
2025-04-15T08:07:18.1690450Z       flex-direction: column;
2025-04-15T08:07:18.1690527Z       align-items: flex-start;
2025-04-15T08:07:18.1690588Z     }
2025-04-15T08:07:18.1690592Z 
2025-04-15T08:07:18.1690752Z     body.netdata-splash .db-metrics .key-value span:nth-child(2) {
2025-04-15T08:07:18.1690827Z       font-size: 12px;
2025-04-15T08:07:18.1690905Z       color: var(--accent);
2025-04-15T08:07:18.1690977Z       filter: blur(0.5px);
2025-04-15T08:07:18.1691060Z       text-align: center;
2025-04-15T08:07:18.1691122Z     }
2025-04-15T08:07:18.1691125Z 
2025-04-15T08:07:18.1691212Z     body.netdata-splash .db-metrics {
2025-04-15T08:07:18.1691288Z       padding: 8px 16px;
2025-04-15T08:07:18.1691380Z       border-bottom: 1px solid var(--border);
2025-04-15T08:07:18.1691446Z     }
2025-04-15T08:07:18.1691449Z 
2025-04-15T08:07:18.1691536Z     body.netdata-splash .disk-stats {
2025-04-15T08:07:18.1691611Z       /* border-bottom: 0; */
2025-04-15T08:07:18.1691686Z       padding: 16px;
2025-04-15T08:07:18.1691745Z     }
2025-04-15T08:07:18.1691748Z 
2025-04-15T08:07:18.1691901Z     body.netdata-splash .module-content:last-child .disk-stats {
2025-04-15T08:07:18.1691980Z       padding-bottom: 112px;
2025-04-15T08:07:18.1692045Z     }
2025-04-15T08:07:18.1692053Z 
2025-04-15T08:07:18.1692154Z     body.netdata-splash .disk-max .key-value {
2025-04-15T08:07:18.1692227Z       flex-direction: row;
2025-04-15T08:07:18.1692300Z       font-size: 12px;
2025-04-15T08:07:18.1692469Z       justify-content: space-between;
2025-04-15T08:07:18.1692551Z       padding: 2px 0;
2025-04-15T08:07:18.1692612Z     }
2025-04-15T08:07:18.1692616Z 
2025-04-15T08:07:18.1692760Z     body.netdata-splash .disk-max .key-value span:nth-child(2) {
2025-04-15T08:07:18.1692829Z       font-size: 12px;
2025-04-15T08:07:18.1692898Z       display: flex;
2025-04-15T08:07:18.1692986Z       justify-content: space-between;
2025-04-15T08:07:18.1693053Z       width: 100%;
2025-04-15T08:07:18.1693117Z     }
2025-04-15T08:07:18.1693120Z 
2025-04-15T08:07:18.1693219Z     body.netdata-splash .disk-used .key-value {
2025-04-15T08:07:18.1693290Z       padding: 2px 0;
2025-04-15T08:07:18.1693357Z     }
2025-04-15T08:07:18.1693360Z 
2025-04-15T08:07:18.1693527Z     body.netdata-splash .disk-max .key-value span:nth-child(2):before {
2025-04-15T08:07:18.1693612Z       content: "Disk Size";
2025-04-15T08:07:18.1693673Z     }
2025-04-15T08:07:18.1693676Z 
2025-04-15T08:07:18.1693853Z     body.netdata-splash .disk-used .key-value span:nth-child(2):before {
2025-04-15T08:07:18.1693924Z       content: "Used ";
2025-04-15T08:07:18.1693984Z     }
2025-04-15T08:07:18.1693988Z 
2025-04-15T08:07:18.1694138Z     body.netdata-splash .disk-used .key-value span:nth-child(2) {
2025-04-15T08:07:18.1694210Z       font-size: 12px;
2025-04-15T08:07:18.1694282Z       display: flex;
2025-04-15T08:07:18.1694364Z       justify-content: space-between;
2025-04-15T08:07:18.1694426Z       width: 100%;
2025-04-15T08:07:18.1694490Z     }
2025-04-15T08:07:18.1694494Z 
2025-04-15T08:07:18.1694639Z     body.netdata-splash .db-metrics .key-value span:first-child {
2025-04-15T08:07:18.1694711Z       font-size: 12px;
2025-04-15T08:07:18.1694780Z       color: var(--text);
2025-04-15T08:07:18.1694842Z     }
2025-04-15T08:07:18.1694845Z 
2025-04-15T08:07:18.1695038Z     body.netdata-splash .percentage-container {
2025-04-15T08:07:18.1695109Z       width: 100%;
2025-04-15T08:07:18.1695189Z       background: transparent;
2025-04-15T08:07:18.1695281Z       border: 1px solid var(--primary);
2025-04-15T08:07:18.1695353Z       height: 16px;
2025-04-15T08:07:18.1695422Z       border-radius: 1px;
2025-04-15T08:07:18.1695499Z       position: relative;
2025-04-15T08:07:18.1695556Z     }
2025-04-15T08:07:18.1695560Z 
2025-04-15T08:07:18.1695648Z     body.netdata-splash .percentage-bar {
2025-04-15T08:07:18.1695726Z       background: #016a2b94;
2025-04-15T08:07:18.1695797Z       position: absolute;
2025-04-15T08:07:18.1695868Z       bottom: 0;
2025-04-15T08:07:18.1695929Z       top: 0;
2025-04-15T08:07:18.1695990Z       left: 0;
2025-04-15T08:07:18.1696220Z       backdrop-filter: blur(1px);
2025-04-15T08:07:18.1696327Z     }
2025-04-15T08:07:18.1696333Z 
2025-04-15T08:07:18.1696481Z     body.netdata-splash .percentage-text {
2025-04-15T08:07:18.1696557Z       position: absolute;
2025-04-15T08:07:18.1696638Z       font-size: 12px;
2025-04-15T08:07:18.1696699Z       top: 0;
2025-04-15T08:07:18.1696769Z       padding: 0 2px;
2025-04-15T08:07:18.1696943Z       color: var(--accent);
2025-04-15T08:07:18.1697006Z     }
2025-04-15T08:07:18.1697009Z 
2025-04-15T08:07:18.1697103Z     body.netdata-splash .data-tab-table {
2025-04-15T08:07:18.1697171Z       padding: 16px;
2025-04-15T08:07:18.1697235Z       width: 400px;
2025-04-15T08:07:18.1697318Z       height: var(--module-height);
2025-04-15T08:07:18.1697385Z       margin: auto;
2025-04-15T08:07:18.1697445Z     }
2025-04-15T08:07:18.1697448Z 
2025-04-15T08:07:18.1697550Z     body.netdata-splash .node-info-container {
2025-04-15T08:07:18.1697620Z       display: flex;
2025-04-15T08:07:18.1697696Z       flex-direction: column;
2025-04-15T08:07:18.1697761Z       width: 100%;
2025-04-15T08:07:18.1697842Z       justify-content: center;
2025-04-15T08:07:18.1697918Z       align-items: center;
2025-04-15T08:07:18.1697990Z       gap: 8px;
2025-04-15T08:07:18.1698055Z     }
2025-04-15T08:07:18.1698058Z 
2025-04-15T08:07:18.1698145Z     body.netdata-splash .node-info {
2025-04-15T08:07:18.1698218Z       display: flex;
2025-04-15T08:07:18.1698449Z       justify-content: center;
2025-04-15T08:07:18.1698522Z       width: 100%;
2025-04-15T08:07:18.1698588Z       gap: 8px;
2025-04-15T08:07:18.1698661Z       flex-direction: row;
2025-04-15T08:07:18.1698724Z     }
2025-04-15T08:07:18.1698727Z 
2025-04-15T08:07:18.1698851Z     body.netdata-splash .node-info-container .title {
2025-04-15T08:07:18.1698926Z       font-size: 12px;
2025-04-15T08:07:18.1698987Z     }
2025-04-15T08:07:18.1698990Z 
2025-04-15T08:07:18.1699093Z     body.netdata-splash .node-info .key-value {
2025-04-15T08:07:18.1699180Z       border: 1px solid var(--highlight);
2025-04-15T08:07:18.1699251Z       padding: 2px 8px;
2025-04-15T08:07:18.1699333Z       border-radius: 4px;
2025-04-15T08:07:18.1699402Z       font-size: 12px;
2025-04-15T08:07:18.1699478Z       color: var(--highlight);
2025-04-15T08:07:18.1699552Z       height: 20px;
2025-04-15T08:07:18.1699611Z     }
2025-04-15T08:07:18.1699617Z 
2025-04-15T08:07:18.1699766Z     body.netdata-splash .node-info .key-value span:first-child {
2025-04-15T08:07:18.1699837Z       margin-right: 4px;
2025-04-15T08:07:18.1699909Z       font-weight: normal;
2025-04-15T08:07:18.1699967Z     }
2025-04-15T08:07:18.1699970Z 
2025-04-15T08:07:18.1700059Z     body.netdata-splash .availability {
2025-04-15T08:07:18.1700130Z       text-align: right;
2025-04-15T08:07:18.1700203Z       font-family: monospace;
2025-04-15T08:07:18.1700271Z       display: flex;
2025-04-15T08:07:18.1700343Z       flex-direction: column;
2025-04-15T08:07:18.1700425Z       text-transform: capitalize;
2025-04-15T08:07:18.1700494Z       padding: 8px 16px;
2025-04-15T08:07:18.1700560Z       color: #fff;
2025-04-15T08:07:18.1700629Z       font-size: 12px;
2025-04-15T08:07:18.1700689Z     }
2025-04-15T08:07:18.1700693Z 
2025-04-15T08:07:18.1700807Z     body.netdata-splash .availability .key-valye {
2025-04-15T08:07:18.1700993Z       padding: 4px 0;
2025-04-15T08:07:18.1701058Z     }
2025-04-15T08:07:18.1701062Z 
2025-04-15T08:07:18.1701149Z     body.netdata-splash .sub-module {
2025-04-15T08:07:18.1701220Z       width: 100%;
2025-04-15T08:07:18.1701286Z     }
2025-04-15T08:07:18.1701289Z 
2025-04-15T08:07:18.1701370Z     body.netdata-splash .hardware {
2025-04-15T08:07:18.1701450Z       flex-direction: column;
2025-04-15T08:07:18.1701510Z     }
2025-04-15T08:07:18.1701513Z 
2025-04-15T08:07:18.1701627Z     body.netdata-splash .hardware .module-content {
2025-04-15T08:07:18.1701694Z       padding: 0;
2025-04-15T08:07:18.1701762Z       display: flex;
2025-04-15T08:07:18.1701828Z     }
2025-04-15T08:07:18.1701832Z 
2025-04-15T08:07:18.1701963Z     body.netdata-splash .module.has-title .section-title {
2025-04-15T08:07:18.1702048Z       padding-bottom: 12px;
2025-04-15T08:07:18.1702121Z       margin-bottom: 0;
2025-04-15T08:07:18.1702181Z     }
2025-04-15T08:07:18.1702184Z 
2025-04-15T08:07:18.1702276Z     body.netdata-splash .h-auto {
2025-04-15T08:07:18.1702343Z       height: auto;
2025-04-15T08:07:18.1702408Z     }
2025-04-15T08:07:18.1702411Z 
2025-04-15T08:07:18.1702499Z     body.netdata-splash .none {
2025-04-15T08:07:18.1702570Z       display: none;
2025-04-15T08:07:18.1702631Z     }
2025-04-15T08:07:18.1702634Z 
2025-04-15T08:07:18.1702726Z     body.netdata-splash .claim-message {
2025-04-15T08:07:18.1702808Z       position: absolute;
2025-04-15T08:07:18.1702870Z       top: 0;
2025-04-15T08:07:18.1702943Z       left: 0;
2025-04-15T08:07:18.1703008Z       right: 0;
2025-04-15T08:07:18.1703076Z       margin: auto;
2025-04-15T08:07:18.1703152Z       padding: 0 24px;
2025-04-15T08:07:18.1703223Z       overflow-y: auto;
2025-04-15T08:07:18.1703290Z     }
2025-04-15T08:07:18.1703293Z 
2025-04-15T08:07:18.1703399Z     body.netdata-splash .claim-message .welcome {
2025-04-15T08:07:18.1703475Z       padding: 16px 0;
2025-04-15T08:07:18.1703546Z       text-align: center;
2025-04-15T08:07:18.1703608Z     }
2025-04-15T08:07:18.1703617Z 
2025-04-15T08:07:18.1703712Z     body.netdata-splash .text-center {
2025-04-15T08:07:18.1703783Z       text-align: center;
2025-04-15T08:07:18.1703847Z     }
2025-04-15T08:07:18.1703935Z 
2025-04-15T08:07:18.1704032Z     body.netdata-splash .connection-modal {
2025-04-15T08:07:18.1704112Z       background: rgba(0, 0, 0, 0.4);
2025-04-15T08:07:18.1704199Z       border: 1px solid var(--border);
2025-04-15T08:07:18.1704272Z       padding: 16px 16px;
2025-04-15T08:07:18.1704341Z       display: flex;
2025-04-15T08:07:18.1704414Z       flex-direction: column;
2025-04-15T08:07:18.1704485Z       gap: 12px;
2025-04-15T08:07:18.1704557Z       position: relative;
2025-04-15T08:07:18.1704626Z       font-size: 14px;
2025-04-15T08:07:18.1704691Z     }
2025-04-15T08:07:18.1704694Z 
2025-04-15T08:07:18.1704788Z     body.netdata-splash .connection-step {
2025-04-15T08:07:18.1704861Z       display: flex;
2025-04-15T08:07:18.1704935Z       flex-direction: column;
2025-04-15T08:07:18.1705008Z       gap: 12px;
2025-04-15T08:07:18.1705095Z       position: relative;
2025-04-15T08:07:18.1705173Z       min-height: 300px;
2025-04-15T08:07:18.1705234Z     }
2025-04-15T08:07:18.1705237Z 
2025-04-15T08:07:18.1705334Z     body.netdata-splash .dropdown-custom {
2025-04-15T08:07:18.1705408Z       display: flex;
2025-04-15T08:07:18.1705484Z       flex-direction: column;
2025-04-15T08:07:18.1705553Z       gap: 12px;
2025-04-15T08:07:18.1705624Z       position: relative;
2025-04-15T08:07:18.1705684Z     }
2025-04-15T08:07:18.1705696Z 
2025-04-15T08:07:18.1705783Z     body.netdata-splash .modal-footer {
2025-04-15T08:07:18.1705863Z       height: var(--footer-height);
2025-04-15T08:07:18.1705939Z       padding: 10px 0 0;
2025-04-15T08:07:18.1706007Z       display: flex;
2025-04-15T08:07:18.1706290Z       justify-content: space-between;
2025-04-15T08:07:18.1706355Z     }
2025-04-15T08:07:18.1706358Z 
2025-04-15T08:07:18.1706461Z     body.netdata-splash .modal-footer .button {
2025-04-15T08:07:18.1706536Z       height: 32px;
2025-04-15T08:07:18.1706749Z       font-size: 14px;
2025-04-15T08:07:18.1706811Z     }
2025-04-15T08:07:18.1706815Z 
2025-04-15T08:07:18.1706905Z     body.netdata-splash .list-options {
2025-04-15T08:07:18.1706978Z       margin: 0;
2025-04-15T08:07:18.1707042Z       padding: 0;
2025-04-15T08:07:18.1707114Z       list-style: none;
2025-04-15T08:07:18.1707189Z       height: 300px;
2025-04-15T08:07:18.1707257Z       overflow: auto;
2025-04-15T08:07:18.1707375Z       scrollbar-color: var(--scrollbar-thumb) #293030;
2025-04-15T08:07:18.1707452Z       scrollbar-width: thin;
2025-04-15T08:07:18.1707513Z     }
2025-04-15T08:07:18.1707516Z 
2025-04-15T08:07:18.1707614Z     body.netdata-splash .list-options li {
2025-04-15T08:07:18.1707686Z       padding: 8px 12px;
2025-04-15T08:07:18.1707780Z       background: var(--list-option-bg);
2025-04-15T08:07:18.1707872Z       border: 1px solid var(--border-neutral);
2025-04-15T08:07:18.1707947Z       margin-bottom: 12px;
2025-04-15T08:07:18.1708018Z       cursor: pointer;
2025-04-15T08:07:18.1708081Z     }
2025-04-15T08:07:18.1708085Z 
2025-04-15T08:07:18.1708204Z     body.netdata-splash .list-options li:hover {
2025-04-15T08:07:18.1708304Z       background: var(--list-option-hover-bg);
2025-04-15T08:07:18.1708371Z     }
2025-04-15T08:07:18.1708374Z 
2025-04-15T08:07:18.1708485Z     body.netdata-splash .list-options li.selected {
2025-04-15T08:07:18.1708590Z       background: var(--list-option-selected-bg);
2025-04-15T08:07:18.1708672Z       color: var(--highlight);
2025-04-15T08:07:18.1708740Z       display: flex;
2025-04-15T08:07:18.1708830Z       justify-content: space-between;
2025-04-15T08:07:18.1708890Z     }
2025-04-15T08:07:18.1708894Z 
2025-04-15T08:07:18.1709028Z     body.netdata-splash .list-options li.selected:after {
2025-04-15T08:07:18.1709097Z       content: "\2713";
2025-04-15T08:07:18.1709169Z       margin-left: 2px;
2025-04-15T08:07:18.1709234Z     }
2025-04-15T08:07:18.1709237Z 
2025-04-15T08:07:18.1709332Z     body.netdata-splash input[type="text"] {
2025-04-15T08:07:18.1709418Z       background: #2d3535;
2025-04-15T08:07:18.1709490Z       padding: 4px 8px;
2025-04-15T08:07:18.1709557Z       border: 0;
2025-04-15T08:07:18.1709749Z       font-size: 14px;
2025-04-15T08:07:18.1709825Z       min-height: 28px;
2025-04-15T08:07:18.1709901Z       color: var(--text);
2025-04-15T08:07:18.1709979Z       border-radius: 2px;
2025-04-15T08:07:18.1710045Z     }
2025-04-15T08:07:18.1710048Z 
2025-04-15T08:07:18.1710160Z     body.netdata-splash input[type="text"]:focus {
2025-04-15T08:07:18.1710245Z       outline: 1px solid var(--border);
2025-04-15T08:07:18.1710312Z     }
2025-04-15T08:07:18.1710315Z 
2025-04-15T08:07:18.1710402Z     body.netdata-splash .dropdown {
2025-04-15T08:07:18.1710482Z       position: relative;
2025-04-15T08:07:18.1710549Z       width: auto;
2025-04-15T08:07:18.1710633Z       border: 1px solid var(--border);
2025-04-15T08:07:18.1710713Z       border-radius: 4px;
2025-04-15T08:07:18.1710782Z       padding: 8px;
2025-04-15T08:07:18.1710856Z       cursor: pointer;
2025-04-15T08:07:18.1710921Z     }
2025-04-15T08:07:18.1710925Z 
2025-04-15T08:07:18.1711023Z     body.netdata-splash .dropdown-toggle {
2025-04-15T08:07:18.1711093Z       display: flex;
2025-04-15T08:07:18.1711185Z       justify-content: space-between;
2025-04-15T08:07:18.1711264Z       align-items: center;
2025-04-15T08:07:18.1711326Z     }
2025-04-15T08:07:18.1711329Z 
2025-04-15T08:07:18.1711437Z     body.netdata-splash .checkbox-container {
2025-04-15T08:07:18.1711506Z       display: none;
2025-04-15T08:07:18.1711579Z       position: absolute;
2025-04-15T08:07:18.1711650Z       top: 100%;
2025-04-15T08:07:18.1711713Z       left: 0;
2025-04-15T08:07:18.1711785Z       width: 100%;
2025-04-15T08:07:18.1711866Z       border: 1px solid var(--border);
2025-04-15T08:07:18.1711956Z       background-color: var(--main-bg);
2025-04-15T08:07:18.1712022Z       z-index: 1;
2025-04-15T08:07:18.1712096Z       max-height: 150px;
2025-04-15T08:07:18.1712172Z       overflow-y: auto;
2025-04-15T08:07:18.1712240Z       padding: 8px;
2025-04-15T08:07:18.1712393Z     }
2025-04-15T08:07:18.1712396Z 
2025-04-15T08:07:18.1712512Z     body.netdata-splash .checkbox-container label {
2025-04-15T08:07:18.1712587Z       display: block;
2025-04-15T08:07:18.1712666Z       margin-bottom: 8px;
2025-04-15T08:07:18.1712728Z     }
2025-04-15T08:07:18.1712731Z 
2025-04-15T08:07:18.1712843Z     body.netdata-splash .checkbox-container input {
2025-04-15T08:07:18.1712916Z       margin-right: 5px;
2025-04-15T08:07:18.1712976Z     }
2025-04-15T08:07:18.1712985Z 
2025-04-15T08:07:18.1713079Z     body.netdata-splash .selected-rooms {
2025-04-15T08:07:18.1713152Z       font-size: 14px;
2025-04-15T08:07:18.1713222Z       color: #333;
2025-04-15T08:07:18.1713282Z     }
2025-04-15T08:07:18.1713285Z 
2025-04-15T08:07:18.1713378Z     body.netdata-splash .text-padding {
2025-04-15T08:07:18.1713458Z       padding: 8px 8px 16px;
2025-04-15T08:07:18.1713523Z     }
2025-04-15T08:07:18.1713527Z 
2025-04-15T08:07:18.1713620Z     body.netdata-splash .nd-radio,
2025-04-15T08:07:18.1713711Z     body.netdata-splash .nd-checkbox {
2025-04-15T08:07:18.1713784Z       display: block;
2025-04-15T08:07:18.1713856Z       position: relative;
2025-04-15T08:07:18.1713939Z       padding-left: 32px;
2025-04-15T08:07:18.1714010Z       cursor: pointer;
2025-04-15T08:07:18.1714078Z       font-size: 16px;
2025-04-15T08:07:18.1714171Z       -webkit-user-select: none;
2025-04-15T08:07:18.1714252Z       -moz-user-select: none;
2025-04-15T08:07:18.1714328Z       user-select: none;
2025-04-15T08:07:18.1714401Z       line-height: 20px;
2025-04-15T08:07:18.1714464Z     }
2025-04-15T08:07:18.1714467Z 
2025-04-15T08:07:18.1714571Z     body.netdata-splash .nd-checkbox input {
2025-04-15T08:07:18.1714646Z       position: absolute;
2025-04-15T08:07:18.1714718Z       opacity: 0;
2025-04-15T08:07:18.1714789Z       cursor: pointer;
2025-04-15T08:07:18.1714855Z       height: 0;
2025-04-15T08:07:18.1714926Z       width: 0;
2025-04-15T08:07:18.1714989Z     }
2025-04-15T08:07:18.1714992Z 
2025-04-15T08:07:18.1715109Z     body.netdata-splash .nd-checkbox .checkmark {
2025-04-15T08:07:18.1715184Z       position: absolute;
2025-04-15T08:07:18.1715252Z       top: 0;
2025-04-15T08:07:18.1715405Z       left: 0;
2025-04-15T08:07:18.1715478Z       height: 16px;
2025-04-15T08:07:18.1715554Z       width: 16px;
2025-04-15T08:07:18.1715641Z       background-color: var(--main-bg);
2025-04-15T08:07:18.1715731Z       border: 1px solid var(--primary);
2025-04-15T08:07:18.1715805Z       border-radius: 2px;
2025-04-15T08:07:18.1715868Z     }
2025-04-15T08:07:18.1715871Z 
2025-04-15T08:07:18.1716019Z     body.netdata-splash .nd-checkbox:hover input~.checkmark {
2025-04-15T08:07:18.1716325Z       background-color: var(--border);
2025-04-15T08:07:18.1716415Z     }
2025-04-15T08:07:18.1716420Z 
2025-04-15T08:07:18.1716565Z     body.netdata-splash .nd-checkbox :hover input~.checkmark {
2025-04-15T08:07:18.1716650Z       background-color: #ccc;
2025-04-15T08:07:18.1716711Z     }
2025-04-15T08:07:18.1716714Z 
2025-04-15T08:07:18.1716861Z     body.netdata-splash .nd-checkbox input:checked~.checkmark {
2025-04-15T08:07:18.1716950Z       background-color: var(--boder);
2025-04-15T08:07:18.1717010Z     }
2025-04-15T08:07:18.1717018Z 
2025-04-15T08:07:18.1717141Z     body.netdata-splash .nd-checkbox .checkmark:after {
2025-04-15T08:07:18.1717207Z       content: "";
2025-04-15T08:07:18.1717283Z       position: absolute;
2025-04-15T08:07:18.1717352Z       display: none;
2025-04-15T08:07:18.1717413Z     }
2025-04-15T08:07:18.1717416Z 
2025-04-15T08:07:18.1717581Z     body.netdata-splash .nd-checkbox input:checked~.checkmark:after {
2025-04-15T08:07:18.1717651Z       display: block;
2025-04-15T08:07:18.1717717Z     }
2025-04-15T08:07:18.1717722Z 
2025-04-15T08:07:18.1717838Z     body.netdata-splash .nd-checkbox .checkmark:after {
2025-04-15T08:07:18.1717909Z       inset: 0 0 2px 0;
2025-04-15T08:07:18.1717982Z       margin: auto;
2025-04-15T08:07:18.1718050Z       width: 2px;
2025-04-15T08:07:18.1718122Z       height: 8px;
2025-04-15T08:07:18.1718335Z       border: solid var(--highlight);
2025-04-15T08:07:18.1718423Z       border-width: 0 2px 2px 0;
2025-04-15T08:07:18.1718502Z       transform: rotate(45deg);
2025-04-15T08:07:18.1718569Z     }
2025-04-15T08:07:18.1718573Z 
2025-04-15T08:07:18.1718650Z     /* Retention table */
2025-04-15T08:07:18.1718723Z     #tiers-container {
2025-04-15T08:07:18.1718794Z       height: auto;
2025-04-15T08:07:18.1718855Z     }
2025-04-15T08:07:18.1718859Z 
2025-04-15T08:07:18.1718925Z     #tiers-table {
2025-04-15T08:07:18.1718995Z       width: 100%;
2025-04-15T08:07:18.1719074Z       border-collapse: collapse;
2025-04-15T08:07:18.1719139Z     }
2025-04-15T08:07:18.1719143Z 
2025-04-15T08:07:18.1719240Z     #tiers-table thead tr:nth-of-type(1) th {
2025-04-15T08:07:18.1719321Z       padding-top: 16px;
2025-04-15T08:07:18.1719382Z     }
2025-04-15T08:07:18.1719385Z 
2025-04-15T08:07:18.1719479Z     #tiers-table thead tr:nth-of-type(2) th {
2025-04-15T08:07:18.1719563Z       padding-bottom: 16px;
2025-04-15T08:07:18.1719629Z     }
2025-04-15T08:07:18.1719632Z 
2025-04-15T08:07:18.1719725Z     #tiers-table tbody tr:nth-of-type(1) td {
2025-04-15T08:07:18.1719814Z       border-top: 1px solid var(--border);
2025-04-15T08:07:18.1719899Z       padding-top: 16px;
2025-04-15T08:07:18.1719960Z     }
2025-04-15T08:07:18.1719964Z 
2025-04-15T08:07:18.1720055Z     #tiers-table tbody tr:last-of-type td {
2025-04-15T08:07:18.1720136Z       padding-bottom: 24px;
2025-04-15T08:07:18.1720196Z     }
2025-04-15T08:07:18.1720199Z 
2025-04-15T08:07:18.1720273Z     #tiers-table th {
2025-04-15T08:07:18.1720355Z       font-size: var(--font-small);
2025-04-15T08:07:18.1720429Z       padding: 8px 4px;
2025-04-15T08:07:18.1720495Z     }
2025-04-15T08:07:18.1720499Z 
2025-04-15T08:07:18.1720566Z     #tiers-table td {
2025-04-15T08:07:18.1720652Z       font-size: var(--font-medium);
2025-04-15T08:07:18.1720722Z       text-align: center;
2025-04-15T08:07:18.1720797Z       padding: 12px 4px;
2025-04-15T08:07:18.1720856Z     }
2025-04-15T08:07:18.1720864Z 
2025-04-15T08:07:18.1720950Z     #tiers-table th:first-of-type,
2025-04-15T08:07:18.1721035Z     #tiers-table td:first-of-type {
2025-04-15T08:07:18.1721105Z       padding-left: 12px;
2025-04-15T08:07:18.1721292Z     }
2025-04-15T08:07:18.1721363Z   
2025-04-15T08:07:18.1721443Z     #tiers-table th:last-of-type,  
2025-04-15T08:07:18.1721527Z     #tiers-table td:last-of-type {
2025-04-15T08:07:18.1721603Z       padding-right: 12px;
2025-04-15T08:07:18.1721665Z     }
2025-04-15T08:07:18.1721669Z 
2025-04-15T08:07:18.1721746Z     #tiers-table .section-start {
2025-04-15T08:07:18.1721836Z       border-left: 1px solid var(--border);
2025-04-15T08:07:18.1721895Z     }
2025-04-15T08:07:18.1721898Z 
2025-04-15T08:07:18.1721979Z     .progress-indicator {
2025-04-15T08:07:18.1722046Z       gap: 8px;
2025-04-15T08:07:18.1722116Z       padding: 0 8px;
2025-04-15T08:07:18.1722185Z     }
2025-04-15T08:07:18.1722189Z 
2025-04-15T08:07:18.1722272Z     .progress-bar-container {
2025-04-15T08:07:18.1722346Z       position: relative;
2025-04-15T08:07:18.1722423Z       width: 100%;
2025-04-15T08:07:18.1722517Z       height: var(--progress-bar-height);
2025-04-15T08:07:18.1722621Z       background-color: var(--border-neutral);
2025-04-15T08:07:18.1722693Z       overflow: hidden;
2025-04-15T08:07:18.1722770Z       border-radius: 2px;
2025-04-15T08:07:18.1722831Z     }
2025-04-15T08:07:18.1722834Z 
2025-04-15T08:07:18.1722903Z     .progress-bar {
2025-04-15T08:07:18.1722980Z       position: absolute;
2025-04-15T08:07:18.1723044Z       top: 0;
2025-04-15T08:07:18.1723113Z       left: 0;
2025-04-15T08:07:18.1723203Z       height: var(--progress-bar-height);
2025-04-15T08:07:18.1723288Z       background-color: var(--primary);
2025-04-15T08:07:18.1723352Z     }
2025-04-15T08:07:18.1723355Z 
2025-04-15T08:07:18.1723419Z     #tooltip {
2025-04-15T08:07:18.1723493Z       max-width: 300px;
2025-04-15T08:07:18.1723577Z       background-color: var(--accent);
2025-04-15T08:07:18.1723654Z       color: var(--text-dark);
2025-04-15T08:07:18.1723818Z       border-radius: 4px;
2025-04-15T08:07:18.1723889Z       padding: 8px 16px;
2025-04-15T08:07:18.1723961Z       position: fixed;
2025-04-15T08:07:18.1724041Z       font-size: var(--font-small);
2025-04-15T08:07:18.1724115Z       line-height: 1.5;
2025-04-15T08:07:18.1724184Z       z-index: 9999;
2025-04-15T08:07:18.1724251Z       display: none;
2025-04-15T08:07:18.1724352Z     }</style><script>const toggleTab = tab => {
2025-04-15T08:07:18.1724489Z       const factors = document.querySelectorAll(".data-tab");
2025-04-15T08:07:18.1724615Z       const tabs = document.querySelectorAll(".btn-tab");
2025-04-15T08:07:18.1724619Z 
2025-04-15T08:07:18.1724705Z       factors.forEach(function (factor) {
2025-04-15T08:07:18.1724840Z         let dataTab = parseInt(factor.getAttribute("data-tab"));
2025-04-15T08:07:18.1724935Z         if (dataTab == tab || dataTab === 0) {
2025-04-15T08:07:18.1725019Z           factor.classList.add("active");
2025-04-15T08:07:18.1725085Z         } else {
2025-04-15T08:07:18.1725183Z           factor.classList.remove("active");
2025-04-15T08:07:18.1725250Z         }
2025-04-15T08:07:18.1725311Z       });
2025-04-15T08:07:18.1725314Z 
2025-04-15T08:07:18.1725403Z       // Toggle active class on tab buttons
2025-04-15T08:07:18.1725490Z       tabs.forEach(tabButton => {
2025-04-15T08:07:18.1725577Z         if (tabButton.dataset?.tab == tab) {
2025-04-15T08:07:18.1725672Z           tabButton.classList.add("active");
2025-04-15T08:07:18.1725739Z         } else {
2025-04-15T08:07:18.1725840Z           tabButton.classList.remove("active");
2025-04-15T08:07:18.1725908Z         }
2025-04-15T08:07:18.1725969Z       });
2025-04-15T08:07:18.1726035Z     }
2025-04-15T08:07:18.1726039Z 
2025-04-15T08:07:18.1726303Z     const initGrid = () => {
2025-04-15T08:07:18.1726448Z       const canvas1 = document.getElementById("monitorGrid");
2025-04-15T08:07:18.1726550Z       const context1 = canvas1.getContext("2d");
2025-04-15T08:07:18.1726663Z       const frame = document.querySelector(".frame");
2025-04-15T08:07:18.1726749Z       const cellSize = 4;
2025-04-15T08:07:18.1726823Z       const gapSize = 2;
2025-04-15T08:07:18.1727082Z       const colors = ["#001107", "#003114", "#014420", "#047031", "#049846"];
2025-04-15T08:07:18.1727088Z 
2025-04-15T08:07:18.1727159Z       let grid = [];
2025-04-15T08:07:18.1727163Z 
2025-04-15T08:07:18.1727252Z       const getRandomColor = () => {
2025-04-15T08:07:18.1727390Z         return colors[Math.floor(Math.random() * colors.length)];
2025-04-15T08:07:18.1727454Z       }
2025-04-15T08:07:18.1727458Z 
2025-04-15T08:07:18.1727560Z       const resizeCanvas = (canvas, context) => {
2025-04-15T08:07:18.1727649Z         canvas.width = frame.clientWidth;
2025-04-15T08:07:18.1727745Z         canvas.height = frame.clientHeight;
2025-04-15T08:07:18.1727749Z 
2025-04-15T08:07:18.1727888Z         const cols = Math.floor(canvas.width / (cellSize + gapSize));
2025-04-15T08:07:18.1728035Z         const rows = Math.floor(canvas.height / (cellSize + gapSize));
2025-04-15T08:07:18.1728044Z 
2025-04-15T08:07:18.1728137Z         grid = Array.from({ length: rows }, () =>
2025-04-15T08:07:18.1728242Z           Array.from({ length: cols }, getRandomColor)
2025-04-15T08:07:18.1728317Z         );
2025-04-15T08:07:18.1728320Z 
2025-04-15T08:07:18.1728402Z         drawGrid(context, canvas);
2025-04-15T08:07:18.1728469Z       }
2025-04-15T08:07:18.1728473Z 
2025-04-15T08:07:18.1728562Z       const drawGrid = (context, canvas) => {
2025-04-15T08:07:18.1728696Z         context.clearRect(0, 0, canvas.width, canvas.height);
2025-04-15T08:07:18.1728832Z         const cols = Math.floor(canvas.width / (cellSize + gapSize));
2025-04-15T08:07:18.1728969Z         const rows = Math.floor(canvas.height / (cellSize + gapSize));
2025-04-15T08:07:18.1728977Z 
2025-04-15T08:07:18.1729064Z         for (let row = 0; row < rows; row++) {
2025-04-15T08:07:18.1729154Z           for (let col = 0; col < cols; col++) {
2025-04-15T08:07:18.1729242Z             if (grid[row] && grid[row][col]) {
2025-04-15T08:07:18.1729472Z               context.fillStyle = grid[row][col];
2025-04-15T08:07:18.1729558Z               context.fillRect(
2025-04-15T08:07:18.1729642Z                 col * (cellSize + gapSize),
2025-04-15T08:07:18.1729727Z                 row * (cellSize + gapSize),
2025-04-15T08:07:18.1729803Z                 cellSize,
2025-04-15T08:07:18.1729869Z                 cellSize
2025-04-15T08:07:18.1729938Z               );
2025-04-15T08:07:18.1730003Z             }
2025-04-15T08:07:18.1730071Z           }
2025-04-15T08:07:18.1730134Z         }
2025-04-15T08:07:18.1730198Z       }
2025-04-15T08:07:18.1730202Z 
2025-04-15T08:07:18.1730296Z       resizeCanvas(canvas1, context1);
2025-04-15T08:07:18.1730301Z 
2025-04-15T08:07:18.1730492Z       window.addEventListener("resize", () => resizeCanvas(canvas1, context1));
2025-04-15T08:07:18.1781360Z     }</script></head><body class="loading netdata-splash"><noscript><iframe src="https://www.googletagmanager.com/ns.html?id=GTM-N6CBMJD" height="0" width="0" style="display:none;visibility:hidden"></iframe></noscript><div id="app" class="container grid"><div class="frame frame-left col-span-7 grid light-beam relative"><div class="head-summary absolute index-10"><div class="server"><div class="no-title" id="server"></div><div class="no-title" id="package"></div></div><div class="availability h-auto module"><div class="title">Cloud status</div><div class="no-key" id="cloud_status"></div></div></div><div class="col-span-12 row-span-11"><div id="sphereContainer"><div id="loadingMessage" class="loading-message">Loading...</div><div class="hide-title absolute-center sphere-stats-container"><div class="metrics-container"><div class="collected-metrics" id="collectedMetrics"></div><div class="node-info-container"><div class="title">NODES</div><div class="node-info" id="nodes_streaming"></div></div></div><div class="system-container data-tab data-tab-container" data-tab="2"><div class="system grid-columns-10 md-grid-columns-12"><div class="flex-col col-span-5 md-col-span-6"><div class="section-title">Kernel</div><div class="grid-columns-10"><div class="h-auto module col-span-5" id="kernel"></div><div class="h-auto module col-span-5" id="kernelVersion"></div></div></div><div class="flex-col col-span-5 md-col-span-6"><div class="section-title">OS</div><div class="grid-columns-10"><div id="os" class="h-auto module col-span-5"></div><div class="h-auto module col-span-5" id="id"></div></div></div><div class="hardware module-section col-span-10 md-col-span-12"><div class="section-title">Hardware</div><div class="grid-columns-10 md-grid-columns-12"><div class="module h-auto col-span-2 md-col-span-4" id="cpuCores"></div><div class="module h-auto col-span-2 md-col-span-4" id="cpuFrequency"></div><div class="module h-auto col-span-2 md-col-span-4" id="ram"></div><div class="module h-auto col-span-2 md-col-span-4" id="disk"></div><div class="module h-auto col-span-2 md-col-span-4" id="cpuArchitecture"></div><div class="module h-auto col-span-2 md-col-span-4" id="virtualization"></div></div></div></div></div><div class="data-tab data-tab-container" data-tab="1"><div class="db-metrics-container"><div id="tiers-container" class="db-metrics-blocks module"><table id="tiers-table"><thead><tr><th rowspan="2"><span data-tooltip="A database layer that stores metrics at a specific resolution.">Tier</span></th><th rowspan="2">Resolution</th><th colspan="2" class="section-start">Stored</th><th colspan="3" class="section-start">Retention</th><th colspan="2" class="section-start">Disk</th></tr><tr><th class="section-start">Metrics</th><th><span data-tooltip="The total number of measurements stored in the database across all metrics. Each sample represents a recorded value for a specific metric at a given time.">Samples</span></th><th class="section-start">Current</th><th><span data-tooltip="The maximum time data can be kept, based on the configured time and disk space limits.">Effective</span></th><th>Configured</th><th class="section-start">Used</th><th>Configured</th></tr></thead><tbody><tr id="tiers-table-data-placeholder"></tr></tbody></table></div></div></div><div class="data-tab data-tab-container" data-tab="3"><div class="modules-container grid"><div class="module col-span-4"><div class="module-header"><div class="section-image"><svg width="18" height="18" viewBox="0 0 18 18" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M16.5299 4.47019C16.2399 4.18019 15.7599 4.18019 15.4699 4.47019L13.5299 6.41019L11.5899 4.47019L13.5299 2.53019C13.8199 2.24019 13.8199 1.76019 13.5299 1.47019C13.2399 1.18019 12.7599 1.18019 12.4699 1.47019L10.5299 3.41019L8.99994 1.88019L5.74994 5.13019C4.93994 5.93019 4.49994 7.01019 4.49994 8.15019V8.38019L3.72994 9.15019C2.53994 10.3302 2.45994 12.2002 3.43994 13.5002L1.96994 14.9702C1.67994 15.2602 1.67994 15.7402 1.96994 16.0302C2.11994 16.1802 2.30994 16.2502 2.49994 16.2502C2.68994 16.2502 2.87994 16.1802 3.02994 16.0302L4.49994 14.5602C5.06994 15.0002 5.76994 15.2402 6.49994 15.2402C7.38994 15.2402 8.21994 14.8902 8.84994 14.2702L9.61994 13.5002H9.84994C10.9899 13.5002 12.0599 13.0602 12.8699 12.2502L16.1199 9.00019L14.5899 7.47019L16.5299 5.53019C16.8199 5.24019 16.8199 4.76019 16.5299 4.47019ZM11.8099 11.1902C11.2899 11.7102 10.5899 12.0002 9.84994 12.0002H8.99994L7.78994 13.2102C7.42994 13.5702 6.96994 13.7402 6.49994 13.7402C6.02994 13.7402 5.56994 13.5602 5.20994 13.2102L4.78994 12.7902C4.07994 12.0802 4.07994 10.9202 4.78994 10.2102L5.46994 9.53019L6.40994 10.4702C6.99994 11.0602 7.94994 11.0602 8.52994 10.4702L6.01994 7.96019C6.06994 7.30019 6.33994 6.67019 6.80994 6.19019L8.99994 4.00019L13.9999 9.00019L11.8099 11.1902Z" fill="var(--text)"/></svg></div><span class="section-title">Plugins</span></div><div class="module-content" id="plugins"></div></div><div class="module col-span-4"><div class="module-header"><div class="section-image"><svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M7 18C7.55 18 8 17.55 8 17C8 16.45 7.55 16 7 16C6.45 16 6 16.45 6 17C6 17.55 6.45 18 7 18ZM14 17.79C14.28 17.51 14.28 17.07 14 16.79C13.72 16.51 13.28 16.51 13 16.79C12.72 17.07 12.72 17.51 13 17.79C13.28 18.07 13.72 18.07 14 17.79ZM17 8V4H12V2H2V22H22V8H17ZM10 20H4V4H10V20ZM15 20H12V6H15V20ZM20 20H17V10H20V20ZM19 17.79C19.28 17.51 19.28 17.07 19 16.79C18.72 16.51 18.28 16.51 18 16.79C17.72 17.07 17.72 17.51 18 17.79C18.28 18.07 18.72 18.07 19 17.79Z" fill="var(--text)"/></svg></div><span class="section-title">Libraries</span></div><div class="module-content" id="libs"></div></div><div class="module col-span-4"><div class="module-header"><div class="section-image"><svg width="18" height="18" viewBox="0 0 18 18" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M4 16.0002H5V14.5002H4V16.0002ZM2 16.0002H3V14.5002H2V16.0002ZM15.28 6.97019L10.25 1.94019L5.22 6.97019C4.927 7.26319 4.927 7.73819 5.22 8.03119C5.513 8.32419 5.988 8.32419 6.281 8.03119L9.5 4.81119V11.8392C9.5 13.3062 8.306 14.5002 6.838 14.5002H6V16.0002H6.838C9.136 16.0002 11 14.1372 11 11.8382V4.81119L14.22 8.03119C14.366 8.17719 14.558 8.25119 14.75 8.25119C14.942 8.25119 15.134 8.17819 15.28 8.03119C15.573 7.73719 15.573 7.26319 15.28 6.97019Z" fill="var(--text)"/></svg></div><span class="section-title">Exporters</span></div><div class="module-content" id="exporters"></div></div></div></div><div class="data-tab data-tab-container" data-tab="4"><div class="module data-tab-table" id="directories"></div></div></div></div></div><div class="relative row-span-1 col-span-12 full-h"><div class="license-link"><a href="https://app.netdata.cloud/LICENSE.txt" target="_blank">Netdata UI License</a></div><div class="tabs full-h"><button type="button" name="button" class="btn-tab tab active" data-tab="1"><div class="tab-icon"><svg width="18" height="18" viewBox="0 0 18 18" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M9 10C14.153 10 16.5 7.927 16.5 6C16.5 4.073 14.153 2 9 2C3.847 2 1.5 4.073 1.5 6C1.5 7.927 3.847 10 9 10ZM9 3.5C12.313 3.5 15 4.619 15 6C15 7.381 12.313 8.5 9 8.5C5.687 8.5 3 7.381 3 6C3 4.619 5.687 3.5 9 3.5ZM14.566 12.931C13.68 13.85 11.523 14.5 9 14.5C6.477 14.5 4.32 13.85 3.434 12.931C2.639 12.547 2.01 12.081 1.545 11.563C1.518 11.708 1.5 11.854 1.5 12C1.5 13.927 3.847 16 9 16C14.153 16 16.5 13.927 16.5 12C16.5 11.854 16.482 11.708 16.455 11.562C15.99 12.081 15.361 12.546 14.566 12.931ZM14.566 9.931C13.68 10.85 11.523 11.5 9 11.5C6.477 11.5 4.32 10.85 3.434 9.931C2.639 9.547 2.01 9.081 1.545 8.563C1.518 8.708 1.5 8.854 1.5 9C1.5 10.927 3.847 13 9 13C14.153 13 16.5 10.927 16.5 9C16.5 8.854 16.482 8.708 16.455 8.562C15.99 9.081 15.361 9.546 14.566 9.931Z"/></svg></div>Database</button> <button type="button" name="button" class="btn-tab tab" data-tab="2"><div class="tab-icon"><svg width="60" height="60" viewBox="0 0 60 60" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M40.3125 18.75H19.6875C19.1697 18.75 18.75 19.1697 18.75 19.6875V40.3125C18.75 40.8303 19.1697 41.25 19.6875 41.25H40.3125C40.8303 41.25 41.25 40.8303 41.25 40.3125V19.6875C41.25 19.1697 40.8303 18.75 40.3125 18.75Z"/><path d="M54.375 22.5C54.8723 22.5 55.3492 22.3025 55.7008 21.9508C56.0525 21.5992 56.25 21.1223 56.25 20.625C56.25 20.1277 56.0525 19.6508 55.7008 19.2992C55.3492 18.9475 54.8723 18.75 54.375 18.75H52.5V15C52.4978 13.0115 51.707 11.1051 50.3009 9.6991C48.8949 8.29305 46.9885 7.50217 45 7.5H41.25V5.625C41.25 5.12772 41.0525 4.65081 40.7008 4.29917C40.3492 3.94754 39.8723 3.75 39.375 3.75C38.8777 3.75 38.4008 3.94754 38.0492 4.29917C37.6975 4.65081 37.5 5.12772 37.5 5.625V7.5H31.875V5.625C31.875 5.12772 31.6775 4.65081 31.3258 4.29917C30.9742 3.94754 30.4973 3.75 30 3.75C29.5027 3.75 29.0258 3.94754 28.6742 4.29917C28.3225 4.65081 28.125 5.12772 28.125 5.625V7.5H22.5V5.625C22.5 5.12772 22.3025 4.65081 21.9508 4.29917C21.5992 3.94754 21.1223 3.75 20.625 3.75C20.1277 3.75 19.6508 3.94754 19.2992 4.29917C18.9475 4.65081 18.75 5.12772 18.75 5.625V7.5H15C13.0115 7.50217 11.1051 8.29305 9.6991 9.6991C8.29305 11.1051 7.50217 13.0115 7.5 15V18.75H5.625C5.12772 18.75 4.65081 18.9475 4.29917 19.2992C3.94754 19.6508 3.75 20.1277 3.75 20.625C3.75 21.1223 3.94754 21.5992 4.29917 21.9508C4.65081 22.3025 5.12772 22.5 5.625 22.5H7.5V28.125H5.625C5.12772 28.125 4.65081 28.3225 4.29917 28.6742C3.94754 29.0258 3.75 29.5027 3.75 30C3.75 30.4973 3.94754 30.9742 4.29917 31.3258C4.65081 31.6775 5.12772 31.875 5.625 31.875H7.5V37.5H5.625C5.12772 37.5 4.65081 37.6975 4.29917 38.0492C3.94754 38.4008 3.75 38.8777 3.75 39.375C3.75 39.8723 3.94754 40.3492 4.29917 40.7008C4.65081 41.0525 5.12772 41.25 5.625 41.25H7.5V45C7.50217 46.9885 8.29305 48.8949 9.6991 50.3009C11.1051 51.707 13.0115 52.4978 15 52.5H18.75V54.375C18.75 54.8723 18.9475 55.3492 19.2992 55.7008C19.6508 56.0525 20.1277 56.25 20.625 56.25C21.1223 56.25 21.5992 56.0525 21.9508 55.7008C22.3025 55.3492 22.5 54.8723 22.5 54.375V52.5H28.125V54.375C28.125 54.8723 28.3225 55.3492 28.6742 55.7008C29.0258 56.0525 29.5027 56.25 30 56.25C30.4973 56.25 30.9742 56.0525 31.3258 55.7008C31.6775 55.3492 31.875 54.8723 31.875 54.375V52.5H37.5V54.375C37.5 54.8723 37.6975 55.3492 38.0492 55.7008C38.4008 56.0525 38.8777 56.25 39.375 56.25C39.8723 56.25 40.3492 56.0525 40.7008 55.7008C41.0525 55.3492 41.25 54.8723 41.25 54.375V52.5H45C46.9885 52.4978 48.8949 51.707 50.3009 50.3009C51.707 48.8949 52.4978 46.9885 52.5 45V41.25H54.375C54.8723 41.25 55.3492 41.0525 55.7008 40.7008C56.0525 40.3492 56.25 39.8723 56.25 39.375C56.25 38.8777 56.0525 38.4008 55.7008 38.0492C55.3492 37.6975 54.8723 37.5 54.375 37.5H52.5V31.875H54.375C54.8723 31.875 55.3492 31.6775 55.7008 31.3258C56.0525 30.9742 56.25 30.4973 56.25 30C56.25 29.5027 56.0525 29.0258 55.7008 28.6742C55.3492 28.3225 54.8723 28.125 54.375 28.125H52.5V22.5H54.375ZM45 41.25C45 42.2446 44.6049 43.1984 43.9016 43.9016C43.1984 44.6049 42.2446 45 41.25 45H18.75C17.7554 45 16.8016 44.6049 16.0984 43.9016C15.3951 43.1984 15 42.2446 15 41.25V18.75C15 17.7554 15.3951 16.8016 16.0984 16.0984C16.8016 15.3951 17.7554 15 18.75 15H41.25C42.2446 15 43.1984 15.3951 43.9016 16.0984C44.6049 16.8016 45 17.7554 45 18.75V41.25Z"/></svg></div>System</button> <button type="button" name="button" class="btn-tab tab" data-tab="3"><div class="tab-icon"><svg width="60" height="60" viewBox="0 0 60 60" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M59.7937 16.4062C59.7164 16.2322 59.6084 16.0734 59.475 15.9375C59.3495 15.8165 59.2112 15.7097 59.0625 15.6187L30.9 0.224957C30.615 0.0603916 30.2916 -0.0262451 29.9625 -0.0262451C29.6334 -0.0262451 29.31 0.0603916 29.025 0.224957L1.06875 15.525C1.06875 15.525 1.06875 15.6187 0.91875 15.6375C0.762779 15.7334 0.618116 15.8466 0.4875 15.975C0.433211 16.047 0.383128 16.1221 0.3375 16.2C0.244093 16.3333 0.168457 16.4783 0.1125 16.6312C0.1125 16.6312 0.1125 16.6312 0.1125 16.7437C0.103788 16.8435 0.103788 16.9439 0.1125 17.0437C0.1125 17.0437 0.1125 17.1562 0.1125 17.2125V42.7687C0.0613239 42.8827 0.0235706 43.0023 0 43.125L0 43.3875C0.142582 43.8604 0.466002 44.2579 0.9 44.4937L29.025 59.8312H29.1375H29.2875C29.5116 59.9337 29.7537 59.9911 30 60C30.2245 59.9926 30.4462 59.9482 30.6563 59.8687H30.7875H30.9L59.025 44.5312C59.3209 44.3693 59.5676 44.1306 59.7392 43.8402C59.9108 43.5498 60.0009 43.2185 60 42.8812V17.2125C59.9937 16.9939 59.9493 16.7782 59.8688 16.575C59.8516 16.5155 59.8264 16.4588 59.7937 16.4062ZM28.125 54.975L3.75 41.6625V20.3812L28.125 33.75V54.975ZM30 30.4125L5.79375 17.2875L30 4.01246L54.2062 17.1375L30 30.4125ZM56.25 41.6625L31.875 54.975V33.75L56.25 20.4562V41.6625Z"/></svg></div>Modules</button> <button type="button" name="button" class="btn-tab tab" data-tab="4"><div class="tab-icon"><svg width="18" height="18" viewBox="0 0 18 18" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M16 10.5V5.5H10V7.25H5.75V6.5H8V1.5H2V6.5H4.25V14.75H10V16.5H16V11.5H10V13.25H5.75V8.75H10V10.5H16ZM11.5 7H14.5V9H11.5V7ZM11.5 13H14.5V15H11.5V13ZM3.5 5V3H6.5V5H3.5Z"/></svg></div>Directories</button></div></div></div><div class="frame relative col-span-5 frame-right"><canvas id="monitorGrid"></canvas><div id="splashMessageContainer" class="splash-message"><svg width="133" height="105" viewBox="0 0 133 105" fill="none" xmlns="http://www.w3.org/2000/svg" class="logo"><path fill-rule="evenodd" clip-rule="evenodd" d="M81.697 105H55.0693L0.5 0.5H77.9598C108.079 0.554913 132.484 24.7711 132.5 54.6451C132.452 82.485 109.73 105 81.697 105Z" fill="#FCFFFD"/></svg><h1 class="text-center">Welcome to Netdata</h1><p id="msgSignIn">Please sign-in to continue</p><a id="btnSignIn" href="javascript:loadDashboard(true);" class="button button-primary">Sign-in</a><div class="tagline skip-link"><a class="opt-out-link" href="javascript:loadDashboard();">Skip and use the dashboard anonymously.</a> <span class="no-anonymous-access"></span></div></div><div id="claimingContentsContainer" class="claim-message" style="display:none;"><div class="welcome"><svg width="133" height="105" viewBox="0 0 133 105" fill="none" xmlns="http://www.w3.org/2000/svg" class="logo"><path fill-rule="evenodd" clip-rule="evenodd" d="M81.697 105H55.0693L0.5 0.5H77.9598C108.079 0.554913 132.484 24.7711 132.5 54.6451C132.452 82.485 109.73 105 81.697 105Z" fill="#FCFFFD"/></svg><h1 class="text-center">Welcome to Netdata</h1><span>Please connect your agent to continue.</span></div><div class="connection-modal"><div id="connectionStep-1"><div class="connection-step"><span class="text-small">Please select the space you want this agent to join:</span> <span class="loader">Loading spaces...</span><ul id="spacesList" class="list-options"></ul></div></div><div id="connectionStep-2" style="display:none;"><div class="connection-step"><div class="dropdown-custom" data-target="claimMessage"><div class="dropdown-custom-input flex space-between align-center"><span class="text-small">Select room(s)</span><button class="text-small button button-ghost clear-button">Clear</button></div><div id="roomsSelector" class="dropdown"><div class="dropdown-toggle"><span id="selectedItems" class="selected-items">Select room</span> <span>▼</span></div><div id="roomsSelectorOptionsContainer" class="checkbox-container"></div></div></div><div id="claimMessage" class="selected-message"></div><div class="">Please run the command below in your terminal:</div><code id="claimCommand"></code><div class="">and paste the generated private key in the field below:</div><input id="claimingPrivateKey" name="claimingPrivateKey" value="" placeholder="Private Key"/></div><div id="claimTip" class="text-padding text-small">Tip: If the command doesn’t work out-of-the-box, locate the {keyFilename} file, open it in your favourite text editor, and copy it to your clipboard.</div><div id="claimErrorMessage" class="text-padding error" style="display:none;"></div></div><div class="modal-footer flex-col"><div class="flex space-between"><button id="btnConnectionStepPrev" class="button button-ghost">&#8592; Back</button> <button id="btnConnectionStepNext" class="button button-primary">Next</button> <button id="btnClaim" class="button button-primary">Claim</button></div><div class="skip-link"><a class="signout-link" href="javascript:signout()">Sign out to switch user</a></div></div></div></div></div><div id="tooltip"></div></div></body><script>const initPrimaryButtonHover = () => {
2025-04-15T08:07:18.1781917Z     const button = document.getElementById("btnSignIn");
2025-04-15T08:07:18.1782063Z     const canvas = document.getElementById("monitorGrid");
2025-04-15T08:07:18.1782072Z 
2025-04-15T08:07:18.1782146Z     if (button) {
2025-04-15T08:07:18.1782263Z       button.addEventListener("mouseover", () => {
2025-04-15T08:07:18.1782361Z         canvas.classList.add("hovered");
2025-04-15T08:07:18.1782424Z       });
2025-04-15T08:07:18.1782491Z     }
2025-04-15T08:07:18.1782495Z 
2025-04-15T08:07:18.1782560Z     if (canvas) {
2025-04-15T08:07:18.1782665Z       button.addEventListener("mouseout", () => {
2025-04-15T08:07:18.1782764Z         canvas.classList.remove("hovered");
2025-04-15T08:07:18.1782827Z       });
2025-04-15T08:07:18.1782894Z     }
2025-04-15T08:07:18.1782955Z   }
2025-04-15T08:07:18.1782959Z 
2025-04-15T08:07:18.1783035Z   const initTabs = () => {
2025-04-15T08:07:18.1783178Z     const btnTabs = document.querySelectorAll(".btn-tab");
2025-04-15T08:07:18.1783259Z     btnTabs.forEach(btn => {
2025-04-15T08:07:18.1783355Z       btn.addEventListener("click", e => {
2025-04-15T08:07:18.1783456Z         const tab = e.currentTarget?.dataset?.tab;
2025-04-15T08:07:18.1783524Z         if (tab) {
2025-04-15T08:07:18.1783699Z           toggleTab(tab);
2025-04-15T08:07:18.1783765Z         }
2025-04-15T08:07:18.1783830Z       })
2025-04-15T08:07:18.1783890Z     })
2025-04-15T08:07:18.1783955Z   }
2025-04-15T08:07:18.1783959Z 
2025-04-15T08:07:18.1784044Z   // =============================================== //
2025-04-15T08:07:18.1784049Z 
2025-04-15T08:07:18.1784118Z   const status = {
2025-04-15T08:07:18.1784196Z     TIMEOUT: 'timeout',
2025-04-15T08:07:18.1784266Z     SUCCESS: 'success',
2025-04-15T08:07:18.1784343Z     SKIPPED: 'skipped'
2025-04-15T08:07:18.1784403Z   };
2025-04-15T08:07:18.1784406Z 
2025-04-15T08:07:18.1784490Z   const getSessionId = () => {
2025-04-15T08:07:18.1784577Z     const key = "telemetrySessionId"
2025-04-15T08:07:18.1784669Z     if (!sessionStorage.getItem(key)) {
2025-04-15T08:07:18.1785008Z       sessionStorage.setItem(key, self.crypto && self.crypto.randomUUID ? self.crypto.randomUUID() : new Date().getTime());
2025-04-15T08:07:18.1785073Z     }
2025-04-15T08:07:18.1785184Z     return sessionStorage.getItem(key) || "";
2025-04-15T08:07:18.1785247Z   }
2025-04-15T08:07:18.1785250Z 
2025-04-15T08:07:18.1785376Z   const defaultErrorMessage = "Something went wrong."
2025-04-15T08:07:18.1785631Z   const agentUri = window.location.origin + window.location.pathname.replace(pathsRegex, "");
2025-04-15T08:07:18.1785730Z   const telemetrySessionId = getSessionId();
2025-04-15T08:07:18.1785903Z   const ensureOneSlash = urlStr => urlStr.replace(/([^:]\/)\/+/g, "$1");
2025-04-15T08:07:18.1785907Z 
2025-04-15T08:07:18.1786018Z   // Utils =============================================================================== //
2025-04-15T08:07:18.1786022Z 
2025-04-15T08:07:18.1786222Z   const createElem = (tag, attrs) => {
2025-04-15T08:07:18.1786296Z     if (!tag) return null
2025-04-15T08:07:18.1786399Z     const elem = document.createElement(tag);
2025-04-15T08:07:18.1786607Z     if (Object.keys(attrs || {}).length) {
2025-04-15T08:07:18.1786706Z       Object.entries(attrs).forEach(([k, v]) => {
2025-04-15T08:07:18.1786783Z         elem[k] = v;
2025-04-15T08:07:18.1786846Z       })
2025-04-15T08:07:18.1786910Z     }
2025-04-15T08:07:18.1786976Z     return elem
2025-04-15T08:07:18.1787037Z   }
2025-04-15T08:07:18.1787042Z 
2025-04-15T08:07:18.1787185Z   const getDOM = ({ tag = "div", children = [], ...rest } = {}) => {
2025-04-15T08:07:18.1787290Z     const element = document.createElement(tag);
2025-04-15T08:07:18.1787294Z 
2025-04-15T08:07:18.1787405Z     Object.entries(rest || {}).forEach(([k, v]) => {
2025-04-15T08:07:18.1787489Z       if (element[k] !== undefined) {
2025-04-15T08:07:18.1787606Z         if (k == "dataset" && Object.keys(v).length == 1) {
2025-04-15T08:07:18.1787707Z           const dataPair = Object.entries(v)[0]
2025-04-15T08:07:18.1787795Z           element[k][dataPair[0]] = dataPair[1]
2025-04-15T08:07:18.1787867Z         } else {
2025-04-15T08:07:18.1787946Z           element[k] = v;
2025-04-15T08:07:18.1788015Z         }
2025-04-15T08:07:18.1788077Z       }
2025-04-15T08:07:18.1788142Z     })
2025-04-15T08:07:18.1788151Z 
2025-04-15T08:07:18.1788229Z     if (!!children?.length) {
2025-04-15T08:07:18.1788435Z       children.filter(({ condition = true }) => !!condition).forEach(childStructure => {
2025-04-15T08:07:18.1788557Z         element.appendChild(getDOM(childStructure));
2025-04-15T08:07:18.1788620Z       });
2025-04-15T08:07:18.1788686Z     }
2025-04-15T08:07:18.1788689Z 
2025-04-15T08:07:18.1788759Z     return element;
2025-04-15T08:07:18.1788828Z   }
2025-04-15T08:07:18.1788832Z 
2025-04-15T08:07:18.1788930Z   // ===================================================================================== //
2025-04-15T08:07:18.1788934Z 
2025-04-15T08:07:18.1789001Z   // Agent info
2025-04-15T08:07:18.1789175Z   const AGENT_INFO_KEY = `agentInfo:${window.envSettings.agentApiUrl}`
2025-04-15T08:07:18.1789256Z   const getAgentInfo = () => {
2025-04-15T08:07:18.1789398Z     const agentInfo = localStorage.getItem(AGENT_INFO_KEY)
2025-04-15T08:07:18.1789468Z     if (agentInfo) {
2025-04-15T08:07:18.1789535Z       try {
2025-04-15T08:07:18.1789765Z         return Promise.resolve(JSON.parse(agentInfo))
2025-04-15T08:07:18.1789838Z       } catch (err) {
2025-04-15T08:07:18.1789927Z         return Promise.resolve()
2025-04-15T08:07:18.1789989Z       }
2025-04-15T08:07:18.1790055Z     }
2025-04-15T08:07:18.1790059Z 
2025-04-15T08:07:18.1790427Z     return fetch(ensureOneSlash(`${window.envSettings.agentApiUrl}/api/v3/info`)).then(response => response.json()).then(data => {
2025-04-15T08:07:18.1790515Z       if (CONFIG.cache.agentInfo) {
2025-04-15T08:07:18.1790685Z         localStorage.setItem(AGENT_INFO_KEY, JSON.stringify(data || {}))
2025-04-15T08:07:18.1790747Z       }
2025-04-15T08:07:18.1790817Z       return data
2025-04-15T08:07:18.1790903Z     }).catch(() => Promise.resolve())
2025-04-15T08:07:18.1790968Z   }
2025-04-15T08:07:18.1790977Z 
2025-04-15T08:07:18.1791200Z   const loadStyle = (url, { media, insertAfter: aref, insertBefore: bref, rel, type } = {}) => {
2025-04-15T08:07:18.1791276Z     rel = rel || 'stylesheet'
2025-04-15T08:07:18.1791361Z     type = type || 'text/css'
2025-04-15T08:07:18.1791475Z     return new Promise(function (resolve, reject) {
2025-04-15T08:07:18.1791581Z       let link = document.createElement('link');
2025-04-15T08:07:18.1791654Z       link.type = type;
2025-04-15T08:07:18.1791723Z       link.rel = rel;
2025-04-15T08:07:18.1791800Z       link.href = url;
2025-04-15T08:07:18.1791881Z       link.media = media || 'all';
2025-04-15T08:07:18.1791885Z 
2025-04-15T08:07:18.1791973Z       link.onerror = function (err) {
2025-04-15T08:07:18.1792195Z         reject(new URIError(`loadStyle: the stylesheet ${err.target.src} is not accessible.`));
2025-04-15T08:07:18.1792261Z       };
2025-04-15T08:07:18.1792264Z 
2025-04-15T08:07:18.1792344Z       link.onload = function () {
2025-04-15T08:07:18.1792409Z         resolve();
2025-04-15T08:07:18.1792561Z       };
2025-04-15T08:07:18.1792564Z 
2025-04-15T08:07:18.1792628Z       if (aref) {
2025-04-15T08:07:18.1792778Z         aref.parentNode.insertBefore(link, aref.nextSibling);
2025-04-15T08:07:18.1792842Z         return;
2025-04-15T08:07:18.1792907Z       }
2025-04-15T08:07:18.1792911Z 
2025-04-15T08:07:18.1792974Z       if (bref) {
2025-04-15T08:07:18.1793081Z         bref.parentNode.insertBefore(link, bref);
2025-04-15T08:07:18.1793150Z         return;
2025-04-15T08:07:18.1793212Z       }
2025-04-15T08:07:18.1793215Z 
2025-04-15T08:07:18.1793315Z       document.head.appendChild(link);
2025-04-15T08:07:18.1793379Z     });
2025-04-15T08:07:18.1793439Z   }
2025-04-15T08:07:18.1793447Z 
2025-04-15T08:07:18.1793783Z   const loadScript = (url, { async = true, defer = false, insertAfter: aref, insertBefore: bref, timeout = 5000, attrs, skipIf } = {}) => {
2025-04-15T08:07:18.1793895Z     return new Promise(function (resolve, reject) {
2025-04-15T08:07:18.1794003Z       if (typeof skipIf === 'function' && skipIf()) {
2025-04-15T08:07:18.1794093Z         resolve(status.SKIPPED);
2025-04-15T08:07:18.1794161Z         return;
2025-04-15T08:07:18.1794223Z       }
2025-04-15T08:07:18.1794230Z 
2025-04-15T08:07:18.1794456Z       let rejectWithTimeout = setTimeout(function () { reject(status.TIMEOUT) }, timeout);
2025-04-15T08:07:18.1794461Z 
2025-04-15T08:07:18.1794571Z       let script = document.createElement('script');
2025-04-15T08:07:18.1794659Z       script.type = 'text/javascript';
2025-04-15T08:07:18.1794738Z       script.src = url;
2025-04-15T08:07:18.1794813Z       script.async = async;
2025-04-15T08:07:18.1794893Z       script.defer = defer;
2025-04-15T08:07:18.1794898Z 
2025-04-15T08:07:18.1794963Z       if (attrs) {
2025-04-15T08:07:18.1795046Z         for (let attr in attrs) {
2025-04-15T08:07:18.1795147Z           script.setAttribute(attr, attrs[attr]);
2025-04-15T08:07:18.1795209Z         }
2025-04-15T08:07:18.1795275Z       }
2025-04-15T08:07:18.1795279Z 
2025-04-15T08:07:18.1795370Z       script.onerror = function (err) {
2025-04-15T08:07:18.1795586Z         reject(new URIError(`loadScript: the script ${err.target.src} is not accessible.`));
2025-04-15T08:07:18.1795732Z       };
2025-04-15T08:07:18.1795736Z 
2025-04-15T08:07:18.1795822Z       script.onload = function () {
2025-04-15T08:07:18.1795921Z         clearTimeout(rejectWithTimeout);
2025-04-15T08:07:18.1796001Z         resolve(status.SUCCESS);
2025-04-15T08:07:18.1796168Z       };
2025-04-15T08:07:18.1796172Z 
2025-04-15T08:07:18.1796238Z       if (aref) {
2025-04-15T08:07:18.1796389Z         aref.parentNode.insertBefore(script, aref.nextSibling);
2025-04-15T08:07:18.1796452Z         return;
2025-04-15T08:07:18.1796512Z       }
2025-04-15T08:07:18.1796517Z 
2025-04-15T08:07:18.1796586Z       if (bref) {
2025-04-15T08:07:18.1796696Z         bref.parentNode.insertBefore(script, bref);
2025-04-15T08:07:18.1796765Z         return;
2025-04-15T08:07:18.1796826Z       }
2025-04-15T08:07:18.1796830Z 
2025-04-15T08:07:18.1796932Z       document.body.appendChild(script);
2025-04-15T08:07:18.1796993Z     });
2025-04-15T08:07:18.1797054Z   }
2025-04-15T08:07:18.1797058Z 
2025-04-15T08:07:18.1797579Z   __webpack_public_path__ = ensureOneSlash(window.envSettings.webpackPublicPath ? (window.envSettings.webpackPublicPath + "/") : (window.envSettings.agentApiUrl + "/v3/"))
2025-04-15T08:07:18.1797584Z 
2025-04-15T08:07:18.1797664Z   const loadLatestUI = () => {
2025-04-15T08:07:18.1798035Z     return fetch(__webpack_public_path__ + "bundlesManifest." + window.envSettings.version.toString().replace(/(\d+)\..+/, "$1") + ".json")
2025-04-15T08:07:18.1798159Z       .then(function (response) { return response.json() })
2025-04-15T08:07:18.1798243Z       .catch(() => goToOld('/v3'))
2025-04-15T08:07:18.1798322Z       .then(function (data) {
2025-04-15T08:07:18.1798419Z         Object.keys(data).forEach(function (k) {
2025-04-15T08:07:18.1798523Z           if (/\.(map|ico|html)$/.test(data[k])) return
2025-04-15T08:07:18.1798610Z           if (/static\//.test(data[k])) return
2025-04-15T08:07:18.1798751Z 
2025-04-15T08:07:18.1798840Z           if (/\.css.*$/.test(data[k])) {
2025-04-15T08:07:18.1799000Z             loadStyle(ensureOneSlash(__webpack_public_path__ + data[k]))
2025-04-15T08:07:18.1799069Z             return
2025-04-15T08:07:18.1799132Z           }
2025-04-15T08:07:18.1799136Z 
2025-04-15T08:07:18.1799213Z           if (/\.js.*$/.test(data[k])) {
2025-04-15T08:07:18.1799378Z             loadScript(ensureOneSlash(__webpack_public_path__ + data[k]), {
2025-04-15T08:07:18.1799448Z               async: false,
2025-04-15T08:07:18.1799519Z             });
2025-04-15T08:07:18.1799581Z           }
2025-04-15T08:07:18.1799644Z         })
2025-04-15T08:07:18.1799732Z         return Promise.resolve()
2025-04-15T08:07:18.1799793Z       })
2025-04-15T08:07:18.1799860Z   }
2025-04-15T08:07:18.1799864Z 
2025-04-15T08:07:18.1799949Z   const loadDashboard = signIn => {
2025-04-15T08:07:18.1800034Z     loadLatestUI().then(() => {
2025-04-15T08:07:18.1800105Z       if (signIn) {
2025-04-15T08:07:18.1800203Z         window.location.href = ensureOneSlash(
2025-04-15T08:07:18.1800404Z           `${window.envSettings.cloudUrl}/trust?redirect_uri=${encodeURIComponent(
2025-04-15T08:07:18.1800484Z             window.location.href
2025-04-15T08:07:18.1800580Z           )}&agent_uri=${encodeURIComponent(
2025-04-15T08:07:18.1800689Z             agentUri || window.envSettings.agentApiUrl
2025-04-15T08:07:18.1800797Z           )}&telemetry_session_id=${telemetrySessionId}`
2025-04-15T08:07:18.1800865Z         )
2025-04-15T08:07:18.1800926Z       }
2025-04-15T08:07:18.1800993Z     })
2025-04-15T08:07:18.1801053Z   }
2025-04-15T08:07:18.1801057Z 
2025-04-15T08:07:18.1801134Z   const signout = () => {
2025-04-15T08:07:18.1801232Z     localStorage.removeItem(CLOUD_TOKEN_KEY)
2025-04-15T08:07:18.1801316Z     window.location.reload()
2025-04-15T08:07:18.1801381Z   }
2025-04-15T08:07:18.1801386Z 
2025-04-15T08:07:18.1801470Z   const fetchRegistryInfo = () => {
2025-04-15T08:07:18.1801623Z     if (window.localNetdataRegistry) return Promise.resolve()
2025-04-15T08:07:18.1801627Z 
2025-04-15T08:07:18.1802156Z     return fetch(ensureOneSlash(window.envSettings.agentApiUrl + "/api/v1/registry?action=hello"), { cache: "no-cache", credentials: "include" })
2025-04-15T08:07:18.1802241Z       .then(response => {
2025-04-15T08:07:18.1802425Z         if (!response.ok) return Promise.reject({ message: defaultErrorMessage })
2025-04-15T08:07:18.1802506Z         return response.json()
2025-04-15T08:07:18.1802574Z       })
2025-04-15T08:07:18.1802641Z       .then(data => {
2025-04-15T08:07:18.1802820Z         if (!data) return Promise.reject({ message: "No registry data available." })
2025-04-15T08:07:18.1802824Z 
2025-04-15T08:07:18.1802931Z         let to = data.cloud_base_url.lastIndexOf('/');
2025-04-15T08:07:18.1803122Z         to = (to == -1 || to < data.cloud_base_url.length - 2) ? data.cloud_base_url.length : to;
2025-04-15T08:07:18.1803246Z         let cloudUrl = data.cloud_base_url.substring(0, to);
2025-04-15T08:07:18.1803255Z 
2025-04-15T08:07:18.1803352Z         let withoutNodes = btoa(JSON.stringify({
2025-04-15T08:07:18.1803437Z           registry: data.registry,
2025-04-15T08:07:18.1803529Z           machine_guid: data.machine_guid,
2025-04-15T08:07:18.1803613Z           hostname: data.hostname,
2025-04-15T08:07:18.1803689Z           agent: data.agent,
2025-04-15T08:07:18.1803759Z           nodes: []
2025-04-15T08:07:18.1803821Z         }))
2025-04-15T08:07:18.1803930Z         let iframe = document.createElement('iframe');
2025-04-15T08:07:18.1804249Z         iframe.src = data.registry + "/registry-access.html?x=" + withoutNodes + "&originUrl=" + window.envSettings.agentApiUrl;
2025-04-15T08:07:18.1804393Z         iframe.style = { position: "absolute", left: "-99999999px" };
2025-04-15T08:07:18.1804471Z         iframe.width = 0;
2025-04-15T08:07:18.1804546Z         iframe.height = 0;
2025-04-15T08:07:18.1804626Z         iframe.tabindex = -1;
2025-04-15T08:07:18.1804709Z         iframe.title = "empty";
2025-04-15T08:07:18.1804883Z         iframe.classList.add("hidden");
2025-04-15T08:07:18.1804983Z         document.body.appendChild(iframe);
2025-04-15T08:07:18.1804987Z 
2025-04-15T08:07:18.1805070Z         setTimeout(function () {
2025-04-15T08:07:18.1805217Z           document.title = data.hostname + ': Netdata Agent Console';
2025-04-15T08:07:18.1805503Z           iframe.contentWindow.postMessage(["netdata-registry", window.envSettings.agentApiUrl, data], "*")
2025-04-15T08:07:18.1805567Z         }, 300);
2025-04-15T08:07:18.1805576Z 
2025-04-15T08:07:18.1805706Z         window.addEventListener('message', function (event) {
2025-04-15T08:07:18.1805822Z           if (event.source !== iframe.contentWindow) return;
2025-04-15T08:07:18.1805826Z 
2025-04-15T08:07:18.1806220Z           if (event.data.status === "disabled") console.error("Your netdata registry is disabled! Check your configuration.")
2025-04-15T08:07:18.1806226Z 
2025-04-15T08:07:18.1806304Z           if (event.data) {
2025-04-15T08:07:18.1806413Z             if (!window.localNetdataRegistry) {
2025-04-15T08:07:18.1806509Z               window.localNetdataRegistry = {}
2025-04-15T08:07:18.1806574Z             }
2025-04-15T08:07:18.1806582Z 
2025-04-15T08:07:18.1806734Z             window.localNetdataRegistry.pg = event.data.person_guid
2025-04-15T08:07:18.1806738Z 
2025-04-15T08:07:18.1806822Z             if (!window.envSettings) {
2025-04-15T08:07:18.1806912Z               window.envSettings = {}
2025-04-15T08:07:18.1806974Z             }
2025-04-15T08:07:18.1806978Z 
2025-04-15T08:07:18.1807111Z             window.envSettings.visitor = event.data.person_guid
2025-04-15T08:07:18.1807115Z 
2025-04-15T08:07:18.1807179Z             try {
2025-04-15T08:07:18.1807383Z               var visitedNodesByName = event.data.urls.reduce(function (vn, visitedUrl) {
2025-04-15T08:07:18.1807486Z                 vn[visitedUrl[4]] = vn[visitedUrl[4]] || {}
2025-04-15T08:07:18.1807577Z                 vn[visitedUrl[4]].id = visitedUrl[0]
2025-04-15T08:07:18.1807677Z                 vn[visitedUrl[4]].name = visitedUrl[4]
2025-04-15T08:07:18.1807794Z                 vn[visitedUrl[4]].lastAccessTime = visitedUrl[2]
2025-04-15T08:07:18.1808038Z                 vn[visitedUrl[4]].urls = vn[visitedUrl[4]].urls || []
2025-04-15T08:07:18.1808144Z                 vn[visitedUrl[4]].urls.push(visitedUrl[1])
2025-04-15T08:07:18.1808148Z 
2025-04-15T08:07:18.1808221Z                 return vn
2025-04-15T08:07:18.1808286Z               }, {})
2025-04-15T08:07:18.1808290Z 
2025-04-15T08:07:18.1808488Z               window.visitedNodes = Object.keys(visitedNodesByName).map(function (vn) {
2025-04-15T08:07:18.1808581Z                 return visitedNodesByName[vn]
2025-04-15T08:07:18.1808643Z               })
2025-04-15T08:07:18.1808719Z             } catch (e) {
2025-04-15T08:07:18.1808787Z               // do nothing
2025-04-15T08:07:18.1808856Z             }
2025-04-15T08:07:18.1808919Z           }
2025-04-15T08:07:18.1808979Z         });
2025-04-15T08:07:18.1808992Z 
2025-04-15T08:07:18.1809079Z         return Promise.resolve()
2025-04-15T08:07:18.1809143Z       })
2025-04-15T08:07:18.1809212Z   }
2025-04-15T08:07:18.1809216Z 
2025-04-15T08:07:18.1809425Z   const cloudRequest = async (endpoint, {allowAnonymous = false, ...options} = {}) => {
2025-04-15T08:07:18.1809567Z     const cloudToken = localStorage.getItem(CLOUD_TOKEN_KEY)
2025-04-15T08:07:18.1809744Z     if (!allowAnonymous && !cloudToken) return Promise.reject("No cloud token")
2025-04-15T08:07:18.1809749Z 
2025-04-15T08:07:18.1810206Z     options = { ...options, headers: { ...(options?.headers || {}), ...(!!cloudToken && {Authorization: `*** } }
2025-04-15T08:07:18.1810210Z 
2025-04-15T08:07:18.1810439Z     return fetch(ensureOneSlash(`${window.envSettings.apiUrl}/${endpoint}`), options)
2025-04-15T08:07:18.1810511Z   }
2025-04-15T08:07:18.1810515Z 
2025-04-15T08:07:18.1810593Z   const sleep = (ms) => {
2025-04-15T08:07:18.1810725Z     return new Promise(resolve => setTimeout(resolve, ms));
2025-04-15T08:07:18.1810910Z   }
2025-04-15T08:07:18.1810914Z 
2025-04-15T08:07:18.1811031Z   const claimAgent = ({ key, token, rooms } = {}) => {
2025-04-15T08:07:18.1811143Z     const url = window.envSettings.apiUrl;
2025-04-15T08:07:18.1811309Z     let query = new URLSearchParams({ key, rooms, token, url }).toString()
2025-04-15T08:07:18.1811443Z     query = key && rooms && token && url && query ? `?${query}` : ""
2025-04-15T08:07:18.1811733Z     return fetch(ensureOneSlash(`${window.envSettings.agentApiUrl}/api/v3/claim${query}`)).then(response => {
2025-04-15T08:07:18.1811876Z       const contentType = response.headers.get("content-type");
2025-04-15T08:07:18.1811885Z 
2025-04-15T08:07:18.1812006Z       if (contentType && contentType.includes("text")) {
2025-04-15T08:07:18.1812092Z         throw response.text();
2025-04-15T08:07:18.1812162Z       }
2025-04-15T08:07:18.1812166Z 
2025-04-15T08:07:18.1812276Z       if (contentType && contentType.includes("json")) {
2025-04-15T08:07:18.1812361Z         return response.json();
2025-04-15T08:07:18.1812428Z       }
2025-04-15T08:07:18.1812432Z 
2025-04-15T08:07:18.1812579Z       throw new Error('Unsupported content type: ' + contentType);
2025-04-15T08:07:18.1812655Z     }).then(data => {
2025-04-15T08:07:18.1812737Z       if (data.success === false) {
2025-04-15T08:07:18.1812818Z         throw data.message
2025-04-15T08:07:18.1812880Z       }
2025-04-15T08:07:18.1812884Z 
2025-04-15T08:07:18.1813016Z       if (key && data.can_be_claimed === false && !data.agent.nd) {
2025-04-15T08:07:18.1813108Z         return sleep(1000).then(claimAgent);
2025-04-15T08:07:18.1813170Z       }
2025-04-15T08:07:18.1813173Z 
2025-04-15T08:07:18.1813245Z       return data
2025-04-15T08:07:18.1813306Z     });
2025-04-15T08:07:18.1813370Z   }
2025-04-15T08:07:18.1813374Z 
2025-04-15T08:07:18.1813447Z   const checkMe = mg => {
2025-04-15T08:07:18.1813659Z     return fetch(ensureOneSlash(`${window.envSettings.agentApiUrl}/api/v3/me`), {
2025-04-15T08:07:18.1813727Z       headers: {
2025-04-15T08:07:18.1813928Z         "X-Netdata-Auth": `***
2025-04-15T08:07:18.1813991Z       }
2025-04-15T08:07:18.1814053Z     })
2025-04-15T08:07:18.1814145Z       .then(response => response.json())
2025-04-15T08:07:18.1814299Z       .catch(() => ({
2025-04-15T08:07:18.1814373Z         auth: "none",
2025-04-15T08:07:18.1814450Z         cloud_account_id: null,
2025-04-15T08:07:18.1814524Z         client_name: "",
2025-04-15T08:07:18.1814610Z         access: ["anonymous-data"],
2025-04-15T08:07:18.1814682Z         user_role: "any",
2025-04-15T08:07:18.1814748Z       }))
2025-04-15T08:07:18.1814812Z   }
2025-04-15T08:07:18.1814817Z 
2025-04-15T08:07:18.1814908Z   const fetchUserAccess = (mg, nd) => {
2025-04-15T08:07:18.1815338Z     return cloudRequest(`/api/v1/agents/${mg}/user_agent_node_access${nd ? `?nodeID=${nd}` : ""}`, {allowAnonymous: true}).then(response => response.json()).then(data => {
2025-04-15T08:07:18.1816402Z       window.localNetdataRegistry.limitations = data.limitations ? {limit: data.limitations.limit || 99999999, customDashboardsLimit: data.limitations.custom_dashboards_limit || 99999999, windowsSupport: data.limitations.windows_support || false} : {limit: 99999999, customDashboardsLimit: 99999999, windowsSupport: true}
2025-04-15T08:07:18.1816417Z 
2025-04-15T08:07:18.1816516Z       if (data.user_node_status === "noAccess") {
2025-04-15T08:07:18.1816583Z         return data
2025-04-15T08:07:18.1816651Z       }
2025-04-15T08:07:18.1816787Z       window.localNetdataRegistry.spaceId = data.space_id
2025-04-15T08:07:18.1816791Z 
2025-04-15T08:07:18.1816914Z       const room = data.rooms.find(r => r.untouchable)
2025-04-15T08:07:18.1816918Z 
2025-04-15T08:07:18.1817033Z       window.localNetdataRegistry.roomId = room.id
2025-04-15T08:07:18.1817142Z       window.localNetdataRegistry.room = room
2025-04-15T08:07:18.1817146Z 
2025-04-15T08:07:18.1817213Z       return data
2025-04-15T08:07:18.1817286Z     }).catch((err) => { })
2025-04-15T08:07:18.1817352Z   }
2025-04-15T08:07:18.1817356Z 
2025-04-15T08:07:18.1817482Z   const getAgentToken = ({ mg, nd, claimId }, agent) => {
2025-04-15T08:07:18.1817918Z     return cloudRequest(`/api/v2/bearer_get_token?node_id=${nd}&claim_id=${claimId}&machine_guid=${mg}`).then(response => {
2025-04-15T08:07:18.1818005Z       if (response.status === 401) {
2025-04-15T08:07:18.1818079Z         signout()
2025-04-15T08:07:18.1818142Z         return
2025-04-15T08:07:18.1818204Z       }
2025-04-15T08:07:18.1818284Z       if (!response.ok) {
2025-04-15T08:07:18.1818398Z         // Parse the error response to extract the message
2025-04-15T08:07:18.1818503Z         return response.json().then(errorData => {
2025-04-15T08:07:18.1818618Z           const error = new Error(errorData.errorMessage);
2025-04-15T08:07:18.1818714Z           error.data = errorData.errorContext
2025-04-15T08:07:18.1818787Z           throw error
2025-04-15T08:07:18.1818851Z         });
2025-04-15T08:07:18.1818917Z       }
2025-04-15T08:07:18.1818996Z       return response.json();
2025-04-15T08:07:18.1819065Z     }).then(data => {
2025-04-15T08:07:18.1819151Z       if (data && data.token) {
2025-04-15T08:07:18.1819275Z         localStorage.setItem(`agentJWT:${mg}`, data?.token)
2025-04-15T08:07:18.1819435Z         localStorage.setItem(`agentJWTExp:${mg}`, data?.expiration)
2025-04-15T08:07:18.1819497Z       }
2025-04-15T08:07:18.1819566Z       return data
2025-04-15T08:07:18.1819638Z     }).catch((err) => {
2025-04-15T08:07:18.1819707Z       stopLoading()
2025-04-15T08:07:18.1819711Z 
2025-04-15T08:07:18.1819841Z       let message = "Something went wrong. Please try again."
2025-04-15T08:07:18.1819946Z       if (err.data && err.data.state === "created") {
2025-04-15T08:07:18.1820208Z         message = "The node is claimed and is syncing with Netdata Cloud. Please wait a few seconds and try again."
2025-04-15T08:07:18.1820272Z       } else {
2025-04-15T08:07:18.1820370Z         message = (err && err.message) || message
2025-04-15T08:07:18.1820433Z       }
2025-04-15T08:07:18.1820436Z 
2025-04-15T08:07:18.1820439Z 
2025-04-15T08:07:18.1820577Z       const msgSignIn = document.getElementById("msgSignIn");
2025-04-15T08:07:18.1820672Z       msgSignIn.textContent = message
2025-04-15T08:07:18.1820676Z 
2025-04-15T08:07:18.1820919Z       const btnSignIn = document.getElementById("btnSignIn");
2025-04-15T08:07:18.1821024Z       btnSignIn.style.display = "none"
2025-04-15T08:07:18.1821028Z 
2025-04-15T08:07:18.1821112Z       setupOptOutMessage(agent)
2025-04-15T08:07:18.1821181Z     })
2025-04-15T08:07:18.1821244Z   }
2025-04-15T08:07:18.1821248Z 
2025-04-15T08:07:18.1821337Z   const setupOptOutMessage = agent => {
2025-04-15T08:07:18.1821475Z     const bearerProtection = agent.api.bearer_protection;
2025-04-15T08:07:18.1821478Z 
2025-04-15T08:07:18.1821685Z     const isWindows = (agent.application.os.kernel || "").toLowerCase() === "windows"
2025-04-15T08:07:18.1822137Z     const lockWindows = isWindows && (!window.localNetdataRegistry.limitation || window.localNetdataRegistry.limitations.windowsSupport === false);
2025-04-15T08:07:18.1822141Z 
2025-04-15T08:07:18.1822297Z     const denyAnonymousAccess = bearerProtection || lockWindows;
2025-04-15T08:07:18.1822301Z 
2025-04-15T08:07:18.1822419Z     // Get all elements with the "opt-out-link" class
2025-04-15T08:07:18.1822620Z     const optOutLinkElems = document.getElementsByClassName("opt-out-link");
2025-04-15T08:07:18.1822716Z     if (optOutLinkElems.length > 0) {
2025-04-15T08:07:18.1822830Z       for (let i = 0; i < optOutLinkElems.length; i++) {
2025-04-15T08:07:18.1823026Z         optOutLinkElems[i].style.display = denyAnonymousAccess ? "none" : "inline";
2025-04-15T08:07:18.1823095Z       }
2025-04-15T08:07:18.1823162Z     }
2025-04-15T08:07:18.1823166Z 
2025-04-15T08:07:18.1823302Z     // Get all elements with the "no-anonymous-access" class
2025-04-15T08:07:18.1823566Z     const anonymousAccessDeniedElems = document.getElementsByClassName("no-anonymous-access");
2025-04-15T08:07:18.1823686Z     if (anonymousAccessDeniedElems.length > 0) {
2025-04-15T08:07:18.1823825Z       for (let i = 0; i < anonymousAccessDeniedElems.length; i++) {
2025-04-15T08:07:18.1824062Z         if (anonymousAccessDeniedElems[i].textContent === "") {
2025-04-15T08:07:18.1824836Z           anonymousAccessDeniedElems[i].innerHTML = bearerProtection ? "Anonymous access is not allowed. *** is enabled.<br />Please sign in to continue." : "Anonymous access to the dashboard of Windows nodes is not allowed.<br />Please sign in to continue.";
2025-04-15T08:07:18.1824907Z         }
2025-04-15T08:07:18.1825150Z         anonymousAccessDeniedElems[i].style.display = denyAnonymousAccess ? "inline" : "none";
2025-04-15T08:07:18.1825221Z       }
2025-04-15T08:07:18.1825283Z     }
2025-04-15T08:07:18.1825344Z   }
2025-04-15T08:07:18.1825348Z 
2025-04-15T08:07:18.1825454Z   const createClaimingToken = spaceId => {
2025-04-15T08:07:18.1825550Z     if (!spaceId) return Promise.resolve();
2025-04-15T08:07:18.1825658Z     toggleClaimingTokenLoadingState(true);
2025-04-15T08:07:18.1825842Z     return cloudRequest(`/api/v1/spaces/${spaceId}/token`).then(response => {
2025-04-15T08:07:18.1825958Z       toggleClaimingTokenLoadingState(false);
2025-04-15T08:07:18.1826041Z       return response.json();
2025-04-15T08:07:18.1826206Z     });
2025-04-15T08:07:18.1826274Z   }
2025-04-15T08:07:18.1826278Z 
2025-04-15T08:07:18.1826378Z   const getClaimingToken = async spaceId => {
2025-04-15T08:07:18.1826475Z     if (!spaceId) return Promise.resolve();
2025-04-15T08:07:18.1826647Z     const cachedToken = state.cache.claimingTokensPerSpace[spaceId];
2025-04-15T08:07:18.1826775Z     if (cachedToken) return Promise.resolve(cachedToken);
2025-04-15T08:07:18.1826896Z     const token = await createClaimingToken(spaceId);
2025-04-15T08:07:18.1826989Z     cacheClaimingToken(spaceId, token);
2025-04-15T08:07:18.1827082Z     return Promise.resolve(token);
2025-04-15T08:07:18.1827146Z   }
2025-04-15T08:07:18.1827150Z 
2025-04-15T08:07:18.1827234Z   const fetchSpaces = () => {
2025-04-15T08:07:18.1827325Z     toggleSpacesLoadingState(true);
2025-04-15T08:07:18.1827464Z     return cloudRequest("/api/v3/spaces").then(response => {
2025-04-15T08:07:18.1827562Z       toggleSpacesLoadingState(false);
2025-04-15T08:07:18.1827640Z       return response.json();
2025-04-15T08:07:18.1827823Z     });
2025-04-15T08:07:18.1827888Z   }
2025-04-15T08:07:18.1827891Z 
2025-04-15T08:07:18.1827978Z   const getSpaces = async () => {
2025-04-15T08:07:18.1828078Z     const cachedSpaces = state.cache.spaces;
2025-04-15T08:07:18.1828212Z     if (cachedSpaces) return Promise.resolve(cachedSpaces);
2025-04-15T08:07:18.1828306Z     const spaces = await fetchSpaces();
2025-04-15T08:07:18.1828385Z     cacheSpaces(spaces);
2025-04-15T08:07:18.1828477Z     return Promise.resolve(spaces);
2025-04-15T08:07:18.1828540Z   }
2025-04-15T08:07:18.1828543Z 
2025-04-15T08:07:18.1828631Z   const fetchSpaceRooms = spaceId => {
2025-04-15T08:07:18.1828730Z     if (!spaceId) return Promise.resolve([])
2025-04-15T08:07:18.1828819Z     toggleRoomsLoadingState(true);
2025-04-15T08:07:18.1829093Z     return cloudRequest(`/api/v2/spaces/${spaceId}/rooms?show_all=true&default=false`).then(response => {
2025-04-15T08:07:18.1829189Z       toggleRoomsLoadingState(false);
2025-04-15T08:07:18.1829276Z       return response.json();
2025-04-15T08:07:18.1829339Z     })
2025-04-15T08:07:18.1829400Z   }
2025-04-15T08:07:18.1829403Z 
2025-04-15T08:07:18.1829501Z   const getSpaceRooms = async spaceId => {
2025-04-15T08:07:18.1829599Z     if (!spaceId) return Promise.resolve([]);
2025-04-15T08:07:18.1829720Z     const cachedRooms = state.cache.rooms[spaceId];
2025-04-15T08:07:18.1829846Z     if (cachedRooms) return Promise.resolve(cachedRooms);
2025-04-15T08:07:18.1829951Z     const rooms = await fetchSpaceRooms(spaceId);
2025-04-15T08:07:18.1830039Z     cacheRooms(spaceId, rooms);
2025-04-15T08:07:18.1830125Z     return Promise.resolve(rooms);
2025-04-15T08:07:18.1830191Z   }
2025-04-15T08:07:18.1830194Z 
2025-04-15T08:07:18.1830293Z   const updateSelectedOptions = root => {
2025-04-15T08:07:18.1830371Z     if (!root) return;
2025-04-15T08:07:18.1830766Z     const checkboxes = root.querySelectorAll('.dropdown > .checkbox-container input[type="checkbox"]');
2025-04-15T08:07:18.1842368Z     const selected = Array.from(checkboxes)
2025-04-15T08:07:18.1842520Z       .filter((checkbox) => checkbox.checked)
2025-04-15T08:07:18.1842719Z       .map((checkbox) => ({ value: checkbox.value, name: checkbox.dataset.name }));
2025-04-15T08:07:18.1842725Z 
2025-04-15T08:07:18.1842862Z     const selectedNames = selected.map(({ name }) => name);
2025-04-15T08:07:18.1843001Z     const selectedValues = selected.map(({ value }) => value);
2025-04-15T08:07:18.1843006Z 
2025-04-15T08:07:18.1843147Z     const selectedSpaceIds = state.claim.selectedSpaceIds;
2025-04-15T08:07:18.1843242Z     const spaces = state.cache.spaces;
2025-04-15T08:07:18.1843555Z     const selectedSpaceName = selectedSpaceIds.length ? spaces.find(({ id }) => id == selectedSpaceIds[0])?.name : null;
2025-04-15T08:07:18.1843563Z 
2025-04-15T08:07:18.1843836Z     const dropdownChangeEvent = new CustomEvent("dropdownChange", { detail: { values: selectedValues } });
2025-04-15T08:07:18.1843948Z     root.dispatchEvent(dropdownChangeEvent);
2025-04-15T08:07:18.1843952Z 
2025-04-15T08:07:18.1844079Z     root.querySelector("#selectedItems").textContent =
2025-04-15T08:07:18.1844249Z       selectedNames.length > 0 ? selectedNames.join(", ") : "Select Rooms";
2025-04-15T08:07:18.1844253Z 
2025-04-15T08:07:18.1844403Z     const target = document.getElementById(root.dataset.target);
2025-04-15T08:07:18.1844483Z     target.textContent =
2025-04-15T08:07:18.1844562Z       selected.length > 0
2025-04-15T08:07:18.1844730Z         ? `You are ready to connect your agent to room(s): ${selectedNames.join(
2025-04-15T08:07:18.1844794Z           ", "
2025-04-15T08:07:18.1844985Z         )}${selectedSpaceName ? ` of ${selectedSpaceName} space` : ""}`
2025-04-15T08:07:18.1845046Z         : "";
2025-04-15T08:07:18.1845109Z   }
2025-04-15T08:07:18.1845113Z 
2025-04-15T08:07:18.1845205Z   const bindDropdownOptions = () => {
2025-04-15T08:07:18.1845381Z     document.querySelectorAll(".dropdown-custom").forEach(root => {
2025-04-15T08:07:18.1845703Z       root.querySelectorAll(".nd-checkbox > input").forEach(input => {
2025-04-15T08:07:18.1845893Z         input.addEventListener("change", () => updateSelectedOptions(root));
2025-04-15T08:07:18.1845958Z       });
2025-04-15T08:07:18.1846021Z     });
2025-04-15T08:07:18.1846205Z   }
2025-04-15T08:07:18.1846210Z 
2025-04-15T08:07:18.1846307Z   const buildRoomsList = (rooms = []) => {
2025-04-15T08:07:18.1846507Z     const container = document.getElementById("roomsSelectorOptionsContainer");
2025-04-15T08:07:18.1846580Z     if (container) {
2025-04-15T08:07:18.1846663Z       container.innerHTML = "";
2025-04-15T08:07:18.1846750Z       rooms.forEach(({ id, name }) => {
2025-04-15T08:07:18.1846859Z         const isDefaultSelected = name === "All nodes"
2025-04-15T08:07:18.1846863Z 
2025-04-15T08:07:18.1846947Z         if (isDefaultSelected) {
2025-04-15T08:07:18.1847032Z           setSelectedRoomsStatus(id)
2025-04-15T08:07:18.1847099Z         }
2025-04-15T08:07:18.1847103Z 
2025-04-15T08:07:18.1847256Z         const label = createElem("label", { classList: "nd-checkbox" });
2025-04-15T08:07:18.1847487Z         const input = createElem("input", { type: "checkbox", value: id, checked: isDefaultSelected });
2025-04-15T08:07:18.1847577Z         input.dataset.name = name;
2025-04-15T08:07:18.1847654Z         input.onchange = e => {
2025-04-15T08:07:18.1847757Z           setSelectedRoomsStatus(prev => {
2025-04-15T08:07:18.1847861Z             if (e.target.checked) return [...prev, id];
2025-04-15T08:07:18.1847954Z             return prev.filter(r => r != id);
2025-04-15T08:07:18.1848020Z           });
2025-04-15T08:07:18.1848083Z         }
2025-04-15T08:07:18.1848087Z 
2025-04-15T08:07:18.1848230Z         const span = createElem("span", { classList: "checkmark" });
2025-04-15T08:07:18.1848335Z         const text = document.createTextNode(name);
2025-04-15T08:07:18.1848338Z 
2025-04-15T08:07:18.1848554Z         label.appendChild(input);
2025-04-15T08:07:18.1848637Z         label.appendChild(span);
2025-04-15T08:07:18.1848714Z         label.appendChild(text);
2025-04-15T08:07:18.1848812Z         container.appendChild(label);
2025-04-15T08:07:18.1848875Z       });
2025-04-15T08:07:18.1848879Z 
2025-04-15T08:07:18.1848964Z       bindDropdownOptions();
2025-04-15T08:07:18.1849027Z     }
2025-04-15T08:07:18.1849089Z   }
2025-04-15T08:07:18.1849095Z 
2025-04-15T08:07:18.1849190Z   const buildSpacesList = (spaces = []) => {
2025-04-15T08:07:18.1849327Z     const container = document.getElementById("spacesList");
2025-04-15T08:07:18.1849400Z     if (container) {
2025-04-15T08:07:18.1849478Z       container.innerHTML = "";
2025-04-15T08:07:18.1849601Z       spaces.forEach(({ id, name, permissions = [] }) => {
2025-04-15T08:07:18.1849713Z         if (!permissions.includes("node:Create")) return
2025-04-15T08:07:18.1849717Z 
2025-04-15T08:07:18.1849805Z         const listItem = createElem("li");
2025-04-15T08:07:18.1849894Z         listItem.innerText = name;
2025-04-15T08:07:18.1849985Z         listItem.className = "space-item";
2025-04-15T08:07:18.1850072Z         listItem.dataset.id = id;
2025-04-15T08:07:18.1850164Z         listItem.onclick = async () => {
2025-04-15T08:07:18.1850417Z           document.querySelectorAll(".space-item").forEach(item => item.classList.remove("selected"));
2025-04-15T08:07:18.1850513Z           listItem.classList.add("selected");
2025-04-15T08:07:18.1850603Z           setSelectedSpacesStatus([id]);
2025-04-15T08:07:18.1850673Z         };
2025-04-15T08:07:18.1850762Z         container.appendChild(listItem);
2025-04-15T08:07:18.1850829Z       });
2025-04-15T08:07:18.1850891Z     }
2025-04-15T08:07:18.1850974Z     return Promise.resolve();
2025-04-15T08:07:18.1851041Z   }
2025-04-15T08:07:18.1851044Z 
2025-04-15T08:07:18.1851131Z   const initCustomDropdown = () => {
2025-04-15T08:07:18.1851221Z     const toggleDropdown = e => {
2025-04-15T08:07:18.1851305Z       if (!e.currentTarget) return;
2025-04-15T08:07:18.1851529Z       const checkboxContainer = e.currentTarget.querySelector(".checkbox-container");
2025-04-15T08:07:18.1851609Z       if (checkboxContainer) {
2025-04-15T08:07:18.1852001Z         checkboxContainer.style.display = checkboxContainer.style.display === "block" ? "none" : "block";
2025-04-15T08:07:18.1852075Z       }
2025-04-15T08:07:18.1852137Z     }
2025-04-15T08:07:18.1852141Z 
2025-04-15T08:07:18.1852227Z     const clearSelection = e => {
2025-04-15T08:07:18.1852307Z       if (!e.currentTarget) return;
2025-04-15T08:07:18.1852446Z       const root = e.currentTarget.closest(".dropdown-custom");
2025-04-15T08:07:18.1852515Z       if (root) {
2025-04-15T08:07:18.1852779Z         const checkboxes = root.querySelectorAll('.dropdown > .checkbox-container input[type="checkbox"]');
2025-04-15T08:07:18.1852938Z         checkboxes.forEach((checkbox) => (checkbox.checked = false));
2025-04-15T08:07:18.1853026Z         updateSelectedOptions(root);
2025-04-15T08:07:18.1853095Z       }
2025-04-15T08:07:18.1853162Z     }
2025-04-15T08:07:18.1853165Z 
2025-04-15T08:07:18.1853329Z     document.querySelectorAll(".dropdown-custom").forEach(root => {
2025-04-15T08:07:18.1853467Z       const btnClear = root.querySelector(".clear-button");
2025-04-15T08:07:18.1853583Z       const dropdown = root.querySelector(".dropdown");
2025-04-15T08:07:18.1853659Z       if (dropdown) {
2025-04-15T08:07:18.1853731Z         if (btnClear) {
2025-04-15T08:07:18.1853865Z           btnClear.addEventListener("click", clearSelection);
2025-04-15T08:07:18.1853929Z         }
2025-04-15T08:07:18.1854055Z         dropdown.addEventListener("click", toggleDropdown);
2025-04-15T08:07:18.1854123Z       }
2025-04-15T08:07:18.1854186Z     });
2025-04-15T08:07:18.1854189Z 
2025-04-15T08:07:18.1854298Z     document.addEventListener("click", (e) => {
2025-04-15T08:07:18.1854478Z       document.querySelectorAll(".dropdown-custom").forEach(dropdown => {
2025-04-15T08:07:18.1854678Z         const checkboxContainer = dropdown.querySelector(".checkbox-container");
2025-04-15T08:07:18.1854947Z         if (dropdown && checkboxContainer && !dropdown.contains(e.target)) {
2025-04-15T08:07:18.1855061Z           checkboxContainer.style.display = "none";
2025-04-15T08:07:18.1855131Z         }
2025-04-15T08:07:18.1855191Z       });
2025-04-15T08:07:18.1855257Z     });
2025-04-15T08:07:18.1855261Z 
2025-04-15T08:07:18.1855342Z     return Promise.resolve();
2025-04-15T08:07:18.1855402Z   }
2025-04-15T08:07:18.1855411Z 
2025-04-15T08:07:18.1855499Z   const initClaimingElements = () => {
2025-04-15T08:07:18.1855653Z     const claimCommand = document.getElementById("claimCommand");
2025-04-15T08:07:18.1855783Z     const claimTip = document.getElementById("claimTip");
2025-04-15T08:07:18.1855948Z     const btnPrev = document.getElementById("btnConnectionStepPrev");
2025-04-15T08:07:18.1856212Z     const btnNext = document.getElementById("btnConnectionStepNext");
2025-04-15T08:07:18.1856335Z     const btnClaim = document.getElementById("btnClaim");
2025-04-15T08:07:18.1856532Z     const claimingPrivateKey = document.getElementById("claimingPrivateKey");
2025-04-15T08:07:18.1856541Z 
2025-04-15T08:07:18.1856665Z     if (claimCommand && !!state.claim?.status?.command) {
2025-04-15T08:07:18.1856798Z       claimCommand.innerText = state.claim.status.command;
2025-04-15T08:07:18.1856865Z     }
2025-04-15T08:07:18.1856869Z 
2025-04-15T08:07:18.1856981Z     if (claimTip && !!state.claim?.status?.key_filename) {
2025-04-15T08:07:18.1857704Z       claimTip.innerText = `Tip: If the command doesn’t work out-of-the-box, locate the ${state.claim.status.key_filename} file, open it in your favourite text editor, and copy it to your clipboard.`;
2025-04-15T08:07:18.1857768Z     }
2025-04-15T08:07:18.1857772Z 
2025-04-15T08:07:18.1857845Z     if (btnPrev) {
2025-04-15T08:07:18.1857956Z       btnPrev.addEventListener("click", () => {
2025-04-15T08:07:18.1858057Z         setClaimingStep(prev => prev - 1);
2025-04-15T08:07:18.1858124Z       });
2025-04-15T08:07:18.1858184Z     }
2025-04-15T08:07:18.1858197Z 
2025-04-15T08:07:18.1858269Z     if (btnNext) {
2025-04-15T08:07:18.1858387Z       btnNext.addEventListener("click", async () => {
2025-04-15T08:07:18.1858656Z         const newStep = await setClaimingStep(prev => prev + 1);
2025-04-15T08:07:18.1858814Z         if (newStep == 2 && !!state.claim.selectedSpaceIds.length) {
2025-04-15T08:07:18.1858937Z           const spaceId = state.claim.selectedSpaceIds[0];
2025-04-15T08:07:18.1859045Z           const rooms = await getSpaceRooms(spaceId);
2025-04-15T08:07:18.1859128Z           buildRoomsList(rooms);
2025-04-15T08:07:18.1859223Z           await getClaimingToken(spaceId);
2025-04-15T08:07:18.1859287Z         }
2025-04-15T08:07:18.1859348Z       });
2025-04-15T08:07:18.1859412Z     }
2025-04-15T08:07:18.1859416Z 
2025-04-15T08:07:18.1859485Z     if (btnClaim) {
2025-04-15T08:07:18.1859604Z       btnClaim.addEventListener("click", async () => {
2025-04-15T08:07:18.1859709Z         toggleClaimingAgentLoadingState(true);
2025-04-15T08:07:18.1859812Z         await setClaimResponseState({});
2025-04-15T08:07:18.1859995Z         const { selectedSpaceIds, selectedRoomIds, privateKey } = state.claim;
2025-04-15T08:07:18.1860305Z         const { token } = selectedSpaceIds.length ? state.cache.claimingTokensPerSpace[selectedSpaceIds[0]] || {} : {};
2025-04-15T08:07:18.1860309Z 
2025-04-15T08:07:18.1860391Z         let didCatch = false;
2025-04-15T08:07:18.1860631Z         const data = await claimAgent({ key: privateKey, token, rooms: selectedRoomIds }).catch(err => {
2025-04-15T08:07:18.1860711Z           didCatch = true;
2025-04-15T08:07:18.1860826Z           setClaimResponseState({ error: err.message });
2025-04-15T08:07:18.1860892Z         })
2025-04-15T08:07:18.1860896Z 
2025-04-15T08:07:18.1860977Z         if (data === "invalid key") {
2025-04-15T08:07:18.1861050Z           didCatch = true;
2025-04-15T08:07:18.1861170Z           setClaimResponseState({ error: "Invalid key" });
2025-04-15T08:07:18.1861230Z         }
2025-04-15T08:07:18.1861476Z         toggleClaimingAgentLoadingState(false);
2025-04-15T08:07:18.1861480Z 
2025-04-15T08:07:18.1861554Z         if (didCatch) return;
2025-04-15T08:07:18.1861559Z 
2025-04-15T08:07:18.1861631Z         if (data) {
2025-04-15T08:07:18.1861704Z           if (data.success) {
2025-04-15T08:07:18.1861788Z             window.location.reload();
2025-04-15T08:07:18.1861856Z           } else {
2025-04-15T08:07:18.1861947Z             setClaimResponseState(data);
2025-04-15T08:07:18.1862013Z           }
2025-04-15T08:07:18.1862072Z         }
2025-04-15T08:07:18.1862132Z       });
2025-04-15T08:07:18.1862196Z     }
2025-04-15T08:07:18.1862200Z 
2025-04-15T08:07:18.1862279Z     if (claimingPrivateKey) {
2025-04-15T08:07:18.1862556Z       claimingPrivateKey.addEventListener("input", e => setClaimingPrivateKeyState(e.target.value));
2025-04-15T08:07:18.1862618Z     }
2025-04-15T08:07:18.1862683Z   }
2025-04-15T08:07:18.1862687Z 
2025-04-15T08:07:18.1862773Z   const setClaimStatus = async () => {
2025-04-15T08:07:18.1862861Z     const status = await claimAgent();
2025-04-15T08:07:18.1862942Z     const claimStatus = {
2025-04-15T08:07:18.1863081Z       command: status.cmd || `sudo cat ${status.key_filename}`,
2025-04-15T08:07:18.1863150Z       ...status
2025-04-15T08:07:18.1863212Z     };
2025-04-15T08:07:18.1863310Z     await setClaimStatusState(claimStatus);
2025-04-15T08:07:18.1863393Z     return Promise.resolve();
2025-04-15T08:07:18.1863454Z   }
2025-04-15T08:07:18.1863457Z 
2025-04-15T08:07:18.1863555Z   const prepareClaiming = async agent => {
2025-04-15T08:07:18.1863632Z     await setClaimStatus();
2025-04-15T08:07:18.1863720Z     setupOptOutMessage(agent)
2025-04-15T08:07:18.1863804Z     const spaces = await getSpaces();
2025-04-15T08:07:18.1863889Z     await buildSpacesList(spaces);
2025-04-15T08:07:18.1863971Z     initCustomDropdown();
2025-04-15T08:07:18.1864051Z     initClaimingElements();
2025-04-15T08:07:18.1864121Z     syncUI();
2025-04-15T08:07:18.1864182Z   }
2025-04-15T08:07:18.1864185Z 
2025-04-15T08:07:18.1864269Z   const startLoading = () => {
2025-04-15T08:07:18.1864356Z     const body = document.body;
2025-04-15T08:07:18.1864421Z     if (body) {
2025-04-15T08:07:18.1864671Z       body.classList.add("loading");
2025-04-15T08:07:18.1864735Z     }
2025-04-15T08:07:18.1864798Z   }
2025-04-15T08:07:18.1864801Z 
2025-04-15T08:07:18.1864879Z   const stopLoading = () => {
2025-04-15T08:07:18.1864959Z     const body = document.body;
2025-04-15T08:07:18.1865028Z     if (body) {
2025-04-15T08:07:18.1865119Z       body.classList.remove("loading");
2025-04-15T08:07:18.1865228Z       window.dispatchEvent(new Event("resize"));
2025-04-15T08:07:18.1865290Z     }
2025-04-15T08:07:18.1865350Z   }
2025-04-15T08:07:18.1865354Z 
2025-04-15T08:07:18.1865516Z   const showErrorMessage = (message = defaultErrorMessage) => {
2025-04-15T08:07:18.1865691Z     const messageContainer = document.getElementById("loadingMessage");
2025-04-15T08:07:18.1865773Z     if (messageContainer) {
2025-04-15T08:07:18.1865867Z       messageContainer.innerHTML = message;
2025-04-15T08:07:18.1865948Z       startLoading();
2025-04-15T08:07:18.1866008Z     }
2025-04-15T08:07:18.1866168Z   }
2025-04-15T08:07:18.1866172Z 
2025-04-15T08:07:18.1866263Z   const initMetrics = data => {
2025-04-15T08:07:18.1866464Z     if (!data?.agents?.[0]) return Promise.reject({ message: "No agent data available." })
2025-04-15T08:07:18.1866468Z 
2025-04-15T08:07:18.1866619Z     const setPercentageBarWidth = (containerId, percent) => {
2025-04-15T08:07:18.1866750Z       const container = document.getElementById(containerId);
2025-04-15T08:07:18.1866824Z       if (container) {
2025-04-15T08:07:18.1866977Z         const percentageContainer = document.createElement("div");
2025-04-15T08:07:18.1867124Z         percentageContainer.className = "percentage-container";
2025-04-15T08:07:18.1867128Z 
2025-04-15T08:07:18.1867257Z         const percentageBar = document.createElement("div");
2025-04-15T08:07:18.1867368Z         percentageBar.className = "percentage-bar";
2025-04-15T08:07:18.1867603Z         percentageBar.style.width = percent + "%";
2025-04-15T08:07:18.1867607Z 
2025-04-15T08:07:18.1867732Z         const percentageText = document.createElement("div");
2025-04-15T08:07:18.1867857Z         percentageText.className = "percentage-text";
2025-04-15T08:07:18.1868088Z         percentageText.innerText = percent + "%"; // Display the rounded percentage value with "%"
2025-04-15T08:07:18.1868092Z 
2025-04-15T08:07:18.1868233Z         // Calculate the right position dynamically, capped at 96%
2025-04-15T08:07:18.1868368Z         const rightPosition = Math.min(100 - percent, 96) + "%";
2025-04-15T08:07:18.1868478Z         percentageText.style.right = rightPosition;
2025-04-15T08:07:18.1868482Z 
2025-04-15T08:07:18.1868612Z         percentageContainer.appendChild(percentageBar);
2025-04-15T08:07:18.1868831Z         percentageContainer.appendChild(percentageText); // Append the percentage text
2025-04-15T08:07:18.1868835Z 
2025-04-15T08:07:18.1868946Z         container.appendChild(percentageContainer);
2025-04-15T08:07:18.1869013Z       }
2025-04-15T08:07:18.1869078Z     }
2025-04-15T08:07:18.1869081Z 
2025-04-15T08:07:18.1869191Z     const units = ["", "K", "M", "B", "T", "P", "E"]
2025-04-15T08:07:18.1869195Z 
2025-04-15T08:07:18.1869285Z     const abbreviateNumber = number => {
2025-04-15T08:07:18.1869365Z       if (!number) return 0
2025-04-15T08:07:18.1869425Z     
2025-04-15T08:07:18.1869540Z       const tier = (Math.log10(Math.abs(number)) / 3) | 0
2025-04-15T08:07:18.1869600Z     
2025-04-15T08:07:18.1869677Z       if (!tier) return number
2025-04-15T08:07:18.1869740Z     
2025-04-15T08:07:18.1869819Z       const suffix = units[tier]
2025-04-15T08:07:18.1869911Z       const scale = Math.pow(10, tier * 3)
2025-04-15T08:07:18.1869993Z       const scaled = number / scale
2025-04-15T08:07:18.1870084Z       return scaled.toFixed(1) + suffix
2025-04-15T08:07:18.1870146Z     }
2025-04-15T08:07:18.1870149Z 
2025-04-15T08:07:18.1870232Z     const formatBytes = (bytes) => {
2025-04-15T08:07:18.1870321Z       if (bytes === 0) return "0 Bytes";
2025-04-15T08:07:18.1870391Z       const k = 1024,
2025-04-15T08:07:18.1870642Z         sizes = ["Bytes", "KB", "MB", "GB", "TB", "PB", "EB", "ZB", "YB"],
2025-04-15T08:07:18.1870755Z         i = Math.floor(Math.log(bytes) / Math.log(k));
2025-04-15T08:07:18.1870821Z       return (
2025-04-15T08:07:18.1870985Z         parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + " " + sizes[i]
2025-04-15T08:07:18.1871049Z       );
2025-04-15T08:07:18.1871113Z     }
2025-04-15T08:07:18.1871117Z 
2025-04-15T08:07:18.1871216Z     const formatLargeNumbers = (number) => {
2025-04-15T08:07:18.1871312Z       return number.toLocaleString();
2025-04-15T08:07:18.1871374Z     }
2025-04-15T08:07:18.1871378Z 
2025-04-15T08:07:18.1871473Z     const formatTimestamp = (timestamp) => {
2025-04-15T08:07:18.1871571Z       const date = new Date(timestamp * 1000);
2025-04-15T08:07:18.1871641Z       const months = [
2025-04-15T08:07:18.1871713Z         "Jan",
2025-04-15T08:07:18.1871778Z         "Feb",
2025-04-15T08:07:18.1871851Z         "Mar",
2025-04-15T08:07:18.1871918Z         "Apr",
2025-04-15T08:07:18.1871980Z         "May",
2025-04-15T08:07:18.1872047Z         "Jun",
2025-04-15T08:07:18.1872114Z         "Jul",
2025-04-15T08:07:18.1872183Z         "Aug",
2025-04-15T08:07:18.1872246Z         "Sep",
2025-04-15T08:07:18.1872308Z         "Oct",
2025-04-15T08:07:18.1872372Z         "Nov",
2025-04-15T08:07:18.1872433Z         "Dec",
2025-04-15T08:07:18.1872501Z       ];
2025-04-15T08:07:18.1872632Z       const days = ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"];
2025-04-15T08:07:18.1872719Z       const day = days[date.getUTCDay()];
2025-04-15T08:07:18.1872820Z       const month = months[date.getUTCMonth()];
2025-04-15T08:07:18.1872906Z       const year = date.getUTCFullYear();
2025-04-15T08:07:18.1873054Z       const hours = date.getUTCHours().toString().padStart(2, "0");
2025-04-15T08:07:18.1873208Z       const minutes = date.getUTCMinutes().toString().padStart(2, "0");
2025-04-15T08:07:18.1873450Z       const seconds = date.getUTCSeconds().toString().padStart(2, "0");
2025-04-15T08:07:18.1873454Z 
2025-04-15T08:07:18.1873633Z       return `${month} ${date.getUTCDate()}, ${year} ${hours}:${minutes}:${seconds}`;
2025-04-15T08:07:18.1873697Z     }
2025-04-15T08:07:18.1873700Z 
2025-04-15T08:07:18.1873825Z     const formatDuration = (seconds, short = false) => {
2025-04-15T08:07:18.1873911Z       if (seconds <= 0) return "0 seconds";
2025-04-15T08:07:18.1874022Z       const days = Math.floor(seconds / (24 * 3600));
2025-04-15T08:07:18.1874142Z       const hours = Math.floor((seconds % (24 * 3600)) / 3600);
2025-04-15T08:07:18.1874255Z       const minutes = Math.floor((seconds % 3600) / 60);
2025-04-15T08:07:18.1874347Z       const remainingSeconds = seconds % 60;
2025-04-15T08:07:18.1874351Z 
2025-04-15T08:07:18.1874420Z       if (short) {
2025-04-15T08:07:18.1874496Z         if (days > 3) {
2025-04-15T08:07:18.1874574Z           return days + " days";
2025-04-15T08:07:18.1874656Z         } else if (days > 0) {
2025-04-15T08:07:18.1874748Z           return days * 24 + hours + " hours";
2025-04-15T08:07:18.1874812Z         }
2025-04-15T08:07:18.1874879Z       }
2025-04-15T08:07:18.1874887Z 
2025-04-15T08:07:18.1874959Z       const parts = [];
2025-04-15T08:07:18.1875100Z       if (days > 0) parts.push(days + " day" + (days > 1 ? "s" : ""));
2025-04-15T08:07:18.1875241Z       if (hours > 0) parts.push(hours + " hour" + (hours > 1 ? "s" : ""));
2025-04-15T08:07:18.1875315Z       if (minutes > 0)
2025-04-15T08:07:18.1875447Z         parts.push(minutes + " minute" + (minutes > 1 ? "s" : ""));
2025-04-15T08:07:18.1875532Z       if (remainingSeconds > 0)
2025-04-15T08:07:18.1875608Z         parts.push(
2025-04-15T08:07:18.1875764Z           remainingSeconds + " second" + (remainingSeconds > 1 ? "s" : "")
2025-04-15T08:07:18.1875830Z         );
2025-04-15T08:07:18.1875957Z       return parts.join(" • ");
2025-04-15T08:07:18.1876019Z     }
2025-04-15T08:07:18.1876028Z 
2025-04-15T08:07:18.1876215Z     const createKeyValuePairs = (
2025-04-15T08:07:18.1876294Z       containerId,
2025-04-15T08:07:18.1876368Z       dataObject,
2025-04-15T08:07:18.1876435Z       keys = null,
2025-04-15T08:07:18.1876639Z       shortFormat = false,
2025-04-15T08:07:18.1876724Z       usePercentageBar = false
2025-04-15T08:07:18.1876786Z     ) => {
2025-04-15T08:07:18.1876932Z       const container = document.getElementById(containerId);
2025-04-15T08:07:18.1877010Z       if (!container) return;
2025-04-15T08:07:18.1877161Z       if (dataObject === null || typeof dataObject !== "object") return
2025-04-15T08:07:18.1877165Z 
2025-04-15T08:07:18.1877279Z       container.innerHTML = ""; // Clear the container
2025-04-15T08:07:18.1877283Z 
2025-04-15T08:07:18.1877398Z       const keysToUse = keys || Object.keys(dataObject);
2025-04-15T08:07:18.1877403Z 
2025-04-15T08:07:18.1877493Z       keysToUse.forEach(function (key) {
2025-04-15T08:07:18.1877593Z         if (dataObject.hasOwnProperty(key)) {
2025-04-15T08:07:18.1877702Z           let value = dataObject[key].toString();
2025-04-15T08:07:18.1877789Z           if (value === "false") return;
2025-04-15T08:07:18.1877793Z 
2025-04-15T08:07:18.1877881Z           if (key === "cpu_frequency") {
2025-04-15T08:07:18.1877995Z             value = (dataObject[key] / 1e9).toFixed(2) + " GHz";
2025-04-15T08:07:18.1878067Z           } else if (
2025-04-15T08:07:18.1878139Z             key === "ram" ||
2025-04-15T08:07:18.1878209Z             key === "disk" ||
2025-04-15T08:07:18.1878290Z             key === "disk_used" ||
2025-04-15T08:07:18.1878358Z             key === "disk_max"
2025-04-15T08:07:18.1878423Z           ) {
2025-04-15T08:07:18.1878519Z             value = formatBytes(dataObject[key]);
2025-04-15T08:07:18.1878584Z           } else if (
2025-04-15T08:07:18.1878661Z             key === "samples" ||
2025-04-15T08:07:18.1878748Z             key === "currently_collected_metrics"
2025-04-15T08:07:18.1878813Z           ) {
2025-04-15T08:07:18.1878920Z             value = formatLargeNumbers(dataObject[key]);
2025-04-15T08:07:18.1879139Z           } else if (key === "from" || key === "to") {
2025-04-15T08:07:18.1879242Z             value = formatTimestamp(dataObject[key]);
2025-04-15T08:07:18.1879313Z           } else if (
2025-04-15T08:07:18.1879391Z             key === "retention" ||
2025-04-15T08:07:18.1879477Z             key === "expected_retention" ||
2025-04-15T08:07:18.1879560Z             key === "requested_retention"
2025-04-15T08:07:18.1879623Z           ) {
2025-04-15T08:07:18.1879746Z             value = formatDuration(dataObject[key], shortFormat);
2025-04-15T08:07:18.1879836Z           } else if (key === "disk_percent") {
2025-04-15T08:07:18.1880038Z             const roundedValue = Math.round(dataObject[key]); // Round the percentage value
2025-04-15T08:07:18.1880124Z             if (usePercentageBar) {
2025-04-15T08:07:18.1880252Z               setPercentageBarWidth(containerId, roundedValue);
2025-04-15T08:07:18.1880401Z               return; // No need to create key-value pair for percentage bar
2025-04-15T08:07:18.1880471Z             } else {
2025-04-15T08:07:18.1880610Z               value = roundedValue + "%"; // Append "%" to the rounded value
2025-04-15T08:07:18.1880680Z             }
2025-04-15T08:07:18.1880743Z           }
2025-04-15T08:07:18.1880748Z 
2025-04-15T08:07:18.1880825Z           const div = getDOM({
2025-04-15T08:07:18.1880894Z             tag: "div",
2025-04-15T08:07:18.1880971Z             classList: "key-value",
2025-04-15T08:07:18.1881044Z             children: [
2025-04-15T08:07:18.1881108Z               {
2025-04-15T08:07:18.1881182Z                 tag: "span",
2025-04-15T08:07:18.1881360Z                 innerText: key.charAt(0).toUpperCase() + key.slice(1).replace(/_/g, " ")
2025-04-15T08:07:18.1881426Z               },
2025-04-15T08:07:18.1881489Z               {
2025-04-15T08:07:18.1881558Z                 tag: "span",
2025-04-15T08:07:18.1881636Z                 innerText: value,
2025-04-15T08:07:18.1881721Z                 condition: value !== "true"
2025-04-15T08:07:18.1881792Z               }
2025-04-15T08:07:18.1881854Z             ]
2025-04-15T08:07:18.1881914Z           });
2025-04-15T08:07:18.1881918Z 
2025-04-15T08:07:18.1882110Z           container.appendChild(div);
2025-04-15T08:07:18.1882176Z         }
2025-04-15T08:07:18.1882240Z       });
2025-04-15T08:07:18.1882300Z     }
2025-04-15T08:07:18.1882303Z 
2025-04-15T08:07:18.1882401Z     const setupCollectedMetrics = data => {
2025-04-15T08:07:18.1882481Z       const agent = data?.agents?.[0]
2025-04-15T08:07:18.1882666Z       const metricsFromDbSize = agent?.db_size?.[0]?.currently_collected_metrics
2025-04-15T08:07:18.1882950Z       const collectedMetrics = metricsFromDbSize !== undefined ? metricsFromDbSize : agent?.metrics?.collected;
2025-04-15T08:07:18.1883105Z       const container = document.getElementById("collectedMetrics");
2025-04-15T08:07:18.1883236Z       if (collectedMetrics === undefined || !container) return;
2025-04-15T08:07:18.1883241Z 
2025-04-15T08:07:18.1883313Z       const div = getDOM({
2025-04-15T08:07:18.1883386Z         tag: "div",
2025-04-15T08:07:18.1883463Z         classList: "key-value",
2025-04-15T08:07:18.1883530Z         children: [
2025-04-15T08:07:18.1883604Z           {
2025-04-15T08:07:18.1883675Z             tag: "span",
2025-04-15T08:07:18.1883776Z             innerText: "Currently Collected Metrics"
2025-04-15T08:07:18.1883838Z           },
2025-04-15T08:07:18.1883901Z           {
2025-04-15T08:07:18.1883971Z             tag: "span",
2025-04-15T08:07:18.1884290Z             innerText: collectedMetrics > 99999 ? abbreviateNumber(collectedMetrics) : formatLargeNumbers(collectedMetrics),
2025-04-15T08:07:18.1884536Z             // ...(collectedMetrics > 99999 ? { dataset: { tooltip: formatLargeNumbers(collectedMetrics) } } : {})
2025-04-15T08:07:18.1884600Z           }
2025-04-15T08:07:18.1884662Z         ]
2025-04-15T08:07:18.1884723Z       });
2025-04-15T08:07:18.1884726Z 
2025-04-15T08:07:18.1884810Z       container.appendChild(div);
2025-04-15T08:07:18.1884874Z     }
2025-04-15T08:07:18.1884963Z 
2025-04-15T08:07:18.1885037Z     const buildTier = ({
2025-04-15T08:07:18.1885107Z       tier: index,
2025-04-15T08:07:18.1885171Z       granularity,
2025-04-15T08:07:18.1885237Z       metrics,
2025-04-15T08:07:18.1885303Z       samples,
2025-04-15T08:07:18.1885371Z       retention_human,
2025-04-15T08:07:18.1885450Z       expected_retention_human,
2025-04-15T08:07:18.1885526Z       requested_retention_human,
2025-04-15T08:07:18.1885588Z       disk_used,
2025-04-15T08:07:18.1885656Z       disk_percent,
2025-04-15T08:07:18.1885718Z       disk_max,
2025-04-15T08:07:18.1885783Z       ...rest
2025-04-15T08:07:18.1885842Z     }) => {
2025-04-15T08:07:18.1885989Z       const disk_used_exists = disk_used !== null && !isNaN(disk_used)
2025-04-15T08:07:18.1886222Z       const disk_max_exists = disk_max !== null && !isNaN(disk_max)
2025-04-15T08:07:18.1886226Z 
2025-04-15T08:07:18.1886307Z       const contentsStructure = {
2025-04-15T08:07:18.1886376Z         tag: "tr",
2025-04-15T08:07:18.1886445Z         children: [
2025-04-15T08:07:18.1886507Z           {
2025-04-15T08:07:18.1886573Z             tag: "td",
2025-04-15T08:07:18.1886650Z             classList: "cell-data",
2025-04-15T08:07:18.1886730Z             textContent: index
2025-04-15T08:07:18.1886790Z           },
2025-04-15T08:07:18.1886853Z           {
2025-04-15T08:07:18.1886917Z             tag: "td",
2025-04-15T08:07:18.1886991Z             classList: "cell-data",
2025-04-15T08:07:18.1887073Z             textContent: granularity
2025-04-15T08:07:18.1887133Z           },
2025-04-15T08:07:18.1887195Z           {
2025-04-15T08:07:18.1887258Z             tag: "td",
2025-04-15T08:07:18.1887354Z             classList: "cell-data section-start",
2025-04-15T08:07:18.1887421Z             children: [
2025-04-15T08:07:18.1887482Z               {
2025-04-15T08:07:18.1887555Z                 tag: "span",
2025-04-15T08:07:18.1887658Z                 textContent: abbreviateNumber(metrics),
2025-04-15T08:07:18.1887782Z                 // dataset: { tooltip: formatLargeNumbers(metrics) }
2025-04-15T08:07:18.1887848Z               }
2025-04-15T08:07:18.1887908Z             ]
2025-04-15T08:07:18.1887972Z           },
2025-04-15T08:07:18.1888148Z           {
2025-04-15T08:07:18.1888222Z             tag: "td",
2025-04-15T08:07:18.1888297Z             classList: "cell-data",
2025-04-15T08:07:18.1888367Z             children: [
2025-04-15T08:07:18.1888429Z               {
2025-04-15T08:07:18.1888497Z                 tag: "span",
2025-04-15T08:07:18.1888598Z                 textContent: abbreviateNumber(samples),
2025-04-15T08:07:18.1888713Z                 // dataset: { tooltip: formatLargeNumbers(samples) }
2025-04-15T08:07:18.1888778Z               }
2025-04-15T08:07:18.1888837Z             ]
2025-04-15T08:07:18.1888898Z           },
2025-04-15T08:07:18.1888961Z           {
2025-04-15T08:07:18.1889026Z             tag: "td",
2025-04-15T08:07:18.1889120Z             classList: "cell-data section-start",
2025-04-15T08:07:18.1889212Z             textContent: retention_human || "-"
2025-04-15T08:07:18.1889277Z           },
2025-04-15T08:07:18.1889340Z           {
2025-04-15T08:07:18.1889404Z             tag: "td",
2025-04-15T08:07:18.1889488Z             classList: "cell-data",
2025-04-15T08:07:18.1889593Z             textContent: expected_retention_human || "-"
2025-04-15T08:07:18.1889654Z           },
2025-04-15T08:07:18.1889718Z           {
2025-04-15T08:07:18.1889782Z             tag: "td",
2025-04-15T08:07:18.1889863Z             classList: "cell-data",
2025-04-15T08:07:18.1889970Z             textContent: requested_retention_human || "-"
2025-04-15T08:07:18.1890031Z           },
2025-04-15T08:07:18.1890095Z           {
2025-04-15T08:07:18.1890163Z             tag: "td",
2025-04-15T08:07:18.1890262Z             classList: "cell-data section-start",
2025-04-15T08:07:18.1890329Z             children: [
2025-04-15T08:07:18.1890393Z               {
2025-04-15T08:07:18.1890514Z                 className: "progress-indicator flex flex-col",
2025-04-15T08:07:18.1890698Z                 children: [
2025-04-15T08:07:18.1890762Z                   {
2025-04-15T08:07:18.1890832Z                     tag: "span",
2025-04-15T08:07:18.1890991Z                     textContent: disk_used_exists ? formatBytes(disk_used) : "-"
2025-04-15T08:07:18.1891054Z                   },
2025-04-15T08:07:18.1891135Z                   ...(disk_used_exists ? [{
2025-04-15T08:07:18.1891239Z                     className: "progress-bar-container",
2025-04-15T08:07:18.1891309Z                     children: [
2025-04-15T08:07:18.1891375Z                       {
2025-04-15T08:07:18.1891466Z                         className: "progress-bar",
2025-04-15T08:07:18.1891542Z                         dataset: {
2025-04-15T08:07:18.1891624Z                           fill: disk_percent
2025-04-15T08:07:18.1891690Z                         }
2025-04-15T08:07:18.1891756Z                       }
2025-04-15T08:07:18.1891818Z                     ]
2025-04-15T08:07:18.1891885Z                   }] : [])
2025-04-15T08:07:18.1891954Z                 ]
2025-04-15T08:07:18.1892015Z               }
2025-04-15T08:07:18.1892077Z             ]
2025-04-15T08:07:18.1892137Z           },
2025-04-15T08:07:18.1892206Z           {
2025-04-15T08:07:18.1892272Z             tag: "td",
2025-04-15T08:07:18.1892353Z             classList: "cell-data",
2025-04-15T08:07:18.1892500Z             textContent: disk_max_exists ? formatBytes(disk_max) : "-"
2025-04-15T08:07:18.1892562Z           }
2025-04-15T08:07:18.1892626Z         ]
2025-04-15T08:07:18.1892687Z       }
2025-04-15T08:07:18.1892691Z 
2025-04-15T08:07:18.1892783Z       return getDOM(contentsStructure);
2025-04-15T08:07:18.1892844Z     }
2025-04-15T08:07:18.1892848Z 
2025-04-15T08:07:18.1892924Z     const buildTiers = () => {
2025-04-15T08:07:18.1893023Z       const tiers = data.agents[0].db_size || [];
2025-04-15T08:07:18.1893230Z       const placeholder = document.getElementById("tiers-table-data-placeholder");
2025-04-15T08:07:18.1893321Z       if (placeholder && !!tiers.length) {
2025-04-15T08:07:18.1893413Z         const rows = tiers.map(buildTier)
2025-04-15T08:07:18.1893500Z         placeholder.replaceWith(...rows);
2025-04-15T08:07:18.1893564Z       }
2025-04-15T08:07:18.1893651Z 
2025-04-15T08:07:18.1893733Z       return Promise.resolve()
2025-04-15T08:07:18.1893794Z     }
2025-04-15T08:07:18.1893798Z 
2025-04-15T08:07:18.1893885Z     const setupProgressBars = () => {
2025-04-15T08:07:18.1894037Z       document.querySelectorAll(".progress-bar").forEach(el => {
2025-04-15T08:07:18.1894118Z         const fill = el.dataset.fill
2025-04-15T08:07:18.1894194Z         el.style.width = `${fill}%`
2025-04-15T08:07:18.1894257Z       })
2025-04-15T08:07:18.1894317Z     }
2025-04-15T08:07:18.1894320Z 
2025-04-15T08:07:18.1894486Z     createKeyValuePairs("kernel", data.agents[0].application.os, [
2025-04-15T08:07:18.1894548Z       "kernel",
2025-04-15T08:07:18.1894610Z     ]);
2025-04-15T08:07:18.1894792Z     createKeyValuePairs("kernelVersion", data.agents[0].application.os, [
2025-04-15T08:07:18.1894870Z       "kernel_version",
2025-04-15T08:07:18.1894933Z     ]);
2025-04-15T08:07:18.1895097Z     createKeyValuePairs("id", data.agents[0].application.os, ["id"]);
2025-04-15T08:07:18.1895268Z     createKeyValuePairs("os", data.agents[0].application.os, ["os"]);
2025-04-15T08:07:18.1895272Z 
2025-04-15T08:07:18.1895449Z     createKeyValuePairs("package", data.agents[0].application.package, [
2025-04-15T08:07:18.1895514Z       "version",
2025-04-15T08:07:18.1895578Z     ]);
2025-04-15T08:07:18.1895657Z     createKeyValuePairs(
2025-04-15T08:07:18.1895727Z       "directories",
2025-04-15T08:07:18.1895823Z       data.agents[0].application.directories
2025-04-15T08:07:18.1895888Z     );
2025-04-15T08:07:18.1896018Z     createKeyValuePairs("server", data.agents[0], ["nm"]);
2025-04-15T08:07:18.1896277Z     createKeyValuePairs("cpuCores", data.agents[0].application.hw, [
2025-04-15T08:07:18.1896350Z       "cpu_cores",
2025-04-15T08:07:18.1896411Z     ]);
2025-04-15T08:07:18.1896587Z     createKeyValuePairs("cpuFrequency", data.agents[0].application.hw, [
2025-04-15T08:07:18.1896774Z       "cpu_frequency",
2025-04-15T08:07:18.1896834Z     ]);
2025-04-15T08:07:18.1897008Z     createKeyValuePairs("ram", data.agents[0].application.hw, ["ram"]);
2025-04-15T08:07:18.1897178Z     createKeyValuePairs("disk", data.agents[0].application.hw, ["disk"]);
2025-04-15T08:07:18.1897366Z     createKeyValuePairs("cpuArchitecture", data.agents[0].application.hw, [
2025-04-15T08:07:18.1897440Z       "cpu_architecture",
2025-04-15T08:07:18.1897502Z     ]);
2025-04-15T08:07:18.1897680Z     createKeyValuePairs("virtualization", data.agents[0].application.hw, [
2025-04-15T08:07:18.1897752Z       "virtualization",
2025-04-15T08:07:18.1897816Z     ]);
2025-04-15T08:07:18.1897985Z     createKeyValuePairs("cloud_status", data.agents[0].cloud, ["status"]);
2025-04-15T08:07:18.1898139Z     createKeyValuePairs("nodes_streaming", data.agents[0].nodes);
2025-04-15T08:07:18.1898311Z     createKeyValuePairs("plugins", data.agents[0].application.plugins);
2025-04-15T08:07:18.1898466Z     createKeyValuePairs("libs", data.agents[0].application.libs);
2025-04-15T08:07:18.1898657Z     createKeyValuePairs("exporters", data.agents[0].application.exporters);
2025-04-15T08:07:18.1898744Z     setupCollectedMetrics(data);
2025-04-15T08:07:18.1898748Z 
2025-04-15T08:07:18.1898852Z     buildTiers().then(() => setupProgressBars())
2025-04-15T08:07:18.1898856Z 
2025-04-15T08:07:18.1898935Z     return Promise.resolve();
2025-04-15T08:07:18.1898999Z   }
2025-04-15T08:07:18.1899003Z 
2025-04-15T08:07:18.1899080Z   const initTooltips = () => {
2025-04-15T08:07:18.1899204Z     const tooltip = document.getElementById("tooltip");
2025-04-15T08:07:18.1899277Z     if (!tooltip) return;
2025-04-15T08:07:18.1899281Z 
2025-04-15T08:07:18.1899434Z     document.querySelectorAll("[data-tooltip]").forEach(elem => {
2025-04-15T08:07:18.1899540Z       elem.addEventListener("mouseenter", () => {
2025-04-15T08:07:18.1899632Z         const content = elem.dataset.tooltip;
2025-04-15T08:07:18.1899743Z         const rect = elem.getBoundingClientRect();
2025-04-15T08:07:18.1899826Z         const top = rect.bottom + 10;
2025-04-15T08:07:18.1900008Z         const left = rect.x;
2025-04-15T08:07:18.1900100Z         tooltip.textContent = content;
2025-04-15T08:07:18.1900186Z         tooltip.style.top = `${top}px`;
2025-04-15T08:07:18.1900273Z         tooltip.style.left = `${left}px`;
2025-04-15T08:07:18.1900360Z         tooltip.style.display = "block";
2025-04-15T08:07:18.1900425Z       });
2025-04-15T08:07:18.1900428Z 
2025-04-15T08:07:18.1900529Z       elem.addEventListener("mouseleave", () => {
2025-04-15T08:07:18.1900611Z         tooltip.textContent = "";
2025-04-15T08:07:18.1900697Z         tooltip.style.display = "none";
2025-04-15T08:07:18.1900758Z       })
2025-04-15T08:07:18.1900820Z     })
2025-04-15T08:07:18.1900878Z   }
2025-04-15T08:07:18.1900882Z 
2025-04-15T08:07:18.1900941Z   /**
2025-04-15T08:07:18.1901040Z    * Get agent info and initialize splash screen
2025-04-15T08:07:18.1901104Z    */
2025-04-15T08:07:18.1901196Z   const initSplashScreen = async () => {
2025-04-15T08:07:18.1901329Z     const msgSignIn = document.getElementById("msgSignIn");
2025-04-15T08:07:18.1901463Z     const btnSignIn = document.getElementById("btnSignIn");
2025-04-15T08:07:18.1901559Z     msgSignIn.textContent = "Please wait..."
2025-04-15T08:07:18.1901645Z     btnSignIn.style.display = "none"
2025-04-15T08:07:18.1901649Z 
2025-04-15T08:07:18.1901741Z     const agentInfo = await getAgentInfo()
2025-04-15T08:07:18.1901745Z 
2025-04-15T08:07:18.1902105Z     if (!agentInfo || !Array.isArray(agentInfo.agents) || !agentInfo.agents[0]) return Promise.reject({ message: "No agent data available." })
2025-04-15T08:07:18.1902110Z 
2025-04-15T08:07:18.1902216Z     const agent = (agentInfo?.agents || [])[0] || {}
2025-04-15T08:07:18.1902319Z     const status = agent.cloud && agent.cloud.status
2025-04-15T08:07:18.1902435Z     const claimId = agent.cloud && agent.cloud.claim_id
2025-04-15T08:07:18.1902538Z     const cloudUrl = agent.cloud && agent.cloud.url
2025-04-15T08:07:18.1902627Z 
2025-04-15T08:07:18.1902721Z     window.localNetdataRegistry = {
2025-04-15T08:07:18.1902800Z       hostname: agent.nm,
2025-04-15T08:07:18.1902865Z       mg: agent.mg,
2025-04-15T08:07:18.1902933Z       nd: agent.nd,
2025-04-15T08:07:18.1903001Z       claimId: claimId,
2025-04-15T08:07:18.1903084Z       xNetdataAuthHeader: true
2025-04-15T08:07:18.1903144Z     }
2025-04-15T08:07:18.1903147Z 
2025-04-15T08:07:18.1903331Z     window.envSettings.cloudUrl = cloudUrl || window.envSettings.cloudUrl
2025-04-15T08:07:18.1903506Z     window.envSettings.apiUrl = cloudUrl || window.envSettings.apiUrl
2025-04-15T08:07:18.1903510Z 
2025-04-15T08:07:18.1903663Z     const isCloudSignedIn = !!localStorage.getItem(CLOUD_TOKEN_KEY)
2025-04-15T08:07:18.1903667Z 
2025-04-15T08:07:18.1903746Z     if (!isCloudSignedIn) {
2025-04-15T08:07:18.1903834Z       msgSignIn.style.display = "inline"
2025-04-15T08:07:18.1903961Z       msgSignIn.textContent = "Please sign-in to continue"
2025-04-15T08:07:18.1904053Z       btnSignIn.style.display = "block"
2025-04-15T08:07:18.1904112Z     }
2025-04-15T08:07:18.1904117Z 
2025-04-15T08:07:18.1904195Z     initMetrics(agentInfo)
2025-04-15T08:07:18.1904199Z 
2025-04-15T08:07:18.1904350Z     if (!claimId && isCloudSignedIn && !window.envSettings.isLocal) {
2025-04-15T08:07:18.1904437Z       setShouldClaimStatus(true);
2025-04-15T08:07:18.1904517Z       prepareClaiming(agent)
2025-04-15T08:07:18.1904627Z       return Promise.resolve({ stopLoading: true })
2025-04-15T08:07:18.1904688Z     }
2025-04-15T08:07:18.1904692Z 
2025-04-15T08:07:18.1904774Z     let me = await checkMe(agent.mg)
2025-04-15T08:07:18.1904777Z 
2025-04-15T08:07:18.1904956Z     if (isCloudSignedIn && agent.nd && (me.auth === "none" || me.auth === "god")) {
2025-04-15T08:07:18.1905173Z       await getAgentToken({ mg: agent.mg, nd: agent.nd, claimId: agent.cloud.claim_id }, agent)
2025-04-15T08:07:18.1905255Z       me = await checkMe(agent.mg)
2025-04-15T08:07:18.1905321Z     }
2025-04-15T08:07:18.1905324Z 
2025-04-15T08:07:18.1905488Z     const claimStatusesToProceed = ["online", "indirect", "offline"]
2025-04-15T08:07:18.1905492Z 
2025-04-15T08:07:18.1905782Z     if ((me.auth === "bearer" || me.auth === "god") && claimStatusesToProceed.includes(status)) {
2025-04-15T08:07:18.1905886Z       await fetchUserAccess(agent.mg, agent.nd)
2025-04-15T08:07:18.1905963Z       return loadDashboard()
2025-04-15T08:07:18.1906149Z     } else if (window.envSettings.isLocal) {
2025-04-15T08:07:18.1906229Z       return loadDashboard()
2025-04-15T08:07:18.1906291Z     } else {
2025-04-15T08:07:18.1906390Z       await fetchUserAccess(agent.mg, agent.nd)
2025-04-15T08:07:18.1906451Z     }
2025-04-15T08:07:18.1906454Z 
2025-04-15T08:07:18.1906532Z     if (!isCloudSignedIn) {
2025-04-15T08:07:18.1906614Z       setupOptOutMessage(agent)
2025-04-15T08:07:18.1906721Z       return Promise.resolve({ stopLoading: true })
2025-04-15T08:07:18.1906784Z     }
2025-04-15T08:07:18.1906788Z 
2025-04-15T08:07:18.1906872Z     return Promise.resolve()
2025-04-15T08:07:18.1906935Z   }
2025-04-15T08:07:18.1906938Z 
2025-04-15T08:07:18.1907023Z   // =============================================== //
2025-04-15T08:07:18.1907026Z 
2025-04-15T08:07:18.1907158Z   document.addEventListener("DOMContentLoaded", () => {
2025-04-15T08:07:18.1907225Z     initGrid();
2025-04-15T08:07:18.1907309Z     initPrimaryButtonHover();
2025-04-15T08:07:18.1907379Z     toggleTab(1);
2025-04-15T08:07:18.1907443Z     initTabs();
2025-04-15T08:07:18.1907447Z 
2025-04-15T08:07:18.1907595Z     fetchRegistryInfo().then(initSplashScreen).then(data => {
2025-04-15T08:07:18.1907671Z       if (data?.stopLoading) {
2025-04-15T08:07:18.1907740Z         stopLoading()
2025-04-15T08:07:18.1907806Z       }
2025-04-15T08:07:18.1907878Z       initTooltips()
2025-04-15T08:07:18.1907949Z     }).catch(err => {
2025-04-15T08:07:18.1908032Z       showErrorMessage(err?.message)
2025-04-15T08:07:18.1908096Z     })
2025-04-15T08:07:18.1908406Z   });</script></html><!doctype html><html lang="en" dir="ltr"><head><meta charset="utf-8"/><title>Netdata</title><script>const CONFIG = {
2025-04-15T08:07:18.1908596Z       cache: {
2025-04-15T08:07:18.1908675Z         agentInfo: false,
2025-04-15T08:07:18.1908747Z         cloudToken: true,
2025-04-15T08:07:18.1908821Z         agentToken: true,
2025-04-15T08:07:18.1908884Z       }
2025-04-15T08:07:18.1908943Z     }
2025-04-15T08:07:18.1908947Z 
2025-04-15T08:07:18.1909099Z     // STATE MANAGEMENT ======================================================================== //
2025-04-15T08:07:18.1909165Z     const state = {
2025-04-15T08:07:18.1909232Z       loading: {
2025-04-15T08:07:18.1909299Z         spaces: false,
2025-04-15T08:07:18.1909366Z         rooms: false,
2025-04-15T08:07:18.1909441Z         claimingToken: false,
2025-04-15T08:07:18.1909515Z         claimingAgent: false
2025-04-15T08:07:18.1909579Z       },
2025-04-15T08:07:18.1909641Z       claim: {
2025-04-15T08:07:18.1909709Z         status: {},
2025-04-15T08:07:18.1909782Z         response: {},
2025-04-15T08:07:18.1909854Z         shouldClaim: false,
2025-04-15T08:07:18.1909923Z         step: 1,
2025-04-15T08:07:18.1910004Z         selectedSpaceIds: [],
2025-04-15T08:07:18.1910085Z         selectedRoomIds: [],
2025-04-15T08:07:18.1910154Z         privateKey: ""
2025-04-15T08:07:18.1910215Z       },
2025-04-15T08:07:18.1910285Z       cache: {
2025-04-15T08:07:18.1910358Z         spaces: undefined,
2025-04-15T08:07:18.1910425Z         rooms: {},
2025-04-15T08:07:18.1910511Z         claimingTokensPerSpace: {}
2025-04-15T08:07:18.1910571Z       }
2025-04-15T08:07:18.1910634Z     }
2025-04-15T08:07:18.1910638Z 
2025-04-15T08:07:18.1910725Z     const getSelectedRooms = state => {
2025-04-15T08:07:18.1910990Z       const spaceId = state.claim.selectedSpaceIds.length ? state.claim.selectedSpaceIds[0] : null;
2025-04-15T08:07:18.1911067Z       if (!spaceId) return [];
2025-04-15T08:07:18.1911180Z       if (state.claim.selectedRoomIds.length) {
2025-04-15T08:07:18.1911444Z         return state.cache?.rooms?.[spaceId]?.filter(({ id }) => state.claim.selectedRoomIds.includes(id)) || [];
2025-04-15T08:07:18.1911505Z       }
2025-04-15T08:07:18.1911683Z       return [];
2025-04-15T08:07:18.1911747Z     }
2025-04-15T08:07:18.1911751Z 
2025-04-15T08:07:18.1911828Z     const syncUI = () => {
2025-04-15T08:07:18.1911891Z       // Elements
2025-04-15T08:07:18.1912085Z       const splashMessage = document.getElementById("splashMessageContainer");
2025-04-15T08:07:18.1912268Z       const claiming = document.getElementById("claimingContentsContainer");
2025-04-15T08:07:18.1912409Z       const step1 = document.getElementById("connectionStep-1");
2025-04-15T08:07:18.1912548Z       const step2 = document.getElementById("connectionStep-2");
2025-04-15T08:07:18.1912715Z       const btnPrev = document.getElementById("btnConnectionStepPrev");
2025-04-15T08:07:18.1912878Z       const btnNext = document.getElementById("btnConnectionStepNext");
2025-04-15T08:07:18.1913003Z       const btnClaim = document.getElementById("btnClaim");
2025-04-15T08:07:18.1913168Z       const roomsSelector = document.getElementById("roomsSelector");
2025-04-15T08:07:18.1913360Z       const claimErrorMessage = document.getElementById("claimErrorMessage");
2025-04-15T08:07:18.1913364Z 
2025-04-15T08:07:18.1913426Z       // State
2025-04-15T08:07:18.1913839Z       const { spaces: spacesLoading, rooms: roomsLoading, claimingToken: claimingTokenLoading, claimingAgent: claimingAgentLoading } = state.loading;
2025-04-15T08:07:18.1914072Z       const { shouldClaim, step, selectedSpaceIds, selectedRoomIds, privateKey } = state.claim;
2025-04-15T08:07:18.1914515Z       const claimingTokenExists = state.claim.selectedSpaceIds.length ? !!state.cache.claimingTokensPerSpace[state.claim.selectedSpaceIds[0]] : false;
2025-04-15T08:07:18.1914519Z 
2025-04-15T08:07:18.1914684Z       splashMessage.style.display = !shouldClaim ? "initial" : "none";
2025-04-15T08:07:18.1914826Z       claiming.style.display = shouldClaim ? "initial" : "none";
2025-04-15T08:07:18.1914928Z 
2025-04-15T08:07:18.1915003Z       // Loading spaces
2025-04-15T08:07:18.1915071Z       if (step1) {
2025-04-15T08:07:18.1915209Z         const spacesLoader = step1.querySelector(".loader");
2025-04-15T08:07:18.1915288Z         if (spacesLoader) {
2025-04-15T08:07:18.1915463Z           spacesLoader.style.display = spacesLoading ? "initial" : "none";
2025-04-15T08:07:18.1915527Z         }
2025-04-15T08:07:18.1915594Z       }
2025-04-15T08:07:18.1915598Z 
2025-04-15T08:07:18.1915665Z       // Loading rooms
2025-04-15T08:07:18.1915740Z       if (roomsSelector) {
2025-04-15T08:07:18.1915899Z         const message = roomsSelector.querySelector(".selected-items");
2025-04-15T08:07:18.1916211Z         const selectedRoomNames = getSelectedRooms(state).map(({ name }) => name).join(", ");
2025-04-15T08:07:18.1916290Z         if (message) {
2025-04-15T08:07:18.1916533Z           message.innerText = roomsLoading ? "Loading rooms..." : (selectedRoomNames || "Select room");
2025-04-15T08:07:18.1916607Z         }
2025-04-15T08:07:18.1916669Z       }
2025-04-15T08:07:18.1916673Z 
2025-04-15T08:07:18.1916746Z       // Steps visibility
2025-04-15T08:07:18.1916879Z       step1.style.display = step == 1 ? "initial" : "none";
2025-04-15T08:07:18.1916995Z       step2.style.display = step == 2 ? "initial" : "none";
2025-04-15T08:07:18.1916999Z 
2025-04-15T08:07:18.1917067Z       // Rooms
2025-04-15T08:07:18.1917136Z       if (step == 1) {
2025-04-15T08:07:18.1917206Z         // Reset rooms
2025-04-15T08:07:18.1917561Z         const checkboxes = document.getElementById("roomsSelectorOptionsContainer").querySelectorAll('input[type="checkbox"]');
2025-04-15T08:07:18.1917657Z         checkboxes.forEach((checkbox) => {
2025-04-15T08:07:18.1917743Z           if (checkbox.checked) {
2025-04-15T08:07:18.1917826Z             checkbox.checked = false;
2025-04-15T08:07:18.1917945Z             checkbox.dispatchEvent(new Event("change"));
2025-04-15T08:07:18.1918009Z           }
2025-04-15T08:07:18.1918070Z         });
2025-04-15T08:07:18.1918141Z       }
2025-04-15T08:07:18.1918144Z 
2025-04-15T08:07:18.1918224Z       if (claimErrorMessage) {
2025-04-15T08:07:18.1918574Z         claimErrorMessage.style.display = state.claim?.response?.error ? "initial" : "none";
2025-04-15T08:07:18.1918835Z         claimErrorMessage.innerText = state.claim?.response?.error ? state.claim.response.error : "";
2025-04-15T08:07:18.1918902Z       }
2025-04-15T08:07:18.1918906Z 
2025-04-15T08:07:18.1918968Z       // Footer
2025-04-15T08:07:18.1919076Z       btnPrev.style.opacity = step == 1 ? "0" : "1";
2025-04-15T08:07:18.1919221Z       btnPrev.style.cursor = step == 1 ? "default" : "pointer";
2025-04-15T08:07:18.1919308Z       btnPrev.disabled = step == 1;
2025-04-15T08:07:18.1919448Z       btnNext.style.display = step == 1 ? "initial" : "none";
2025-04-15T08:07:18.1919561Z       btnNext.disabled = !selectedSpaceIds.length;
2025-04-15T08:07:18.1919698Z       btnClaim.style.display = step == 2 ? "initial" : "none";
2025-04-15T08:07:18.1920075Z       btnClaim.disabled = !selectedRoomIds.length || !privateKey || !claimingTokenExists || claimingTokenLoading || claimingAgentLoading;
2025-04-15T08:07:18.1920267Z       btnClaim.textContent = claimingAgentLoading ? "Claiming..." : "Claim";
2025-04-15T08:07:18.1920271Z 
2025-04-15T08:07:18.1920354Z       return Promise.resolve();
2025-04-15T08:07:18.1920418Z     }
2025-04-15T08:07:18.1920422Z 
2025-04-15T08:07:18.1920540Z     const toggleSpacesLoadingState = isLoading => {
2025-04-15T08:07:18.1920667Z       state.loading = { ...state.loading, spaces: isLoading };
2025-04-15T08:07:18.1920742Z       return syncUI();
2025-04-15T08:07:18.1920807Z     }
2025-04-15T08:07:18.1920810Z 
2025-04-15T08:07:18.1920925Z     const toggleRoomsLoadingState = isLoading => {
2025-04-15T08:07:18.1921050Z       state.loading = { ...state.loading, rooms: isLoading };
2025-04-15T08:07:18.1921121Z       return syncUI();
2025-04-15T08:07:18.1921186Z     }
2025-04-15T08:07:18.1921190Z 
2025-04-15T08:07:18.1921328Z     const toggleClaimingTokenLoadingState = isLoading => {
2025-04-15T08:07:18.1921596Z       state.loading = { ...state.loading, claimingToken: isLoading };
2025-04-15T08:07:18.1921667Z       return syncUI();
2025-04-15T08:07:18.1921732Z     }
2025-04-15T08:07:18.1921741Z 
2025-04-15T08:07:18.1921874Z     const toggleClaimingAgentLoadingState = isLoading => {
2025-04-15T08:07:18.1922016Z       state.loading = { ...state.loading, claimingAgent: isLoading };
2025-04-15T08:07:18.1922090Z       return syncUI();
2025-04-15T08:07:18.1922152Z     }
2025-04-15T08:07:18.1922156Z 
2025-04-15T08:07:18.1922266Z     const setShouldClaimStatus = shouldClaim => {
2025-04-15T08:07:18.1922370Z       state.claim = { ...state.claim, shouldClaim };
2025-04-15T08:07:18.1922443Z       return syncUI();
2025-04-15T08:07:18.1922506Z     }
2025-04-15T08:07:18.1922510Z 
2025-04-15T08:07:18.1922605Z     const setClaimStatusState = status => {
2025-04-15T08:07:18.1922700Z       state.claim = { ...state.claim, status };
2025-04-15T08:07:18.1922769Z       return syncUI();
2025-04-15T08:07:18.1922840Z     }
2025-04-15T08:07:18.1922844Z 
2025-04-15T08:07:18.1922944Z     const setClaimResponseState = response => {
2025-04-15T08:07:18.1923043Z       state.claim = { ...state.claim, response };
2025-04-15T08:07:18.1923118Z       return syncUI();
2025-04-15T08:07:18.1923179Z     }
2025-04-15T08:07:18.1923183Z 
2025-04-15T08:07:18.1923278Z     const setClaimingStep = async arg => {
2025-04-15T08:07:18.1923452Z       const nextStep = typeof arg == "function" ? arg(state.claim.step) : arg;
2025-04-15T08:07:18.1923725Z       state.claim = { ...state.claim, step: nextStep, ...(nextStep == 1 ? { selectedRoomIds: [], privateKey: "" } : {}) };
2025-04-15T08:07:18.1923794Z       await syncUI();
2025-04-15T08:07:18.1923884Z       return Promise.resolve(nextStep);
2025-04-15T08:07:18.1923949Z     }
2025-04-15T08:07:18.1923952Z 
2025-04-15T08:07:18.1924049Z     const setSelectedSpacesStatus = arg => {
2025-04-15T08:07:18.1924341Z       const spaceIds = typeof arg == "function" ? arg(state.claim.selectedSpaceIds) : Array.isArray(arg) ? arg : [arg];
2025-04-15T08:07:18.1924679Z       state.claim = { ...state.claim, selectedSpaceIds: spaceIds, selectedRoomIds: [], privateKey: "" };
2025-04-15T08:07:18.1924757Z       return syncUI();
2025-04-15T08:07:18.1924816Z     }
2025-04-15T08:07:18.1924820Z 
2025-04-15T08:07:18.1924912Z     const setSelectedRoomsStatus = arg => {
2025-04-15T08:07:18.1925204Z       const roomIds = typeof arg == "function" ? arg(state.claim.selectedRoomIds) : Array.isArray(arg) ? arg : [arg];
2025-04-15T08:07:18.1925342Z       state.claim = { ...state.claim, selectedRoomIds: roomIds };
2025-04-15T08:07:18.1925415Z       return syncUI();
2025-04-15T08:07:18.1925477Z     }
2025-04-15T08:07:18.1925481Z 
2025-04-15T08:07:18.1925610Z     const setClaimingPrivateKeyState = (value = "") => {
2025-04-15T08:07:18.1925725Z       state.claim = { ...state.claim, privateKey: value };
2025-04-15T08:07:18.1925794Z       return syncUI();
2025-04-15T08:07:18.1925860Z     }
2025-04-15T08:07:18.1925869Z 
2025-04-15T08:07:18.1925955Z     const cacheSpaces = (spaces) => {
2025-04-15T08:07:18.1926147Z       if (!spaces) return Promise.resolve([]);
2025-04-15T08:07:18.1926240Z       state.cache.spaces = spaces;
2025-04-15T08:07:18.1926331Z       return Promise.resolve(spaces);
2025-04-15T08:07:18.1926391Z     }
2025-04-15T08:07:18.1926394Z 
2025-04-15T08:07:18.1926489Z     const cacheRooms = (spaceId, rooms) => {
2025-04-15T08:07:18.1926588Z       if (!spaceId) return Promise.resolve([]);
2025-04-15T08:07:18.1926732Z       state.cache.rooms = { ...state.cache.rooms, [spaceId]: rooms };
2025-04-15T08:07:18.1926821Z       return Promise.resolve(rooms);
2025-04-15T08:07:18.1926882Z     }
2025-04-15T08:07:18.1926886Z 
2025-04-15T08:07:18.1927003Z     const cacheClaimingToken = (spaceId, token) => {
2025-04-15T08:07:18.1927113Z       if (!spaceId || !token) return Promise.resolve();
2025-04-15T08:07:18.1927385Z       state.cache.claimingTokensPerSpace = { ...state.cache.claimingTokensPerSpace, [spaceId]: token };
2025-04-15T08:07:18.1927612Z       return Promise.resolve(token);
2025-04-15T08:07:18.1927674Z     }
2025-04-15T08:07:18.1927677Z 
2025-04-15T08:07:18.1927784Z     // ========================================================================================= //
2025-04-15T08:07:18.1927789Z 
2025-04-15T08:07:18.1928023Z     const pathsRegex = /\/(spaces|nodes|overview|alerts|dashboards|anomalies|events|cloud|v3)\/?.*/;
2025-04-15T08:07:18.1928108Z     function getBasename() {
2025-04-15T08:07:18.1928326Z       return window.location.origin + window.location.pathname.replace(pathsRegex, "")
2025-04-15T08:07:18.1928387Z     }
2025-04-15T08:07:18.1928390Z 
2025-04-15T08:07:18.1928475Z     let goToOld = function(path) {
2025-04-15T08:07:18.1928562Z       let goToUrl = getBasename() + path;
2025-04-15T08:07:18.1928641Z       if (path !== "/v3") {
2025-04-15T08:07:18.1928869Z         let pathsRegex = /(\/(spaces|nodes|overview|alerts|dashboards|anomalies|events|cloud|v3)\/?.*)/
2025-04-15T08:07:18.1929072Z         if (pathsRegex.test(window.location.origin + window.location.pathname)) {
2025-04-15T08:07:18.1929313Z           goToUrl = (window.location.origin + window.location.pathname).replace(pathsRegex, "/v3$1")
2025-04-15T08:07:18.1929379Z         }
2025-04-15T08:07:18.1929448Z       }
2025-04-15T08:07:18.1929646Z       window.location.replace(ensureOneSlash(goToUrl + window.location.search))
2025-04-15T08:07:18.1929714Z     }
2025-04-15T08:07:18.1929717Z 
2025-04-15T08:07:18.1929861Z     const searchParams = new URLSearchParams(location.search);
2025-04-15T08:07:18.1929944Z     window.envSettings = {
2025-04-15T08:07:18.1930016Z       isAgent: true,
2025-04-15T08:07:18.1930119Z       apiUrl: "https://app.netdata.cloud",
2025-04-15T08:07:18.1930224Z       cloudUrl: "https://app.netdata.cloud",
2025-04-15T08:07:18.1930307Z       demoSlug: "netdata-demo",
2025-04-15T08:07:18.1932666Z       demoFavourites: {"postgresql":["Applications-0_Postgres-1"],"redis":["Applications-0_Redis-1"],"dns-query":["Applications-0_CoreDNS-1"],"http-endpoints":["Applications-0_HTTP_Checks-1"],"nginx":["Applications-0_web_log-1","Applications-0_Nginx-1"],"apache":["Applications-0_Apache-1"],"host-reachability":["Synthetic_Checks-0"],"cassandra":["Applications-0_Cassandra-1"],"coredns":["Applications-0_CoreDNS-1"],"logind":["Applications-0_systemd_LoginD-1"],"iis":["Applications-0_MS_IIS-1"],"active-directory":["Applications-0_MS_Active_Directory-1"],"windows":["Applications-0_Windows-1","Applications-0_MS_Active_Directory-1","Applications-0_MS_IIS-1","Applications-0_MS_SQL-1","Applications-0_MS_Exchange-1","Applications-0__NET_Framework-1"],"docker":["Containers___VMs-0"],"ups":["Hardware___Sensors-0_NUT_UPS-1"]},
2025-04-15T08:07:18.1932867Z       webpackPublicPath: "https://app.netdata.cloud" || (getBasename() + "/v3"),
2025-04-15T08:07:18.1933006Z       agentApiUrl: searchParams.get("agent") || getBasename(),
2025-04-15T08:07:18.1933182Z       posthogToken: "phc_hnhlqe6D2Q4IcQNrFItaqdXJAxQ8RcHkPAFAp74pubv",
2025-04-15T08:07:18.1933262Z       version: "7.48.0",
2025-04-15T08:07:18.1933332Z       tracking: !false,
2025-04-15T08:07:18.1933420Z       cookieDomain: ".netdata.cloud",
2025-04-15T08:07:18.1933492Z       onprem: false,
2025-04-15T08:07:18.1933561Z       isLocal: false,
2025-04-15T08:07:18.1933642Z       nodeEnv: "production"
2025-04-15T08:07:18.1933703Z     }
2025-04-15T08:07:18.1933706Z 
2025-04-15T08:07:18.1933789Z     window.visitedNodes = []
2025-04-15T08:07:18.1933794Z 
2025-04-15T08:07:18.1933883Z     const getHashValueByKey = key => {
2025-04-15T08:07:18.1934117Z       return location.hash.substr(1).split("&").find(pair => pair.split("=")[0] == key)?.split("=")[1]
2025-04-15T08:07:18.1934179Z     }
2025-04-15T08:07:18.1934183Z 
2025-04-15T08:07:18.1934253Z     // Check cloud token
2025-04-15T08:07:18.1934343Z     const CLOUD_TOKEN_KEY = "netdataJWT"
2025-04-15T08:07:18.1934471Z     const redirectUri = getHashValueByKey("redirect_uri")
2025-04-15T08:07:18.1934569Z     const token = getHashValueByKey("token")
2025-04-15T08:07:18.1934720Z     if (token) {
2025-04-15T08:07:18.1934826Z       localStorage.setItem(CLOUD_TOKEN_KEY, token)
2025-04-15T08:07:18.1934891Z     }
2025-04-15T08:07:18.1934965Z     if (redirectUri) {
2025-04-15T08:07:18.1935031Z       try {
2025-04-15T08:07:18.1935153Z         const decodedUrl = decodeURIComponent(redirectUri)
2025-04-15T08:07:18.1935305Z         const parsedUrl = new URL(decodedUrl, window.location.origin)
2025-04-15T08:07:18.1935309Z 
2025-04-15T08:07:18.1935425Z         if (parsedUrl.origin === window.location.origin) {
2025-04-15T08:07:18.1935523Z           window.location.href = parsedUrl.href
2025-04-15T08:07:18.1935590Z         } else {
2025-04-15T08:07:18.1935762Z           console.error("Blocked potentially unsafe redirect to: ", decodedUrl)
2025-04-15T08:07:18.1935828Z         }
2025-04-15T08:07:18.1935896Z       } catch (error) {
2025-04-15T08:07:18.1936021Z         console.error("Invalid URL detected: ", error.message)
2025-04-15T08:07:18.1936179Z       }
2025-04-15T08:07:18.1936278Z     }</script><style>body.netdata-splash {
2025-04-15T08:07:18.1936350Z       height: 100%;
2025-04-15T08:07:18.1936420Z       overflow: hidden;
2025-04-15T08:07:18.1936508Z       background: var(--main-bg);
2025-04-15T08:07:18.1936573Z       margin: 0;
2025-04-15T08:07:18.1936643Z       padding: 0;
2025-04-15T08:07:18.1936719Z       color: var(--text);
2025-04-15T08:07:18.1936891Z       font-family: system-ui, "Segoe UI", Roboto, Helvetica, Arial, sans-serif,
2025-04-15T08:07:18.1937027Z         "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
2025-04-15T08:07:18.1937087Z     }
2025-04-15T08:07:18.1937091Z 
2025-04-15T08:07:18.1937152Z     :root {
2025-04-15T08:07:18.1937242Z       --scrollbar-thumb: #fcfffd;
2025-04-15T08:07:18.1937317Z       --primary: #00ab44;
2025-04-15T08:07:18.1937389Z       --text: #93a4a4;
2025-04-15T08:07:18.1937463Z       --text-dark: #001107;
2025-04-15T08:07:18.1937542Z       --text-light: #fcfffd;
2025-04-15T08:07:18.1937616Z       --menu-item: #5b6c6c;
2025-04-15T08:07:18.1937691Z       --main-bg: #000;
2025-04-15T08:07:18.1937769Z       --highlight: #00ef5f;
2025-04-15T08:07:18.1937842Z       --tab-active: #ddffeb;
2025-04-15T08:07:18.1938034Z       --tab-hover: #d2d9d9;
2025-04-15T08:07:18.1938118Z       --panel-bg: transparent;
2025-04-15T08:07:18.1938193Z       --font-small: 14px;
2025-04-15T08:07:18.1938273Z       --font-medium: 16px;
2025-04-15T08:07:18.1938343Z       --row-2n: #101313;
2025-04-15T08:07:18.1938418Z       --border: #00ab4436;
2025-04-15T08:07:18.1938498Z       --border-neutral: #252c2c;
2025-04-15T08:07:18.1938576Z       --key-value-table: #93a4a4;
2025-04-15T08:07:18.1938649Z       --accent: #ddffeb;
2025-04-15T08:07:18.1938724Z       --module-height: 45vh;
2025-04-15T08:07:18.1938826Z       --list-option-bg: rgba(12, 15, 15, 0.5);
2025-04-15T08:07:18.1938914Z       --list-option-selected-bg: #000;
2025-04-15T08:07:18.1939017Z       --list-option-hover-bg: rgba(12, 15, 15, 1);
2025-04-15T08:07:18.1939097Z       --footer-height: 70px;
2025-04-15T08:07:18.1939172Z       --code-bg: #00220e;
2025-04-15T08:07:18.1939259Z       --progress-bar-height: 2px;
2025-04-15T08:07:18.1939346Z       background-color: var(--main-bg);
2025-04-15T08:07:18.1939416Z     }
2025-04-15T08:07:18.1939419Z 
2025-04-15T08:07:18.1939484Z     :root iframe {
2025-04-15T08:07:18.1939555Z       border-width: 0;
2025-04-15T08:07:18.1939619Z     }
2025-04-15T08:07:18.1939623Z 
2025-04-15T08:07:18.1939728Z     body.netdata-splash.loading .frame-right {
2025-04-15T08:07:18.1939803Z       display: none;
2025-04-15T08:07:18.1939863Z     }
2025-04-15T08:07:18.1939867Z 
2025-04-15T08:07:18.1939972Z     body.netdata-splash.loading .frame-left {
2025-04-15T08:07:18.1940051Z       grid-column: auto / span 12;
2025-04-15T08:07:18.1940111Z     }
2025-04-15T08:07:18.1940114Z 
2025-04-15T08:07:18.1940253Z     body.netdata-splash.loading .sphere-stats-container,
2025-04-15T08:07:18.1940354Z     body.netdata-splash.loading .head-summary,
2025-04-15T08:07:18.1940447Z     body.netdata-splash.loading .tabs {
2025-04-15T08:07:18.1940638Z       display: none;
2025-04-15T08:07:18.1940698Z     }
2025-04-15T08:07:18.1940707Z 
2025-04-15T08:07:18.1940826Z     body.netdata-splash.loading .loading-message {
2025-04-15T08:07:18.1940893Z       display: flex;
2025-04-15T08:07:18.1940970Z       position: absolute;
2025-04-15T08:07:18.1941036Z       inset: 0;
2025-04-15T08:07:18.1941106Z       margin: auto;
2025-04-15T08:07:18.1941177Z       align-items: center;
2025-04-15T08:07:18.1941255Z       justify-content: center;
2025-04-15T08:07:18.1941330Z       color: var(--accent);
2025-04-15T08:07:18.1941390Z     }
2025-04-15T08:07:18.1941394Z 
2025-04-15T08:07:18.1941478Z     body.netdata-splash .error {
2025-04-15T08:07:18.1941545Z       color: #DB162F;
2025-04-15T08:07:18.1941603Z     }
2025-04-15T08:07:18.1941606Z 
2025-04-15T08:07:18.1941702Z     body.netdata-splash .loading-message {
2025-04-15T08:07:18.1941772Z       display: none;
2025-04-15T08:07:18.1941834Z     }
2025-04-15T08:07:18.1941837Z 
2025-04-15T08:07:18.1941924Z     body.netdata-splash h1 {
2025-04-15T08:07:18.1941997Z       font-size: 36px;
2025-04-15T08:07:18.1942066Z       margin-top: 8px;
2025-04-15T08:07:18.1942144Z       margin-bottom: 8px;
2025-04-15T08:07:18.1942224Z       color: var(--text-light);
2025-04-15T08:07:18.1942295Z       filter: blur(0.6px);
2025-04-15T08:07:18.1942357Z     }
2025-04-15T08:07:18.1942361Z 
2025-04-15T08:07:18.1942436Z     body.netdata-splash h2 {
2025-04-15T08:07:18.1942505Z       font-size: 16px;
2025-04-15T08:07:18.1942569Z     }
2025-04-15T08:07:18.1942572Z 
2025-04-15T08:07:18.1942649Z     body.netdata-splash h4 {
2025-04-15T08:07:18.1942724Z       font-size: 12px;
2025-04-15T08:07:18.1942795Z       margin-bottom: 12px;
2025-04-15T08:07:18.1942870Z       margin-top: 8px;
2025-04-15T08:07:18.1942930Z     }
2025-04-15T08:07:18.1942934Z 
2025-04-15T08:07:18.1943015Z     body.netdata-splash a:link,
2025-04-15T08:07:18.1943106Z     body.netdata-splash a:visited,
2025-04-15T08:07:18.1943189Z     body.netdata-splash a:active {
2025-04-15T08:07:18.1943272Z       text-decoration: none;
2025-04-15T08:07:18.1943347Z       color: var(--primary);
2025-04-15T08:07:18.1943407Z     }
2025-04-15T08:07:18.1943410Z 
2025-04-15T08:07:18.1943583Z     body.netdata-splash a:hover {
2025-04-15T08:07:18.1943662Z       color: var(--highlight);
2025-04-15T08:07:18.1943728Z     }
2025-04-15T08:07:18.1943731Z 
2025-04-15T08:07:18.1943814Z     body.netdata-splash canvas {
2025-04-15T08:07:18.1943887Z       display: block;
2025-04-15T08:07:18.1943946Z     }
2025-04-15T08:07:18.1943950Z 
2025-04-15T08:07:18.1944027Z     body.netdata-splash code {
2025-04-15T08:07:18.1944109Z       background: var(--code-bg);
2025-04-15T08:07:18.1944181Z       color: var(--highlight);
2025-04-15T08:07:18.1944266Z       border: 1px solid var(--border);
2025-04-15T08:07:18.1944339Z       border-radius: 2px;
2025-04-15T08:07:18.1944408Z       padding: 12px;
2025-04-15T08:07:18.1944487Z       line-break: anywhere;
2025-04-15T08:07:18.1944561Z       word-break: break-all;
2025-04-15T08:07:18.1944629Z     }
2025-04-15T08:07:18.1944633Z 
2025-04-15T08:07:18.1944720Z     body.netdata-splash .text-small {
2025-04-15T08:07:18.1944794Z       font-size: 12px;
2025-04-15T08:07:18.1944860Z     }
2025-04-15T08:07:18.1944864Z 
2025-04-15T08:07:18.1944969Z     body.netdata-splash .logo {
2025-04-15T08:07:18.1945133Z       filter: drop-shadow(2px 2px 32px rgba(255, 255, 255, 0.7)) blur(1px);
2025-04-15T08:07:18.1945200Z       opacity: 0.9;
2025-04-15T08:07:18.1945273Z       width: 150px;
2025-04-15T08:07:18.1945339Z       height: 150px;
2025-04-15T08:07:18.1945399Z     }
2025-04-15T08:07:18.1945407Z 
2025-04-15T08:07:18.1945507Z     body.netdata-splash .claim-message .logo {
2025-04-15T08:07:18.1945572Z       width: 100px;
2025-04-15T08:07:18.1945643Z       height: 100px;
2025-04-15T08:07:18.1945705Z     }
2025-04-15T08:07:18.1945708Z 
2025-04-15T08:07:18.1945790Z     body.netdata-splash .grid {
2025-04-15T08:07:18.1945858Z       display: grid;
2025-04-15T08:07:18.1945936Z       grid-column-gap: 16px;
2025-04-15T08:07:18.1946198Z       grid-row-gap: 16px;
2025-04-15T08:07:18.1946298Z       grid-template-columns: repeat(12, 1fr);
2025-04-15T08:07:18.1946399Z       grid-template-rows: repeat(12, 1fr);
2025-04-15T08:07:18.1946484Z       grid-auto-rows: min-content;
2025-04-15T08:07:18.1946548Z     }
2025-04-15T08:07:18.1946556Z 
2025-04-15T08:07:18.1946650Z     body.netdata-splash .grid-columns-10 {
2025-04-15T08:07:18.1946719Z       display: grid;
2025-04-15T08:07:18.1946800Z       grid-column-gap: 16px;
2025-04-15T08:07:18.1946874Z       grid-row-gap: 16px;
2025-04-15T08:07:18.1946975Z       grid-template-columns: repeat(10, 1fr);
2025-04-15T08:07:18.1947035Z     }
2025-04-15T08:07:18.1947038Z 
2025-04-15T08:07:18.1947125Z     body.netdata-splash .col-span-1 {
2025-04-15T08:07:18.1947206Z       grid-column: auto / span 1;
2025-04-15T08:07:18.1947267Z     }
2025-04-15T08:07:18.1947271Z 
2025-04-15T08:07:18.1947360Z     body.netdata-splash .col-span-2 {
2025-04-15T08:07:18.1947438Z       grid-column: auto / span 2;
2025-04-15T08:07:18.1947506Z     }
2025-04-15T08:07:18.1947510Z 
2025-04-15T08:07:18.1947594Z     body.netdata-splash .col-span-3 {
2025-04-15T08:07:18.1947675Z       grid-column: auto / span 3;
2025-04-15T08:07:18.1947741Z     }
2025-04-15T08:07:18.1947744Z 
2025-04-15T08:07:18.1947827Z     body.netdata-splash .col-span-4 {
2025-04-15T08:07:18.1947907Z       grid-column: auto / span 4;
2025-04-15T08:07:18.1947967Z     }
2025-04-15T08:07:18.1947970Z 
2025-04-15T08:07:18.1948058Z     body.netdata-splash .col-span-5 {
2025-04-15T08:07:18.1948133Z       grid-column: auto / span 5;
2025-04-15T08:07:18.1948193Z     }
2025-04-15T08:07:18.1948197Z 
2025-04-15T08:07:18.1948284Z     body.netdata-splash .col-span-6 {
2025-04-15T08:07:18.1948361Z       grid-column: auto / span 6;
2025-04-15T08:07:18.1948425Z     }
2025-04-15T08:07:18.1948428Z 
2025-04-15T08:07:18.1948513Z     body.netdata-splash .col-span-7 {
2025-04-15T08:07:18.1948587Z       grid-column: auto / span 7;
2025-04-15T08:07:18.1948656Z     }
2025-04-15T08:07:18.1948660Z 
2025-04-15T08:07:18.1948742Z     body.netdata-splash .col-span-8 {
2025-04-15T08:07:18.1948821Z       grid-column: auto / span 8;
2025-04-15T08:07:18.1948993Z     }
2025-04-15T08:07:18.1948998Z 
2025-04-15T08:07:18.1949088Z     body.netdata-splash .col-span-9 {
2025-04-15T08:07:18.1949163Z       grid-column: auto / span 9;
2025-04-15T08:07:18.1949226Z     }
2025-04-15T08:07:18.1949229Z 
2025-04-15T08:07:18.1949322Z     body.netdata-splash .col-span-10 {
2025-04-15T08:07:18.1949399Z       grid-column: auto / span 10;
2025-04-15T08:07:18.1949465Z     }
2025-04-15T08:07:18.1949468Z 
2025-04-15T08:07:18.1949554Z     body.netdata-splash .col-span-11 {
2025-04-15T08:07:18.1949635Z       grid-column: auto / span 11;
2025-04-15T08:07:18.1949695Z     }
2025-04-15T08:07:18.1949698Z 
2025-04-15T08:07:18.1949783Z     body.netdata-splash .col-span-12 {
2025-04-15T08:07:18.1949864Z       grid-column: auto / span 12;
2025-04-15T08:07:18.1949926Z     }
2025-04-15T08:07:18.1949929Z 
2025-04-15T08:07:18.1950026Z     body.netdata-splash .col-start-1 {
2025-04-15T08:07:18.1950106Z       grid-column-start: 1;
2025-04-15T08:07:18.1950171Z     }
2025-04-15T08:07:18.1950175Z 
2025-04-15T08:07:18.1950264Z     body.netdata-splash .col-start-2 {
2025-04-15T08:07:18.1950342Z       grid-column-start: 2;
2025-04-15T08:07:18.1950409Z     }
2025-04-15T08:07:18.1950412Z 
2025-04-15T08:07:18.1950497Z     body.netdata-splash .col-start-3 {
2025-04-15T08:07:18.1950578Z       grid-column-start: 3;
2025-04-15T08:07:18.1950639Z     }
2025-04-15T08:07:18.1950643Z 
2025-04-15T08:07:18.1950726Z     body.netdata-splash .col-start-4 {
2025-04-15T08:07:18.1950809Z       grid-column-start: 4;
2025-04-15T08:07:18.1950871Z     }
2025-04-15T08:07:18.1950874Z 
2025-04-15T08:07:18.1950963Z     body.netdata-splash .col-start-5 {
2025-04-15T08:07:18.1951038Z       grid-column-start: 5;
2025-04-15T08:07:18.1951103Z     }
2025-04-15T08:07:18.1951106Z 
2025-04-15T08:07:18.1951193Z     body.netdata-splash .col-start-6 {
2025-04-15T08:07:18.1951402Z       grid-column-start: 6;
2025-04-15T08:07:18.1951468Z     }
2025-04-15T08:07:18.1951472Z 
2025-04-15T08:07:18.1951558Z     body.netdata-splash .col-start-7 {
2025-04-15T08:07:18.1951640Z       grid-column-start: 7;
2025-04-15T08:07:18.1951700Z     }
2025-04-15T08:07:18.1951703Z 
2025-04-15T08:07:18.1951791Z     body.netdata-splash .col-start-8 {
2025-04-15T08:07:18.1951869Z       grid-column-start: 8;
2025-04-15T08:07:18.1951931Z     }
2025-04-15T08:07:18.1951934Z 
2025-04-15T08:07:18.1952024Z     body.netdata-splash .col-start-9 {
2025-04-15T08:07:18.1952099Z       grid-column-start: 9;
2025-04-15T08:07:18.1952163Z     }
2025-04-15T08:07:18.1952166Z 
2025-04-15T08:07:18.1952256Z     body.netdata-splash .col-start-10 {
2025-04-15T08:07:18.1952339Z       grid-column-start: 10;
2025-04-15T08:07:18.1952401Z     }
2025-04-15T08:07:18.1952405Z 
2025-04-15T08:07:18.1952492Z     body.netdata-splash .col-start-12 {
2025-04-15T08:07:18.1952573Z       grid-column-start: 11;
2025-04-15T08:07:18.1952640Z     }
2025-04-15T08:07:18.1952643Z 
2025-04-15T08:07:18.1952741Z     body.netdata-splash .col-start-12 {
2025-04-15T08:07:18.1952816Z       grid-column-start: 12;
2025-04-15T08:07:18.1952881Z     }
2025-04-15T08:07:18.1952885Z 
2025-04-15T08:07:18.1952979Z     @media screen and (max-width: 1280px) {
2025-04-15T08:07:18.1953082Z       body.netdata-splash .md-grid-columns-12 {
2025-04-15T08:07:18.1953158Z         display: grid;
2025-04-15T08:07:18.1953239Z         grid-column-gap: 16px;
2025-04-15T08:07:18.1953315Z         grid-row-gap: 16px;
2025-04-15T08:07:18.1953411Z         grid-template-columns: repeat(12, 1fr);
2025-04-15T08:07:18.1953475Z       }
2025-04-15T08:07:18.1953478Z 
2025-04-15T08:07:18.1953570Z       body.netdata-splash .md-col-span-1 {
2025-04-15T08:07:18.1953651Z         grid-column: auto / span 1;
2025-04-15T08:07:18.1953716Z       }
2025-04-15T08:07:18.1953719Z 
2025-04-15T08:07:18.1953809Z       body.netdata-splash .md-col-span-2 {
2025-04-15T08:07:18.1953889Z         grid-column: auto / span 2;
2025-04-15T08:07:18.1953955Z       }
2025-04-15T08:07:18.1953958Z 
2025-04-15T08:07:18.1954046Z       body.netdata-splash .md-col-span-3 {
2025-04-15T08:07:18.1954209Z         grid-column: auto / span 3;
2025-04-15T08:07:18.1954272Z       }
2025-04-15T08:07:18.1954275Z 
2025-04-15T08:07:18.1954367Z       body.netdata-splash .md-col-span-4 {
2025-04-15T08:07:18.1954444Z         grid-column: auto / span 4;
2025-04-15T08:07:18.1954507Z       }
2025-04-15T08:07:18.1954515Z 
2025-04-15T08:07:18.1954604Z       body.netdata-splash .md-col-span-5 {
2025-04-15T08:07:18.1954681Z         grid-column: auto / span 5;
2025-04-15T08:07:18.1954749Z       }
2025-04-15T08:07:18.1954752Z 
2025-04-15T08:07:18.1954841Z       body.netdata-splash .md-col-span-6 {
2025-04-15T08:07:18.1954923Z         grid-column: auto / span 6;
2025-04-15T08:07:18.1954983Z       }
2025-04-15T08:07:18.1954987Z 
2025-04-15T08:07:18.1955073Z       body.netdata-splash .md-col-span-7 {
2025-04-15T08:07:18.1955156Z         grid-column: auto / span 7;
2025-04-15T08:07:18.1955222Z       }
2025-04-15T08:07:18.1955226Z 
2025-04-15T08:07:18.1955314Z       body.netdata-splash .md-col-span-8 {
2025-04-15T08:07:18.1955395Z         grid-column: auto / span 8;
2025-04-15T08:07:18.1955461Z       }
2025-04-15T08:07:18.1955464Z 
2025-04-15T08:07:18.1955553Z       body.netdata-splash .md-col-span-9 {
2025-04-15T08:07:18.1955629Z         grid-column: auto / span 9;
2025-04-15T08:07:18.1955693Z       }
2025-04-15T08:07:18.1955697Z 
2025-04-15T08:07:18.1955787Z       body.netdata-splash .md-col-span-10 {
2025-04-15T08:07:18.1955868Z         grid-column: auto / span 10;
2025-04-15T08:07:18.1955930Z       }
2025-04-15T08:07:18.1955934Z 
2025-04-15T08:07:18.1956027Z       body.netdata-splash .md-col-span-11 {
2025-04-15T08:07:18.1956204Z         grid-column: auto / span 11;
2025-04-15T08:07:18.1956265Z       }
2025-04-15T08:07:18.1956268Z 
2025-04-15T08:07:18.1956360Z       body.netdata-splash .md-col-span-12 {
2025-04-15T08:07:18.1956437Z         grid-column: auto / span 12;
2025-04-15T08:07:18.1956621Z       }
2025-04-15T08:07:18.1956681Z     }
2025-04-15T08:07:18.1956684Z 
2025-04-15T08:07:18.1956776Z     body.netdata-splash .row-span-1 {
2025-04-15T08:07:18.1956855Z       grid-row: auto / span 1;
2025-04-15T08:07:18.1956914Z     }
2025-04-15T08:07:18.1956917Z 
2025-04-15T08:07:18.1957004Z     body.netdata-splash .row-span-2 {
2025-04-15T08:07:18.1957078Z       grid-row: auto / span 2;
2025-04-15T08:07:18.1957140Z     }
2025-04-15T08:07:18.1957143Z 
2025-04-15T08:07:18.1957226Z     body.netdata-splash .row-span-3 {
2025-04-15T08:07:18.1957302Z       grid-row: auto / span 3;
2025-04-15T08:07:18.1957365Z     }
2025-04-15T08:07:18.1957369Z 
2025-04-15T08:07:18.1957451Z     body.netdata-splash .row-span-4 {
2025-04-15T08:07:18.1957526Z       grid-row: auto / span 4;
2025-04-15T08:07:18.1957588Z     }
2025-04-15T08:07:18.1957591Z 
2025-04-15T08:07:18.1957677Z     body.netdata-splash .row-span-5 {
2025-04-15T08:07:18.1957749Z       grid-row: auto / span 5;
2025-04-15T08:07:18.1957814Z     }
2025-04-15T08:07:18.1957817Z 
2025-04-15T08:07:18.1957902Z     body.netdata-splash .row-span-6 {
2025-04-15T08:07:18.1957978Z       grid-row: auto / span 6;
2025-04-15T08:07:18.1958044Z     }
2025-04-15T08:07:18.1958049Z 
2025-04-15T08:07:18.1958131Z     body.netdata-splash .row-span-7 {
2025-04-15T08:07:18.1958206Z       grid-row: auto / span 7;
2025-04-15T08:07:18.1958268Z     }
2025-04-15T08:07:18.1958271Z 
2025-04-15T08:07:18.1958357Z     body.netdata-splash .row-span-8 {
2025-04-15T08:07:18.1958433Z       grid-row: auto / span 8;
2025-04-15T08:07:18.1958495Z     }
2025-04-15T08:07:18.1958499Z 
2025-04-15T08:07:18.1958584Z     body.netdata-splash .row-span-9 {
2025-04-15T08:07:18.1958657Z       grid-row: auto / span 9;
2025-04-15T08:07:18.1958717Z     }
2025-04-15T08:07:18.1958723Z 
2025-04-15T08:07:18.1958810Z     body.netdata-splash .row-span-10 {
2025-04-15T08:07:18.1958885Z       grid-row: auto / span 10;
2025-04-15T08:07:18.1958955Z     }
2025-04-15T08:07:18.1958959Z 
2025-04-15T08:07:18.1959051Z     body.netdata-splash .row-span-11 {
2025-04-15T08:07:18.1959132Z       grid-row: auto / span 11;
2025-04-15T08:07:18.1959194Z     }
2025-04-15T08:07:18.1959197Z 
2025-04-15T08:07:18.1959399Z     body.netdata-splash .row-span-12 {
2025-04-15T08:07:18.1959483Z       grid-row: auto / span 12;
2025-04-15T08:07:18.1959545Z     }
2025-04-15T08:07:18.1959548Z 
2025-04-15T08:07:18.1959635Z     body.netdata-splash .relative {
2025-04-15T08:07:18.1959712Z       position: relative;
2025-04-15T08:07:18.1959778Z     }
2025-04-15T08:07:18.1959781Z 
2025-04-15T08:07:18.1959865Z     body.netdata-splash .absolute {
2025-04-15T08:07:18.1959938Z       position: absolute;
2025-04-15T08:07:18.1960006Z     }
2025-04-15T08:07:18.1960009Z 
2025-04-15T08:07:18.1960091Z     body.netdata-splash .index-10 {
2025-04-15T08:07:18.1960165Z       z-index: 10;
2025-04-15T08:07:18.1960227Z     }
2025-04-15T08:07:18.1960231Z 
2025-04-15T08:07:18.1960320Z     body.netdata-splash .m-auto {
2025-04-15T08:07:18.1960389Z       margin: auto;
2025-04-15T08:07:18.1960456Z     }
2025-04-15T08:07:18.1960459Z 
2025-04-15T08:07:18.1960546Z     body.netdata-splash .full-h {
2025-04-15T08:07:18.1960613Z       height: 100%;
2025-04-15T08:07:18.1960684Z     }
2025-04-15T08:07:18.1960688Z 
2025-04-15T08:07:18.1960769Z     body.netdata-splash .flex {
2025-04-15T08:07:18.1960840Z       display: flex;
2025-04-15T08:07:18.1960906Z     }
2025-04-15T08:07:18.1960910Z 
2025-04-15T08:07:18.1960994Z     body.netdata-splash .flex-col {
2025-04-15T08:07:18.1961081Z       flex-direction: column;
2025-04-15T08:07:18.1961144Z     }
2025-04-15T08:07:18.1961147Z 
2025-04-15T08:07:18.1961245Z     body.netdata-splash .space-between {
2025-04-15T08:07:18.1961332Z       justify-content: space-between;
2025-04-15T08:07:18.1961396Z     }
2025-04-15T08:07:18.1961399Z 
2025-04-15T08:07:18.1961493Z     body.netdata-splash .align-center {
2025-04-15T08:07:18.1961571Z       align-items: center;
2025-04-15T08:07:18.1961637Z     }
2025-04-15T08:07:18.1961640Z 
2025-04-15T08:07:18.1961810Z     body.netdata-splash .container {
2025-04-15T08:07:18.1961897Z       background: var(--main-bg);
2025-04-15T08:07:18.1961964Z       height: 100vh;
2025-04-15T08:07:18.1962039Z       column-gap: 0;
2025-04-15T08:07:18.1962104Z     }
2025-04-15T08:07:18.1962107Z 
2025-04-15T08:07:18.1962193Z     body.netdata-splash .frame {
2025-04-15T08:07:18.1962267Z       height: 100vh;
2025-04-15T08:07:18.1962328Z     }
2025-04-15T08:07:18.1962331Z 
2025-04-15T08:07:18.1962427Z     body.netdata-splash .light-beam:after {
2025-04-15T08:07:18.1962501Z       content: "";
2025-04-15T08:07:18.1962575Z       position: absolute;
2025-04-15T08:07:18.1962648Z       top: 0;
2025-04-15T08:07:18.1962714Z       bottom: 0;
2025-04-15T08:07:18.1962779Z       left: 0;
2025-04-15T08:07:18.1962852Z       width: 1px;
2025-04-15T08:07:18.1962972Z       box-shadow: 20px 0px 110px 55px rgb(0 255 100 / 10%);
2025-04-15T08:07:18.1963039Z     }
2025-04-15T08:07:18.1963043Z 
2025-04-15T08:07:18.1963129Z     body.netdata-splash #setupGrid {
2025-04-15T08:07:18.1963208Z       opacity: 0.15;
2025-04-15T08:07:18.1963280Z       position: absolute;
2025-04-15T08:07:18.1963346Z       inset: 0;
2025-04-15T08:07:18.1963418Z     }
2025-04-15T08:07:18.1963423Z 
2025-04-15T08:07:18.1963512Z     body.netdata-splash #monitorGrid {
2025-04-15T08:07:18.1963585Z       opacity: 0.4;
2025-04-15T08:07:18.1963660Z       transition: 1s ease;
2025-04-15T08:07:18.1963722Z     }
2025-04-15T08:07:18.1963732Z 
2025-04-15T08:07:18.1963837Z     body.netdata-splash #monitorGrid.hovered {
2025-04-15T08:07:18.1963907Z       opacity: 0.7;
2025-04-15T08:07:18.1963977Z     }
2025-04-15T08:07:18.1963980Z 
2025-04-15T08:07:18.1964075Z     body.netdata-splash #sphereContainer {
2025-04-15T08:07:18.1964155Z       height: calc(100vh);
2025-04-15T08:07:18.1964230Z       position: relative;
2025-04-15T08:07:18.1964293Z     }
2025-04-15T08:07:18.1964296Z 
2025-04-15T08:07:18.1964405Z     body.netdata-splash #sphereContainer h4 {
2025-04-15T08:07:18.1964474Z       display: none;
2025-04-15T08:07:18.1964547Z     }
2025-04-15T08:07:18.1964550Z 
2025-04-15T08:07:18.1964633Z     body.netdata-splash .setup {
2025-04-15T08:07:18.1964709Z       z-index: 10;
2025-04-15T08:07:18.1964872Z       position: relative;
2025-04-15T08:07:18.1964969Z       box-shadow: 20px 0px 160px 5px #012f13c2;
2025-04-15T08:07:18.1965062Z       background: linear-gradient(90deg,
2025-04-15T08:07:18.1965135Z           rgba(0, 0, 0, 1) 0%,
2025-04-15T08:07:18.1965214Z           rgb(0 19 7 / 76%) 100%);
2025-04-15T08:07:18.1965277Z     }
2025-04-15T08:07:18.1965281Z 
2025-04-15T08:07:18.1965366Z     body.netdata-splash .setup>.stats {
2025-04-15T08:07:18.1965440Z       padding: 16px;
2025-04-15T08:07:18.1965514Z       overflow: auto;
2025-04-15T08:07:18.1965588Z       height: 100%;
2025-04-15T08:07:18.1965661Z       position: absolute;
2025-04-15T08:07:18.1965733Z       top: 65px;
2025-04-15T08:07:18.1965799Z       left: 0;
2025-04-15T08:07:18.1965864Z       right: 0;
2025-04-15T08:07:18.1965933Z       bottom: 0;
2025-04-15T08:07:18.1966000Z     }
2025-04-15T08:07:18.1966004Z 
2025-04-15T08:07:18.1966188Z     body.netdata-splash .setup .header {
2025-04-15T08:07:18.1966263Z       position: sticky;
2025-04-15T08:07:18.1966331Z       top: 0;
2025-04-15T08:07:18.1966412Z       padding: 8px 16px;
2025-04-15T08:07:18.1966478Z       margin: 0;
2025-04-15T08:07:18.1966562Z       backdrop-filter: blur(8px);
2025-04-15T08:07:18.1966645Z       background: rgba(0, 0, 0, 0.1);
2025-04-15T08:07:18.1966747Z       /* border-bottom: 1px solid var(--border); */
2025-04-15T08:07:18.1966826Z       display: flex;
2025-04-15T08:07:18.1966904Z       align-items: center;
2025-04-15T08:07:18.1966996Z       justify-content: space-between;
2025-04-15T08:07:18.1967056Z     }
2025-04-15T08:07:18.1967060Z 
2025-04-15T08:07:18.1967150Z     body.netdata-splash .header .title {
2025-04-15T08:07:18.1967219Z       display: flex;
2025-04-15T08:07:18.1967295Z       align-items: center;
2025-04-15T08:07:18.1967364Z       gap: 8px;
2025-04-15T08:07:18.1967548Z     }
2025-04-15T08:07:18.1967552Z 
2025-04-15T08:07:18.1967644Z     body.netdata-splash .header .logo {
2025-04-15T08:07:18.1967712Z       width: 32px;
2025-04-15T08:07:18.1967782Z       height: auto;
2025-04-15T08:07:18.1967847Z     }
2025-04-15T08:07:18.1967851Z 
2025-04-15T08:07:18.1967947Z     body.netdata-splash .splash-message {
2025-04-15T08:07:18.1968026Z       position: absolute;
2025-04-15T08:07:18.1968091Z       inset: 0;
2025-04-15T08:07:18.1968166Z       margin: auto;
2025-04-15T08:07:18.1968234Z       display: flex;
2025-04-15T08:07:18.1968311Z       align-items: center;
2025-04-15T08:07:18.1968391Z       justify-content: center;
2025-04-15T08:07:18.1968467Z       flex-direction: column;
2025-04-15T08:07:18.1968542Z       overflow-y: auto;
2025-04-15T08:07:18.1968602Z     }
2025-04-15T08:07:18.1968606Z 
2025-04-15T08:07:18.1968701Z     body.netdata-splash .splash-message p {
2025-04-15T08:07:18.1968773Z       margin-top: 0;
2025-04-15T08:07:18.1968847Z       margin-bottom: 24px;
2025-04-15T08:07:18.1968932Z       color: var(--text-light);
2025-04-15T08:07:18.1969008Z       filter: blur(0.6px);
2025-04-15T08:07:18.1969068Z     }
2025-04-15T08:07:18.1969071Z 
2025-04-15T08:07:18.1969164Z     body.netdata-splash .tagline {
2025-04-15T08:07:18.1969237Z       position: absolute;
2025-04-15T08:07:18.1969310Z       bottom: 24px;
2025-04-15T08:07:18.1969380Z       font-size: 12px;
2025-04-15T08:07:18.1969459Z       color: var(--text-light);
2025-04-15T08:07:18.1969518Z     }
2025-04-15T08:07:18.1969522Z 
2025-04-15T08:07:18.1969608Z     body.netdata-splash .skip-link {
2025-04-15T08:07:18.1969681Z       font-size: 12px;
2025-04-15T08:07:18.1969754Z       color: var(--text-light);
2025-04-15T08:07:18.1969828Z       text-align: center;
2025-04-15T08:07:18.1969889Z     }
2025-04-15T08:07:18.1969892Z 
2025-04-15T08:07:18.1969980Z     body.netdata-splash .license-link {
2025-04-15T08:07:18.1970055Z       padding: 0 16px 4px;
2025-04-15T08:07:18.1970125Z       font-size: 12px;
2025-04-15T08:07:18.1970208Z       color: var(--text-light);
2025-04-15T08:07:18.1970268Z     }
2025-04-15T08:07:18.1970271Z 
2025-04-15T08:07:18.1970362Z     body.netdata-splash .button {
2025-04-15T08:07:18.1970577Z       padding: 8px 12px;
2025-04-15T08:07:18.1970655Z       border-radius: 2px;
2025-04-15T08:07:18.1970727Z       font-size: 16px;
2025-04-15T08:07:18.1970796Z       min-width: 88px;
2025-04-15T08:07:18.1970869Z       text-align: center;
2025-04-15T08:07:18.1970940Z       cursor: pointer;
2025-04-15T08:07:18.1971013Z       transition: 250ms ease;
2025-04-15T08:07:18.1971083Z       border: none;
2025-04-15T08:07:18.1971143Z     }
2025-04-15T08:07:18.1971146Z 
2025-04-15T08:07:18.1971243Z     body.netdata-splash .button-primary {
2025-04-15T08:07:18.1971320Z       background: var(--primary);
2025-04-15T08:07:18.1971401Z       color: var(--text-light);
2025-04-15T08:07:18.1971463Z     }
2025-04-15T08:07:18.1971467Z 
2025-04-15T08:07:18.1971572Z     body.netdata-splash .button-primary:hover {
2025-04-15T08:07:18.1971660Z       background: var(--highlight);
2025-04-15T08:07:18.1971728Z     }
2025-04-15T08:07:18.1971732Z 
2025-04-15T08:07:18.1971821Z     body.netdata-splash a.button {
2025-04-15T08:07:18.1971905Z       color: var(--text-dark);
2025-04-15T08:07:18.1971966Z     }
2025-04-15T08:07:18.1971975Z 
2025-04-15T08:07:18.1972062Z     body.netdata-splash .button-ghost {
2025-04-15T08:07:18.1972141Z       background: transparent;
2025-04-15T08:07:18.1972221Z       color: var(--primary);
2025-04-15T08:07:18.1972281Z     }
2025-04-15T08:07:18.1972285Z 
2025-04-15T08:07:18.1972390Z     body.netdata-splash .button-ghost:hover {
2025-04-15T08:07:18.1972464Z       color: var(--highlight);
2025-04-15T08:07:18.1972524Z     }
2025-04-15T08:07:18.1972527Z 
2025-04-15T08:07:18.1972616Z     body.netdata-splash .clear-button {
2025-04-15T08:07:18.1972686Z       font-size: 12px;
2025-04-15T08:07:18.1972756Z       padding: 0;
2025-04-15T08:07:18.1972824Z       min-width: auto;
2025-04-15T08:07:18.1972884Z     }
2025-04-15T08:07:18.1972892Z 
2025-04-15T08:07:18.1973061Z     body.netdata-splash .tabs {
2025-04-15T08:07:18.1973128Z       display: flex;
2025-04-15T08:07:18.1973205Z       align-items: center;
2025-04-15T08:07:18.1973285Z       justify-content: center;
2025-04-15T08:07:18.1973378Z       border-top: 1px solid var(--border);
2025-04-15T08:07:18.1973456Z       backdrop-filter: blur(4px);
2025-04-15T08:07:18.1973516Z     }
2025-04-15T08:07:18.1973520Z 
2025-04-15T08:07:18.1973608Z     body.netdata-splash button.tab {
2025-04-15T08:07:18.1973684Z       background: rgba(0, 0, 0, 0.2);
2025-04-15T08:07:18.1973754Z       border: none;
2025-04-15T08:07:18.1973827Z       color: var(--menu-item);
2025-04-15T08:07:18.1973904Z       padding: 8px 0 24px;
2025-04-15T08:07:18.1973973Z       border-left: 0;
2025-04-15T08:07:18.1974041Z       cursor: pointer;
2025-04-15T08:07:18.1974128Z       backdrop-filter: blur(2px);
2025-04-15T08:07:18.1974192Z       width: 100%;
2025-04-15T08:07:18.1974264Z       font-size: 12px;
2025-04-15T08:07:18.1974332Z       display: flex;
2025-04-15T08:07:18.1974412Z       flex-direction: column;
2025-04-15T08:07:18.1974490Z       align-items: center;
2025-04-15T08:07:18.1974560Z       gap: 8px;
2025-04-15T08:07:18.1974632Z     }
2025-04-15T08:07:18.1974636Z 
2025-04-15T08:07:18.1974745Z     body.netdata-splash button.tab:first-child {
2025-04-15T08:07:18.1974845Z       /* border-left: 1px solid var(--primary); */
2025-04-15T08:07:18.1974913Z     }
2025-04-15T08:07:18.1974917Z 
2025-04-15T08:07:18.1975040Z     body.netdata-splash button.tab:not(.active):hover {
2025-04-15T08:07:18.1975122Z       color: var(--tab-hover);
2025-04-15T08:07:18.1975195Z       transition: 100ms ease;
2025-04-15T08:07:18.1975258Z     }
2025-04-15T08:07:18.1975261Z 
2025-04-15T08:07:18.1975357Z     body.netdata-splash button.tab.active {
2025-04-15T08:07:18.1975434Z       background: transparent;
2025-04-15T08:07:18.1975538Z       /* border-bottom: 1px solid transparent; */
2025-04-15T08:07:18.1975616Z       backdrop-filter: blur(0);
2025-04-15T08:07:18.1975698Z       color: var(--tab-active);
2025-04-15T08:07:18.1975765Z       cursor: default;
2025-04-15T08:07:18.1975826Z     }
2025-04-15T08:07:18.1975833Z 
2025-04-15T08:07:18.1976024Z     body.netdata-splash .tab-icon {
2025-04-15T08:07:18.1976188Z       width: 24px;
2025-04-15T08:07:18.1976261Z       height: 24px;
2025-04-15T08:07:18.1976321Z     }
2025-04-15T08:07:18.1976325Z 
2025-04-15T08:07:18.1976416Z     body.netdata-splash .tab-icon svg {
2025-04-15T08:07:18.1976480Z       height: 100%;
2025-04-15T08:07:18.1976544Z       width: 100%;
2025-04-15T08:07:18.1976605Z     }
2025-04-15T08:07:18.1976608Z 
2025-04-15T08:07:18.1976705Z     body.netdata-splash .tab-icon svg path {
2025-04-15T08:07:18.1976782Z       fill: var(--menu-item);
2025-04-15T08:07:18.1976855Z       transition: 100ms ease;
2025-04-15T08:07:18.1976913Z     }
2025-04-15T08:07:18.1976920Z 
2025-04-15T08:07:18.1977046Z     body.netdata-splash .tab.active .tab-icon svg path {
2025-04-15T08:07:18.1977127Z       fill: var(--tab-active);
2025-04-15T08:07:18.1977196Z     }
2025-04-15T08:07:18.1977199Z 
2025-04-15T08:07:18.1977291Z     button.tab:not(.active):hover svg path {
2025-04-15T08:07:18.1977367Z       fill: var(--tab-hover);
2025-04-15T08:07:18.1977433Z     }
2025-04-15T08:07:18.1977436Z 
2025-04-15T08:07:18.1977523Z     body.netdata-splash .panel {
2025-04-15T08:07:18.1977607Z       background: var(--panel-bg);
2025-04-15T08:07:18.1977675Z       padding: 16px;
2025-04-15T08:07:18.1977753Z       border-radius: 4px;
2025-04-15T08:07:18.1977834Z       border: 1px solid var(--border);
2025-04-15T08:07:18.1977920Z       backdrop-filter: blur(0px);
2025-04-15T08:07:18.1977981Z     }
2025-04-15T08:07:18.1977984Z 
2025-04-15T08:07:18.1978071Z     body.netdata-splash .panel-tab {
2025-04-15T08:07:18.1978153Z       border-radius: 0 0 4px 4px;
2025-04-15T08:07:18.1978223Z       border-top: 0;
2025-04-15T08:07:18.1978321Z       border-left: 1px solid var(--primary);
2025-04-15T08:07:18.1978417Z       border-bottom: 1px solid var(--primary);
2025-04-15T08:07:18.1978634Z       border-right: 1px solid var(--primary);
2025-04-15T08:07:18.1978714Z       padding: 4px 24px;
2025-04-15T08:07:18.1978782Z       display: none;
2025-04-15T08:07:18.1978859Z       height: 70%;
2025-04-15T08:07:18.1978929Z       overflow: auto;
2025-04-15T08:07:18.1978994Z     }
2025-04-15T08:07:18.1978998Z 
2025-04-15T08:07:18.1979085Z     body.netdata-splash .data-tab {
2025-04-15T08:07:18.1979158Z       display: block;
2025-04-15T08:07:18.1979230Z       opacity: 0;
2025-04-15T08:07:18.1979309Z       transition: 800ms ease;
2025-04-15T08:07:18.1979390Z       pointer-events: none;
2025-04-15T08:07:18.1979450Z     }
2025-04-15T08:07:18.1979454Z 
2025-04-15T08:07:18.1979547Z     body.netdata-splash .data-tab.active {
2025-04-15T08:07:18.1979617Z       opacity: 1;
2025-04-15T08:07:18.1979694Z       pointer-events: all;
2025-04-15T08:07:18.1979760Z     }
2025-04-15T08:07:18.1979764Z 
2025-04-15T08:07:18.1979864Z     body.netdata-splash .data-tab-container {
2025-04-15T08:07:18.1979941Z       position: absolute;
2025-04-15T08:07:18.1980010Z       left: 0;
2025-04-15T08:07:18.1980073Z       right: 0;
2025-04-15T08:07:18.1980142Z       top: 45%;
2025-04-15T08:07:18.1980216Z       /* height: 40vh; */
2025-04-15T08:07:18.1980281Z     }
2025-04-15T08:07:18.1980284Z 
2025-04-15T08:07:18.1980379Z     body.netdata-splash .system-container {
2025-04-15T08:07:18.1980448Z       overflow: auto;
2025-04-15T08:07:18.1980531Z       height: calc(100% - 330px);
2025-04-15T08:07:18.1980605Z       padding: 0 24px 24px;
2025-04-15T08:07:18.1980681Z       margin: 0 -24px;
2025-04-15T08:07:18.1980799Z       scrollbar-color: var(--scrollbar-thumb) #293030;
2025-04-15T08:07:18.1980883Z       scrollbar-width: thin;
2025-04-15T08:07:18.1980944Z     }
2025-04-15T08:07:18.1980948Z 
2025-04-15T08:07:18.1981080Z     body.netdata-splash .data-tab-container .system>div {
2025-04-15T08:07:18.1981154Z       display: flex;
2025-04-15T08:07:18.1981235Z       /* margin-bottom: 24px; */
2025-04-15T08:07:18.1981325Z       /* backdrop-filter: blur(1px); */
2025-04-15T08:07:18.1981397Z       height: auto;
2025-04-15T08:07:18.1981469Z       min-height: 40px;
2025-04-15T08:07:18.1981545Z       overflow: hidden;
2025-04-15T08:07:18.1981719Z     }
2025-04-15T08:07:18.1981724Z 
2025-04-15T08:07:18.1981881Z     body.netdata-splash .data-tab-container .system .key-value {
2025-04-15T08:07:18.1981958Z       flex-direction: column;
2025-04-15T08:07:18.1982028Z       gap: 8px;
2025-04-15T08:07:18.1982106Z       align-items: flex-start;
2025-04-15T08:07:18.1982183Z       justify-content: start;
2025-04-15T08:07:18.1982254Z       width: 100%;
2025-04-15T08:07:18.1982323Z       padding: 0;
2025-04-15T08:07:18.1982393Z     }
2025-04-15T08:07:18.1982396Z 
2025-04-15T08:07:18.1982603Z     body.netdata-splash .data-tab-container .system .key-value span:nth-child(1) {
2025-04-15T08:07:18.1982679Z       padding: 8px 16px;
2025-04-15T08:07:18.1982779Z       border-bottom: 1px solid var(--border);
2025-04-15T08:07:18.1982846Z       width: 100%;
2025-04-15T08:07:18.1982925Z       color: #8eae9b;
2025-04-15T08:07:18.1983007Z       background: rgba(0, 0, 0, 0.8);
2025-04-15T08:07:18.1983070Z     }
2025-04-15T08:07:18.1983079Z 
2025-04-15T08:07:18.1983281Z     body.netdata-splash .data-tab-container .system .key-value span:nth-child(2) {
2025-04-15T08:07:18.1983355Z       /* font-size: 16px; */
2025-04-15T08:07:18.1983437Z       padding: 4px 16px 12px;
2025-04-15T08:07:18.1983509Z       text-align: left;
2025-04-15T08:07:18.1983588Z       color: var(--accent);
2025-04-15T08:07:18.1983649Z     }
2025-04-15T08:07:18.1983653Z 
2025-04-15T08:07:18.1983746Z     body.netdata-splash .panel:hover h4 {
2025-04-15T08:07:18.1983831Z       color: var(--highlight);
2025-04-15T08:07:18.1983892Z     }
2025-04-15T08:07:18.1983896Z 
2025-04-15T08:07:18.1983993Z     body.netdata-splash .hide-title h4 {
2025-04-15T08:07:18.1984068Z       visibility: hidden;
2025-04-15T08:07:18.1984134Z     }
2025-04-15T08:07:18.1984138Z 
2025-04-15T08:07:18.1984248Z     body.netdata-splash .no-key span:first-child {
2025-04-15T08:07:18.1984405Z       display: none;
2025-04-15T08:07:18.1984473Z     }
2025-04-15T08:07:18.1984476Z 
2025-04-15T08:07:18.1990282Z     body.netdata-splash .no-title h4 {
2025-04-15T08:07:18.1990390Z       display: none;
2025-04-15T08:07:18.1990458Z     }
2025-04-15T08:07:18.1990463Z 
2025-04-15T08:07:18.1990574Z     body.netdata-splash .absolute-center {
2025-04-15T08:07:18.1990658Z       position: absolute;
2025-04-15T08:07:18.1990724Z       inset: 0;
2025-04-15T08:07:18.1990797Z       margin: auto;
2025-04-15T08:07:18.1990857Z     }
2025-04-15T08:07:18.1990860Z 
2025-04-15T08:07:18.1990954Z     body.netdata-splash .align-end {
2025-04-15T08:07:18.1991038Z       align-content: flex-end;
2025-04-15T08:07:18.1991099Z     }
2025-04-15T08:07:18.1991102Z 
2025-04-15T08:07:18.1991221Z     body.netdata-splash .panel-tab .separator {
2025-04-15T08:07:18.1991320Z       border-bottom: 1px solid var(--border);
2025-04-15T08:07:18.1991404Z       margin: 8px -24px;
2025-04-15T08:07:18.1991470Z     }
2025-04-15T08:07:18.1991474Z 
2025-04-15T08:07:18.1991574Z     body.netdata-splash .section-image {
2025-04-15T08:07:18.1991646Z       height: 16px;
2025-04-15T08:07:18.1991719Z       width: 16px;
2025-04-15T08:07:18.1991783Z     }
2025-04-15T08:07:18.1991787Z 
2025-04-15T08:07:18.1991887Z     body.netdata-splash .section-image svg {
2025-04-15T08:07:18.1991958Z       width: 100%;
2025-04-15T08:07:18.1992024Z       height: 100%;
2025-04-15T08:07:18.1992084Z     }
2025-04-15T08:07:18.1992091Z 
2025-04-15T08:07:18.1992182Z     body.netdata-splash .section-title {
2025-04-15T08:07:18.1992256Z       font-size: 14px;
2025-04-15T08:07:18.1992333Z       font-weight: bold;
2025-04-15T08:07:18.1992401Z       margin: 8px 0;
2025-04-15T08:07:18.1992484Z       display: inline-block;
2025-04-15T08:07:18.1992545Z     }
2025-04-15T08:07:18.1992548Z 
2025-04-15T08:07:18.1992667Z     body.netdata-splash .sphere-stats-container {
2025-04-15T08:07:18.1992735Z       width: 80%;
2025-04-15T08:07:18.1992803Z       height: 100vh;
2025-04-15T08:07:18.1992879Z       display: flex;
2025-04-15T08:07:18.1992953Z       align-items: center;
2025-04-15T08:07:18.1993032Z       flex-direction: column;
2025-04-15T08:07:18.1993266Z       justify-content: center;
2025-04-15T08:07:18.1993347Z       margin-bottom: 10vmin;
2025-04-15T08:07:18.1993416Z       gap: 16px;
2025-04-15T08:07:18.1993475Z     }
2025-04-15T08:07:18.1993480Z 
2025-04-15T08:07:18.1993567Z     body.netdata-splash .key-value {
2025-04-15T08:07:18.1993649Z       font-size: var(--font-small);
2025-04-15T08:07:18.1993717Z       display: flex;
2025-04-15T08:07:18.1993806Z       justify-content: space-between;
2025-04-15T08:07:18.1993879Z       align-items: center;
2025-04-15T08:07:18.1993951Z       padding: 8px 0;
2025-04-15T08:07:18.1994030Z       color: var(--key-value-table);
2025-04-15T08:07:18.1994089Z     }
2025-04-15T08:07:18.1994093Z 
2025-04-15T08:07:18.1994173Z     /* .key-value:nth-child(2n) {
2025-04-15T08:07:18.1994251Z       background: var(--row-2n);
2025-04-15T08:07:18.1994320Z     } */
2025-04-15T08:07:18.1994411Z     body.netdata-splash .key-value:hover {
2025-04-15T08:07:18.1994487Z       color: var(--highlight);
2025-04-15T08:07:18.1994549Z     }
2025-04-15T08:07:18.1994558Z 
2025-04-15T08:07:18.1994680Z     body.netdata-splash .key-value span:nth-child(2) {
2025-04-15T08:07:18.1994755Z       text-align: right;
2025-04-15T08:07:18.1994813Z     }
2025-04-15T08:07:18.1994817Z 
2025-04-15T08:07:18.1994915Z     body.netdata-splash .metrics-container {
2025-04-15T08:07:18.1994989Z       position: absolute;
2025-04-15T08:07:18.1995056Z       top: 150px;
2025-04-15T08:07:18.1995116Z     }
2025-04-15T08:07:18.1995120Z 
2025-04-15T08:07:18.1995244Z     body.netdata-splash .collected-metrics .key-value {
2025-04-15T08:07:18.1995322Z       flex-direction: column;
2025-04-15T08:07:18.1995392Z       align-items: center;
2025-04-15T08:07:18.1995473Z       justify-content: center;
2025-04-15T08:07:18.1995545Z       background: none;
2025-04-15T08:07:18.1995616Z       text-align: center;
2025-04-15T08:07:18.1995820Z       text-transform: uppercase;
2025-04-15T08:07:18.1995893Z       font-size: 12px;
2025-04-15T08:07:18.1995967Z       color: var(--text);
2025-04-15T08:07:18.1996031Z     }
2025-04-15T08:07:18.1996035Z 
2025-04-15T08:07:18.1996343Z     body.netdata-splash .collected-metrics .key-value span:nth-child(2) {
2025-04-15T08:07:18.1996419Z       font-size: 7vmin;
2025-04-15T08:07:18.1996487Z       font-weight: 700;
2025-04-15T08:07:18.1996566Z       color: rgb(254 254 254 / 80%);
2025-04-15T08:07:18.1996638Z       filter: blur(0.8px);
2025-04-15T08:07:18.1996711Z       text-align: center;
2025-04-15T08:07:18.1996773Z     }
2025-04-15T08:07:18.1996776Z 
2025-04-15T08:07:18.1996866Z     #server .key-value span:first-child,
2025-04-15T08:07:18.1996961Z     #package .key-value span:first-child {
2025-04-15T08:07:18.1997028Z       display: none;
2025-04-15T08:07:18.1997091Z     }
2025-04-15T08:07:18.1997095Z 
2025-04-15T08:07:18.1997182Z     #server .key-value span:nth-child(2),
2025-04-15T08:07:18.1997281Z     #package .key-value span:nth-child(2) {
2025-04-15T08:07:18.1997358Z       font-size: 12px;
2025-04-15T08:07:18.1997435Z       color: var(--primary);
2025-04-15T08:07:18.1997524Z       font-family: monospace;
2025-04-15T08:07:18.1997586Z     }
2025-04-15T08:07:18.1997589Z 
2025-04-15T08:07:18.1997682Z     body.netdata-splash .head-summary {
2025-04-15T08:07:18.1997746Z       left: 0;
2025-04-15T08:07:18.1997817Z       padding: 16px;
2025-04-15T08:07:18.1997885Z       right: 0;
2025-04-15T08:07:18.1997954Z       display: flex;
2025-04-15T08:07:18.1998032Z       flex-direction: row;
2025-04-15T08:07:18.1998121Z       justify-content: space-between;
2025-04-15T08:07:18.1998183Z     }
2025-04-15T08:07:18.1998186Z 
2025-04-15T08:07:18.1998273Z     body.netdata-splash .module {
2025-04-15T08:07:18.1998357Z       border: 2px solid var(--border);
2025-04-15T08:07:18.1998436Z       border-radius: 16px;
2025-04-15T08:07:18.1998586Z       box-shadow: -1px 1px var(--main-bg), -2px 2px var(--main-bg),
2025-04-15T08:07:18.1998717Z         -3px 3px var(--border), -4px 4px 24px var(--border);
2025-04-15T08:07:18.1998801Z       height: var(--module-height);
2025-04-15T08:07:18.1999008Z       overflow: auto;
2025-04-15T08:07:18.1999133Z       scrollbar-color: var(--scrollbar-thumb) #293030;
2025-04-15T08:07:18.1999215Z       scrollbar-width: thin;
2025-04-15T08:07:18.1999306Z       /* backdrop-filter: blur(2px); */
2025-04-15T08:07:18.1999368Z     }
2025-04-15T08:07:18.1999371Z 
2025-04-15T08:07:18.1999462Z     body.netdata-splash .module-header {
2025-04-15T08:07:18.1999533Z       display: flex;
2025-04-15T08:07:18.1999606Z       align-items: center;
2025-04-15T08:07:18.1999679Z       gap: 4px;
2025-04-15T08:07:18.1999753Z       padding: 4px 16px;
2025-04-15T08:07:18.1999839Z       background: rgba(0, 0, 0, 0.8);
2025-04-15T08:07:18.1999918Z       border-radius: 16px 16px 0 0;
2025-04-15T08:07:18.1999984Z       color: #8eae9b;
2025-04-15T08:07:18.2000083Z       border-bottom: 1px solid var(--border);
2025-04-15T08:07:18.2000159Z       position: sticky;
2025-04-15T08:07:18.2000227Z       top: 0;
2025-04-15T08:07:18.2000287Z     }
2025-04-15T08:07:18.2000290Z 
2025-04-15T08:07:18.2000405Z     body.netdata-splash .module-header svg path {
2025-04-15T08:07:18.2000480Z       fill: var(--accent);
2025-04-15T08:07:18.2000539Z     }
2025-04-15T08:07:18.2000542Z 
2025-04-15T08:07:18.2000645Z     body.netdata-splash .modules-container {
2025-04-15T08:07:18.2000714Z       max-height: 100%;
2025-04-15T08:07:18.2000788Z       text-align: center;
2025-04-15T08:07:18.2000855Z       margin: auto;
2025-04-15T08:07:18.2000926Z       column-gap: 24px;
2025-04-15T08:07:18.2000988Z     }
2025-04-15T08:07:18.2000991Z 
2025-04-15T08:07:18.2001082Z     body.netdata-splash .module-content {
2025-04-15T08:07:18.2001156Z       padding: 4px 16px;
2025-04-15T08:07:18.2001216Z     }
2025-04-15T08:07:18.2001220Z 
2025-04-15T08:07:18.2001327Z     body.netdata-splash .db-metrics-container {
2025-04-15T08:07:18.2001402Z       display: flex;
2025-04-15T08:07:18.2001605Z       justify-content: center;
2025-04-15T08:07:18.2001674Z       gap: 16px;
2025-04-15T08:07:18.2001733Z     }
2025-04-15T08:07:18.2001737Z 
2025-04-15T08:07:18.2001838Z     body.netdata-splash .db-metrics-blocks {
2025-04-15T08:07:18.2001909Z       /* display: flex; */
2025-04-15T08:07:18.2001986Z       /* flex-direction: column; */
2025-04-15T08:07:18.2002063Z       /* align-items: center;
2025-04-15T08:07:18.2002140Z       justify-content: center;
2025-04-15T08:07:18.2002209Z       gap: 24px; */
2025-04-15T08:07:18.2002286Z       height: var(--module-height);
2025-04-15T08:07:18.2002351Z       width: 100%;
2025-04-15T08:07:18.2002414Z     }
2025-04-15T08:07:18.2002417Z 
2025-04-15T08:07:18.2002489Z     /* .db-metrics-block {
2025-04-15T08:07:18.2002560Z       display: flex;
2025-04-15T08:07:18.2002636Z       flex-direction: column;
2025-04-15T08:07:18.2002709Z       text-align: center;
2025-04-15T08:07:18.2002784Z       min-width: 15vmax;
2025-04-15T08:07:18.2002854Z       height: 150px;
2025-04-15T08:07:18.2002933Z       padding: 0 24px;
2025-04-15T08:07:18.2002994Z     } */
2025-04-15T08:07:18.2003143Z     body.netdata-splash .db-metrics-blocks .module-content {
2025-04-15T08:07:18.2003210Z       padding: 0;
2025-04-15T08:07:18.2003270Z     }
2025-04-15T08:07:18.2003274Z 
2025-04-15T08:07:18.2003370Z     /* .db-metrics-block:not(:last-child) {
2025-04-15T08:07:18.2003459Z       border-right: 1px solid var(--border);
2025-04-15T08:07:18.2003526Z     } */
2025-04-15T08:07:18.2003620Z     body.netdata-splash .db-metrics-title {
2025-04-15T08:07:18.2003692Z       font-size: 1.5vmin;
2025-04-15T08:07:18.2003758Z     }
2025-04-15T08:07:18.2003761Z 
2025-04-15T08:07:18.2003875Z     body.netdata-splash .db-metrics-block-title {
2025-04-15T08:07:18.2003949Z       font-size: 14px;
2025-04-15T08:07:18.2004022Z       padding: 8px 16px;
2025-04-15T08:07:18.2004094Z       z-index: 100;
2025-04-15T08:07:18.2004171Z       font-weight: bold;
2025-04-15T08:07:18.2004239Z       color: #fff;
2025-04-15T08:07:18.2004309Z     }
2025-04-15T08:07:18.2004312Z 
2025-04-15T08:07:18.2004417Z     body.netdata-splash .db-metrics .key-value {
2025-04-15T08:07:18.2004491Z       display: flex;
2025-04-15T08:07:18.2004653Z       flex-direction: column;
2025-04-15T08:07:18.2004737Z       align-items: flex-start;
2025-04-15T08:07:18.2004804Z     }
2025-04-15T08:07:18.2004807Z 
2025-04-15T08:07:18.2004962Z     body.netdata-splash .db-metrics .key-value span:nth-child(2) {
2025-04-15T08:07:18.2005037Z       font-size: 12px;
2025-04-15T08:07:18.2005111Z       color: var(--accent);
2025-04-15T08:07:18.2005188Z       filter: blur(0.5px);
2025-04-15T08:07:18.2005265Z       text-align: center;
2025-04-15T08:07:18.2005327Z     }
2025-04-15T08:07:18.2005331Z 
2025-04-15T08:07:18.2005421Z     body.netdata-splash .db-metrics {
2025-04-15T08:07:18.2005495Z       padding: 8px 16px;
2025-04-15T08:07:18.2005590Z       border-bottom: 1px solid var(--border);
2025-04-15T08:07:18.2005652Z     }
2025-04-15T08:07:18.2005655Z 
2025-04-15T08:07:18.2005745Z     body.netdata-splash .disk-stats {
2025-04-15T08:07:18.2005825Z       /* border-bottom: 0; */
2025-04-15T08:07:18.2005896Z       padding: 16px;
2025-04-15T08:07:18.2005966Z     }
2025-04-15T08:07:18.2005970Z 
2025-04-15T08:07:18.2006218Z     body.netdata-splash .module-content:last-child .disk-stats {
2025-04-15T08:07:18.2006304Z       padding-bottom: 112px;
2025-04-15T08:07:18.2006366Z     }
2025-04-15T08:07:18.2006369Z 
2025-04-15T08:07:18.2006470Z     body.netdata-splash .disk-max .key-value {
2025-04-15T08:07:18.2006550Z       flex-direction: row;
2025-04-15T08:07:18.2006621Z       font-size: 12px;
2025-04-15T08:07:18.2006711Z       justify-content: space-between;
2025-04-15T08:07:18.2006781Z       padding: 2px 0;
2025-04-15T08:07:18.2006845Z     }
2025-04-15T08:07:18.2006853Z 
2025-04-15T08:07:18.2006994Z     body.netdata-splash .disk-max .key-value span:nth-child(2) {
2025-04-15T08:07:18.2007064Z       font-size: 12px;
2025-04-15T08:07:18.2007135Z       display: flex;
2025-04-15T08:07:18.2007343Z       justify-content: space-between;
2025-04-15T08:07:18.2007415Z       width: 100%;
2025-04-15T08:07:18.2007478Z     }
2025-04-15T08:07:18.2007481Z 
2025-04-15T08:07:18.2007585Z     body.netdata-splash .disk-used .key-value {
2025-04-15T08:07:18.2007660Z       padding: 2px 0;
2025-04-15T08:07:18.2007722Z     }
2025-04-15T08:07:18.2007725Z 
2025-04-15T08:07:18.2007898Z     body.netdata-splash .disk-max .key-value span:nth-child(2):before {
2025-04-15T08:07:18.2007973Z       content: "Disk Size";
2025-04-15T08:07:18.2008038Z     }
2025-04-15T08:07:18.2008041Z 
2025-04-15T08:07:18.2008207Z     body.netdata-splash .disk-used .key-value span:nth-child(2):before {
2025-04-15T08:07:18.2008277Z       content: "Used ";
2025-04-15T08:07:18.2008342Z     }
2025-04-15T08:07:18.2008345Z 
2025-04-15T08:07:18.2008493Z     body.netdata-splash .disk-used .key-value span:nth-child(2) {
2025-04-15T08:07:18.2008567Z       font-size: 12px;
2025-04-15T08:07:18.2008635Z       display: flex;
2025-04-15T08:07:18.2008730Z       justify-content: space-between;
2025-04-15T08:07:18.2008794Z       width: 100%;
2025-04-15T08:07:18.2008854Z     }
2025-04-15T08:07:18.2008858Z 
2025-04-15T08:07:18.2009015Z     body.netdata-splash .db-metrics .key-value span:first-child {
2025-04-15T08:07:18.2009086Z       font-size: 12px;
2025-04-15T08:07:18.2009162Z       color: var(--text);
2025-04-15T08:07:18.2009221Z     }
2025-04-15T08:07:18.2009225Z 
2025-04-15T08:07:18.2009331Z     body.netdata-splash .percentage-container {
2025-04-15T08:07:18.2009398Z       width: 100%;
2025-04-15T08:07:18.2009479Z       background: transparent;
2025-04-15T08:07:18.2009567Z       border: 1px solid var(--primary);
2025-04-15T08:07:18.2009633Z       height: 16px;
2025-04-15T08:07:18.2009711Z       border-radius: 1px;
2025-04-15T08:07:18.2009783Z       position: relative;
2025-04-15T08:07:18.2009842Z     }
2025-04-15T08:07:18.2009845Z 
2025-04-15T08:07:18.2009942Z     body.netdata-splash .percentage-bar {
2025-04-15T08:07:18.2010019Z       background: #016a2b94;
2025-04-15T08:07:18.2010101Z       position: absolute;
2025-04-15T08:07:18.2010167Z       bottom: 0;
2025-04-15T08:07:18.2010230Z       top: 0;
2025-04-15T08:07:18.2010410Z       left: 0;
2025-04-15T08:07:18.2010498Z       backdrop-filter: blur(1px);
2025-04-15T08:07:18.2010562Z     }
2025-04-15T08:07:18.2010565Z 
2025-04-15T08:07:18.2010660Z     body.netdata-splash .percentage-text {
2025-04-15T08:07:18.2010736Z       position: absolute;
2025-04-15T08:07:18.2010806Z       font-size: 12px;
2025-04-15T08:07:18.2010868Z       top: 0;
2025-04-15T08:07:18.2010942Z       padding: 0 2px;
2025-04-15T08:07:18.2011015Z       color: var(--accent);
2025-04-15T08:07:18.2011079Z     }
2025-04-15T08:07:18.2011083Z 
2025-04-15T08:07:18.2011175Z     body.netdata-splash .data-tab-table {
2025-04-15T08:07:18.2011244Z       padding: 16px;
2025-04-15T08:07:18.2011315Z       width: 400px;
2025-04-15T08:07:18.2011398Z       height: var(--module-height);
2025-04-15T08:07:18.2011470Z       margin: auto;
2025-04-15T08:07:18.2011536Z     }
2025-04-15T08:07:18.2011540Z 
2025-04-15T08:07:18.2011643Z     body.netdata-splash .node-info-container {
2025-04-15T08:07:18.2011716Z       display: flex;
2025-04-15T08:07:18.2011799Z       flex-direction: column;
2025-04-15T08:07:18.2011868Z       width: 100%;
2025-04-15T08:07:18.2011947Z       justify-content: center;
2025-04-15T08:07:18.2012026Z       align-items: center;
2025-04-15T08:07:18.2012093Z       gap: 8px;
2025-04-15T08:07:18.2012155Z     }
2025-04-15T08:07:18.2012158Z 
2025-04-15T08:07:18.2012249Z     body.netdata-splash .node-info {
2025-04-15T08:07:18.2012318Z       display: flex;
2025-04-15T08:07:18.2012400Z       justify-content: center;
2025-04-15T08:07:18.2012466Z       width: 100%;
2025-04-15T08:07:18.2012531Z       gap: 8px;
2025-04-15T08:07:18.2012609Z       flex-direction: row;
2025-04-15T08:07:18.2012669Z     }
2025-04-15T08:07:18.2012672Z 
2025-04-15T08:07:18.2012796Z     body.netdata-splash .node-info-container .title {
2025-04-15T08:07:18.2012866Z       font-size: 12px;
2025-04-15T08:07:18.2013015Z     }
2025-04-15T08:07:18.2013018Z 
2025-04-15T08:07:18.2013120Z     body.netdata-splash .node-info .key-value {
2025-04-15T08:07:18.2013210Z       border: 1px solid var(--highlight);
2025-04-15T08:07:18.2013289Z       padding: 2px 8px;
2025-04-15T08:07:18.2013365Z       border-radius: 4px;
2025-04-15T08:07:18.2013440Z       font-size: 12px;
2025-04-15T08:07:18.2013516Z       color: var(--highlight);
2025-04-15T08:07:18.2013583Z       height: 20px;
2025-04-15T08:07:18.2013647Z     }
2025-04-15T08:07:18.2013650Z 
2025-04-15T08:07:18.2013795Z     body.netdata-splash .node-info .key-value span:first-child {
2025-04-15T08:07:18.2013875Z       margin-right: 4px;
2025-04-15T08:07:18.2013946Z       font-weight: normal;
2025-04-15T08:07:18.2014010Z     }
2025-04-15T08:07:18.2014013Z 
2025-04-15T08:07:18.2014101Z     body.netdata-splash .availability {
2025-04-15T08:07:18.2014174Z       text-align: right;
2025-04-15T08:07:18.2014254Z       font-family: monospace;
2025-04-15T08:07:18.2014326Z       display: flex;
2025-04-15T08:07:18.2014406Z       flex-direction: column;
2025-04-15T08:07:18.2014489Z       text-transform: capitalize;
2025-04-15T08:07:18.2014568Z       padding: 8px 16px;
2025-04-15T08:07:18.2014636Z       color: #fff;
2025-04-15T08:07:18.2014705Z       font-size: 12px;
2025-04-15T08:07:18.2014770Z     }
2025-04-15T08:07:18.2014773Z 
2025-04-15T08:07:18.2014881Z     body.netdata-splash .availability .key-valye {
2025-04-15T08:07:18.2014953Z       padding: 4px 0;
2025-04-15T08:07:18.2015014Z     }
2025-04-15T08:07:18.2015018Z 
2025-04-15T08:07:18.2015103Z     body.netdata-splash .sub-module {
2025-04-15T08:07:18.2015172Z       width: 100%;
2025-04-15T08:07:18.2015231Z     }
2025-04-15T08:07:18.2015234Z 
2025-04-15T08:07:18.2015323Z     body.netdata-splash .hardware {
2025-04-15T08:07:18.2015399Z       flex-direction: column;
2025-04-15T08:07:18.2015459Z     }
2025-04-15T08:07:18.2015463Z 
2025-04-15T08:07:18.2015576Z     body.netdata-splash .hardware .module-content {
2025-04-15T08:07:18.2015647Z       padding: 0;
2025-04-15T08:07:18.2015719Z       display: flex;
2025-04-15T08:07:18.2015779Z     }
2025-04-15T08:07:18.2015783Z 
2025-04-15T08:07:18.2016001Z     body.netdata-splash .module.has-title .section-title {
2025-04-15T08:07:18.2016177Z       padding-bottom: 12px;
2025-04-15T08:07:18.2016251Z       margin-bottom: 0;
2025-04-15T08:07:18.2016315Z     }
2025-04-15T08:07:18.2016318Z 
2025-04-15T08:07:18.2016400Z     body.netdata-splash .h-auto {
2025-04-15T08:07:18.2016470Z       height: auto;
2025-04-15T08:07:18.2016529Z     }
2025-04-15T08:07:18.2016532Z 
2025-04-15T08:07:18.2016616Z     body.netdata-splash .none {
2025-04-15T08:07:18.2016685Z       display: none;
2025-04-15T08:07:18.2016748Z     }
2025-04-15T08:07:18.2016751Z 
2025-04-15T08:07:18.2016845Z     body.netdata-splash .claim-message {
2025-04-15T08:07:18.2016918Z       position: absolute;
2025-04-15T08:07:18.2016983Z       top: 0;
2025-04-15T08:07:18.2017048Z       left: 0;
2025-04-15T08:07:18.2017110Z       right: 0;
2025-04-15T08:07:18.2017185Z       margin: auto;
2025-04-15T08:07:18.2017253Z       padding: 0 24px;
2025-04-15T08:07:18.2017327Z       overflow-y: auto;
2025-04-15T08:07:18.2017387Z     }
2025-04-15T08:07:18.2017394Z 
2025-04-15T08:07:18.2017499Z     body.netdata-splash .claim-message .welcome {
2025-04-15T08:07:18.2017571Z       padding: 16px 0;
2025-04-15T08:07:18.2017641Z       text-align: center;
2025-04-15T08:07:18.2017705Z     }
2025-04-15T08:07:18.2017709Z 
2025-04-15T08:07:18.2017796Z     body.netdata-splash .text-center {
2025-04-15T08:07:18.2017869Z       text-align: center;
2025-04-15T08:07:18.2017928Z     }
2025-04-15T08:07:18.2017931Z 
2025-04-15T08:07:18.2018024Z     body.netdata-splash .connection-modal {
2025-04-15T08:07:18.2018107Z       background: rgba(0, 0, 0, 0.4);
2025-04-15T08:07:18.2018184Z       border: 1px solid var(--border);
2025-04-15T08:07:18.2018257Z       padding: 16px 16px;
2025-04-15T08:07:18.2018323Z       display: flex;
2025-04-15T08:07:18.2018398Z       flex-direction: column;
2025-04-15T08:07:18.2018610Z       gap: 12px;
2025-04-15T08:07:18.2018686Z       position: relative;
2025-04-15T08:07:18.2018758Z       font-size: 14px;
2025-04-15T08:07:18.2018823Z     }
2025-04-15T08:07:18.2018827Z 
2025-04-15T08:07:18.2018923Z     body.netdata-splash .connection-step {
2025-04-15T08:07:18.2018992Z       display: flex;
2025-04-15T08:07:18.2019067Z       flex-direction: column;
2025-04-15T08:07:18.2019135Z       gap: 12px;
2025-04-15T08:07:18.2019203Z       position: relative;
2025-04-15T08:07:18.2019280Z       min-height: 300px;
2025-04-15T08:07:18.2019337Z     }
2025-04-15T08:07:18.2019341Z 
2025-04-15T08:07:18.2019432Z     body.netdata-splash .dropdown-custom {
2025-04-15T08:07:18.2019500Z       display: flex;
2025-04-15T08:07:18.2019572Z       flex-direction: column;
2025-04-15T08:07:18.2019637Z       gap: 12px;
2025-04-15T08:07:18.2019707Z       position: relative;
2025-04-15T08:07:18.2019767Z     }
2025-04-15T08:07:18.2019772Z 
2025-04-15T08:07:18.2019858Z     body.netdata-splash .modal-footer {
2025-04-15T08:07:18.2019941Z       height: var(--footer-height);
2025-04-15T08:07:18.2020014Z       padding: 10px 0 0;
2025-04-15T08:07:18.2020080Z       display: flex;
2025-04-15T08:07:18.2020170Z       justify-content: space-between;
2025-04-15T08:07:18.2020233Z     }
2025-04-15T08:07:18.2020237Z 
2025-04-15T08:07:18.2020337Z     body.netdata-splash .modal-footer .button {
2025-04-15T08:07:18.2020406Z       height: 32px;
2025-04-15T08:07:18.2020475Z       font-size: 14px;
2025-04-15T08:07:18.2020538Z     }
2025-04-15T08:07:18.2020541Z 
2025-04-15T08:07:18.2020628Z     body.netdata-splash .list-options {
2025-04-15T08:07:18.2020694Z       margin: 0;
2025-04-15T08:07:18.2020760Z       padding: 0;
2025-04-15T08:07:18.2020832Z       list-style: none;
2025-04-15T08:07:18.2020901Z       height: 300px;
2025-04-15T08:07:18.2020969Z       overflow: auto;
2025-04-15T08:07:18.2021088Z       scrollbar-color: var(--scrollbar-thumb) #293030;
2025-04-15T08:07:18.2021167Z       scrollbar-width: thin;
2025-04-15T08:07:18.2021233Z     }
2025-04-15T08:07:18.2021236Z 
2025-04-15T08:07:18.2021332Z     body.netdata-splash .list-options li {
2025-04-15T08:07:18.2021403Z       padding: 8px 12px;
2025-04-15T08:07:18.2021608Z       background: var(--list-option-bg);
2025-04-15T08:07:18.2021705Z       border: 1px solid var(--border-neutral);
2025-04-15T08:07:18.2021780Z       margin-bottom: 12px;
2025-04-15T08:07:18.2021854Z       cursor: pointer;
2025-04-15T08:07:18.2021914Z     }
2025-04-15T08:07:18.2021917Z 
2025-04-15T08:07:18.2022024Z     body.netdata-splash .list-options li:hover {
2025-04-15T08:07:18.2022121Z       background: var(--list-option-hover-bg);
2025-04-15T08:07:18.2022185Z     }
2025-04-15T08:07:18.2022189Z 
2025-04-15T08:07:18.2022299Z     body.netdata-splash .list-options li.selected {
2025-04-15T08:07:18.2022404Z       background: var(--list-option-selected-bg);
2025-04-15T08:07:18.2022482Z       color: var(--highlight);
2025-04-15T08:07:18.2022551Z       display: flex;
2025-04-15T08:07:18.2022643Z       justify-content: space-between;
2025-04-15T08:07:18.2022704Z     }
2025-04-15T08:07:18.2022709Z 
2025-04-15T08:07:18.2022838Z     body.netdata-splash .list-options li.selected:after {
2025-04-15T08:07:18.2022913Z       content: "\2713";
2025-04-15T08:07:18.2022984Z       margin-left: 2px;
2025-04-15T08:07:18.2023047Z     }
2025-04-15T08:07:18.2023051Z 
2025-04-15T08:07:18.2023146Z     body.netdata-splash input[type="text"] {
2025-04-15T08:07:18.2023222Z       background: #2d3535;
2025-04-15T08:07:18.2023294Z       padding: 4px 8px;
2025-04-15T08:07:18.2023359Z       border: 0;
2025-04-15T08:07:18.2023432Z       font-size: 14px;
2025-04-15T08:07:18.2023502Z       min-height: 28px;
2025-04-15T08:07:18.2023576Z       color: var(--text);
2025-04-15T08:07:18.2023649Z       border-radius: 2px;
2025-04-15T08:07:18.2023711Z     }
2025-04-15T08:07:18.2023717Z 
2025-04-15T08:07:18.2023823Z     body.netdata-splash input[type="text"]:focus {
2025-04-15T08:07:18.2023904Z       outline: 1px solid var(--border);
2025-04-15T08:07:18.2024052Z     }
2025-04-15T08:07:18.2024056Z 
2025-04-15T08:07:18.2024140Z     body.netdata-splash .dropdown {
2025-04-15T08:07:18.2024215Z       position: relative;
2025-04-15T08:07:18.2024284Z       width: auto;
2025-04-15T08:07:18.2024368Z       border: 1px solid var(--border);
2025-04-15T08:07:18.2024443Z       border-radius: 4px;
2025-04-15T08:07:18.2024509Z       padding: 8px;
2025-04-15T08:07:18.2024580Z       cursor: pointer;
2025-04-15T08:07:18.2024638Z     }
2025-04-15T08:07:18.2024642Z 
2025-04-15T08:07:18.2024738Z     body.netdata-splash .dropdown-toggle {
2025-04-15T08:07:18.2024805Z       display: flex;
2025-04-15T08:07:18.2024890Z       justify-content: space-between;
2025-04-15T08:07:18.2024965Z       align-items: center;
2025-04-15T08:07:18.2025024Z     }
2025-04-15T08:07:18.2025027Z 
2025-04-15T08:07:18.2025128Z     body.netdata-splash .checkbox-container {
2025-04-15T08:07:18.2025195Z       display: none;
2025-04-15T08:07:18.2025268Z       position: absolute;
2025-04-15T08:07:18.2025341Z       top: 100%;
2025-04-15T08:07:18.2025402Z       left: 0;
2025-04-15T08:07:18.2025467Z       width: 100%;
2025-04-15T08:07:18.2025546Z       border: 1px solid var(--border);
2025-04-15T08:07:18.2025637Z       background-color: var(--main-bg);
2025-04-15T08:07:18.2025704Z       z-index: 1;
2025-04-15T08:07:18.2025775Z       max-height: 150px;
2025-04-15T08:07:18.2025848Z       overflow-y: auto;
2025-04-15T08:07:18.2025915Z       padding: 8px;
2025-04-15T08:07:18.2025976Z     }
2025-04-15T08:07:18.2025980Z 
2025-04-15T08:07:18.2026183Z     body.netdata-splash .checkbox-container label {
2025-04-15T08:07:18.2026252Z       display: block;
2025-04-15T08:07:18.2026327Z       margin-bottom: 8px;
2025-04-15T08:07:18.2026386Z     }
2025-04-15T08:07:18.2026390Z 
2025-04-15T08:07:18.2026500Z     body.netdata-splash .checkbox-container input {
2025-04-15T08:07:18.2026572Z       margin-right: 5px;
2025-04-15T08:07:18.2026631Z     }
2025-04-15T08:07:18.2026638Z 
2025-04-15T08:07:18.2026726Z     body.netdata-splash .selected-rooms {
2025-04-15T08:07:18.2026800Z       font-size: 14px;
2025-04-15T08:07:18.2026867Z       color: #333;
2025-04-15T08:07:18.2026925Z     }
2025-04-15T08:07:18.2026929Z 
2025-04-15T08:07:18.2027134Z     body.netdata-splash .text-padding {
2025-04-15T08:07:18.2027214Z       padding: 8px 8px 16px;
2025-04-15T08:07:18.2027274Z     }
2025-04-15T08:07:18.2027277Z 
2025-04-15T08:07:18.2027366Z     body.netdata-splash .nd-radio,
2025-04-15T08:07:18.2027453Z     body.netdata-splash .nd-checkbox {
2025-04-15T08:07:18.2027522Z       display: block;
2025-04-15T08:07:18.2027594Z       position: relative;
2025-04-15T08:07:18.2027669Z       padding-left: 32px;
2025-04-15T08:07:18.2027735Z       cursor: pointer;
2025-04-15T08:07:18.2027803Z       font-size: 16px;
2025-04-15T08:07:18.2027891Z       -webkit-user-select: none;
2025-04-15T08:07:18.2027968Z       -moz-user-select: none;
2025-04-15T08:07:18.2028042Z       user-select: none;
2025-04-15T08:07:18.2028112Z       line-height: 20px;
2025-04-15T08:07:18.2028175Z     }
2025-04-15T08:07:18.2028179Z 
2025-04-15T08:07:18.2028275Z     body.netdata-splash .nd-checkbox input {
2025-04-15T08:07:18.2028345Z       position: absolute;
2025-04-15T08:07:18.2028417Z       opacity: 0;
2025-04-15T08:07:18.2028484Z       cursor: pointer;
2025-04-15T08:07:18.2028551Z       height: 0;
2025-04-15T08:07:18.2028616Z       width: 0;
2025-04-15T08:07:18.2028676Z     }
2025-04-15T08:07:18.2028679Z 
2025-04-15T08:07:18.2028786Z     body.netdata-splash .nd-checkbox .checkmark {
2025-04-15T08:07:18.2028860Z       position: absolute;
2025-04-15T08:07:18.2028928Z       top: 0;
2025-04-15T08:07:18.2028991Z       left: 0;
2025-04-15T08:07:18.2029057Z       height: 16px;
2025-04-15T08:07:18.2029127Z       width: 16px;
2025-04-15T08:07:18.2029213Z       background-color: var(--main-bg);
2025-04-15T08:07:18.2029296Z       border: 1px solid var(--primary);
2025-04-15T08:07:18.2029369Z       border-radius: 2px;
2025-04-15T08:07:18.2029431Z     }
2025-04-15T08:07:18.2029434Z 
2025-04-15T08:07:18.2029693Z     body.netdata-splash .nd-checkbox:hover input~.checkmark {
2025-04-15T08:07:18.2029777Z       background-color: var(--border);
2025-04-15T08:07:18.2029840Z     }
2025-04-15T08:07:18.2029848Z 
2025-04-15T08:07:18.2029987Z     body.netdata-splash .nd-checkbox :hover input~.checkmark {
2025-04-15T08:07:18.2030070Z       background-color: #ccc;
2025-04-15T08:07:18.2030128Z     }
2025-04-15T08:07:18.2030132Z 
2025-04-15T08:07:18.2030272Z     body.netdata-splash .nd-checkbox input:checked~.checkmark {
2025-04-15T08:07:18.2030359Z       background-color: var(--boder);
2025-04-15T08:07:18.2030419Z     }
2025-04-15T08:07:18.2030423Z 
2025-04-15T08:07:18.2030544Z     body.netdata-splash .nd-checkbox .checkmark:after {
2025-04-15T08:07:18.2030611Z       content: "";
2025-04-15T08:07:18.2030687Z       position: absolute;
2025-04-15T08:07:18.2030755Z       display: none;
2025-04-15T08:07:18.2030814Z     }
2025-04-15T08:07:18.2030818Z 
2025-04-15T08:07:18.2030980Z     body.netdata-splash .nd-checkbox input:checked~.checkmark:after {
2025-04-15T08:07:18.2031054Z       display: block;
2025-04-15T08:07:18.2031116Z     }
2025-04-15T08:07:18.2031121Z 
2025-04-15T08:07:18.2031240Z     body.netdata-splash .nd-checkbox .checkmark:after {
2025-04-15T08:07:18.2031309Z       inset: 0 0 2px 0;
2025-04-15T08:07:18.2031377Z       margin: auto;
2025-04-15T08:07:18.2031445Z       width: 2px;
2025-04-15T08:07:18.2031514Z       height: 8px;
2025-04-15T08:07:18.2031595Z       border: solid var(--highlight);
2025-04-15T08:07:18.2031677Z       border-width: 0 2px 2px 0;
2025-04-15T08:07:18.2031754Z       transform: rotate(45deg);
2025-04-15T08:07:18.2031813Z     }
2025-04-15T08:07:18.2031816Z 
2025-04-15T08:07:18.2031889Z     /* Retention table */
2025-04-15T08:07:18.2031959Z     #tiers-container {
2025-04-15T08:07:18.2032026Z       height: auto;
2025-04-15T08:07:18.2032086Z     }
2025-04-15T08:07:18.2032089Z 
2025-04-15T08:07:18.2032154Z     #tiers-table {
2025-04-15T08:07:18.2032222Z       width: 100%;
2025-04-15T08:07:18.2032304Z       border-collapse: collapse;
2025-04-15T08:07:18.2032365Z     }
2025-04-15T08:07:18.2032368Z 
2025-04-15T08:07:18.2032463Z     #tiers-table thead tr:nth-of-type(1) th {
2025-04-15T08:07:18.2032640Z       padding-top: 16px;
2025-04-15T08:07:18.2032702Z     }
2025-04-15T08:07:18.2032705Z 
2025-04-15T08:07:18.2032798Z     #tiers-table thead tr:nth-of-type(2) th {
2025-04-15T08:07:18.2032880Z       padding-bottom: 16px;
2025-04-15T08:07:18.2032938Z     }
2025-04-15T08:07:18.2032941Z 
2025-04-15T08:07:18.2033033Z     #tiers-table tbody tr:nth-of-type(1) td {
2025-04-15T08:07:18.2033120Z       border-top: 1px solid var(--border);
2025-04-15T08:07:18.2033191Z       padding-top: 16px;
2025-04-15T08:07:18.2033254Z     }
2025-04-15T08:07:18.2033258Z 
2025-04-15T08:07:18.2033346Z     #tiers-table tbody tr:last-of-type td {
2025-04-15T08:07:18.2033425Z       padding-bottom: 24px;
2025-04-15T08:07:18.2033486Z     }
2025-04-15T08:07:18.2033489Z 
2025-04-15T08:07:18.2033558Z     #tiers-table th {
2025-04-15T08:07:18.2033642Z       font-size: var(--font-small);
2025-04-15T08:07:18.2033713Z       padding: 8px 4px;
2025-04-15T08:07:18.2033773Z     }
2025-04-15T08:07:18.2033777Z 
2025-04-15T08:07:18.2033848Z     #tiers-table td {
2025-04-15T08:07:18.2033929Z       font-size: var(--font-medium);
2025-04-15T08:07:18.2033998Z       text-align: center;
2025-04-15T08:07:18.2034069Z       padding: 12px 4px;
2025-04-15T08:07:18.2034128Z     }
2025-04-15T08:07:18.2034131Z 
2025-04-15T08:07:18.2034213Z     #tiers-table th:first-of-type,
2025-04-15T08:07:18.2034297Z     #tiers-table td:first-of-type {
2025-04-15T08:07:18.2034369Z       padding-left: 12px;
2025-04-15T08:07:18.2034433Z     }
2025-04-15T08:07:18.2034496Z   
2025-04-15T08:07:18.2034577Z     #tiers-table th:last-of-type,  
2025-04-15T08:07:18.2034658Z     #tiers-table td:last-of-type {
2025-04-15T08:07:18.2034738Z       padding-right: 12px;
2025-04-15T08:07:18.2034800Z     }
2025-04-15T08:07:18.2034803Z 
2025-04-15T08:07:18.2034883Z     #tiers-table .section-start {
2025-04-15T08:07:18.2035063Z       border-left: 1px solid var(--border);
2025-04-15T08:07:18.2035127Z     }
2025-04-15T08:07:18.2035131Z 
2025-04-15T08:07:18.2035211Z     .progress-indicator {
2025-04-15T08:07:18.2035285Z       gap: 8px;
2025-04-15T08:07:18.2035355Z       padding: 0 8px;
2025-04-15T08:07:18.2035418Z     }
2025-04-15T08:07:18.2035421Z 
2025-04-15T08:07:18.2035504Z     .progress-bar-container {
2025-04-15T08:07:18.2035577Z       position: relative;
2025-04-15T08:07:18.2035647Z       width: 100%;
2025-04-15T08:07:18.2035738Z       height: var(--progress-bar-height);
2025-04-15T08:07:18.2035840Z       background-color: var(--border-neutral);
2025-04-15T08:07:18.2035911Z       overflow: hidden;
2025-04-15T08:07:18.2035984Z       border-radius: 2px;
2025-04-15T08:07:18.2036048Z     }
2025-04-15T08:07:18.2036051Z 
2025-04-15T08:07:18.2036218Z     .progress-bar {
2025-04-15T08:07:18.2036293Z       position: absolute;
2025-04-15T08:07:18.2036357Z       top: 0;
2025-04-15T08:07:18.2036425Z       left: 0;
2025-04-15T08:07:18.2036520Z       height: var(--progress-bar-height);
2025-04-15T08:07:18.2036605Z       background-color: var(--primary);
2025-04-15T08:07:18.2036667Z     }
2025-04-15T08:07:18.2036675Z 
2025-04-15T08:07:18.2036740Z     #tooltip {
2025-04-15T08:07:18.2036812Z       max-width: 300px;
2025-04-15T08:07:18.2036896Z       background-color: var(--accent);
2025-04-15T08:07:18.2036973Z       color: var(--text-dark);
2025-04-15T08:07:18.2037047Z       border-radius: 4px;
2025-04-15T08:07:18.2037117Z       padding: 8px 16px;
2025-04-15T08:07:18.2037188Z       position: fixed;
2025-04-15T08:07:18.2037266Z       font-size: var(--font-small);
2025-04-15T08:07:18.2037339Z       line-height: 1.5;
2025-04-15T08:07:18.2037407Z       z-index: 9999;
2025-04-15T08:07:18.2037476Z       display: none;
2025-04-15T08:07:18.2037573Z     }</style><script>const toggleTab = tab => {
2025-04-15T08:07:18.2037712Z       const factors = document.querySelectorAll(".data-tab");
2025-04-15T08:07:18.2037835Z       const tabs = document.querySelectorAll(".btn-tab");
2025-04-15T08:07:18.2037844Z 
2025-04-15T08:07:18.2037931Z       factors.forEach(function (factor) {
2025-04-15T08:07:18.2038184Z         let dataTab = parseInt(factor.getAttribute("data-tab"));
2025-04-15T08:07:18.2038280Z         if (dataTab == tab || dataTab === 0) {
2025-04-15T08:07:18.2038366Z           factor.classList.add("active");
2025-04-15T08:07:18.2038435Z         } else {
2025-04-15T08:07:18.2038525Z           factor.classList.remove("active");
2025-04-15T08:07:18.2038590Z         }
2025-04-15T08:07:18.2038649Z       });
2025-04-15T08:07:18.2038653Z 
2025-04-15T08:07:18.2038737Z       // Toggle active class on tab buttons
2025-04-15T08:07:18.2038820Z       tabs.forEach(tabButton => {
2025-04-15T08:07:18.2038905Z         if (tabButton.dataset?.tab == tab) {
2025-04-15T08:07:18.2038997Z           tabButton.classList.add("active");
2025-04-15T08:07:18.2039059Z         } else {
2025-04-15T08:07:18.2039154Z           tabButton.classList.remove("active");
2025-04-15T08:07:18.2039223Z         }
2025-04-15T08:07:18.2039284Z       });
2025-04-15T08:07:18.2039346Z     }
2025-04-15T08:07:18.2039349Z 
2025-04-15T08:07:18.2039430Z     const initGrid = () => {
2025-04-15T08:07:18.2039563Z       const canvas1 = document.getElementById("monitorGrid");
2025-04-15T08:07:18.2039662Z       const context1 = canvas1.getContext("2d");
2025-04-15T08:07:18.2039773Z       const frame = document.querySelector(".frame");
2025-04-15T08:07:18.2039848Z       const cellSize = 4;
2025-04-15T08:07:18.2039918Z       const gapSize = 2;
2025-04-15T08:07:18.2040055Z       const colors = ["#001107", "#003114", "#014420", "#047031", "#049846"];
2025-04-15T08:07:18.2040059Z 
2025-04-15T08:07:18.2040125Z       let grid = [];
2025-04-15T08:07:18.2040129Z 
2025-04-15T08:07:18.2040212Z       const getRandomColor = () => {
2025-04-15T08:07:18.2040345Z         return colors[Math.floor(Math.random() * colors.length)];
2025-04-15T08:07:18.2040406Z       }
2025-04-15T08:07:18.2040410Z 
2025-04-15T08:07:18.2040642Z       const resizeCanvas = (canvas, context) => {
2025-04-15T08:07:18.2040730Z         canvas.width = frame.clientWidth;
2025-04-15T08:07:18.2040827Z         canvas.height = frame.clientHeight;
2025-04-15T08:07:18.2040832Z 
2025-04-15T08:07:18.2040974Z         const cols = Math.floor(canvas.width / (cellSize + gapSize));
2025-04-15T08:07:18.2041117Z         const rows = Math.floor(canvas.height / (cellSize + gapSize));
2025-04-15T08:07:18.2041121Z 
2025-04-15T08:07:18.2041214Z         grid = Array.from({ length: rows }, () =>
2025-04-15T08:07:18.2041318Z           Array.from({ length: cols }, getRandomColor)
2025-04-15T08:07:18.2041383Z         );
2025-04-15T08:07:18.2041387Z 
2025-04-15T08:07:18.2041466Z         drawGrid(context, canvas);
2025-04-15T08:07:18.2041528Z       }
2025-04-15T08:07:18.2041532Z 
2025-04-15T08:07:18.2041619Z       const drawGrid = (context, canvas) => {
2025-04-15T08:07:18.2041746Z         context.clearRect(0, 0, canvas.width, canvas.height);
2025-04-15T08:07:18.2041880Z         const cols = Math.floor(canvas.width / (cellSize + gapSize));
2025-04-15T08:07:18.2042021Z         const rows = Math.floor(canvas.height / (cellSize + gapSize));
2025-04-15T08:07:18.2042028Z 
2025-04-15T08:07:18.2042117Z         for (let row = 0; row < rows; row++) {
2025-04-15T08:07:18.2042202Z           for (let col = 0; col < cols; col++) {
2025-04-15T08:07:18.2042288Z             if (grid[row] && grid[row][col]) {
2025-04-15T08:07:18.2042380Z               context.fillStyle = grid[row][col];
2025-04-15T08:07:18.2042459Z               context.fillRect(
2025-04-15T08:07:18.2042542Z                 col * (cellSize + gapSize),
2025-04-15T08:07:18.2042618Z                 row * (cellSize + gapSize),
2025-04-15T08:07:18.2042688Z                 cellSize,
2025-04-15T08:07:18.2042752Z                 cellSize
2025-04-15T08:07:18.2042814Z               );
2025-04-15T08:07:18.2042874Z             }
2025-04-15T08:07:18.2042934Z           }
2025-04-15T08:07:18.2042997Z         }
2025-04-15T08:07:18.2043055Z       }
2025-04-15T08:07:18.2043063Z 
2025-04-15T08:07:18.2043150Z       resizeCanvas(canvas1, context1);
2025-04-15T08:07:18.2043154Z 
2025-04-15T08:07:18.2043427Z       window.addEventListener("resize", () => resizeCanvas(canvas1, context1));
2025-04-15T08:07:18.2093536Z     }</script></head><body class="loading netdata-splash"><noscript><iframe src="https://www.googletagmanager.com/ns.html?id=GTM-N6CBMJD" height="0" width="0" style="display:none;visibility:hidden"></iframe></noscript><div id="app" class="container grid"><div class="frame frame-left col-span-7 grid light-beam relative"><div class="head-summary absolute index-10"><div class="server"><div class="no-title" id="server"></div><div class="no-title" id="package"></div></div><div class="availability h-auto module"><div class="title">Cloud status</div><div class="no-key" id="cloud_status"></div></div></div><div class="col-span-12 row-span-11"><div id="sphereContainer"><div id="loadingMessage" class="loading-message">Loading...</div><div class="hide-title absolute-center sphere-stats-container"><div class="metrics-container"><div class="collected-metrics" id="collectedMetrics"></div><div class="node-info-container"><div class="title">NODES</div><div class="node-info" id="nodes_streaming"></div></div></div><div class="system-container data-tab data-tab-container" data-tab="2"><div class="system grid-columns-10 md-grid-columns-12"><div class="flex-col col-span-5 md-col-span-6"><div class="section-title">Kernel</div><div class="grid-columns-10"><div class="h-auto module col-span-5" id="kernel"></div><div class="h-auto module col-span-5" id="kernelVersion"></div></div></div><div class="flex-col col-span-5 md-col-span-6"><div class="section-title">OS</div><div class="grid-columns-10"><div id="os" class="h-auto module col-span-5"></div><div class="h-auto module col-span-5" id="id"></div></div></div><div class="hardware module-section col-span-10 md-col-span-12"><div class="section-title">Hardware</div><div class="grid-columns-10 md-grid-columns-12"><div class="module h-auto col-span-2 md-col-span-4" id="cpuCores"></div><div class="module h-auto col-span-2 md-col-span-4" id="cpuFrequency"></div><div class="module h-auto col-span-2 md-col-span-4" id="ram"></div><div class="module h-auto col-span-2 md-col-span-4" id="disk"></div><div class="module h-auto col-span-2 md-col-span-4" id="cpuArchitecture"></div><div class="module h-auto col-span-2 md-col-span-4" id="virtualization"></div></div></div></div></div><div class="data-tab data-tab-container" data-tab="1"><div class="db-metrics-container"><div id="tiers-container" class="db-metrics-blocks module"><table id="tiers-table"><thead><tr><th rowspan="2"><span data-tooltip="A database layer that stores metrics at a specific resolution.">Tier</span></th><th rowspan="2">Resolution</th><th colspan="2" class="section-start">Stored</th><th colspan="3" class="section-start">Retention</th><th colspan="2" class="section-start">Disk</th></tr><tr><th class="section-start">Metrics</th><th><span data-tooltip="The total number of measurements stored in the database across all metrics. Each sample represents a recorded value for a specific metric at a given time.">Samples</span></th><th class="section-start">Current</th><th><span data-tooltip="The maximum time data can be kept, based on the configured time and disk space limits.">Effective</span></th><th>Configured</th><th class="section-start">Used</th><th>Configured</th></tr></thead><tbody><tr id="tiers-table-data-placeholder"></tr></tbody></table></div></div></div><div class="data-tab data-tab-container" data-tab="3"><div class="modules-container grid"><div class="module col-span-4"><div class="module-header"><div class="section-image"><svg width="18" height="18" viewBox="0 0 18 18" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M16.5299 4.47019C16.2399 4.18019 15.7599 4.18019 15.4699 4.47019L13.5299 6.41019L11.5899 4.47019L13.5299 2.53019C13.8199 2.24019 13.8199 1.76019 13.5299 1.47019C13.2399 1.18019 12.7599 1.18019 12.4699 1.47019L10.5299 3.41019L8.99994 1.88019L5.74994 5.13019C4.93994 5.93019 4.49994 7.01019 4.49994 8.15019V8.38019L3.72994 9.15019C2.53994 10.3302 2.45994 12.2002 3.43994 13.5002L1.96994 14.9702C1.67994 15.2602 1.67994 15.7402 1.96994 16.0302C2.11994 16.1802 2.30994 16.2502 2.49994 16.2502C2.68994 16.2502 2.87994 16.1802 3.02994 16.0302L4.49994 14.5602C5.06994 15.0002 5.76994 15.2402 6.49994 15.2402C7.38994 15.2402 8.21994 14.8902 8.84994 14.2702L9.61994 13.5002H9.84994C10.9899 13.5002 12.0599 13.0602 12.8699 12.2502L16.1199 9.00019L14.5899 7.47019L16.5299 5.53019C16.8199 5.24019 16.8199 4.76019 16.5299 4.47019ZM11.8099 11.1902C11.2899 11.7102 10.5899 12.0002 9.84994 12.0002H8.99994L7.78994 13.2102C7.42994 13.5702 6.96994 13.7402 6.49994 13.7402C6.02994 13.7402 5.56994 13.5602 5.20994 13.2102L4.78994 12.7902C4.07994 12.0802 4.07994 10.9202 4.78994 10.2102L5.46994 9.53019L6.40994 10.4702C6.99994 11.0602 7.94994 11.0602 8.52994 10.4702L6.01994 7.96019C6.06994 7.30019 6.33994 6.67019 6.80994 6.19019L8.99994 4.00019L13.9999 9.00019L11.8099 11.1902Z" fill="var(--text)"/></svg></div><span class="section-title">Plugins</span></div><div class="module-content" id="plugins"></div></div><div class="module col-span-4"><div class="module-header"><div class="section-image"><svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M7 18C7.55 18 8 17.55 8 17C8 16.45 7.55 16 7 16C6.45 16 6 16.45 6 17C6 17.55 6.45 18 7 18ZM14 17.79C14.28 17.51 14.28 17.07 14 16.79C13.72 16.51 13.28 16.51 13 16.79C12.72 17.07 12.72 17.51 13 17.79C13.28 18.07 13.72 18.07 14 17.79ZM17 8V4H12V2H2V22H22V8H17ZM10 20H4V4H10V20ZM15 20H12V6H15V20ZM20 20H17V10H20V20ZM19 17.79C19.28 17.51 19.28 17.07 19 16.79C18.72 16.51 18.28 16.51 18 16.79C17.72 17.07 17.72 17.51 18 17.79C18.28 18.07 18.72 18.07 19 17.79Z" fill="var(--text)"/></svg></div><span class="section-title">Libraries</span></div><div class="module-content" id="libs"></div></div><div class="module col-span-4"><div class="module-header"><div class="section-image"><svg width="18" height="18" viewBox="0 0 18 18" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M4 16.0002H5V14.5002H4V16.0002ZM2 16.0002H3V14.5002H2V16.0002ZM15.28 6.97019L10.25 1.94019L5.22 6.97019C4.927 7.26319 4.927 7.73819 5.22 8.03119C5.513 8.32419 5.988 8.32419 6.281 8.03119L9.5 4.81119V11.8392C9.5 13.3062 8.306 14.5002 6.838 14.5002H6V16.0002H6.838C9.136 16.0002 11 14.1372 11 11.8382V4.81119L14.22 8.03119C14.366 8.17719 14.558 8.25119 14.75 8.25119C14.942 8.25119 15.134 8.17819 15.28 8.03119C15.573 7.73719 15.573 7.26319 15.28 6.97019Z" fill="var(--text)"/></svg></div><span class="section-title">Exporters</span></div><div class="module-content" id="exporters"></div></div></div></div><div class="data-tab data-tab-container" data-tab="4"><div class="module data-tab-table" id="directories"></div></div></div></div></div><div class="relative row-span-1 col-span-12 full-h"><div class="license-link"><a href="https://app.netdata.cloud/LICENSE.txt" target="_blank">Netdata UI License</a></div><div class="tabs full-h"><button type="button" name="button" class="btn-tab tab active" data-tab="1"><div class="tab-icon"><svg width="18" height="18" viewBox="0 0 18 18" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M9 10C14.153 10 16.5 7.927 16.5 6C16.5 4.073 14.153 2 9 2C3.847 2 1.5 4.073 1.5 6C1.5 7.927 3.847 10 9 10ZM9 3.5C12.313 3.5 15 4.619 15 6C15 7.381 12.313 8.5 9 8.5C5.687 8.5 3 7.381 3 6C3 4.619 5.687 3.5 9 3.5ZM14.566 12.931C13.68 13.85 11.523 14.5 9 14.5C6.477 14.5 4.32 13.85 3.434 12.931C2.639 12.547 2.01 12.081 1.545 11.563C1.518 11.708 1.5 11.854 1.5 12C1.5 13.927 3.847 16 9 16C14.153 16 16.5 13.927 16.5 12C16.5 11.854 16.482 11.708 16.455 11.562C15.99 12.081 15.361 12.546 14.566 12.931ZM14.566 9.931C13.68 10.85 11.523 11.5 9 11.5C6.477 11.5 4.32 10.85 3.434 9.931C2.639 9.547 2.01 9.081 1.545 8.563C1.518 8.708 1.5 8.854 1.5 9C1.5 10.927 3.847 13 9 13C14.153 13 16.5 10.927 16.5 9C16.5 8.854 16.482 8.708 16.455 8.562C15.99 9.081 15.361 9.546 14.566 9.931Z"/></svg></div>Database</button> <button type="button" name="button" class="btn-tab tab" data-tab="2"><div class="tab-icon"><svg width="60" height="60" viewBox="0 0 60 60" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M40.3125 18.75H19.6875C19.1697 18.75 18.75 19.1697 18.75 19.6875V40.3125C18.75 40.8303 19.1697 41.25 19.6875 41.25H40.3125C40.8303 41.25 41.25 40.8303 41.25 40.3125V19.6875C41.25 19.1697 40.8303 18.75 40.3125 18.75Z"/><path d="M54.375 22.5C54.8723 22.5 55.3492 22.3025 55.7008 21.9508C56.0525 21.5992 56.25 21.1223 56.25 20.625C56.25 20.1277 56.0525 19.6508 55.7008 19.2992C55.3492 18.9475 54.8723 18.75 54.375 18.75H52.5V15C52.4978 13.0115 51.707 11.1051 50.3009 9.6991C48.8949 8.29305 46.9885 7.50217 45 7.5H41.25V5.625C41.25 5.12772 41.0525 4.65081 40.7008 4.29917C40.3492 3.94754 39.8723 3.75 39.375 3.75C38.8777 3.75 38.4008 3.94754 38.0492 4.29917C37.6975 4.65081 37.5 5.12772 37.5 5.625V7.5H31.875V5.625C31.875 5.12772 31.6775 4.65081 31.3258 4.29917C30.9742 3.94754 30.4973 3.75 30 3.75C29.5027 3.75 29.0258 3.94754 28.6742 4.29917C28.3225 4.65081 28.125 5.12772 28.125 5.625V7.5H22.5V5.625C22.5 5.12772 22.3025 4.65081 21.9508 4.29917C21.5992 3.94754 21.1223 3.75 20.625 3.75C20.1277 3.75 19.6508 3.94754 19.2992 4.29917C18.9475 4.65081 18.75 5.12772 18.75 5.625V7.5H15C13.0115 7.50217 11.1051 8.29305 9.6991 9.6991C8.29305 11.1051 7.50217 13.0115 7.5 15V18.75H5.625C5.12772 18.75 4.65081 18.9475 4.29917 19.2992C3.94754 19.6508 3.75 20.1277 3.75 20.625C3.75 21.1223 3.94754 21.5992 4.29917 21.9508C4.65081 22.3025 5.12772 22.5 5.625 22.5H7.5V28.125H5.625C5.12772 28.125 4.65081 28.3225 4.29917 28.6742C3.94754 29.0258 3.75 29.5027 3.75 30C3.75 30.4973 3.94754 30.9742 4.29917 31.3258C4.65081 31.6775 5.12772 31.875 5.625 31.875H7.5V37.5H5.625C5.12772 37.5 4.65081 37.6975 4.29917 38.0492C3.94754 38.4008 3.75 38.8777 3.75 39.375C3.75 39.8723 3.94754 40.3492 4.29917 40.7008C4.65081 41.0525 5.12772 41.25 5.625 41.25H7.5V45C7.50217 46.9885 8.29305 48.8949 9.6991 50.3009C11.1051 51.707 13.0115 52.4978 15 52.5H18.75V54.375C18.75 54.8723 18.9475 55.3492 19.2992 55.7008C19.6508 56.0525 20.1277 56.25 20.625 56.25C21.1223 56.25 21.5992 56.0525 21.9508 55.7008C22.3025 55.3492 22.5 54.8723 22.5 54.375V52.5H28.125V54.375C28.125 54.8723 28.3225 55.3492 28.6742 55.7008C29.0258 56.0525 29.5027 56.25 30 56.25C30.4973 56.25 30.9742 56.0525 31.3258 55.7008C31.6775 55.3492 31.875 54.8723 31.875 54.375V52.5H37.5V54.375C37.5 54.8723 37.6975 55.3492 38.0492 55.7008C38.4008 56.0525 38.8777 56.25 39.375 56.25C39.8723 56.25 40.3492 56.0525 40.7008 55.7008C41.0525 55.3492 41.25 54.8723 41.25 54.375V52.5H45C46.9885 52.4978 48.8949 51.707 50.3009 50.3009C51.707 48.8949 52.4978 46.9885 52.5 45V41.25H54.375C54.8723 41.25 55.3492 41.0525 55.7008 40.7008C56.0525 40.3492 56.25 39.8723 56.25 39.375C56.25 38.8777 56.0525 38.4008 55.7008 38.0492C55.3492 37.6975 54.8723 37.5 54.375 37.5H52.5V31.875H54.375C54.8723 31.875 55.3492 31.6775 55.7008 31.3258C56.0525 30.9742 56.25 30.4973 56.25 30C56.25 29.5027 56.0525 29.0258 55.7008 28.6742C55.3492 28.3225 54.8723 28.125 54.375 28.125H52.5V22.5H54.375ZM45 41.25C45 42.2446 44.6049 43.1984 43.9016 43.9016C43.1984 44.6049 42.2446 45 41.25 45H18.75C17.7554 45 16.8016 44.6049 16.0984 43.9016C15.3951 43.1984 15 42.2446 15 41.25V18.75C15 17.7554 15.3951 16.8016 16.0984 16.0984C16.8016 15.3951 17.7554 15 18.75 15H41.25C42.2446 15 43.1984 15.3951 43.9016 16.0984C44.6049 16.8016 45 17.7554 45 18.75V41.25Z"/></svg></div>System</button> <button type="button" name="button" class="btn-tab tab" data-tab="3"><div class="tab-icon"><svg width="60" height="60" viewBox="0 0 60 60" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M59.7937 16.4062C59.7164 16.2322 59.6084 16.0734 59.475 15.9375C59.3495 15.8165 59.2112 15.7097 59.0625 15.6187L30.9 0.224957C30.615 0.0603916 30.2916 -0.0262451 29.9625 -0.0262451C29.6334 -0.0262451 29.31 0.0603916 29.025 0.224957L1.06875 15.525C1.06875 15.525 1.06875 15.6187 0.91875 15.6375C0.762779 15.7334 0.618116 15.8466 0.4875 15.975C0.433211 16.047 0.383128 16.1221 0.3375 16.2C0.244093 16.3333 0.168457 16.4783 0.1125 16.6312C0.1125 16.6312 0.1125 16.6312 0.1125 16.7437C0.103788 16.8435 0.103788 16.9439 0.1125 17.0437C0.1125 17.0437 0.1125 17.1562 0.1125 17.2125V42.7687C0.0613239 42.8827 0.0235706 43.0023 0 43.125L0 43.3875C0.142582 43.8604 0.466002 44.2579 0.9 44.4937L29.025 59.8312H29.1375H29.2875C29.5116 59.9337 29.7537 59.9911 30 60C30.2245 59.9926 30.4462 59.9482 30.6563 59.8687H30.7875H30.9L59.025 44.5312C59.3209 44.3693 59.5676 44.1306 59.7392 43.8402C59.9108 43.5498 60.0009 43.2185 60 42.8812V17.2125C59.9937 16.9939 59.9493 16.7782 59.8688 16.575C59.8516 16.5155 59.8264 16.4588 59.7937 16.4062ZM28.125 54.975L3.75 41.6625V20.3812L28.125 33.75V54.975ZM30 30.4125L5.79375 17.2875L30 4.01246L54.2062 17.1375L30 30.4125ZM56.25 41.6625L31.875 54.975V33.75L56.25 20.4562V41.6625Z"/></svg></div>Modules</button> <button type="button" name="button" class="btn-tab tab" data-tab="4"><div class="tab-icon"><svg width="18" height="18" viewBox="0 0 18 18" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M16 10.5V5.5H10V7.25H5.75V6.5H8V1.5H2V6.5H4.25V14.75H10V16.5H16V11.5H10V13.25H5.75V8.75H10V10.5H16ZM11.5 7H14.5V9H11.5V7ZM11.5 13H14.5V15H11.5V13ZM3.5 5V3H6.5V5H3.5Z"/></svg></div>Directories</button></div></div></div><div class="frame relative col-span-5 frame-right"><canvas id="monitorGrid"></canvas><div id="splashMessageContainer" class="splash-message"><svg width="133" height="105" viewBox="0 0 133 105" fill="none" xmlns="http://www.w3.org/2000/svg" class="logo"><path fill-rule="evenodd" clip-rule="evenodd" d="M81.697 105H55.0693L0.5 0.5H77.9598C108.079 0.554913 132.484 24.7711 132.5 54.6451C132.452 82.485 109.73 105 81.697 105Z" fill="#FCFFFD"/></svg><h1 class="text-center">Welcome to Netdata</h1><p id="msgSignIn">Please sign-in to continue</p><a id="btnSignIn" href="javascript:loadDashboard(true);" class="button button-primary">Sign-in</a><div class="tagline skip-link"><a class="opt-out-link" href="javascript:loadDashboard();">Skip and use the dashboard anonymously.</a> <span class="no-anonymous-access"></span></div></div><div id="claimingContentsContainer" class="claim-message" style="display:none;"><div class="welcome"><svg width="133" height="105" viewBox="0 0 133 105" fill="none" xmlns="http://www.w3.org/2000/svg" class="logo"><path fill-rule="evenodd" clip-rule="evenodd" d="M81.697 105H55.0693L0.5 0.5H77.9598C108.079 0.554913 132.484 24.7711 132.5 54.6451C132.452 82.485 109.73 105 81.697 105Z" fill="#FCFFFD"/></svg><h1 class="text-center">Welcome to Netdata</h1><span>Please connect your agent to continue.</span></div><div class="connection-modal"><div id="connectionStep-1"><div class="connection-step"><span class="text-small">Please select the space you want this agent to join:</span> <span class="loader">Loading spaces...</span><ul id="spacesList" class="list-options"></ul></div></div><div id="connectionStep-2" style="display:none;"><div class="connection-step"><div class="dropdown-custom" data-target="claimMessage"><div class="dropdown-custom-input flex space-between align-center"><span class="text-small">Select room(s)</span><button class="text-small button button-ghost clear-button">Clear</button></div><div id="roomsSelector" class="dropdown"><div class="dropdown-toggle"><span id="selectedItems" class="selected-items">Select room</span> <span>▼</span></div><div id="roomsSelectorOptionsContainer" class="checkbox-container"></div></div></div><div id="claimMessage" class="selected-message"></div><div class="">Please run the command below in your terminal:</div><code id="claimCommand"></code><div class="">and paste the generated private key in the field below:</div><input id="claimingPrivateKey" name="claimingPrivateKey" value="" placeholder="Private Key"/></div><div id="claimTip" class="text-padding text-small">Tip: If the command doesn’t work out-of-the-box, locate the {keyFilename} file, open it in your favourite text editor, and copy it to your clipboard.</div><div id="claimErrorMessage" class="text-padding error" style="display:none;"></div></div><div class="modal-footer flex-col"><div class="flex space-between"><button id="btnConnectionStepPrev" class="button button-ghost">&#8592; Back</button> <button id="btnConnectionStepNext" class="button button-primary">Next</button> <button id="btnClaim" class="button button-primary">Claim</button></div><div class="skip-link"><a class="signout-link" href="javascript:signout()">Sign out to switch user</a></div></div></div></div></div><div id="tooltip"></div></div></body><script>const initPrimaryButtonHover = () => {
2025-04-15T08:07:18.2094075Z     const button = document.getElementById("btnSignIn");
2025-04-15T08:07:18.2094211Z     const canvas = document.getElementById("monitorGrid");
2025-04-15T08:07:18.2094216Z 
2025-04-15T08:07:18.2094286Z     if (button) {
2025-04-15T08:07:18.2094396Z       button.addEventListener("mouseover", () => {
2025-04-15T08:07:18.2094491Z         canvas.classList.add("hovered");
2025-04-15T08:07:18.2094553Z       });
2025-04-15T08:07:18.2094616Z     }
2025-04-15T08:07:18.2094620Z 
2025-04-15T08:07:18.2094684Z     if (canvas) {
2025-04-15T08:07:18.2094787Z       button.addEventListener("mouseout", () => {
2025-04-15T08:07:18.2094888Z         canvas.classList.remove("hovered");
2025-04-15T08:07:18.2094949Z       });
2025-04-15T08:07:18.2095010Z     }
2025-04-15T08:07:18.2095070Z   }
2025-04-15T08:07:18.2095078Z 
2025-04-15T08:07:18.2095155Z   const initTabs = () => {
2025-04-15T08:07:18.2095287Z     const btnTabs = document.querySelectorAll(".btn-tab");
2025-04-15T08:07:18.2095364Z     btnTabs.forEach(btn => {
2025-04-15T08:07:18.2095459Z       btn.addEventListener("click", e => {
2025-04-15T08:07:18.2095556Z         const tab = e.currentTarget?.dataset?.tab;
2025-04-15T08:07:18.2095624Z         if (tab) {
2025-04-15T08:07:18.2095695Z           toggleTab(tab);
2025-04-15T08:07:18.2095754Z         }
2025-04-15T08:07:18.2095818Z       })
2025-04-15T08:07:18.2095877Z     })
2025-04-15T08:07:18.2095940Z   }
2025-04-15T08:07:18.2095944Z 
2025-04-15T08:07:18.2096026Z   // =============================================== //
2025-04-15T08:07:18.2096030Z 
2025-04-15T08:07:18.2096196Z   const status = {
2025-04-15T08:07:18.2096274Z     TIMEOUT: 'timeout',
2025-04-15T08:07:18.2096465Z     SUCCESS: 'success',
2025-04-15T08:07:18.2096542Z     SKIPPED: 'skipped'
2025-04-15T08:07:18.2096605Z   };
2025-04-15T08:07:18.2096609Z 
2025-04-15T08:07:18.2096695Z   const getSessionId = () => {
2025-04-15T08:07:18.2096788Z     const key = "telemetrySessionId"
2025-04-15T08:07:18.2096880Z     if (!sessionStorage.getItem(key)) {
2025-04-15T08:07:18.2097222Z       sessionStorage.setItem(key, self.crypto && self.crypto.randomUUID ? self.crypto.randomUUID() : new Date().getTime());
2025-04-15T08:07:18.2097284Z     }
2025-04-15T08:07:18.2097389Z     return sessionStorage.getItem(key) || "";
2025-04-15T08:07:18.2097449Z   }
2025-04-15T08:07:18.2097453Z 
2025-04-15T08:07:18.2097576Z   const defaultErrorMessage = "Something went wrong."
2025-04-15T08:07:18.2097830Z   const agentUri = window.location.origin + window.location.pathname.replace(pathsRegex, "");
2025-04-15T08:07:18.2097930Z   const telemetrySessionId = getSessionId();
2025-04-15T08:07:18.2098100Z   const ensureOneSlash = urlStr => urlStr.replace(/([^:]\/)\/+/g, "$1");
2025-04-15T08:07:18.2098109Z 
2025-04-15T08:07:18.2098223Z   // Utils =============================================================================== //
2025-04-15T08:07:18.2098227Z 
2025-04-15T08:07:18.2098319Z   const createElem = (tag, attrs) => {
2025-04-15T08:07:18.2098391Z     if (!tag) return null
2025-04-15T08:07:18.2098494Z     const elem = document.createElement(tag);
2025-04-15T08:07:18.2098581Z     if (Object.keys(attrs || {}).length) {
2025-04-15T08:07:18.2098680Z       Object.entries(attrs).forEach(([k, v]) => {
2025-04-15T08:07:18.2098751Z         elem[k] = v;
2025-04-15T08:07:18.2098815Z       })
2025-04-15T08:07:18.2098879Z     }
2025-04-15T08:07:18.2098946Z     return elem
2025-04-15T08:07:18.2099006Z   }
2025-04-15T08:07:18.2099010Z 
2025-04-15T08:07:18.2099149Z   const getDOM = ({ tag = "div", children = [], ...rest } = {}) => {
2025-04-15T08:07:18.2099253Z     const element = document.createElement(tag);
2025-04-15T08:07:18.2099261Z 
2025-04-15T08:07:18.2099370Z     Object.entries(rest || {}).forEach(([k, v]) => {
2025-04-15T08:07:18.2099452Z       if (element[k] !== undefined) {
2025-04-15T08:07:18.2099674Z         if (k == "dataset" && Object.keys(v).length == 1) {
2025-04-15T08:07:18.2099773Z           const dataPair = Object.entries(v)[0]
2025-04-15T08:07:18.2099869Z           element[k][dataPair[0]] = dataPair[1]
2025-04-15T08:07:18.2099934Z         } else {
2025-04-15T08:07:18.2100004Z           element[k] = v;
2025-04-15T08:07:18.2100068Z         }
2025-04-15T08:07:18.2100130Z       }
2025-04-15T08:07:18.2100193Z     })
2025-04-15T08:07:18.2100197Z 
2025-04-15T08:07:18.2100273Z     if (!!children?.length) {
2025-04-15T08:07:18.2100468Z       children.filter(({ condition = true }) => !!condition).forEach(childStructure => {
2025-04-15T08:07:18.2100582Z         element.appendChild(getDOM(childStructure));
2025-04-15T08:07:18.2100643Z       });
2025-04-15T08:07:18.2100706Z     }
2025-04-15T08:07:18.2100709Z 
2025-04-15T08:07:18.2100782Z     return element;
2025-04-15T08:07:18.2100841Z   }
2025-04-15T08:07:18.2100849Z 
2025-04-15T08:07:18.2100945Z   // ===================================================================================== //
2025-04-15T08:07:18.2100950Z 
2025-04-15T08:07:18.2101015Z   // Agent info
2025-04-15T08:07:18.2101190Z   const AGENT_INFO_KEY = `agentInfo:${window.envSettings.agentApiUrl}`
2025-04-15T08:07:18.2101268Z   const getAgentInfo = () => {
2025-04-15T08:07:18.2101400Z     const agentInfo = localStorage.getItem(AGENT_INFO_KEY)
2025-04-15T08:07:18.2101467Z     if (agentInfo) {
2025-04-15T08:07:18.2101531Z       try {
2025-04-15T08:07:18.2101645Z         return Promise.resolve(JSON.parse(agentInfo))
2025-04-15T08:07:18.2101710Z       } catch (err) {
2025-04-15T08:07:18.2101797Z         return Promise.resolve()
2025-04-15T08:07:18.2101858Z       }
2025-04-15T08:07:18.2101923Z     }
2025-04-15T08:07:18.2101927Z 
2025-04-15T08:07:18.2102277Z     return fetch(ensureOneSlash(`${window.envSettings.agentApiUrl}/api/v3/info`)).then(response => response.json()).then(data => {
2025-04-15T08:07:18.2102450Z       if (CONFIG.cache.agentInfo) {
2025-04-15T08:07:18.2102619Z         localStorage.setItem(AGENT_INFO_KEY, JSON.stringify(data || {}))
2025-04-15T08:07:18.2102682Z       }
2025-04-15T08:07:18.2102754Z       return data
2025-04-15T08:07:18.2102839Z     }).catch(() => Promise.resolve())
2025-04-15T08:07:18.2102904Z   }
2025-04-15T08:07:18.2102908Z 
2025-04-15T08:07:18.2103133Z   const loadStyle = (url, { media, insertAfter: aref, insertBefore: bref, rel, type } = {}) => {
2025-04-15T08:07:18.2103211Z     rel = rel || 'stylesheet'
2025-04-15T08:07:18.2103292Z     type = type || 'text/css'
2025-04-15T08:07:18.2103402Z     return new Promise(function (resolve, reject) {
2025-04-15T08:07:18.2103506Z       let link = document.createElement('link');
2025-04-15T08:07:18.2103580Z       link.type = type;
2025-04-15T08:07:18.2103650Z       link.rel = rel;
2025-04-15T08:07:18.2103725Z       link.href = url;
2025-04-15T08:07:18.2103811Z       link.media = media || 'all';
2025-04-15T08:07:18.2103814Z 
2025-04-15T08:07:18.2103899Z       link.onerror = function (err) {
2025-04-15T08:07:18.2104119Z         reject(new URIError(`loadStyle: the stylesheet ${err.target.src} is not accessible.`));
2025-04-15T08:07:18.2104185Z       };
2025-04-15T08:07:18.2104189Z 
2025-04-15T08:07:18.2104271Z       link.onload = function () {
2025-04-15T08:07:18.2104338Z         resolve();
2025-04-15T08:07:18.2104405Z       };
2025-04-15T08:07:18.2104408Z 
2025-04-15T08:07:18.2104472Z       if (aref) {
2025-04-15T08:07:18.2104618Z         aref.parentNode.insertBefore(link, aref.nextSibling);
2025-04-15T08:07:18.2104682Z         return;
2025-04-15T08:07:18.2104748Z       }
2025-04-15T08:07:18.2104751Z 
2025-04-15T08:07:18.2104815Z       if (bref) {
2025-04-15T08:07:18.2104920Z         bref.parentNode.insertBefore(link, bref);
2025-04-15T08:07:18.2104989Z         return;
2025-04-15T08:07:18.2105050Z       }
2025-04-15T08:07:18.2105054Z 
2025-04-15T08:07:18.2105154Z       document.head.appendChild(link);
2025-04-15T08:07:18.2105215Z     });
2025-04-15T08:07:18.2105274Z   }
2025-04-15T08:07:18.2105283Z 
2025-04-15T08:07:18.2105703Z   const loadScript = (url, { async = true, defer = false, insertAfter: aref, insertBefore: bref, timeout = 5000, attrs, skipIf } = {}) => {
2025-04-15T08:07:18.2105816Z     return new Promise(function (resolve, reject) {
2025-04-15T08:07:18.2105921Z       if (typeof skipIf === 'function' && skipIf()) {
2025-04-15T08:07:18.2106003Z         resolve(status.SKIPPED);
2025-04-15T08:07:18.2106222Z         return;
2025-04-15T08:07:18.2106333Z       }
2025-04-15T08:07:18.2106339Z 
2025-04-15T08:07:18.2106687Z       let rejectWithTimeout = setTimeout(function () { reject(status.TIMEOUT) }, timeout);
2025-04-15T08:07:18.2106699Z 
2025-04-15T08:07:18.2106877Z       let script = document.createElement('script');
2025-04-15T08:07:18.2107020Z       script.type = 'text/javascript';
2025-04-15T08:07:18.2107156Z       script.src = url;
2025-04-15T08:07:18.2107245Z       script.async = async;
2025-04-15T08:07:18.2107324Z       script.defer = defer;
2025-04-15T08:07:18.2107328Z 
2025-04-15T08:07:18.2107392Z       if (attrs) {
2025-04-15T08:07:18.2107475Z         for (let attr in attrs) {
2025-04-15T08:07:18.2107580Z           script.setAttribute(attr, attrs[attr]);
2025-04-15T08:07:18.2107640Z         }
2025-04-15T08:07:18.2107703Z       }
2025-04-15T08:07:18.2107706Z 
2025-04-15T08:07:18.2107792Z       script.onerror = function (err) {
2025-04-15T08:07:18.2108007Z         reject(new URIError(`loadScript: the script ${err.target.src} is not accessible.`));
2025-04-15T08:07:18.2108067Z       };
2025-04-15T08:07:18.2108071Z 
2025-04-15T08:07:18.2108152Z       script.onload = function () {
2025-04-15T08:07:18.2108250Z         clearTimeout(rejectWithTimeout);
2025-04-15T08:07:18.2108328Z         resolve(status.SUCCESS);
2025-04-15T08:07:18.2108392Z       };
2025-04-15T08:07:18.2108396Z 
2025-04-15T08:07:18.2108459Z       if (aref) {
2025-04-15T08:07:18.2108755Z         aref.parentNode.insertBefore(script, aref.nextSibling);
2025-04-15T08:07:18.2108817Z         return;
2025-04-15T08:07:18.2108878Z       }
2025-04-15T08:07:18.2108882Z 
2025-04-15T08:07:18.2108953Z       if (bref) {
2025-04-15T08:07:18.2109063Z         bref.parentNode.insertBefore(script, bref);
2025-04-15T08:07:18.2109130Z         return;
2025-04-15T08:07:18.2109190Z       }
2025-04-15T08:07:18.2109194Z 
2025-04-15T08:07:18.2109289Z       document.body.appendChild(script);
2025-04-15T08:07:18.2109355Z     });
2025-04-15T08:07:18.2109418Z   }
2025-04-15T08:07:18.2109421Z 
2025-04-15T08:07:18.2109933Z   __webpack_public_path__ = ensureOneSlash(window.envSettings.webpackPublicPath ? (window.envSettings.webpackPublicPath + "/") : (window.envSettings.agentApiUrl + "/v3/"))
2025-04-15T08:07:18.2109938Z 
2025-04-15T08:07:18.2110019Z   const loadLatestUI = () => {
2025-04-15T08:07:18.2110389Z     return fetch(__webpack_public_path__ + "bundlesManifest." + window.envSettings.version.toString().replace(/(\d+)\..+/, "$1") + ".json")
2025-04-15T08:07:18.2110519Z       .then(function (response) { return response.json() })
2025-04-15T08:07:18.2110602Z       .catch(() => goToOld('/v3'))
2025-04-15T08:07:18.2110682Z       .then(function (data) {
2025-04-15T08:07:18.2110778Z         Object.keys(data).forEach(function (k) {
2025-04-15T08:07:18.2110881Z           if (/\.(map|ico|html)$/.test(data[k])) return
2025-04-15T08:07:18.2110968Z           if (/static\//.test(data[k])) return
2025-04-15T08:07:18.2110972Z 
2025-04-15T08:07:18.2111055Z           if (/\.css.*$/.test(data[k])) {
2025-04-15T08:07:18.2111206Z             loadStyle(ensureOneSlash(__webpack_public_path__ + data[k]))
2025-04-15T08:07:18.2111273Z             return
2025-04-15T08:07:18.2111334Z           }
2025-04-15T08:07:18.2111338Z 
2025-04-15T08:07:18.2111414Z           if (/\.js.*$/.test(data[k])) {
2025-04-15T08:07:18.2111575Z             loadScript(ensureOneSlash(__webpack_public_path__ + data[k]), {
2025-04-15T08:07:18.2111644Z               async: false,
2025-04-15T08:07:18.2111714Z             });
2025-04-15T08:07:18.2111774Z           }
2025-04-15T08:07:18.2111834Z         })
2025-04-15T08:07:18.2112055Z         return Promise.resolve()
2025-04-15T08:07:18.2112119Z       })
2025-04-15T08:07:18.2112184Z   }
2025-04-15T08:07:18.2112187Z 
2025-04-15T08:07:18.2112271Z   const loadDashboard = signIn => {
2025-04-15T08:07:18.2112353Z     loadLatestUI().then(() => {
2025-04-15T08:07:18.2112418Z       if (signIn) {
2025-04-15T08:07:18.2112515Z         window.location.href = ensureOneSlash(
2025-04-15T08:07:18.2112709Z           `${window.envSettings.cloudUrl}/trust?redirect_uri=${encodeURIComponent(
2025-04-15T08:07:18.2112791Z             window.location.href
2025-04-15T08:07:18.2112884Z           )}&agent_uri=${encodeURIComponent(
2025-04-15T08:07:18.2112993Z             agentUri || window.envSettings.agentApiUrl
2025-04-15T08:07:18.2113099Z           )}&telemetry_session_id=${telemetrySessionId}`
2025-04-15T08:07:18.2113163Z         )
2025-04-15T08:07:18.2113229Z       }
2025-04-15T08:07:18.2113293Z     })
2025-04-15T08:07:18.2113353Z   }
2025-04-15T08:07:18.2113357Z 
2025-04-15T08:07:18.2113436Z   const signout = () => {
2025-04-15T08:07:18.2113536Z     localStorage.removeItem(CLOUD_TOKEN_KEY)
2025-04-15T08:07:18.2113618Z     window.location.reload()
2025-04-15T08:07:18.2113681Z   }
2025-04-15T08:07:18.2113685Z 
2025-04-15T08:07:18.2113766Z   const fetchRegistryInfo = () => {
2025-04-15T08:07:18.2113914Z     if (window.localNetdataRegistry) return Promise.resolve()
2025-04-15T08:07:18.2113919Z 
2025-04-15T08:07:18.2114313Z     return fetch(ensureOneSlash(window.envSettings.agentApiUrl + "/api/v1/registry?action=hello"), { cache: "no-cache", credentials: "include" })
2025-04-15T08:07:18.2114390Z       .then(response => {
2025-04-15T08:07:18.2114568Z         if (!response.ok) return Promise.reject({ message: defaultErrorMessage })
2025-04-15T08:07:18.2114649Z         return response.json()
2025-04-15T08:07:18.2114713Z       })
2025-04-15T08:07:18.2114780Z       .then(data => {
2025-04-15T08:07:18.2115068Z         if (!data) return Promise.reject({ message: "No registry data available." })
2025-04-15T08:07:18.2115072Z 
2025-04-15T08:07:18.2115181Z         let to = data.cloud_base_url.lastIndexOf('/');
2025-04-15T08:07:18.2115377Z         to = (to == -1 || to < data.cloud_base_url.length - 2) ? data.cloud_base_url.length : to;
2025-04-15T08:07:18.2115498Z         let cloudUrl = data.cloud_base_url.substring(0, to);
2025-04-15T08:07:18.2115502Z 
2025-04-15T08:07:18.2115596Z         let withoutNodes = btoa(JSON.stringify({
2025-04-15T08:07:18.2115679Z           registry: data.registry,
2025-04-15T08:07:18.2115766Z           machine_guid: data.machine_guid,
2025-04-15T08:07:18.2115847Z           hostname: data.hostname,
2025-04-15T08:07:18.2115921Z           agent: data.agent,
2025-04-15T08:07:18.2115989Z           nodes: []
2025-04-15T08:07:18.2116050Z         }))
2025-04-15T08:07:18.2116281Z         let iframe = document.createElement('iframe');
2025-04-15T08:07:18.2116609Z         iframe.src = data.registry + "/registry-access.html?x=" + withoutNodes + "&originUrl=" + window.envSettings.agentApiUrl;
2025-04-15T08:07:18.2116752Z         iframe.style = { position: "absolute", left: "-99999999px" };
2025-04-15T08:07:18.2116828Z         iframe.width = 0;
2025-04-15T08:07:18.2116902Z         iframe.height = 0;
2025-04-15T08:07:18.2116980Z         iframe.tabindex = -1;
2025-04-15T08:07:18.2117061Z         iframe.title = "empty";
2025-04-15T08:07:18.2117147Z         iframe.classList.add("hidden");
2025-04-15T08:07:18.2117242Z         document.body.appendChild(iframe);
2025-04-15T08:07:18.2117246Z 
2025-04-15T08:07:18.2117324Z         setTimeout(function () {
2025-04-15T08:07:18.2117470Z           document.title = data.hostname + ': Netdata Agent Console';
2025-04-15T08:07:18.2117752Z           iframe.contentWindow.postMessage(["netdata-registry", window.envSettings.agentApiUrl, data], "*")
2025-04-15T08:07:18.2117816Z         }, 300);
2025-04-15T08:07:18.2117820Z 
2025-04-15T08:07:18.2117957Z         window.addEventListener('message', function (event) {
2025-04-15T08:07:18.2118072Z           if (event.source !== iframe.contentWindow) return;
2025-04-15T08:07:18.2118194Z 
2025-04-15T08:07:18.2118492Z           if (event.data.status === "disabled") console.error("Your netdata registry is disabled! Check your configuration.")
2025-04-15T08:07:18.2118496Z 
2025-04-15T08:07:18.2118567Z           if (event.data) {
2025-04-15T08:07:18.2118667Z             if (!window.localNetdataRegistry) {
2025-04-15T08:07:18.2118761Z               window.localNetdataRegistry = {}
2025-04-15T08:07:18.2118828Z             }
2025-04-15T08:07:18.2118831Z 
2025-04-15T08:07:18.2118980Z             window.localNetdataRegistry.pg = event.data.person_guid
2025-04-15T08:07:18.2118984Z 
2025-04-15T08:07:18.2119067Z             if (!window.envSettings) {
2025-04-15T08:07:18.2119153Z               window.envSettings = {}
2025-04-15T08:07:18.2119215Z             }
2025-04-15T08:07:18.2119218Z 
2025-04-15T08:07:18.2119355Z             window.envSettings.visitor = event.data.person_guid
2025-04-15T08:07:18.2119359Z 
2025-04-15T08:07:18.2119422Z             try {
2025-04-15T08:07:18.2119629Z               var visitedNodesByName = event.data.urls.reduce(function (vn, visitedUrl) {
2025-04-15T08:07:18.2119730Z                 vn[visitedUrl[4]] = vn[visitedUrl[4]] || {}
2025-04-15T08:07:18.2119820Z                 vn[visitedUrl[4]].id = visitedUrl[0]
2025-04-15T08:07:18.2119912Z                 vn[visitedUrl[4]].name = visitedUrl[4]
2025-04-15T08:07:18.2120025Z                 vn[visitedUrl[4]].lastAccessTime = visitedUrl[2]
2025-04-15T08:07:18.2120144Z                 vn[visitedUrl[4]].urls = vn[visitedUrl[4]].urls || []
2025-04-15T08:07:18.2120243Z                 vn[visitedUrl[4]].urls.push(visitedUrl[1])
2025-04-15T08:07:18.2120247Z 
2025-04-15T08:07:18.2120317Z                 return vn
2025-04-15T08:07:18.2120380Z               }, {})
2025-04-15T08:07:18.2120384Z 
2025-04-15T08:07:18.2120575Z               window.visitedNodes = Object.keys(visitedNodesByName).map(function (vn) {
2025-04-15T08:07:18.2120787Z                 return visitedNodesByName[vn]
2025-04-15T08:07:18.2120848Z               })
2025-04-15T08:07:18.2120926Z             } catch (e) {
2025-04-15T08:07:18.2120992Z               // do nothing
2025-04-15T08:07:18.2121055Z             }
2025-04-15T08:07:18.2121115Z           }
2025-04-15T08:07:18.2121178Z         });
2025-04-15T08:07:18.2121182Z 
2025-04-15T08:07:18.2121266Z         return Promise.resolve()
2025-04-15T08:07:18.2121330Z       })
2025-04-15T08:07:18.2121393Z   }
2025-04-15T08:07:18.2121396Z 
2025-04-15T08:07:18.2121600Z   const cloudRequest = async (endpoint, {allowAnonymous = false, ...options} = {}) => {
2025-04-15T08:07:18.2121742Z     const cloudToken = localStorage.getItem(CLOUD_TOKEN_KEY)
2025-04-15T08:07:18.2121921Z     if (!allowAnonymous && !cloudToken) return Promise.reject("No cloud token")
2025-04-15T08:07:18.2121925Z 
2025-04-15T08:07:18.2122300Z     options = { ...options, headers: { ...(options?.headers || {}), ...(!!cloudToken && {Authorization: `*** } }
2025-04-15T08:07:18.2122309Z 
2025-04-15T08:07:18.2122528Z     return fetch(ensureOneSlash(`${window.envSettings.apiUrl}/${endpoint}`), options)
2025-04-15T08:07:18.2122598Z   }
2025-04-15T08:07:18.2122601Z 
2025-04-15T08:07:18.2122679Z   const sleep = (ms) => {
2025-04-15T08:07:18.2122815Z     return new Promise(resolve => setTimeout(resolve, ms));
2025-04-15T08:07:18.2122882Z   }
2025-04-15T08:07:18.2122885Z 
2025-04-15T08:07:18.2122998Z   const claimAgent = ({ key, token, rooms } = {}) => {
2025-04-15T08:07:18.2123101Z     const url = window.envSettings.apiUrl;
2025-04-15T08:07:18.2123267Z     let query = new URLSearchParams({ key, rooms, token, url }).toString()
2025-04-15T08:07:18.2123399Z     query = key && rooms && token && url && query ? `?${query}` : ""
2025-04-15T08:07:18.2123686Z     return fetch(ensureOneSlash(`${window.envSettings.agentApiUrl}/api/v3/claim${query}`)).then(response => {
2025-04-15T08:07:18.2123829Z       const contentType = response.headers.get("content-type");
2025-04-15T08:07:18.2123841Z 
2025-04-15T08:07:18.2123962Z       if (contentType && contentType.includes("text")) {
2025-04-15T08:07:18.2124126Z         throw response.text();
2025-04-15T08:07:18.2124194Z       }
2025-04-15T08:07:18.2124197Z 
2025-04-15T08:07:18.2124310Z       if (contentType && contentType.includes("json")) {
2025-04-15T08:07:18.2124391Z         return response.json();
2025-04-15T08:07:18.2124453Z       }
2025-04-15T08:07:18.2124457Z 
2025-04-15T08:07:18.2124599Z       throw new Error('Unsupported content type: ' + contentType);
2025-04-15T08:07:18.2124673Z     }).then(data => {
2025-04-15T08:07:18.2124754Z       if (data.success === false) {
2025-04-15T08:07:18.2124830Z         throw data.message
2025-04-15T08:07:18.2124892Z       }
2025-04-15T08:07:18.2124895Z 
2025-04-15T08:07:18.2125029Z       if (key && data.can_be_claimed === false && !data.agent.nd) {
2025-04-15T08:07:18.2125118Z         return sleep(1000).then(claimAgent);
2025-04-15T08:07:18.2125184Z       }
2025-04-15T08:07:18.2125188Z 
2025-04-15T08:07:18.2125257Z       return data
2025-04-15T08:07:18.2125319Z     });
2025-04-15T08:07:18.2125381Z   }
2025-04-15T08:07:18.2125390Z 
2025-04-15T08:07:18.2125465Z   const checkMe = mg => {
2025-04-15T08:07:18.2125673Z     return fetch(ensureOneSlash(`${window.envSettings.agentApiUrl}/api/v3/me`), {
2025-04-15T08:07:18.2125741Z       headers: {
2025-04-15T08:07:18.2125955Z         "X-Netdata-Auth": `***
2025-04-15T08:07:18.2126023Z       }
2025-04-15T08:07:18.2126189Z     })
2025-04-15T08:07:18.2126287Z       .then(response => response.json())
2025-04-15T08:07:18.2126358Z       .catch(() => ({
2025-04-15T08:07:18.2126429Z         auth: "none",
2025-04-15T08:07:18.2126507Z         cloud_account_id: null,
2025-04-15T08:07:18.2126579Z         client_name: "",
2025-04-15T08:07:18.2126665Z         access: ["anonymous-data"],
2025-04-15T08:07:18.2126736Z         user_role: "any",
2025-04-15T08:07:18.2126802Z       }))
2025-04-15T08:07:18.2126985Z   }
2025-04-15T08:07:18.2126988Z 
2025-04-15T08:07:18.2127076Z   const fetchUserAccess = (mg, nd) => {
2025-04-15T08:07:18.2127502Z     return cloudRequest(`/api/v1/agents/${mg}/user_agent_node_access${nd ? `?nodeID=${nd}` : ""}`, {allowAnonymous: true}).then(response => response.json()).then(data => {
2025-04-15T08:07:18.2128449Z       window.localNetdataRegistry.limitations = data.limitations ? {limit: data.limitations.limit || 99999999, customDashboardsLimit: data.limitations.custom_dashboards_limit || 99999999, windowsSupport: data.limitations.windows_support || false} : {limit: 99999999, customDashboardsLimit: 99999999, windowsSupport: true}
2025-04-15T08:07:18.2128458Z 
2025-04-15T08:07:18.2128556Z       if (data.user_node_status === "noAccess") {
2025-04-15T08:07:18.2128624Z         return data
2025-04-15T08:07:18.2128690Z       }
2025-04-15T08:07:18.2128823Z       window.localNetdataRegistry.spaceId = data.space_id
2025-04-15T08:07:18.2128827Z 
2025-04-15T08:07:18.2128940Z       const room = data.rooms.find(r => r.untouchable)
2025-04-15T08:07:18.2128949Z 
2025-04-15T08:07:18.2129063Z       window.localNetdataRegistry.roomId = room.id
2025-04-15T08:07:18.2129170Z       window.localNetdataRegistry.room = room
2025-04-15T08:07:18.2129178Z 
2025-04-15T08:07:18.2129243Z       return data
2025-04-15T08:07:18.2129314Z     }).catch((err) => { })
2025-04-15T08:07:18.2129378Z   }
2025-04-15T08:07:18.2129382Z 
2025-04-15T08:07:18.2129505Z   const getAgentToken = ({ mg, nd, claimId }, agent) => {
2025-04-15T08:07:18.2129814Z     return cloudRequest(`/api/v2/bearer_get_token?node_id=${nd}&claim_id=${claimId}&machine_guid=${mg}`).then(response => {
2025-04-15T08:07:18.2129898Z       if (response.status === 401) {
2025-04-15T08:07:18.2129966Z         signout()
2025-04-15T08:07:18.2130029Z         return
2025-04-15T08:07:18.2130088Z       }
2025-04-15T08:07:18.2130163Z       if (!response.ok) {
2025-04-15T08:07:18.2130275Z         // Parse the error response to extract the message
2025-04-15T08:07:18.2130375Z         return response.json().then(errorData => {
2025-04-15T08:07:18.2130492Z           const error = new Error(errorData.errorMessage);
2025-04-15T08:07:18.2130695Z           error.data = errorData.errorContext
2025-04-15T08:07:18.2130768Z           throw error
2025-04-15T08:07:18.2130830Z         });
2025-04-15T08:07:18.2130902Z       }
2025-04-15T08:07:18.2130980Z       return response.json();
2025-04-15T08:07:18.2131047Z     }).then(data => {
2025-04-15T08:07:18.2131127Z       if (data && data.token) {
2025-04-15T08:07:18.2131247Z         localStorage.setItem(`agentJWT:${mg}`, data?.token)
2025-04-15T08:07:18.2131397Z         localStorage.setItem(`agentJWTExp:${mg}`, data?.expiration)
2025-04-15T08:07:18.2131459Z       }
2025-04-15T08:07:18.2131527Z       return data
2025-04-15T08:07:18.2131595Z     }).catch((err) => {
2025-04-15T08:07:18.2131663Z       stopLoading()
2025-04-15T08:07:18.2131666Z 
2025-04-15T08:07:18.2131791Z       let message = "Something went wrong. Please try again."
2025-04-15T08:07:18.2131897Z       if (err.data && err.data.state === "created") {
2025-04-15T08:07:18.2132167Z         message = "The node is claimed and is syncing with Netdata Cloud. Please wait a few seconds and try again."
2025-04-15T08:07:18.2132231Z       } else {
2025-04-15T08:07:18.2132322Z         message = (err && err.message) || message
2025-04-15T08:07:18.2132384Z       }
2025-04-15T08:07:18.2132388Z 
2025-04-15T08:07:18.2132391Z 
2025-04-15T08:07:18.2132522Z       const msgSignIn = document.getElementById("msgSignIn");
2025-04-15T08:07:18.2132614Z       msgSignIn.textContent = message
2025-04-15T08:07:18.2132619Z 
2025-04-15T08:07:18.2132745Z       const btnSignIn = document.getElementById("btnSignIn");
2025-04-15T08:07:18.2132838Z       btnSignIn.style.display = "none"
2025-04-15T08:07:18.2132842Z 
2025-04-15T08:07:18.2132924Z       setupOptOutMessage(agent)
2025-04-15T08:07:18.2132988Z     })
2025-04-15T08:07:18.2133047Z   }
2025-04-15T08:07:18.2133050Z 
2025-04-15T08:07:18.2133141Z   const setupOptOutMessage = agent => {
2025-04-15T08:07:18.2133380Z     const bearerProtection = agent.api.bearer_protection;
2025-04-15T08:07:18.2133384Z 
2025-04-15T08:07:18.2133596Z     const isWindows = (agent.application.os.kernel || "").toLowerCase() === "windows"
2025-04-15T08:07:18.2134039Z     const lockWindows = isWindows && (!window.localNetdataRegistry.limitation || window.localNetdataRegistry.limitations.windowsSupport === false);
2025-04-15T08:07:18.2134043Z 
2025-04-15T08:07:18.2134192Z     const denyAnonymousAccess = bearerProtection || lockWindows;
2025-04-15T08:07:18.2134196Z 
2025-04-15T08:07:18.2134305Z     // Get all elements with the "opt-out-link" class
2025-04-15T08:07:18.2134499Z     const optOutLinkElems = document.getElementsByClassName("opt-out-link");
2025-04-15T08:07:18.2134605Z     if (optOutLinkElems.length > 0) {
2025-04-15T08:07:18.2134722Z       for (let i = 0; i < optOutLinkElems.length; i++) {
2025-04-15T08:07:18.2134915Z         optOutLinkElems[i].style.display = denyAnonymousAccess ? "none" : "inline";
2025-04-15T08:07:18.2134986Z       }
2025-04-15T08:07:18.2135046Z     }
2025-04-15T08:07:18.2135049Z 
2025-04-15T08:07:18.2135184Z     // Get all elements with the "no-anonymous-access" class
2025-04-15T08:07:18.2135445Z     const anonymousAccessDeniedElems = document.getElementsByClassName("no-anonymous-access");
2025-04-15T08:07:18.2135559Z     if (anonymousAccessDeniedElems.length > 0) {
2025-04-15T08:07:18.2135697Z       for (let i = 0; i < anonymousAccessDeniedElems.length; i++) {
2025-04-15T08:07:18.2135831Z         if (anonymousAccessDeniedElems[i].textContent === "") {
2025-04-15T08:07:18.2136689Z           anonymousAccessDeniedElems[i].innerHTML = bearerProtection ? "Anonymous access is not allowed. *** is enabled.<br />Please sign in to continue." : "Anonymous access to the dashboard of Windows nodes is not allowed.<br />Please sign in to continue.";
2025-04-15T08:07:18.2136757Z         }
2025-04-15T08:07:18.2136989Z         anonymousAccessDeniedElems[i].style.display = denyAnonymousAccess ? "inline" : "none";
2025-04-15T08:07:18.2137057Z       }
2025-04-15T08:07:18.2137116Z     }
2025-04-15T08:07:18.2137178Z   }
2025-04-15T08:07:18.2137182Z 
2025-04-15T08:07:18.2137402Z   const createClaimingToken = spaceId => {
2025-04-15T08:07:18.2137499Z     if (!spaceId) return Promise.resolve();
2025-04-15T08:07:18.2137601Z     toggleClaimingTokenLoadingState(true);
2025-04-15T08:07:18.2137784Z     return cloudRequest(`/api/v1/spaces/${spaceId}/token`).then(response => {
2025-04-15T08:07:18.2137886Z       toggleClaimingTokenLoadingState(false);
2025-04-15T08:07:18.2137967Z       return response.json();
2025-04-15T08:07:18.2138027Z     });
2025-04-15T08:07:18.2138089Z   }
2025-04-15T08:07:18.2138092Z 
2025-04-15T08:07:18.2138190Z   const getClaimingToken = async spaceId => {
2025-04-15T08:07:18.2138287Z     if (!spaceId) return Promise.resolve();
2025-04-15T08:07:18.2138456Z     const cachedToken = state.cache.claimingTokensPerSpace[spaceId];
2025-04-15T08:07:18.2138576Z     if (cachedToken) return Promise.resolve(cachedToken);
2025-04-15T08:07:18.2138696Z     const token = await createClaimingToken(spaceId);
2025-04-15T08:07:18.2138786Z     cacheClaimingToken(spaceId, token);
2025-04-15T08:07:18.2138881Z     return Promise.resolve(token);
2025-04-15T08:07:18.2138941Z   }
2025-04-15T08:07:18.2138944Z 
2025-04-15T08:07:18.2139027Z   const fetchSpaces = () => {
2025-04-15T08:07:18.2139117Z     toggleSpacesLoadingState(true);
2025-04-15T08:07:18.2139249Z     return cloudRequest("/api/v3/spaces").then(response => {
2025-04-15T08:07:18.2139342Z       toggleSpacesLoadingState(false);
2025-04-15T08:07:18.2139419Z       return response.json();
2025-04-15T08:07:18.2139484Z     });
2025-04-15T08:07:18.2139544Z   }
2025-04-15T08:07:18.2139547Z 
2025-04-15T08:07:18.2139626Z   const getSpaces = async () => {
2025-04-15T08:07:18.2139726Z     const cachedSpaces = state.cache.spaces;
2025-04-15T08:07:18.2139853Z     if (cachedSpaces) return Promise.resolve(cachedSpaces);
2025-04-15T08:07:18.2139940Z     const spaces = await fetchSpaces();
2025-04-15T08:07:18.2140132Z     cacheSpaces(spaces);
2025-04-15T08:07:18.2140218Z     return Promise.resolve(spaces);
2025-04-15T08:07:18.2140278Z   }
2025-04-15T08:07:18.2140281Z 
2025-04-15T08:07:18.2140371Z   const fetchSpaceRooms = spaceId => {
2025-04-15T08:07:18.2140467Z     if (!spaceId) return Promise.resolve([])
2025-04-15T08:07:18.2140553Z     toggleRoomsLoadingState(true);
2025-04-15T08:07:18.2140817Z     return cloudRequest(`/api/v2/spaces/${spaceId}/rooms?show_all=true&default=false`).then(response => {
2025-04-15T08:07:18.2140905Z       toggleRoomsLoadingState(false);
2025-04-15T08:07:18.2140985Z       return response.json();
2025-04-15T08:07:18.2141044Z     })
2025-04-15T08:07:18.2141103Z   }
2025-04-15T08:07:18.2141106Z 
2025-04-15T08:07:18.2141199Z   const getSpaceRooms = async spaceId => {
2025-04-15T08:07:18.2141293Z     if (!spaceId) return Promise.resolve([]);
2025-04-15T08:07:18.2141407Z     const cachedRooms = state.cache.rooms[spaceId];
2025-04-15T08:07:18.2141531Z     if (cachedRooms) return Promise.resolve(cachedRooms);
2025-04-15T08:07:18.2141644Z     const rooms = await fetchSpaceRooms(spaceId);
2025-04-15T08:07:18.2141729Z     cacheRooms(spaceId, rooms);
2025-04-15T08:07:18.2141816Z     return Promise.resolve(rooms);
2025-04-15T08:07:18.2141883Z   }
2025-04-15T08:07:18.2141887Z 
2025-04-15T08:07:18.2141982Z   const updateSelectedOptions = root => {
2025-04-15T08:07:18.2142055Z     if (!root) return;
2025-04-15T08:07:18.2142322Z     const checkboxes = root.querySelectorAll('.dropdown > .checkbox-container input[type="checkbox"]');
2025-04-15T08:07:18.2142414Z     const selected = Array.from(checkboxes)
2025-04-15T08:07:18.2142509Z       .filter((checkbox) => checkbox.checked)
2025-04-15T08:07:18.2142685Z       .map((checkbox) => ({ value: checkbox.value, name: checkbox.dataset.name }));
2025-04-15T08:07:18.2142689Z 
2025-04-15T08:07:18.2142818Z     const selectedNames = selected.map(({ name }) => name);
2025-04-15T08:07:18.2142952Z     const selectedValues = selected.map(({ value }) => value);
2025-04-15T08:07:18.2142960Z 
2025-04-15T08:07:18.2143099Z     const selectedSpaceIds = state.claim.selectedSpaceIds;
2025-04-15T08:07:18.2143273Z     const spaces = state.cache.spaces;
2025-04-15T08:07:18.2143587Z     const selectedSpaceName = selectedSpaceIds.length ? spaces.find(({ id }) => id == selectedSpaceIds[0])?.name : null;
2025-04-15T08:07:18.2143595Z 
2025-04-15T08:07:18.2143868Z     const dropdownChangeEvent = new CustomEvent("dropdownChange", { detail: { values: selectedValues } });
2025-04-15T08:07:18.2143969Z     root.dispatchEvent(dropdownChangeEvent);
2025-04-15T08:07:18.2143972Z 
2025-04-15T08:07:18.2144094Z     root.querySelector("#selectedItems").textContent =
2025-04-15T08:07:18.2144264Z       selectedNames.length > 0 ? selectedNames.join(", ") : "Select Rooms";
2025-04-15T08:07:18.2144268Z 
2025-04-15T08:07:18.2144419Z     const target = document.getElementById(root.dataset.target);
2025-04-15T08:07:18.2144495Z     target.textContent =
2025-04-15T08:07:18.2144578Z       selected.length > 0
2025-04-15T08:07:18.2144748Z         ? `You are ready to connect your agent to room(s): ${selectedNames.join(
2025-04-15T08:07:18.2144812Z           ", "
2025-04-15T08:07:18.2145003Z         )}${selectedSpaceName ? ` of ${selectedSpaceName} space` : ""}`
2025-04-15T08:07:18.2145070Z         : "";
2025-04-15T08:07:18.2145135Z   }
2025-04-15T08:07:18.2145139Z 
2025-04-15T08:07:18.2145229Z   const bindDropdownOptions = () => {
2025-04-15T08:07:18.2145395Z     document.querySelectorAll(".dropdown-custom").forEach(root => {
2025-04-15T08:07:18.2145566Z       root.querySelectorAll(".nd-checkbox > input").forEach(input => {
2025-04-15T08:07:18.2145743Z         input.addEventListener("change", () => updateSelectedOptions(root));
2025-04-15T08:07:18.2145811Z       });
2025-04-15T08:07:18.2145872Z     });
2025-04-15T08:07:18.2145937Z   }
2025-04-15T08:07:18.2145940Z 
2025-04-15T08:07:18.2146029Z   const buildRoomsList = (rooms = []) => {
2025-04-15T08:07:18.2146325Z     const container = document.getElementById("roomsSelectorOptionsContainer");
2025-04-15T08:07:18.2146518Z     if (container) {
2025-04-15T08:07:18.2146599Z       container.innerHTML = "";
2025-04-15T08:07:18.2146688Z       rooms.forEach(({ id, name }) => {
2025-04-15T08:07:18.2146794Z         const isDefaultSelected = name === "All nodes"
2025-04-15T08:07:18.2146799Z 
2025-04-15T08:07:18.2146886Z         if (isDefaultSelected) {
2025-04-15T08:07:18.2146970Z           setSelectedRoomsStatus(id)
2025-04-15T08:07:18.2147031Z         }
2025-04-15T08:07:18.2147035Z 
2025-04-15T08:07:18.2147188Z         const label = createElem("label", { classList: "nd-checkbox" });
2025-04-15T08:07:18.2147414Z         const input = createElem("input", { type: "checkbox", value: id, checked: isDefaultSelected });
2025-04-15T08:07:18.2147499Z         input.dataset.name = name;
2025-04-15T08:07:18.2147576Z         input.onchange = e => {
2025-04-15T08:07:18.2147669Z           setSelectedRoomsStatus(prev => {
2025-04-15T08:07:18.2147771Z             if (e.target.checked) return [...prev, id];
2025-04-15T08:07:18.2147864Z             return prev.filter(r => r != id);
2025-04-15T08:07:18.2147928Z           });
2025-04-15T08:07:18.2147991Z         }
2025-04-15T08:07:18.2147999Z 
2025-04-15T08:07:18.2148138Z         const span = createElem("span", { classList: "checkmark" });
2025-04-15T08:07:18.2148239Z         const text = document.createTextNode(name);
2025-04-15T08:07:18.2148243Z 
2025-04-15T08:07:18.2148329Z         label.appendChild(input);
2025-04-15T08:07:18.2148409Z         label.appendChild(span);
2025-04-15T08:07:18.2148487Z         label.appendChild(text);
2025-04-15T08:07:18.2148577Z         container.appendChild(label);
2025-04-15T08:07:18.2148637Z       });
2025-04-15T08:07:18.2148640Z 
2025-04-15T08:07:18.2148724Z       bindDropdownOptions();
2025-04-15T08:07:18.2148784Z     }
2025-04-15T08:07:18.2148843Z   }
2025-04-15T08:07:18.2148851Z 
2025-04-15T08:07:18.2148945Z   const buildSpacesList = (spaces = []) => {
2025-04-15T08:07:18.2149081Z     const container = document.getElementById("spacesList");
2025-04-15T08:07:18.2149158Z     if (container) {
2025-04-15T08:07:18.2149236Z       container.innerHTML = "";
2025-04-15T08:07:18.2149472Z       spaces.forEach(({ id, name, permissions = [] }) => {
2025-04-15T08:07:18.2149585Z         if (!permissions.includes("node:Create")) return
2025-04-15T08:07:18.2149589Z 
2025-04-15T08:07:18.2149675Z         const listItem = createElem("li");
2025-04-15T08:07:18.2149760Z         listItem.innerText = name;
2025-04-15T08:07:18.2149847Z         listItem.className = "space-item";
2025-04-15T08:07:18.2149928Z         listItem.dataset.id = id;
2025-04-15T08:07:18.2150011Z         listItem.onclick = async () => {
2025-04-15T08:07:18.2150259Z           document.querySelectorAll(".space-item").forEach(item => item.classList.remove("selected"));
2025-04-15T08:07:18.2150351Z           listItem.classList.add("selected");
2025-04-15T08:07:18.2150440Z           setSelectedSpacesStatus([id]);
2025-04-15T08:07:18.2150504Z         };
2025-04-15T08:07:18.2150598Z         container.appendChild(listItem);
2025-04-15T08:07:18.2150662Z       });
2025-04-15T08:07:18.2150721Z     }
2025-04-15T08:07:18.2150806Z     return Promise.resolve();
2025-04-15T08:07:18.2150868Z   }
2025-04-15T08:07:18.2150871Z 
2025-04-15T08:07:18.2150955Z   const initCustomDropdown = () => {
2025-04-15T08:07:18.2151036Z     const toggleDropdown = e => {
2025-04-15T08:07:18.2151114Z       if (!e.currentTarget) return;
2025-04-15T08:07:18.2151332Z       const checkboxContainer = e.currentTarget.querySelector(".checkbox-container");
2025-04-15T08:07:18.2151410Z       if (checkboxContainer) {
2025-04-15T08:07:18.2151688Z         checkboxContainer.style.display = checkboxContainer.style.display === "block" ? "none" : "block";
2025-04-15T08:07:18.2151754Z       }
2025-04-15T08:07:18.2151815Z     }
2025-04-15T08:07:18.2151818Z 
2025-04-15T08:07:18.2151901Z     const clearSelection = e => {
2025-04-15T08:07:18.2151983Z       if (!e.currentTarget) return;
2025-04-15T08:07:18.2152208Z       const root = e.currentTarget.closest(".dropdown-custom");
2025-04-15T08:07:18.2152273Z       if (root) {
2025-04-15T08:07:18.2152547Z         const checkboxes = root.querySelectorAll('.dropdown > .checkbox-container input[type="checkbox"]');
2025-04-15T08:07:18.2152702Z         checkboxes.forEach((checkbox) => (checkbox.checked = false));
2025-04-15T08:07:18.2152788Z         updateSelectedOptions(root);
2025-04-15T08:07:18.2152853Z       }
2025-04-15T08:07:18.2152912Z     }
2025-04-15T08:07:18.2152915Z 
2025-04-15T08:07:18.2153081Z     document.querySelectorAll(".dropdown-custom").forEach(root => {
2025-04-15T08:07:18.2153208Z       const btnClear = root.querySelector(".clear-button");
2025-04-15T08:07:18.2153320Z       const dropdown = root.querySelector(".dropdown");
2025-04-15T08:07:18.2153393Z       if (dropdown) {
2025-04-15T08:07:18.2153460Z         if (btnClear) {
2025-04-15T08:07:18.2153590Z           btnClear.addEventListener("click", clearSelection);
2025-04-15T08:07:18.2153650Z         }
2025-04-15T08:07:18.2153778Z         dropdown.addEventListener("click", toggleDropdown);
2025-04-15T08:07:18.2153841Z       }
2025-04-15T08:07:18.2153900Z     });
2025-04-15T08:07:18.2153904Z 
2025-04-15T08:07:18.2154012Z     document.addEventListener("click", (e) => {
2025-04-15T08:07:18.2154188Z       document.querySelectorAll(".dropdown-custom").forEach(dropdown => {
2025-04-15T08:07:18.2154382Z         const checkboxContainer = dropdown.querySelector(".checkbox-container");
2025-04-15T08:07:18.2154542Z         if (dropdown && checkboxContainer && !dropdown.contains(e.target)) {
2025-04-15T08:07:18.2154648Z           checkboxContainer.style.display = "none";
2025-04-15T08:07:18.2154713Z         }
2025-04-15T08:07:18.2154773Z       });
2025-04-15T08:07:18.2154837Z     });
2025-04-15T08:07:18.2154841Z 
2025-04-15T08:07:18.2154920Z     return Promise.resolve();
2025-04-15T08:07:18.2154981Z   }
2025-04-15T08:07:18.2154990Z 
2025-04-15T08:07:18.2155083Z   const initClaimingElements = () => {
2025-04-15T08:07:18.2155240Z     const claimCommand = document.getElementById("claimCommand");
2025-04-15T08:07:18.2155370Z     const claimTip = document.getElementById("claimTip");
2025-04-15T08:07:18.2155620Z     const btnPrev = document.getElementById("btnConnectionStepPrev");
2025-04-15T08:07:18.2155786Z     const btnNext = document.getElementById("btnConnectionStepNext");
2025-04-15T08:07:18.2155908Z     const btnClaim = document.getElementById("btnClaim");
2025-04-15T08:07:18.2156200Z     const claimingPrivateKey = document.getElementById("claimingPrivateKey");
2025-04-15T08:07:18.2156204Z 
2025-04-15T08:07:18.2156317Z     if (claimCommand && !!state.claim?.status?.command) {
2025-04-15T08:07:18.2156450Z       claimCommand.innerText = state.claim.status.command;
2025-04-15T08:07:18.2156514Z     }
2025-04-15T08:07:18.2156518Z 
2025-04-15T08:07:18.2156629Z     if (claimTip && !!state.claim?.status?.key_filename) {
2025-04-15T08:07:18.2157307Z       claimTip.innerText = `Tip: If the command doesn’t work out-of-the-box, locate the ${state.claim.status.key_filename} file, open it in your favourite text editor, and copy it to your clipboard.`;
2025-04-15T08:07:18.2157374Z     }
2025-04-15T08:07:18.2157378Z 
2025-04-15T08:07:18.2157458Z     if (btnPrev) {
2025-04-15T08:07:18.2157559Z       btnPrev.addEventListener("click", () => {
2025-04-15T08:07:18.2157648Z         setClaimingStep(prev => prev - 1);
2025-04-15T08:07:18.2157711Z       });
2025-04-15T08:07:18.2157771Z     }
2025-04-15T08:07:18.2157775Z 
2025-04-15T08:07:18.2157845Z     if (btnNext) {
2025-04-15T08:07:18.2157959Z       btnNext.addEventListener("click", async () => {
2025-04-15T08:07:18.2158096Z         const newStep = await setClaimingStep(prev => prev + 1);
2025-04-15T08:07:18.2158233Z         if (newStep == 2 && !!state.claim.selectedSpaceIds.length) {
2025-04-15T08:07:18.2158348Z           const spaceId = state.claim.selectedSpaceIds[0];
2025-04-15T08:07:18.2158451Z           const rooms = await getSpaceRooms(spaceId);
2025-04-15T08:07:18.2158531Z           buildRoomsList(rooms);
2025-04-15T08:07:18.2158765Z           await getClaimingToken(spaceId);
2025-04-15T08:07:18.2158826Z         }
2025-04-15T08:07:18.2158886Z       });
2025-04-15T08:07:18.2158955Z     }
2025-04-15T08:07:18.2158959Z 
2025-04-15T08:07:18.2159025Z     if (btnClaim) {
2025-04-15T08:07:18.2159145Z       btnClaim.addEventListener("click", async () => {
2025-04-15T08:07:18.2159250Z         toggleClaimingAgentLoadingState(true);
2025-04-15T08:07:18.2159343Z         await setClaimResponseState({});
2025-04-15T08:07:18.2159523Z         const { selectedSpaceIds, selectedRoomIds, privateKey } = state.claim;
2025-04-15T08:07:18.2159829Z         const { token } = selectedSpaceIds.length ? state.cache.claimingTokensPerSpace[selectedSpaceIds[0]] || {} : {};
2025-04-15T08:07:18.2159837Z 
2025-04-15T08:07:18.2159914Z         let didCatch = false;
2025-04-15T08:07:18.2160151Z         const data = await claimAgent({ key: privateKey, token, rooms: selectedRoomIds }).catch(err => {
2025-04-15T08:07:18.2160227Z           didCatch = true;
2025-04-15T08:07:18.2160346Z           setClaimResponseState({ error: err.message });
2025-04-15T08:07:18.2160411Z         })
2025-04-15T08:07:18.2160415Z 
2025-04-15T08:07:18.2160499Z         if (data === "invalid key") {
2025-04-15T08:07:18.2160573Z           didCatch = true;
2025-04-15T08:07:18.2160688Z           setClaimResponseState({ error: "Invalid key" });
2025-04-15T08:07:18.2160748Z         }
2025-04-15T08:07:18.2160857Z         toggleClaimingAgentLoadingState(false);
2025-04-15T08:07:18.2160861Z 
2025-04-15T08:07:18.2160932Z         if (didCatch) return;
2025-04-15T08:07:18.2160936Z 
2025-04-15T08:07:18.2161001Z         if (data) {
2025-04-15T08:07:18.2161072Z           if (data.success) {
2025-04-15T08:07:18.2161156Z             window.location.reload();
2025-04-15T08:07:18.2161221Z           } else {
2025-04-15T08:07:18.2161308Z             setClaimResponseState(data);
2025-04-15T08:07:18.2161372Z           }
2025-04-15T08:07:18.2161431Z         }
2025-04-15T08:07:18.2161499Z       });
2025-04-15T08:07:18.2161560Z     }
2025-04-15T08:07:18.2161564Z 
2025-04-15T08:07:18.2161641Z     if (claimingPrivateKey) {
2025-04-15T08:07:18.2162026Z       claimingPrivateKey.addEventListener("input", e => setClaimingPrivateKeyState(e.target.value));
2025-04-15T08:07:18.2162091Z     }
2025-04-15T08:07:18.2162154Z   }
2025-04-15T08:07:18.2162157Z 
2025-04-15T08:07:18.2162243Z   const setClaimStatus = async () => {
2025-04-15T08:07:18.2162325Z     const status = await claimAgent();
2025-04-15T08:07:18.2162404Z     const claimStatus = {
2025-04-15T08:07:18.2162537Z       command: status.cmd || `sudo cat ${status.key_filename}`,
2025-04-15T08:07:18.2162604Z       ...status
2025-04-15T08:07:18.2162667Z     };
2025-04-15T08:07:18.2162766Z     await setClaimStatusState(claimStatus);
2025-04-15T08:07:18.2162848Z     return Promise.resolve();
2025-04-15T08:07:18.2162907Z   }
2025-04-15T08:07:18.2162911Z 
2025-04-15T08:07:18.2163006Z   const prepareClaiming = async agent => {
2025-04-15T08:07:18.2163092Z     await setClaimStatus();
2025-04-15T08:07:18.2163175Z     setupOptOutMessage(agent)
2025-04-15T08:07:18.2163258Z     const spaces = await getSpaces();
2025-04-15T08:07:18.2163347Z     await buildSpacesList(spaces);
2025-04-15T08:07:18.2163428Z     initCustomDropdown();
2025-04-15T08:07:18.2163507Z     initClaimingElements();
2025-04-15T08:07:18.2163574Z     syncUI();
2025-04-15T08:07:18.2163632Z   }
2025-04-15T08:07:18.2163635Z 
2025-04-15T08:07:18.2163712Z   const startLoading = () => {
2025-04-15T08:07:18.2163795Z     const body = document.body;
2025-04-15T08:07:18.2163860Z     if (body) {
2025-04-15T08:07:18.2163947Z       body.classList.add("loading");
2025-04-15T08:07:18.2164007Z     }
2025-04-15T08:07:18.2164069Z   }
2025-04-15T08:07:18.2164073Z 
2025-04-15T08:07:18.2164149Z   const stopLoading = () => {
2025-04-15T08:07:18.2164225Z     const body = document.body;
2025-04-15T08:07:18.2164291Z     if (body) {
2025-04-15T08:07:18.2164380Z       body.classList.remove("loading");
2025-04-15T08:07:18.2164574Z       window.dispatchEvent(new Event("resize"));
2025-04-15T08:07:18.2164634Z     }
2025-04-15T08:07:18.2164692Z   }
2025-04-15T08:07:18.2164696Z 
2025-04-15T08:07:18.2164855Z   const showErrorMessage = (message = defaultErrorMessage) => {
2025-04-15T08:07:18.2165030Z     const messageContainer = document.getElementById("loadingMessage");
2025-04-15T08:07:18.2165111Z     if (messageContainer) {
2025-04-15T08:07:18.2165204Z       messageContainer.innerHTML = message;
2025-04-15T08:07:18.2165276Z       startLoading();
2025-04-15T08:07:18.2165335Z     }
2025-04-15T08:07:18.2165394Z   }
2025-04-15T08:07:18.2165397Z 
2025-04-15T08:07:18.2165476Z   const initMetrics = data => {
2025-04-15T08:07:18.2165673Z     if (!data?.agents?.[0]) return Promise.reject({ message: "No agent data available." })
2025-04-15T08:07:18.2165678Z 
2025-04-15T08:07:18.2165820Z     const setPercentageBarWidth = (containerId, percent) => {
2025-04-15T08:07:18.2165955Z       const container = document.getElementById(containerId);
2025-04-15T08:07:18.2166032Z       if (container) {
2025-04-15T08:07:18.2166279Z         const percentageContainer = document.createElement("div");
2025-04-15T08:07:18.2166430Z         percentageContainer.className = "percentage-container";
2025-04-15T08:07:18.2166434Z 
2025-04-15T08:07:18.2166563Z         const percentageBar = document.createElement("div");
2025-04-15T08:07:18.2166672Z         percentageBar.className = "percentage-bar";
2025-04-15T08:07:18.2166783Z         percentageBar.style.width = percent + "%";
2025-04-15T08:07:18.2166786Z 
2025-04-15T08:07:18.2166912Z         const percentageText = document.createElement("div");
2025-04-15T08:07:18.2167027Z         percentageText.className = "percentage-text";
2025-04-15T08:07:18.2167256Z         percentageText.innerText = percent + "%"; // Display the rounded percentage value with "%"
2025-04-15T08:07:18.2167260Z 
2025-04-15T08:07:18.2167399Z         // Calculate the right position dynamically, capped at 96%
2025-04-15T08:07:18.2167533Z         const rightPosition = Math.min(100 - percent, 96) + "%";
2025-04-15T08:07:18.2167647Z         percentageText.style.right = rightPosition;
2025-04-15T08:07:18.2167650Z 
2025-04-15T08:07:18.2167892Z         percentageContainer.appendChild(percentageBar);
2025-04-15T08:07:18.2168114Z         percentageContainer.appendChild(percentageText); // Append the percentage text
2025-04-15T08:07:18.2168119Z 
2025-04-15T08:07:18.2168229Z         container.appendChild(percentageContainer);
2025-04-15T08:07:18.2168296Z       }
2025-04-15T08:07:18.2168360Z     }
2025-04-15T08:07:18.2168365Z 
2025-04-15T08:07:18.2168461Z     const units = ["", "K", "M", "B", "T", "P", "E"]
2025-04-15T08:07:18.2168465Z 
2025-04-15T08:07:18.2168552Z     const abbreviateNumber = number => {
2025-04-15T08:07:18.2168627Z       if (!number) return 0
2025-04-15T08:07:18.2168692Z     
2025-04-15T08:07:18.2168804Z       const tier = (Math.log10(Math.abs(number)) / 3) | 0
2025-04-15T08:07:18.2168866Z     
2025-04-15T08:07:18.2168945Z       if (!tier) return number
2025-04-15T08:07:18.2169011Z     
2025-04-15T08:07:18.2169090Z       const suffix = units[tier]
2025-04-15T08:07:18.2169180Z       const scale = Math.pow(10, tier * 3)
2025-04-15T08:07:18.2169263Z       const scaled = number / scale
2025-04-15T08:07:18.2169351Z       return scaled.toFixed(1) + suffix
2025-04-15T08:07:18.2169411Z     }
2025-04-15T08:07:18.2169415Z 
2025-04-15T08:07:18.2169497Z     const formatBytes = (bytes) => {
2025-04-15T08:07:18.2169583Z       if (bytes === 0) return "0 Bytes";
2025-04-15T08:07:18.2169651Z       const k = 1024,
2025-04-15T08:07:18.2169785Z         sizes = ["Bytes", "KB", "MB", "GB", "TB", "PB", "EB", "ZB", "YB"],
2025-04-15T08:07:18.2169886Z         i = Math.floor(Math.log(bytes) / Math.log(k));
2025-04-15T08:07:18.2169952Z       return (
2025-04-15T08:07:18.2170104Z         parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + " " + sizes[i]
2025-04-15T08:07:18.2170166Z       );
2025-04-15T08:07:18.2170229Z     }
2025-04-15T08:07:18.2170233Z 
2025-04-15T08:07:18.2170328Z     const formatLargeNumbers = (number) => {
2025-04-15T08:07:18.2170534Z       return number.toLocaleString();
2025-04-15T08:07:18.2170597Z     }
2025-04-15T08:07:18.2170601Z 
2025-04-15T08:07:18.2170700Z     const formatTimestamp = (timestamp) => {
2025-04-15T08:07:18.2170796Z       const date = new Date(timestamp * 1000);
2025-04-15T08:07:18.2170868Z       const months = [
2025-04-15T08:07:18.2170939Z         "Jan",
2025-04-15T08:07:18.2171003Z         "Feb",
2025-04-15T08:07:18.2171067Z         "Mar",
2025-04-15T08:07:18.2171130Z         "Apr",
2025-04-15T08:07:18.2171192Z         "May",
2025-04-15T08:07:18.2171257Z         "Jun",
2025-04-15T08:07:18.2171319Z         "Jul",
2025-04-15T08:07:18.2171386Z         "Aug",
2025-04-15T08:07:18.2171446Z         "Sep",
2025-04-15T08:07:18.2171506Z         "Oct",
2025-04-15T08:07:18.2171570Z         "Nov",
2025-04-15T08:07:18.2171630Z         "Dec",
2025-04-15T08:07:18.2171696Z       ];
2025-04-15T08:07:18.2171822Z       const days = ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"];
2025-04-15T08:07:18.2171912Z       const day = days[date.getUTCDay()];
2025-04-15T08:07:18.2172012Z       const month = months[date.getUTCMonth()];
2025-04-15T08:07:18.2172102Z       const year = date.getUTCFullYear();
2025-04-15T08:07:18.2172246Z       const hours = date.getUTCHours().toString().padStart(2, "0");
2025-04-15T08:07:18.2172400Z       const minutes = date.getUTCMinutes().toString().padStart(2, "0");
2025-04-15T08:07:18.2172552Z       const seconds = date.getUTCSeconds().toString().padStart(2, "0");
2025-04-15T08:07:18.2172556Z 
2025-04-15T08:07:18.2172730Z       return `${month} ${date.getUTCDate()}, ${year} ${hours}:${minutes}:${seconds}`;
2025-04-15T08:07:18.2172789Z     }
2025-04-15T08:07:18.2172792Z 
2025-04-15T08:07:18.2172914Z     const formatDuration = (seconds, short = false) => {
2025-04-15T08:07:18.2172997Z       if (seconds <= 0) return "0 seconds";
2025-04-15T08:07:18.2173101Z       const days = Math.floor(seconds / (24 * 3600));
2025-04-15T08:07:18.2173219Z       const hours = Math.floor((seconds % (24 * 3600)) / 3600);
2025-04-15T08:07:18.2173334Z       const minutes = Math.floor((seconds % 3600) / 60);
2025-04-15T08:07:18.2173506Z       const remainingSeconds = seconds % 60;
2025-04-15T08:07:18.2173511Z 
2025-04-15T08:07:18.2173578Z       if (short) {
2025-04-15T08:07:18.2173648Z         if (days > 3) {
2025-04-15T08:07:18.2173722Z           return days + " days";
2025-04-15T08:07:18.2173800Z         } else if (days > 0) {
2025-04-15T08:07:18.2173882Z           return days * 24 + hours + " hours";
2025-04-15T08:07:18.2173944Z         }
2025-04-15T08:07:18.2174008Z       }
2025-04-15T08:07:18.2174012Z 
2025-04-15T08:07:18.2174082Z       const parts = [];
2025-04-15T08:07:18.2174217Z       if (days > 0) parts.push(days + " day" + (days > 1 ? "s" : ""));
2025-04-15T08:07:18.2174354Z       if (hours > 0) parts.push(hours + " hour" + (hours > 1 ? "s" : ""));
2025-04-15T08:07:18.2174423Z       if (minutes > 0)
2025-04-15T08:07:18.2174554Z         parts.push(minutes + " minute" + (minutes > 1 ? "s" : ""));
2025-04-15T08:07:18.2174639Z       if (remainingSeconds > 0)
2025-04-15T08:07:18.2174711Z         parts.push(
2025-04-15T08:07:18.2174866Z           remainingSeconds + " second" + (remainingSeconds > 1 ? "s" : "")
2025-04-15T08:07:18.2174930Z         );
2025-04-15T08:07:18.2175045Z       return parts.join(" • ");
2025-04-15T08:07:18.2175105Z     }
2025-04-15T08:07:18.2175112Z 
2025-04-15T08:07:18.2175195Z     const createKeyValuePairs = (
2025-04-15T08:07:18.2175262Z       containerId,
2025-04-15T08:07:18.2175330Z       dataObject,
2025-04-15T08:07:18.2175394Z       keys = null,
2025-04-15T08:07:18.2175469Z       shortFormat = false,
2025-04-15T08:07:18.2175547Z       usePercentageBar = false
2025-04-15T08:07:18.2175616Z     ) => {
2025-04-15T08:07:18.2175753Z       const container = document.getElementById(containerId);
2025-04-15T08:07:18.2175826Z       if (!container) return;
2025-04-15T08:07:18.2175969Z       if (dataObject === null || typeof dataObject !== "object") return
2025-04-15T08:07:18.2176180Z 
2025-04-15T08:07:18.2176302Z       container.innerHTML = ""; // Clear the container
2025-04-15T08:07:18.2176307Z 
2025-04-15T08:07:18.2176430Z       const keysToUse = keys || Object.keys(dataObject);
2025-04-15T08:07:18.2176435Z 
2025-04-15T08:07:18.2176525Z       keysToUse.forEach(function (key) {
2025-04-15T08:07:18.2176624Z         if (dataObject.hasOwnProperty(key)) {
2025-04-15T08:07:18.2176720Z           let value = dataObject[key].toString();
2025-04-15T08:07:18.2176802Z           if (value === "false") return;
2025-04-15T08:07:18.2176806Z 
2025-04-15T08:07:18.2176886Z           if (key === "cpu_frequency") {
2025-04-15T08:07:18.2176998Z             value = (dataObject[key] / 1e9).toFixed(2) + " GHz";
2025-04-15T08:07:18.2177067Z           } else if (
2025-04-15T08:07:18.2177137Z             key === "ram" ||
2025-04-15T08:07:18.2177204Z             key === "disk" ||
2025-04-15T08:07:18.2177280Z             key === "disk_used" ||
2025-04-15T08:07:18.2177349Z             key === "disk_max"
2025-04-15T08:07:18.2177418Z           ) {
2025-04-15T08:07:18.2177511Z             value = formatBytes(dataObject[key]);
2025-04-15T08:07:18.2177576Z           } else if (
2025-04-15T08:07:18.2177656Z             key === "samples" ||
2025-04-15T08:07:18.2177744Z             key === "currently_collected_metrics"
2025-04-15T08:07:18.2177807Z           ) {
2025-04-15T08:07:18.2177913Z             value = formatLargeNumbers(dataObject[key]);
2025-04-15T08:07:18.2178007Z           } else if (key === "from" || key === "to") {
2025-04-15T08:07:18.2178107Z             value = formatTimestamp(dataObject[key]);
2025-04-15T08:07:18.2178172Z           } else if (
2025-04-15T08:07:18.2178248Z             key === "retention" ||
2025-04-15T08:07:18.2178330Z             key === "expected_retention" ||
2025-04-15T08:07:18.2178412Z             key === "requested_retention"
2025-04-15T08:07:18.2178473Z           ) {
2025-04-15T08:07:18.2178598Z             value = formatDuration(dataObject[key], shortFormat);
2025-04-15T08:07:18.2178691Z           } else if (key === "disk_percent") {
2025-04-15T08:07:18.2179024Z             const roundedValue = Math.round(dataObject[key]); // Round the percentage value
2025-04-15T08:07:18.2179116Z             if (usePercentageBar) {
2025-04-15T08:07:18.2179244Z               setPercentageBarWidth(containerId, roundedValue);
2025-04-15T08:07:18.2179391Z               return; // No need to create key-value pair for percentage bar
2025-04-15T08:07:18.2179454Z             } else {
2025-04-15T08:07:18.2179593Z               value = roundedValue + "%"; // Append "%" to the rounded value
2025-04-15T08:07:18.2179656Z             }
2025-04-15T08:07:18.2179715Z           }
2025-04-15T08:07:18.2179719Z 
2025-04-15T08:07:18.2179798Z           const div = getDOM({
2025-04-15T08:07:18.2179866Z             tag: "div",
2025-04-15T08:07:18.2179948Z             classList: "key-value",
2025-04-15T08:07:18.2180016Z             children: [
2025-04-15T08:07:18.2180077Z               {
2025-04-15T08:07:18.2180157Z                 tag: "span",
2025-04-15T08:07:18.2180335Z                 innerText: key.charAt(0).toUpperCase() + key.slice(1).replace(/_/g, " ")
2025-04-15T08:07:18.2180408Z               },
2025-04-15T08:07:18.2180471Z               {
2025-04-15T08:07:18.2180540Z                 tag: "span",
2025-04-15T08:07:18.2180618Z                 innerText: value,
2025-04-15T08:07:18.2180700Z                 condition: value !== "true"
2025-04-15T08:07:18.2180766Z               }
2025-04-15T08:07:18.2180827Z             ]
2025-04-15T08:07:18.2180886Z           });
2025-04-15T08:07:18.2180893Z 
2025-04-15T08:07:18.2180981Z           container.appendChild(div);
2025-04-15T08:07:18.2181042Z         }
2025-04-15T08:07:18.2181105Z       });
2025-04-15T08:07:18.2181165Z     }
2025-04-15T08:07:18.2181169Z 
2025-04-15T08:07:18.2181272Z     const setupCollectedMetrics = data => {
2025-04-15T08:07:18.2181353Z       const agent = data?.agents?.[0]
2025-04-15T08:07:18.2181540Z       const metricsFromDbSize = agent?.db_size?.[0]?.currently_collected_metrics
2025-04-15T08:07:18.2181949Z       const collectedMetrics = metricsFromDbSize !== undefined ? metricsFromDbSize : agent?.metrics?.collected;
2025-04-15T08:07:18.2182107Z       const container = document.getElementById("collectedMetrics");
2025-04-15T08:07:18.2193235Z       if (collectedMetrics === undefined || !container) return;
2025-04-15T08:07:18.2193252Z 
2025-04-15T08:07:18.2193400Z       const div = getDOM({
2025-04-15T08:07:18.2193477Z         tag: "div",
2025-04-15T08:07:18.2193591Z         classList: "key-value",
2025-04-15T08:07:18.2193660Z         children: [
2025-04-15T08:07:18.2193730Z           {
2025-04-15T08:07:18.2193801Z             tag: "span",
2025-04-15T08:07:18.2193934Z             innerText: "Currently Collected Metrics"
2025-04-15T08:07:18.2193999Z           },
2025-04-15T08:07:18.2194061Z           {
2025-04-15T08:07:18.2194135Z             tag: "span",
2025-04-15T08:07:18.2194489Z             innerText: collectedMetrics > 99999 ? abbreviateNumber(collectedMetrics) : formatLargeNumbers(collectedMetrics),
2025-04-15T08:07:18.2194767Z             // ...(collectedMetrics > 99999 ? { dataset: { tooltip: formatLargeNumbers(collectedMetrics) } } : {})
2025-04-15T08:07:18.2194829Z           }
2025-04-15T08:07:18.2194894Z         ]
2025-04-15T08:07:18.2194955Z       });
2025-04-15T08:07:18.2194959Z 
2025-04-15T08:07:18.2195050Z       container.appendChild(div);
2025-04-15T08:07:18.2195115Z     }
2025-04-15T08:07:18.2195118Z 
2025-04-15T08:07:18.2195191Z     const buildTier = ({
2025-04-15T08:07:18.2195262Z       tier: index,
2025-04-15T08:07:18.2195330Z       granularity,
2025-04-15T08:07:18.2195397Z       metrics,
2025-04-15T08:07:18.2195465Z       samples,
2025-04-15T08:07:18.2195535Z       retention_human,
2025-04-15T08:07:18.2195619Z       expected_retention_human,
2025-04-15T08:07:18.2195699Z       requested_retention_human,
2025-04-15T08:07:18.2195766Z       disk_used,
2025-04-15T08:07:18.2195834Z       disk_percent,
2025-04-15T08:07:18.2195898Z       disk_max,
2025-04-15T08:07:18.2195968Z       ...rest
2025-04-15T08:07:18.2196027Z     }) => {
2025-04-15T08:07:18.2196506Z       const disk_used_exists = disk_used !== null && !isNaN(disk_used)
2025-04-15T08:07:18.2196662Z       const disk_max_exists = disk_max !== null && !isNaN(disk_max)
2025-04-15T08:07:18.2196667Z 
2025-04-15T08:07:18.2196752Z       const contentsStructure = {
2025-04-15T08:07:18.2196824Z         tag: "tr",
2025-04-15T08:07:18.2196899Z         children: [
2025-04-15T08:07:18.2196979Z           {
2025-04-15T08:07:18.2197053Z             tag: "td",
2025-04-15T08:07:18.2197137Z             classList: "cell-data",
2025-04-15T08:07:18.2197216Z             textContent: index
2025-04-15T08:07:18.2197277Z           },
2025-04-15T08:07:18.2197340Z           {
2025-04-15T08:07:18.2197407Z             tag: "td",
2025-04-15T08:07:18.2197490Z             classList: "cell-data",
2025-04-15T08:07:18.2197573Z             textContent: granularity
2025-04-15T08:07:18.2197637Z           },
2025-04-15T08:07:18.2197707Z           {
2025-04-15T08:07:18.2197771Z             tag: "td",
2025-04-15T08:07:18.2197874Z             classList: "cell-data section-start",
2025-04-15T08:07:18.2197950Z             children: [
2025-04-15T08:07:18.2198013Z               {
2025-04-15T08:07:18.2198091Z                 tag: "span",
2025-04-15T08:07:18.2198222Z                 textContent: abbreviateNumber(metrics),
2025-04-15T08:07:18.2198357Z                 // dataset: { tooltip: formatLargeNumbers(metrics) }
2025-04-15T08:07:18.2198434Z               }
2025-04-15T08:07:18.2198496Z             ]
2025-04-15T08:07:18.2198559Z           },
2025-04-15T08:07:18.2198619Z           {
2025-04-15T08:07:18.2198687Z             tag: "td",
2025-04-15T08:07:18.2198766Z             classList: "cell-data",
2025-04-15T08:07:18.2198837Z             children: [
2025-04-15T08:07:18.2198898Z               {
2025-04-15T08:07:18.2198966Z                 tag: "span",
2025-04-15T08:07:18.2199071Z                 textContent: abbreviateNumber(samples),
2025-04-15T08:07:18.2199312Z                 // dataset: { tooltip: formatLargeNumbers(samples) }
2025-04-15T08:07:18.2199382Z               }
2025-04-15T08:07:18.2199444Z             ]
2025-04-15T08:07:18.2199511Z           },
2025-04-15T08:07:18.2199578Z           {
2025-04-15T08:07:18.2199645Z             tag: "td",
2025-04-15T08:07:18.2199745Z             classList: "cell-data section-start",
2025-04-15T08:07:18.2199840Z             textContent: retention_human || "-"
2025-04-15T08:07:18.2199900Z           },
2025-04-15T08:07:18.2199965Z           {
2025-04-15T08:07:18.2200031Z             tag: "td",
2025-04-15T08:07:18.2200113Z             classList: "cell-data",
2025-04-15T08:07:18.2200226Z             textContent: expected_retention_human || "-"
2025-04-15T08:07:18.2200288Z           },
2025-04-15T08:07:18.2200353Z           {
2025-04-15T08:07:18.2200421Z             tag: "td",
2025-04-15T08:07:18.2200504Z             classList: "cell-data",
2025-04-15T08:07:18.2200614Z             textContent: requested_retention_human || "-"
2025-04-15T08:07:18.2200690Z           },
2025-04-15T08:07:18.2200752Z           {
2025-04-15T08:07:18.2200818Z             tag: "td",
2025-04-15T08:07:18.2200920Z             classList: "cell-data section-start",
2025-04-15T08:07:18.2200989Z             children: [
2025-04-15T08:07:18.2201054Z               {
2025-04-15T08:07:18.2201179Z                 className: "progress-indicator flex flex-col",
2025-04-15T08:07:18.2201250Z                 children: [
2025-04-15T08:07:18.2201317Z                   {
2025-04-15T08:07:18.2201391Z                     tag: "span",
2025-04-15T08:07:18.2201554Z                     textContent: disk_used_exists ? formatBytes(disk_used) : "-"
2025-04-15T08:07:18.2201618Z                   },
2025-04-15T08:07:18.2201702Z                   ...(disk_used_exists ? [{
2025-04-15T08:07:18.2201816Z                     className: "progress-bar-container",
2025-04-15T08:07:18.2201890Z                     children: [
2025-04-15T08:07:18.2201959Z                       {
2025-04-15T08:07:18.2222690Z                         className: "progress-bar",
2025-04-15T08:07:18.2222784Z                         dataset: {
2025-04-15T08:07:18.2223008Z                           fill: disk_percent
2025-04-15T08:07:18.2223085Z                         }
2025-04-15T08:07:18.2223153Z                       }
2025-04-15T08:07:18.2223215Z                     ]
2025-04-15T08:07:18.2223281Z                   }] : [])
2025-04-15T08:07:18.2223342Z                 ]
2025-04-15T08:07:18.2223401Z               }
2025-04-15T08:07:18.2223463Z             ]
2025-04-15T08:07:18.2223521Z           },
2025-04-15T08:07:18.2223581Z           {
2025-04-15T08:07:18.2223648Z             tag: "td",
2025-04-15T08:07:18.2223729Z             classList: "cell-data",
2025-04-15T08:07:18.2223879Z             textContent: disk_max_exists ? formatBytes(disk_max) : "-"
2025-04-15T08:07:18.2223941Z           }
2025-04-15T08:07:18.2224002Z         ]
2025-04-15T08:07:18.2224063Z       }
2025-04-15T08:07:18.2224068Z 
2025-04-15T08:07:18.2224165Z       return getDOM(contentsStructure);
2025-04-15T08:07:18.2224224Z     }
2025-04-15T08:07:18.2224228Z 
2025-04-15T08:07:18.2224304Z     const buildTiers = () => {
2025-04-15T08:07:18.2224410Z       const tiers = data.agents[0].db_size || [];
2025-04-15T08:07:18.2224625Z       const placeholder = document.getElementById("tiers-table-data-placeholder");
2025-04-15T08:07:18.2224719Z       if (placeholder && !!tiers.length) {
2025-04-15T08:07:18.2224803Z         const rows = tiers.map(buildTier)
2025-04-15T08:07:18.2224892Z         placeholder.replaceWith(...rows);
2025-04-15T08:07:18.2224951Z       }
2025-04-15T08:07:18.2224955Z 
2025-04-15T08:07:18.2225034Z       return Promise.resolve()
2025-04-15T08:07:18.2225095Z     }
2025-04-15T08:07:18.2225100Z 
2025-04-15T08:07:18.2225187Z     const setupProgressBars = () => {
2025-04-15T08:07:18.2225340Z       document.querySelectorAll(".progress-bar").forEach(el => {
2025-04-15T08:07:18.2225419Z         const fill = el.dataset.fill
2025-04-15T08:07:18.2225617Z         el.style.width = `${fill}%`
2025-04-15T08:07:18.2225684Z       })
2025-04-15T08:07:18.2225740Z     }
2025-04-15T08:07:18.2225745Z 
2025-04-15T08:07:18.2225919Z     createKeyValuePairs("kernel", data.agents[0].application.os, [
2025-04-15T08:07:18.2225982Z       "kernel",
2025-04-15T08:07:18.2226042Z     ]);
2025-04-15T08:07:18.2226497Z     createKeyValuePairs("kernelVersion", data.agents[0].application.os, [
2025-04-15T08:07:18.2226571Z       "kernel_version",
2025-04-15T08:07:18.2226634Z     ]);
2025-04-15T08:07:18.2226799Z     createKeyValuePairs("id", data.agents[0].application.os, ["id"]);
2025-04-15T08:07:18.2226958Z     createKeyValuePairs("os", data.agents[0].application.os, ["os"]);
2025-04-15T08:07:18.2226966Z 
2025-04-15T08:07:18.2227143Z     createKeyValuePairs("package", data.agents[0].application.package, [
2025-04-15T08:07:18.2227206Z       "version",
2025-04-15T08:07:18.2227264Z     ]);
2025-04-15T08:07:18.2227342Z     createKeyValuePairs(
2025-04-15T08:07:18.2227415Z       "directories",
2025-04-15T08:07:18.2227512Z       data.agents[0].application.directories
2025-04-15T08:07:18.2227573Z     );
2025-04-15T08:07:18.2227704Z     createKeyValuePairs("server", data.agents[0], ["nm"]);
2025-04-15T08:07:18.2227862Z     createKeyValuePairs("cpuCores", data.agents[0].application.hw, [
2025-04-15T08:07:18.2227930Z       "cpu_cores",
2025-04-15T08:07:18.2227988Z     ]);
2025-04-15T08:07:18.2228161Z     createKeyValuePairs("cpuFrequency", data.agents[0].application.hw, [
2025-04-15T08:07:18.2228228Z       "cpu_frequency",
2025-04-15T08:07:18.2228285Z     ]);
2025-04-15T08:07:18.2228449Z     createKeyValuePairs("ram", data.agents[0].application.hw, ["ram"]);
2025-04-15T08:07:18.2228617Z     createKeyValuePairs("disk", data.agents[0].application.hw, ["disk"]);
2025-04-15T08:07:18.2228803Z     createKeyValuePairs("cpuArchitecture", data.agents[0].application.hw, [
2025-04-15T08:07:18.2228876Z       "cpu_architecture",
2025-04-15T08:07:18.2228936Z     ]);
2025-04-15T08:07:18.2229116Z     createKeyValuePairs("virtualization", data.agents[0].application.hw, [
2025-04-15T08:07:18.2229186Z       "virtualization",
2025-04-15T08:07:18.2229246Z     ]);
2025-04-15T08:07:18.2229533Z     createKeyValuePairs("cloud_status", data.agents[0].cloud, ["status"]);
2025-04-15T08:07:18.2229692Z     createKeyValuePairs("nodes_streaming", data.agents[0].nodes);
2025-04-15T08:07:18.2229864Z     createKeyValuePairs("plugins", data.agents[0].application.plugins);
2025-04-15T08:07:18.2230012Z     createKeyValuePairs("libs", data.agents[0].application.libs);
2025-04-15T08:07:18.2230190Z     createKeyValuePairs("exporters", data.agents[0].application.exporters);
2025-04-15T08:07:18.2230279Z     setupCollectedMetrics(data);
2025-04-15T08:07:18.2230283Z 
2025-04-15T08:07:18.2230388Z     buildTiers().then(() => setupProgressBars())
2025-04-15T08:07:18.2230392Z 
2025-04-15T08:07:18.2230470Z     return Promise.resolve();
2025-04-15T08:07:18.2230531Z   }
2025-04-15T08:07:18.2230535Z 
2025-04-15T08:07:18.2230611Z   const initTooltips = () => {
2025-04-15T08:07:18.2230745Z     const tooltip = document.getElementById("tooltip");
2025-04-15T08:07:18.2230816Z     if (!tooltip) return;
2025-04-15T08:07:18.2230825Z 
2025-04-15T08:07:18.2231179Z     document.querySelectorAll("[data-tooltip]").forEach(elem => {
2025-04-15T08:07:18.2231329Z       elem.addEventListener("mouseenter", () => {
2025-04-15T08:07:18.2231425Z         const content = elem.dataset.tooltip;
2025-04-15T08:07:18.2231531Z         const rect = elem.getBoundingClientRect();
2025-04-15T08:07:18.2231613Z         const top = rect.bottom + 10;
2025-04-15T08:07:18.2231686Z         const left = rect.x;
2025-04-15T08:07:18.2231771Z         tooltip.textContent = content;
2025-04-15T08:07:18.2231855Z         tooltip.style.top = `${top}px`;
2025-04-15T08:07:18.2231942Z         tooltip.style.left = `${left}px`;
2025-04-15T08:07:18.2232029Z         tooltip.style.display = "block";
2025-04-15T08:07:18.2232091Z       });
2025-04-15T08:07:18.2232094Z 
2025-04-15T08:07:18.2232328Z       elem.addEventListener("mouseleave", () => {
2025-04-15T08:07:18.2232408Z         tooltip.textContent = "";
2025-04-15T08:07:18.2232493Z         tooltip.style.display = "none";
2025-04-15T08:07:18.2232556Z       })
2025-04-15T08:07:18.2232617Z     })
2025-04-15T08:07:18.2232676Z   }
2025-04-15T08:07:18.2232680Z 
2025-04-15T08:07:18.2232739Z   /**
2025-04-15T08:07:18.2232837Z    * Get agent info and initialize splash screen
2025-04-15T08:07:18.2232894Z    */
2025-04-15T08:07:18.2232986Z   const initSplashScreen = async () => {
2025-04-15T08:07:18.2233119Z     const msgSignIn = document.getElementById("msgSignIn");
2025-04-15T08:07:18.2233244Z     const btnSignIn = document.getElementById("btnSignIn");
2025-04-15T08:07:18.2233343Z     msgSignIn.textContent = "Please wait..."
2025-04-15T08:07:18.2233429Z     btnSignIn.style.display = "none"
2025-04-15T08:07:18.2233433Z 
2025-04-15T08:07:18.2233525Z     const agentInfo = await getAgentInfo()
2025-04-15T08:07:18.2233530Z 
2025-04-15T08:07:18.2233884Z     if (!agentInfo || !Array.isArray(agentInfo.agents) || !agentInfo.agents[0]) return Promise.reject({ message: "No agent data available." })
2025-04-15T08:07:18.2233893Z 
2025-04-15T08:07:18.2234008Z     const agent = (agentInfo?.agents || [])[0] || {}
2025-04-15T08:07:18.2234115Z     const status = agent.cloud && agent.cloud.status
2025-04-15T08:07:18.2234227Z     const claimId = agent.cloud && agent.cloud.claim_id
2025-04-15T08:07:18.2234337Z     const cloudUrl = agent.cloud && agent.cloud.url
2025-04-15T08:07:18.2234341Z 
2025-04-15T08:07:18.2234431Z     window.localNetdataRegistry = {
2025-04-15T08:07:18.2234507Z       hostname: agent.nm,
2025-04-15T08:07:18.2234572Z       mg: agent.mg,
2025-04-15T08:07:18.2234638Z       nd: agent.nd,
2025-04-15T08:07:18.2234707Z       claimId: claimId,
2025-04-15T08:07:18.2234785Z       xNetdataAuthHeader: true
2025-04-15T08:07:18.2234849Z     }
2025-04-15T08:07:18.2234853Z 
2025-04-15T08:07:18.2235035Z     window.envSettings.cloudUrl = cloudUrl || window.envSettings.cloudUrl
2025-04-15T08:07:18.2235210Z     window.envSettings.apiUrl = cloudUrl || window.envSettings.apiUrl
2025-04-15T08:07:18.2235213Z 
2025-04-15T08:07:18.2235447Z     const isCloudSignedIn = !!localStorage.getItem(CLOUD_TOKEN_KEY)
2025-04-15T08:07:18.2235452Z 
2025-04-15T08:07:18.2235534Z     if (!isCloudSignedIn) {
2025-04-15T08:07:18.2235621Z       msgSignIn.style.display = "inline"
2025-04-15T08:07:18.2235746Z       msgSignIn.textContent = "Please sign-in to continue"
2025-04-15T08:07:18.2235838Z       btnSignIn.style.display = "block"
2025-04-15T08:07:18.2235901Z     }
2025-04-15T08:07:18.2235908Z 
2025-04-15T08:07:18.2235990Z     initMetrics(agentInfo)
2025-04-15T08:07:18.2235993Z 
2025-04-15T08:07:18.2236407Z     if (!claimId && isCloudSignedIn && !window.envSettings.isLocal) {
2025-04-15T08:07:18.2236505Z       setShouldClaimStatus(true);
2025-04-15T08:07:18.2236584Z       prepareClaiming(agent)
2025-04-15T08:07:18.2236689Z       return Promise.resolve({ stopLoading: true })
2025-04-15T08:07:18.2236759Z     }
2025-04-15T08:07:18.2236763Z 
2025-04-15T08:07:18.2236844Z     let me = await checkMe(agent.mg)
2025-04-15T08:07:18.2236848Z 
2025-04-15T08:07:18.2237035Z     if (isCloudSignedIn && agent.nd && (me.auth === "none" || me.auth === "god")) {
2025-04-15T08:07:18.2237246Z       await getAgentToken({ mg: agent.mg, nd: agent.nd, claimId: agent.cloud.claim_id }, agent)
2025-04-15T08:07:18.2237328Z       me = await checkMe(agent.mg)
2025-04-15T08:07:18.2237387Z     }
2025-04-15T08:07:18.2237390Z 
2025-04-15T08:07:18.2237552Z     const claimStatusesToProceed = ["online", "indirect", "offline"]
2025-04-15T08:07:18.2237556Z 
2025-04-15T08:07:18.2237744Z     if ((me.auth === "bearer" || me.auth === "god") && claimStatusesToProceed.includes(status)) {
2025-04-15T08:07:18.2237844Z       await fetchUserAccess(agent.mg, agent.nd)
2025-04-15T08:07:18.2237933Z       return loadDashboard()
2025-04-15T08:07:18.2238028Z     } else if (window.envSettings.isLocal) {
2025-04-15T08:07:18.2238111Z       return loadDashboard()
2025-04-15T08:07:18.2238330Z     } else {
2025-04-15T08:07:18.2238427Z       await fetchUserAccess(agent.mg, agent.nd)
2025-04-15T08:07:18.2238490Z     }
2025-04-15T08:07:18.2238493Z 
2025-04-15T08:07:18.2238573Z     if (!isCloudSignedIn) {
2025-04-15T08:07:18.2238659Z       setupOptOutMessage(agent)
2025-04-15T08:07:18.2238764Z       return Promise.resolve({ stopLoading: true })
2025-04-15T08:07:18.2238827Z     }
2025-04-15T08:07:18.2238831Z 
2025-04-15T08:07:18.2238907Z     return Promise.resolve()
2025-04-15T08:07:18.2238967Z   }
2025-04-15T08:07:18.2238971Z 
2025-04-15T08:07:18.2239055Z   // =============================================== //
2025-04-15T08:07:18.2239059Z 
2025-04-15T08:07:18.2239183Z   document.addEventListener("DOMContentLoaded", () => {
2025-04-15T08:07:18.2239251Z     initGrid();
2025-04-15T08:07:18.2239338Z     initPrimaryButtonHover();
2025-04-15T08:07:18.2239407Z     toggleTab(1);
2025-04-15T08:07:18.2239472Z     initTabs();
2025-04-15T08:07:18.2239477Z 
2025-04-15T08:07:18.2239620Z     fetchRegistryInfo().then(initSplashScreen).then(data => {
2025-04-15T08:07:18.2239705Z       if (data?.stopLoading) {
2025-04-15T08:07:18.2239775Z         stopLoading()
2025-04-15T08:07:18.2239843Z       }
2025-04-15T08:07:18.2239911Z       initTooltips()
2025-04-15T08:07:18.2239979Z     }).catch(err => {
2025-04-15T08:07:18.2240066Z       showErrorMessage(err?.message)
2025-04-15T08:07:18.2240127Z     })
2025-04-15T08:07:18.2241022Z   });</script></html><!doctype html><html lang="en" dir="ltr"><head><meta charset="utf-8"/><title>Netdata</title><script>const CONFIG = {
2025-04-15T08:07:18.2241087Z       cache: {
2025-04-15T08:07:18.2241166Z         agentInfo: false,
2025-04-15T08:07:18.2241237Z         cloudToken: true,
2025-04-15T08:07:18.2241306Z         agentToken: true,
2025-04-15T08:07:18.2241370Z       }
2025-04-15T08:07:18.2241428Z     }
2025-04-15T08:07:18.2241432Z 
2025-04-15T08:07:18.2241585Z     // STATE MANAGEMENT ======================================================================== //
2025-04-15T08:07:18.2241658Z     const state = {
2025-04-15T08:07:18.2241726Z       loading: {
2025-04-15T08:07:18.2241793Z         spaces: false,
2025-04-15T08:07:18.2241858Z         rooms: false,
2025-04-15T08:07:18.2242056Z         claimingToken: false,
2025-04-15T08:07:18.2242135Z         claimingAgent: false
2025-04-15T08:07:18.2242200Z       },
2025-04-15T08:07:18.2242264Z       claim: {
2025-04-15T08:07:18.2242329Z         status: {},
2025-04-15T08:07:18.2242400Z         response: {},
2025-04-15T08:07:18.2242472Z         shouldClaim: false,
2025-04-15T08:07:18.2242541Z         step: 1,
2025-04-15T08:07:18.2242616Z         selectedSpaceIds: [],
2025-04-15T08:07:18.2242688Z         selectedRoomIds: [],
2025-04-15T08:07:18.2242763Z         privateKey: ""
2025-04-15T08:07:18.2242822Z       },
2025-04-15T08:07:18.2242888Z       cache: {
2025-04-15T08:07:18.2242961Z         spaces: undefined,
2025-04-15T08:07:18.2243025Z         rooms: {},
2025-04-15T08:07:18.2243115Z         claimingTokensPerSpace: {}
2025-04-15T08:07:18.2243184Z       }
2025-04-15T08:07:18.2243247Z     }
2025-04-15T08:07:18.2243251Z 
2025-04-15T08:07:18.2243338Z     const getSelectedRooms = state => {
2025-04-15T08:07:18.2243600Z       const spaceId = state.claim.selectedSpaceIds.length ? state.claim.selectedSpaceIds[0] : null;
2025-04-15T08:07:18.2243676Z       if (!spaceId) return [];
2025-04-15T08:07:18.2243782Z       if (state.claim.selectedRoomIds.length) {
2025-04-15T08:07:18.2244044Z         return state.cache?.rooms?.[spaceId]?.filter(({ id }) => state.claim.selectedRoomIds.includes(id)) || [];
2025-04-15T08:07:18.2244106Z       }
2025-04-15T08:07:18.2244174Z       return [];
2025-04-15T08:07:18.2244233Z     }
2025-04-15T08:07:18.2244236Z 
2025-04-15T08:07:18.2244311Z     const syncUI = () => {
2025-04-15T08:07:18.2244374Z       // Elements
2025-04-15T08:07:18.2244565Z       const splashMessage = document.getElementById("splashMessageContainer");
2025-04-15T08:07:18.2244744Z       const claiming = document.getElementById("claimingContentsContainer");
2025-04-15T08:07:18.2244975Z       const step1 = document.getElementById("connectionStep-1");
2025-04-15T08:07:18.2245118Z       const step2 = document.getElementById("connectionStep-2");
2025-04-15T08:07:18.2245285Z       const btnPrev = document.getElementById("btnConnectionStepPrev");
2025-04-15T08:07:18.2245443Z       const btnNext = document.getElementById("btnConnectionStepNext");
2025-04-15T08:07:18.2245572Z       const btnClaim = document.getElementById("btnClaim");
2025-04-15T08:07:18.2245729Z       const roomsSelector = document.getElementById("roomsSelector");
2025-04-15T08:07:18.2245912Z       const claimErrorMessage = document.getElementById("claimErrorMessage");
2025-04-15T08:07:18.2245916Z 
2025-04-15T08:07:18.2245981Z       // State
2025-04-15T08:07:18.2246526Z       const { spaces: spacesLoading, rooms: roomsLoading, claimingToken: claimingTokenLoading, claimingAgent: claimingAgentLoading } = state.loading;
2025-04-15T08:07:18.2246753Z       const { shouldClaim, step, selectedSpaceIds, selectedRoomIds, privateKey } = state.claim;
2025-04-15T08:07:18.2247197Z       const claimingTokenExists = state.claim.selectedSpaceIds.length ? !!state.cache.claimingTokensPerSpace[state.claim.selectedSpaceIds[0]] : false;
2025-04-15T08:07:18.2247201Z 
2025-04-15T08:07:18.2247363Z       splashMessage.style.display = !shouldClaim ? "initial" : "none";
2025-04-15T08:07:18.2247505Z       claiming.style.display = shouldClaim ? "initial" : "none";
2025-04-15T08:07:18.2247510Z 
2025-04-15T08:07:18.2247580Z       // Loading spaces
2025-04-15T08:07:18.2247645Z       if (step1) {
2025-04-15T08:07:18.2247773Z         const spacesLoader = step1.querySelector(".loader");
2025-04-15T08:07:18.2247844Z         if (spacesLoader) {
2025-04-15T08:07:18.2248009Z           spacesLoader.style.display = spacesLoading ? "initial" : "none";
2025-04-15T08:07:18.2248069Z         }
2025-04-15T08:07:18.2248129Z       }
2025-04-15T08:07:18.2248133Z 
2025-04-15T08:07:18.2248204Z       // Loading rooms
2025-04-15T08:07:18.2248277Z       if (roomsSelector) {
2025-04-15T08:07:18.2248439Z         const message = roomsSelector.querySelector(".selected-items");
2025-04-15T08:07:18.2248774Z         const selectedRoomNames = getSelectedRooms(state).map(({ name }) => name).join(", ");
2025-04-15T08:07:18.2248851Z         if (message) {
2025-04-15T08:07:18.2249090Z           message.innerText = roomsLoading ? "Loading rooms..." : (selectedRoomNames || "Select room");
2025-04-15T08:07:18.2249152Z         }
2025-04-15T08:07:18.2249216Z       }
2025-04-15T08:07:18.2249220Z 
2025-04-15T08:07:18.2249290Z       // Steps visibility
2025-04-15T08:07:18.2249416Z       step1.style.display = step == 1 ? "initial" : "none";
2025-04-15T08:07:18.2249526Z       step2.style.display = step == 2 ? "initial" : "none";
2025-04-15T08:07:18.2249530Z 
2025-04-15T08:07:18.2249595Z       // Rooms
2025-04-15T08:07:18.2249661Z       if (step == 1) {
2025-04-15T08:07:18.2249725Z         // Reset rooms
2025-04-15T08:07:18.2250080Z         const checkboxes = document.getElementById("roomsSelectorOptionsContainer").querySelectorAll('input[type="checkbox"]');
2025-04-15T08:07:18.2250175Z         checkboxes.forEach((checkbox) => {
2025-04-15T08:07:18.2250263Z           if (checkbox.checked) {
2025-04-15T08:07:18.2250345Z             checkbox.checked = false;
2025-04-15T08:07:18.2250460Z             checkbox.dispatchEvent(new Event("change"));
2025-04-15T08:07:18.2250520Z           }
2025-04-15T08:07:18.2250581Z         });
2025-04-15T08:07:18.2250646Z       }
2025-04-15T08:07:18.2250649Z 
2025-04-15T08:07:18.2250729Z       if (claimErrorMessage) {
2025-04-15T08:07:18.2250956Z         claimErrorMessage.style.display = state.claim?.response?.error ? "initial" : "none";
2025-04-15T08:07:18.2251210Z         claimErrorMessage.innerText = state.claim?.response?.error ? state.claim.response.error : "";
2025-04-15T08:07:18.2251270Z       }
2025-04-15T08:07:18.2251278Z 
2025-04-15T08:07:18.2251342Z       // Footer
2025-04-15T08:07:18.2251449Z       btnPrev.style.opacity = step == 1 ? "0" : "1";
2025-04-15T08:07:18.2251706Z       btnPrev.style.cursor = step == 1 ? "default" : "pointer";
2025-04-15T08:07:18.2251788Z       btnPrev.disabled = step == 1;
2025-04-15T08:07:18.2251927Z       btnNext.style.display = step == 1 ? "initial" : "none";
2025-04-15T08:07:18.2252038Z       btnNext.disabled = !selectedSpaceIds.length;
2025-04-15T08:07:18.2252168Z       btnClaim.style.display = step == 2 ? "initial" : "none";
2025-04-15T08:07:18.2252539Z       btnClaim.disabled = !selectedRoomIds.length || !privateKey || !claimingTokenExists || claimingTokenLoading || claimingAgentLoading;
2025-04-15T08:07:18.2252715Z       btnClaim.textContent = claimingAgentLoading ? "Claiming..." : "Claim";
2025-04-15T08:07:18.2252719Z 
2025-04-15T08:07:18.2252805Z       return Promise.resolve();
2025-04-15T08:07:18.2252864Z     }
2025-04-15T08:07:18.2252868Z 
2025-04-15T08:07:18.2252985Z     const toggleSpacesLoadingState = isLoading => {
2025-04-15T08:07:18.2253108Z       state.loading = { ...state.loading, spaces: isLoading };
2025-04-15T08:07:18.2253185Z       return syncUI();
2025-04-15T08:07:18.2253246Z     }
2025-04-15T08:07:18.2253250Z 
2025-04-15T08:07:18.2253363Z     const toggleRoomsLoadingState = isLoading => {
2025-04-15T08:07:18.2253487Z       state.loading = { ...state.loading, rooms: isLoading };
2025-04-15T08:07:18.2253554Z       return syncUI();
2025-04-15T08:07:18.2253616Z     }
2025-04-15T08:07:18.2253620Z 
2025-04-15T08:07:18.2253757Z     const toggleClaimingTokenLoadingState = isLoading => {
2025-04-15T08:07:18.2253901Z       state.loading = { ...state.loading, claimingToken: isLoading };
2025-04-15T08:07:18.2253975Z       return syncUI();
2025-04-15T08:07:18.2254034Z     }
2025-04-15T08:07:18.2254038Z 
2025-04-15T08:07:18.2254173Z     const toggleClaimingAgentLoadingState = isLoading => {
2025-04-15T08:07:18.2254310Z       state.loading = { ...state.loading, claimingAgent: isLoading };
2025-04-15T08:07:18.2254382Z       return syncUI();
2025-04-15T08:07:18.2254441Z     }
2025-04-15T08:07:18.2254445Z 
2025-04-15T08:07:18.2254559Z     const setShouldClaimStatus = shouldClaim => {
2025-04-15T08:07:18.2254666Z       state.claim = { ...state.claim, shouldClaim };
2025-04-15T08:07:18.2254816Z       return syncUI();
2025-04-15T08:07:18.2254882Z     }
2025-04-15T08:07:18.2254885Z 
2025-04-15T08:07:18.2254979Z     const setClaimStatusState = status => {
2025-04-15T08:07:18.2255076Z       state.claim = { ...state.claim, status };
2025-04-15T08:07:18.2255143Z       return syncUI();
2025-04-15T08:07:18.2255201Z     }
2025-04-15T08:07:18.2255204Z 
2025-04-15T08:07:18.2255307Z     const setClaimResponseState = response => {
2025-04-15T08:07:18.2255400Z       state.claim = { ...state.claim, response };
2025-04-15T08:07:18.2255470Z       return syncUI();
2025-04-15T08:07:18.2255529Z     }
2025-04-15T08:07:18.2255532Z 
2025-04-15T08:07:18.2255623Z     const setClaimingStep = async arg => {
2025-04-15T08:07:18.2255789Z       const nextStep = typeof arg == "function" ? arg(state.claim.step) : arg;
2025-04-15T08:07:18.2256049Z       state.claim = { ...state.claim, step: nextStep, ...(nextStep == 1 ? { selectedRoomIds: [], privateKey: "" } : {}) };
2025-04-15T08:07:18.2256228Z       await syncUI();
2025-04-15T08:07:18.2256322Z       return Promise.resolve(nextStep);
2025-04-15T08:07:18.2256385Z     }
2025-04-15T08:07:18.2256388Z 
2025-04-15T08:07:18.2256484Z     const setSelectedSpacesStatus = arg => {
2025-04-15T08:07:18.2256768Z       const spaceIds = typeof arg == "function" ? arg(state.claim.selectedSpaceIds) : Array.isArray(arg) ? arg : [arg];
2025-04-15T08:07:18.2257008Z       state.claim = { ...state.claim, selectedSpaceIds: spaceIds, selectedRoomIds: [], privateKey: "" };
2025-04-15T08:07:18.2257076Z       return syncUI();
2025-04-15T08:07:18.2257139Z     }
2025-04-15T08:07:18.2257143Z 
2025-04-15T08:07:18.2257236Z     const setSelectedRoomsStatus = arg => {
2025-04-15T08:07:18.2257508Z       const roomIds = typeof arg == "function" ? arg(state.claim.selectedRoomIds) : Array.isArray(arg) ? arg : [arg];
2025-04-15T08:07:18.2257778Z       state.claim = { ...state.claim, selectedRoomIds: roomIds };
2025-04-15T08:07:18.2257850Z       return syncUI();
2025-04-15T08:07:18.2257911Z     }
2025-04-15T08:07:18.2257915Z 
2025-04-15T08:07:18.2258044Z     const setClaimingPrivateKeyState = (value = "") => {
2025-04-15T08:07:18.2258161Z       state.claim = { ...state.claim, privateKey: value };
2025-04-15T08:07:18.2258227Z       return syncUI();
2025-04-15T08:07:18.2258292Z     }
2025-04-15T08:07:18.2258295Z 
2025-04-15T08:07:18.2258381Z     const cacheSpaces = (spaces) => {
2025-04-15T08:07:18.2258479Z       if (!spaces) return Promise.resolve([]);
2025-04-15T08:07:18.2258562Z       state.cache.spaces = spaces;
2025-04-15T08:07:18.2258646Z       return Promise.resolve(spaces);
2025-04-15T08:07:18.2258708Z     }
2025-04-15T08:07:18.2258711Z 
2025-04-15T08:07:18.2258800Z     const cacheRooms = (spaceId, rooms) => {
2025-04-15T08:07:18.2258894Z       if (!spaceId) return Promise.resolve([]);
2025-04-15T08:07:18.2259037Z       state.cache.rooms = { ...state.cache.rooms, [spaceId]: rooms };
2025-04-15T08:07:18.2259125Z       return Promise.resolve(rooms);
2025-04-15T08:07:18.2259184Z     }
2025-04-15T08:07:18.2259188Z 
2025-04-15T08:07:18.2259302Z     const cacheClaimingToken = (spaceId, token) => {
2025-04-15T08:07:18.2259411Z       if (!spaceId || !token) return Promise.resolve();
2025-04-15T08:07:18.2259679Z       state.cache.claimingTokensPerSpace = { ...state.cache.claimingTokensPerSpace, [spaceId]: token };
2025-04-15T08:07:18.2259768Z       return Promise.resolve(token);
2025-04-15T08:07:18.2259827Z     }
2025-04-15T08:07:18.2259830Z 
2025-04-15T08:07:18.2259926Z     // ========================================================================================= //
2025-04-15T08:07:18.2259935Z 
2025-04-15T08:07:18.2260174Z     const pathsRegex = /\/(spaces|nodes|overview|alerts|dashboards|anomalies|events|cloud|v3)\/?.*/;
2025-04-15T08:07:18.2260256Z     function getBasename() {
2025-04-15T08:07:18.2260479Z       return window.location.origin + window.location.pathname.replace(pathsRegex, "")
2025-04-15T08:07:18.2260545Z     }
2025-04-15T08:07:18.2260549Z 
2025-04-15T08:07:18.2260638Z     let goToOld = function(path) {
2025-04-15T08:07:18.2260856Z       let goToUrl = getBasename() + path;
2025-04-15T08:07:18.2260934Z       if (path !== "/v3") {
2025-04-15T08:07:18.2261175Z         let pathsRegex = /(\/(spaces|nodes|overview|alerts|dashboards|anomalies|events|cloud|v3)\/?.*)/
2025-04-15T08:07:18.2261370Z         if (pathsRegex.test(window.location.origin + window.location.pathname)) {
2025-04-15T08:07:18.2261613Z           goToUrl = (window.location.origin + window.location.pathname).replace(pathsRegex, "/v3$1")
2025-04-15T08:07:18.2261675Z         }
2025-04-15T08:07:18.2261739Z       }
2025-04-15T08:07:18.2261936Z       window.location.replace(ensureOneSlash(goToUrl + window.location.search))
2025-04-15T08:07:18.2261996Z     }
2025-04-15T08:07:18.2262003Z 
2025-04-15T08:07:18.2262144Z     const searchParams = new URLSearchParams(location.search);
2025-04-15T08:07:18.2262227Z     window.envSettings = {
2025-04-15T08:07:18.2262299Z       isAgent: true,
2025-04-15T08:07:18.2262403Z       apiUrl: "https://app.netdata.cloud",
2025-04-15T08:07:18.2262513Z       cloudUrl: "https://app.netdata.cloud",
2025-04-15T08:07:18.2262593Z       demoSlug: "netdata-demo",
2025-04-15T08:07:18.2264819Z       demoFavourites: {"postgresql":["Applications-0_Postgres-1"],"redis":["Applications-0_Redis-1"],"dns-query":["Applications-0_CoreDNS-1"],"http-endpoints":["Applications-0_HTTP_Checks-1"],"nginx":["Applications-0_web_log-1","Applications-0_Nginx-1"],"apache":["Applications-0_Apache-1"],"host-reachability":["Synthetic_Checks-0"],"cassandra":["Applications-0_Cassandra-1"],"coredns":["Applications-0_CoreDNS-1"],"logind":["Applications-0_systemd_LoginD-1"],"iis":["Applications-0_MS_IIS-1"],"active-directory":["Applications-0_MS_Active_Directory-1"],"windows":["Applications-0_Windows-1","Applications-0_MS_Active_Directory-1","Applications-0_MS_IIS-1","Applications-0_MS_SQL-1","Applications-0_MS_Exchange-1","Applications-0__NET_Framework-1"],"docker":["Containers___VMs-0"],"ups":["Hardware___Sensors-0_NUT_UPS-1"]},
2025-04-15T08:07:18.2265096Z       webpackPublicPath: "https://app.netdata.cloud" || (getBasename() + "/v3"),
2025-04-15T08:07:18.2265231Z       agentApiUrl: searchParams.get("agent") || getBasename(),
2025-04-15T08:07:18.2265408Z       posthogToken: "phc_hnhlqe6D2Q4IcQNrFItaqdXJAxQ8RcHkPAFAp74pubv",
2025-04-15T08:07:18.2265477Z       version: "7.48.0",
2025-04-15T08:07:18.2265551Z       tracking: !false,
2025-04-15T08:07:18.2265636Z       cookieDomain: ".netdata.cloud",
2025-04-15T08:07:18.2265708Z       onprem: false,
2025-04-15T08:07:18.2265777Z       isLocal: false,
2025-04-15T08:07:18.2265854Z       nodeEnv: "production"
2025-04-15T08:07:18.2265913Z     }
2025-04-15T08:07:18.2265917Z 
2025-04-15T08:07:18.2265995Z     window.visitedNodes = []
2025-04-15T08:07:18.2265999Z 
2025-04-15T08:07:18.2266185Z     const getHashValueByKey = key => {
2025-04-15T08:07:18.2266414Z       return location.hash.substr(1).split("&").find(pair => pair.split("=")[0] == key)?.split("=")[1]
2025-04-15T08:07:18.2266482Z     }
2025-04-15T08:07:18.2266486Z 
2025-04-15T08:07:18.2266559Z     // Check cloud token
2025-04-15T08:07:18.2266649Z     const CLOUD_TOKEN_KEY = "netdataJWT"
2025-04-15T08:07:18.2266775Z     const redirectUri = getHashValueByKey("redirect_uri")
2025-04-15T08:07:18.2266866Z     const token = getHashValueByKey("token")
2025-04-15T08:07:18.2266936Z     if (token) {
2025-04-15T08:07:18.2267040Z       localStorage.setItem(CLOUD_TOKEN_KEY, token)
2025-04-15T08:07:18.2267105Z     }
2025-04-15T08:07:18.2267173Z     if (redirectUri) {
2025-04-15T08:07:18.2267234Z       try {
2025-04-15T08:07:18.2267357Z         const decodedUrl = decodeURIComponent(redirectUri)
2025-04-15T08:07:18.2267504Z         const parsedUrl = new URL(decodedUrl, window.location.origin)
2025-04-15T08:07:18.2267508Z 
2025-04-15T08:07:18.2267625Z         if (parsedUrl.origin === window.location.origin) {
2025-04-15T08:07:18.2267728Z           window.location.href = parsedUrl.href
2025-04-15T08:07:18.2267795Z         } else {
2025-04-15T08:07:18.2268127Z           console.error("Blocked potentially unsafe redirect to: ", decodedUrl)
2025-04-15T08:07:18.2268193Z         }
2025-04-15T08:07:18.2268264Z       } catch (error) {
2025-04-15T08:07:18.2268388Z         console.error("Invalid URL detected: ", error.message)
2025-04-15T08:07:18.2268452Z       }
2025-04-15T08:07:18.2268543Z     }</script><style>body.netdata-splash {
2025-04-15T08:07:18.2268609Z       height: 100%;
2025-04-15T08:07:18.2268680Z       overflow: hidden;
2025-04-15T08:07:18.2268760Z       background: var(--main-bg);
2025-04-15T08:07:18.2268828Z       margin: 0;
2025-04-15T08:07:18.2268892Z       padding: 0;
2025-04-15T08:07:18.2268968Z       color: var(--text);
2025-04-15T08:07:18.2269136Z       font-family: system-ui, "Segoe UI", Roboto, Helvetica, Arial, sans-serif,
2025-04-15T08:07:18.2269268Z         "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
2025-04-15T08:07:18.2269337Z     }
2025-04-15T08:07:18.2269340Z 
2025-04-15T08:07:18.2269402Z     :root {
2025-04-15T08:07:18.2269488Z       --scrollbar-thumb: #fcfffd;
2025-04-15T08:07:18.2269566Z       --primary: #00ab44;
2025-04-15T08:07:18.2269635Z       --text: #93a4a4;
2025-04-15T08:07:18.2269712Z       --text-dark: #001107;
2025-04-15T08:07:18.2269786Z       --text-light: #fcfffd;
2025-04-15T08:07:18.2269861Z       --menu-item: #5b6c6c;
2025-04-15T08:07:18.2269930Z       --main-bg: #000;
2025-04-15T08:07:18.2270003Z       --highlight: #00ef5f;
2025-04-15T08:07:18.2270075Z       --tab-active: #ddffeb;
2025-04-15T08:07:18.2270145Z       --tab-hover: #d2d9d9;
2025-04-15T08:07:18.2270226Z       --panel-bg: transparent;
2025-04-15T08:07:18.2270300Z       --font-small: 14px;
2025-04-15T08:07:18.2270380Z       --font-medium: 16px;
2025-04-15T08:07:18.2270450Z       --row-2n: #101313;
2025-04-15T08:07:18.2270520Z       --border: #00ab4436;
2025-04-15T08:07:18.2270605Z       --border-neutral: #252c2c;
2025-04-15T08:07:18.2270800Z       --key-value-table: #93a4a4;
2025-04-15T08:07:18.2270876Z       --accent: #ddffeb;
2025-04-15T08:07:18.2270966Z       --module-height: 45vh;
2025-04-15T08:07:18.2271146Z       --list-option-bg: rgba(12, 15, 15, 0.5);
2025-04-15T08:07:18.2271303Z       --list-option-selected-bg: #000;
2025-04-15T08:07:18.2271471Z       --list-option-hover-bg: rgba(12, 15, 15, 1);
2025-04-15T08:07:18.2271606Z       --footer-height: 70px;
2025-04-15T08:07:18.2271731Z       --code-bg: #00220e;
2025-04-15T08:07:18.2271879Z       --progress-bar-height: 2px;
2025-04-15T08:07:18.2272023Z       background-color: var(--main-bg);
2025-04-15T08:07:18.2272125Z     }
2025-04-15T08:07:18.2272131Z 
2025-04-15T08:07:18.2272246Z     :root iframe {
2025-04-15T08:07:18.2272368Z       border-width: 0;
2025-04-15T08:07:18.2272477Z     }
2025-04-15T08:07:18.2272482Z 
2025-04-15T08:07:18.2272661Z     body.netdata-splash.loading .frame-right {
2025-04-15T08:07:18.2272777Z       display: none;
2025-04-15T08:07:18.2272883Z     }
2025-04-15T08:07:18.2272896Z 
2025-04-15T08:07:18.2273071Z     body.netdata-splash.loading .frame-left {
2025-04-15T08:07:18.2273212Z       grid-column: auto / span 12;
2025-04-15T08:07:18.2273320Z     }
2025-04-15T08:07:18.2273326Z 
2025-04-15T08:07:18.2273563Z     body.netdata-splash.loading .sphere-stats-container,
2025-04-15T08:07:18.2273741Z     body.netdata-splash.loading .head-summary,
2025-04-15T08:07:18.2273902Z     body.netdata-splash.loading .tabs {
2025-04-15T08:07:18.2274029Z       display: none;
2025-04-15T08:07:18.2274135Z     }
2025-04-15T08:07:18.2274142Z 
2025-04-15T08:07:18.2274341Z     body.netdata-splash.loading .loading-message {
2025-04-15T08:07:18.2274459Z       display: flex;
2025-04-15T08:07:18.2274588Z       position: absolute;
2025-04-15T08:07:18.2274699Z       inset: 0;
2025-04-15T08:07:18.2274812Z       margin: auto;
2025-04-15T08:07:18.2274941Z       align-items: center;
2025-04-15T08:07:18.2275076Z       justify-content: center;
2025-04-15T08:07:18.2275203Z       color: var(--accent);
2025-04-15T08:07:18.2275314Z     }
2025-04-15T08:07:18.2275319Z 
2025-04-15T08:07:18.2275461Z     body.netdata-splash .error {
2025-04-15T08:07:18.2275583Z       color: #DB162F;
2025-04-15T08:07:18.2275813Z     }
2025-04-15T08:07:18.2275820Z 
2025-04-15T08:07:18.2275991Z     body.netdata-splash .loading-message {
2025-04-15T08:07:18.2276297Z       display: none;
2025-04-15T08:07:18.2276405Z     }
2025-04-15T08:07:18.2276420Z 
2025-04-15T08:07:18.2276559Z     body.netdata-splash h1 {
2025-04-15T08:07:18.2276679Z       font-size: 36px;
2025-04-15T08:07:18.2276806Z       margin-top: 8px;
2025-04-15T08:07:18.2276933Z       margin-bottom: 8px;
2025-04-15T08:07:18.2277070Z       color: var(--text-light);
2025-04-15T08:07:18.2277193Z       filter: blur(0.6px);
2025-04-15T08:07:18.2277298Z     }
2025-04-15T08:07:18.2277304Z 
2025-04-15T08:07:18.2277444Z     body.netdata-splash h2 {
2025-04-15T08:07:18.2277567Z       font-size: 16px;
2025-04-15T08:07:18.2277675Z     }
2025-04-15T08:07:18.2277680Z 
2025-04-15T08:07:18.2277820Z     body.netdata-splash h4 {
2025-04-15T08:07:18.2277937Z       font-size: 12px;
2025-04-15T08:07:18.2278072Z       margin-bottom: 12px;
2025-04-15T08:07:18.2278201Z       margin-top: 8px;
2025-04-15T08:07:18.2278304Z     }
2025-04-15T08:07:18.2278309Z 
2025-04-15T08:07:18.2278444Z     body.netdata-splash a:link,
2025-04-15T08:07:18.2278597Z     body.netdata-splash a:visited,
2025-04-15T08:07:18.2278739Z     body.netdata-splash a:active {
2025-04-15T08:07:18.2278871Z       text-decoration: none;
2025-04-15T08:07:18.2279004Z       color: var(--primary);
2025-04-15T08:07:18.2279109Z     }
2025-04-15T08:07:18.2279114Z 
2025-04-15T08:07:18.2279262Z     body.netdata-splash a:hover {
2025-04-15T08:07:18.2279389Z       color: var(--highlight);
2025-04-15T08:07:18.2279490Z     }
2025-04-15T08:07:18.2279502Z 
2025-04-15T08:07:18.2279646Z     body.netdata-splash canvas {
2025-04-15T08:07:18.2279762Z       display: block;
2025-04-15T08:07:18.2279872Z     }
2025-04-15T08:07:18.2279878Z 
2025-04-15T08:07:18.2280400Z     body.netdata-splash code {
2025-04-15T08:07:18.2280542Z       background: var(--code-bg);
2025-04-15T08:07:18.2280668Z       color: var(--highlight);
2025-04-15T08:07:18.2280817Z       border: 1px solid var(--border);
2025-04-15T08:07:18.2280951Z       border-radius: 2px;
2025-04-15T08:07:18.2281068Z       padding: 12px;
2025-04-15T08:07:18.2281197Z       line-break: anywhere;
2025-04-15T08:07:18.2281325Z       word-break: break-all;
2025-04-15T08:07:18.2281423Z     }
2025-04-15T08:07:18.2281438Z 
2025-04-15T08:07:18.2281593Z     body.netdata-splash .text-small {
2025-04-15T08:07:18.2281714Z       font-size: 12px;
2025-04-15T08:07:18.2281823Z     }
2025-04-15T08:07:18.2281828Z 
2025-04-15T08:07:18.2281965Z     body.netdata-splash .logo {
2025-04-15T08:07:18.2282237Z       filter: drop-shadow(2px 2px 32px rgba(255, 255, 255, 0.7)) blur(1px);
2025-04-15T08:07:18.2282351Z       opacity: 0.9;
2025-04-15T08:07:18.2282464Z       width: 150px;
2025-04-15T08:07:18.2282584Z       height: 150px;
2025-04-15T08:07:18.2282695Z     }
2025-04-15T08:07:18.2282700Z 
2025-04-15T08:07:18.2282877Z     body.netdata-splash .claim-message .logo {
2025-04-15T08:07:18.2282992Z       width: 100px;
2025-04-15T08:07:18.2283118Z       height: 100px;
2025-04-15T08:07:18.2283222Z     }
2025-04-15T08:07:18.2283227Z 
2025-04-15T08:07:18.2283367Z     body.netdata-splash .grid {
2025-04-15T08:07:18.2283488Z       display: grid;
2025-04-15T08:07:18.2283620Z       grid-column-gap: 16px;
2025-04-15T08:07:18.2283751Z       grid-row-gap: 16px;
2025-04-15T08:07:18.2283912Z       grid-template-columns: repeat(12, 1fr);
2025-04-15T08:07:18.2284064Z       grid-template-rows: repeat(12, 1fr);
2025-04-15T08:07:18.2284210Z       grid-auto-rows: min-content;
2025-04-15T08:07:18.2284311Z     }
2025-04-15T08:07:18.2284316Z 
2025-04-15T08:07:18.2284486Z     body.netdata-splash .grid-columns-10 {
2025-04-15T08:07:18.2284605Z       display: grid;
2025-04-15T08:07:18.2284743Z       grid-column-gap: 16px;
2025-04-15T08:07:18.2284870Z       grid-row-gap: 16px;
2025-04-15T08:07:18.2285041Z       grid-template-columns: repeat(10, 1fr);
2025-04-15T08:07:18.2285153Z     }
2025-04-15T08:07:18.2285158Z 
2025-04-15T08:07:18.2285466Z     body.netdata-splash .col-span-1 {
2025-04-15T08:07:18.2285609Z       grid-column: auto / span 1;
2025-04-15T08:07:18.2285716Z     }
2025-04-15T08:07:18.2285722Z 
2025-04-15T08:07:18.2285864Z     body.netdata-splash .col-span-2 {
2025-04-15T08:07:18.2286012Z       grid-column: auto / span 2;
2025-04-15T08:07:18.2286252Z     }
2025-04-15T08:07:18.2286258Z 
2025-04-15T08:07:18.2286416Z     body.netdata-splash .col-span-3 {
2025-04-15T08:07:18.2286549Z       grid-column: auto / span 3;
2025-04-15T08:07:18.2286663Z     }
2025-04-15T08:07:18.2286669Z 
2025-04-15T08:07:18.2286816Z     body.netdata-splash .col-span-4 {
2025-04-15T08:07:18.2286948Z       grid-column: auto / span 4;
2025-04-15T08:07:18.2287059Z     }
2025-04-15T08:07:18.2287065Z 
2025-04-15T08:07:18.2287209Z     body.netdata-splash .col-span-5 {
2025-04-15T08:07:18.2287350Z       grid-column: auto / span 5;
2025-04-15T08:07:18.2287454Z     }
2025-04-15T08:07:18.2287459Z 
2025-04-15T08:07:18.2287609Z     body.netdata-splash .col-span-6 {
2025-04-15T08:07:18.2287748Z       grid-column: auto / span 6;
2025-04-15T08:07:18.2287852Z     }
2025-04-15T08:07:18.2287857Z 
2025-04-15T08:07:18.2288010Z     body.netdata-splash .col-span-7 {
2025-04-15T08:07:18.2288140Z       grid-column: auto / span 7;
2025-04-15T08:07:18.2288250Z     }
2025-04-15T08:07:18.2288255Z 
2025-04-15T08:07:18.2288403Z     body.netdata-splash .col-span-8 {
2025-04-15T08:07:18.2288541Z       grid-column: auto / span 8;
2025-04-15T08:07:18.2288642Z     }
2025-04-15T08:07:18.2288647Z 
2025-04-15T08:07:18.2288789Z     body.netdata-splash .col-span-9 {
2025-04-15T08:07:18.2288928Z       grid-column: auto / span 9;
2025-04-15T08:07:18.2289030Z     }
2025-04-15T08:07:18.2289035Z 
2025-04-15T08:07:18.2289194Z     body.netdata-splash .col-span-10 {
2025-04-15T08:07:18.2289327Z       grid-column: auto / span 10;
2025-04-15T08:07:18.2289601Z     }
2025-04-15T08:07:18.2289613Z 
2025-04-15T08:07:18.2289772Z     body.netdata-splash .col-span-11 {
2025-04-15T08:07:18.2289905Z       grid-column: auto / span 11;
2025-04-15T08:07:18.2290018Z     }
2025-04-15T08:07:18.2290024Z 
2025-04-15T08:07:18.2290171Z     body.netdata-splash .col-span-12 {
2025-04-15T08:07:18.2290308Z       grid-column: auto / span 12;
2025-04-15T08:07:18.2290412Z     }
2025-04-15T08:07:18.2290417Z 
2025-04-15T08:07:18.2290561Z     body.netdata-splash .col-start-1 {
2025-04-15T08:07:18.2290704Z       grid-column-start: 1;
2025-04-15T08:07:18.2290814Z     }
2025-04-15T08:07:18.2290820Z 
2025-04-15T08:07:18.2290974Z     body.netdata-splash .col-start-2 {
2025-04-15T08:07:18.2291107Z       grid-column-start: 2;
2025-04-15T08:07:18.2291215Z     }
2025-04-15T08:07:18.2291221Z 
2025-04-15T08:07:18.2291370Z     body.netdata-splash .col-start-3 {
2025-04-15T08:07:18.2291498Z       grid-column-start: 3;
2025-04-15T08:07:18.2291607Z     }
2025-04-15T08:07:18.2291612Z 
2025-04-15T08:07:18.2291766Z     body.netdata-splash .col-start-4 {
2025-04-15T08:07:18.2291900Z       grid-column-start: 4;
2025-04-15T08:07:18.2292002Z     }
2025-04-15T08:07:18.2292008Z 
2025-04-15T08:07:18.2292169Z     body.netdata-splash .col-start-5 {
2025-04-15T08:07:18.2292301Z       grid-column-start: 5;
2025-04-15T08:07:18.2292404Z     }
2025-04-15T08:07:18.2292411Z 
2025-04-15T08:07:18.2292561Z     body.netdata-splash .col-start-6 {
2025-04-15T08:07:18.2292691Z       grid-column-start: 6;
2025-04-15T08:07:18.2292803Z     }
2025-04-15T08:07:18.2292808Z 
2025-04-15T08:07:18.2292953Z     body.netdata-splash .col-start-7 {
2025-04-15T08:07:18.2293079Z       grid-column-start: 7;
2025-04-15T08:07:18.2293187Z     }
2025-04-15T08:07:18.2293192Z 
2025-04-15T08:07:18.2293339Z     body.netdata-splash .col-start-8 {
2025-04-15T08:07:18.2293468Z       grid-column-start: 8;
2025-04-15T08:07:18.2293571Z     }
2025-04-15T08:07:18.2293577Z 
2025-04-15T08:07:18.2293729Z     body.netdata-splash .col-start-9 {
2025-04-15T08:07:18.2293868Z       grid-column-start: 9;
2025-04-15T08:07:18.2293972Z     }
2025-04-15T08:07:18.2293977Z 
2025-04-15T08:07:18.2294136Z     body.netdata-splash .col-start-10 {
2025-04-15T08:07:18.2294451Z       grid-column-start: 10;
2025-04-15T08:07:18.2294565Z     }
2025-04-15T08:07:18.2294571Z 
2025-04-15T08:07:18.2294723Z     body.netdata-splash .col-start-12 {
2025-04-15T08:07:18.2294861Z       grid-column-start: 11;
2025-04-15T08:07:18.2294964Z     }
2025-04-15T08:07:18.2294970Z 
2025-04-15T08:07:18.2295122Z     body.netdata-splash .col-start-12 {
2025-04-15T08:07:18.2295258Z       grid-column-start: 12;
2025-04-15T08:07:18.2295363Z     }
2025-04-15T08:07:18.2295368Z 
2025-04-15T08:07:18.2295527Z     @media screen and (max-width: 1280px) {
2025-04-15T08:07:18.2295702Z       body.netdata-splash .md-grid-columns-12 {
2025-04-15T08:07:18.2295824Z         display: grid;
2025-04-15T08:07:18.2295963Z         grid-column-gap: 16px;
2025-04-15T08:07:18.2296240Z         grid-row-gap: 16px;
2025-04-15T08:07:18.2296424Z         grid-template-columns: repeat(12, 1fr);
2025-04-15T08:07:18.2296533Z       }
2025-04-15T08:07:18.2296539Z 
2025-04-15T08:07:18.2296715Z       body.netdata-splash .md-col-span-1 {
2025-04-15T08:07:18.2296851Z         grid-column: auto / span 1;
2025-04-15T08:07:18.2296955Z       }
2025-04-15T08:07:18.2296961Z 
2025-04-15T08:07:18.2297122Z       body.netdata-splash .md-col-span-2 {
2025-04-15T08:07:18.2297255Z         grid-column: auto / span 2;
2025-04-15T08:07:18.2297365Z       }
2025-04-15T08:07:18.2297371Z 
2025-04-15T08:07:18.2297522Z       body.netdata-splash .md-col-span-3 {
2025-04-15T08:07:18.2297655Z         grid-column: auto / span 3;
2025-04-15T08:07:18.2297758Z       }
2025-04-15T08:07:18.2297763Z 
2025-04-15T08:07:18.2297917Z       body.netdata-splash .md-col-span-4 {
2025-04-15T08:07:18.2298052Z         grid-column: auto / span 4;
2025-04-15T08:07:18.2298159Z       }
2025-04-15T08:07:18.2298165Z 
2025-04-15T08:07:18.2298325Z       body.netdata-splash .md-col-span-5 {
2025-04-15T08:07:18.2298629Z         grid-column: auto / span 5;
2025-04-15T08:07:18.2298743Z       }
2025-04-15T08:07:18.2298749Z 
2025-04-15T08:07:18.2298901Z       body.netdata-splash .md-col-span-6 {
2025-04-15T08:07:18.2299037Z         grid-column: auto / span 6;
2025-04-15T08:07:18.2299147Z       }
2025-04-15T08:07:18.2299152Z 
2025-04-15T08:07:18.2299305Z       body.netdata-splash .md-col-span-7 {
2025-04-15T08:07:18.2299441Z         grid-column: auto / span 7;
2025-04-15T08:07:18.2299545Z       }
2025-04-15T08:07:18.2299551Z 
2025-04-15T08:07:18.2299713Z       body.netdata-splash .md-col-span-8 {
2025-04-15T08:07:18.2299844Z         grid-column: auto / span 8;
2025-04-15T08:07:18.2299947Z       }
2025-04-15T08:07:18.2299954Z 
2025-04-15T08:07:18.2300115Z       body.netdata-splash .md-col-span-9 {
2025-04-15T08:07:18.2300248Z         grid-column: auto / span 9;
2025-04-15T08:07:18.2300358Z       }
2025-04-15T08:07:18.2300365Z 
2025-04-15T08:07:18.2300523Z       body.netdata-splash .md-col-span-10 {
2025-04-15T08:07:18.2300666Z         grid-column: auto / span 10;
2025-04-15T08:07:18.2300778Z       }
2025-04-15T08:07:18.2300783Z 
2025-04-15T08:07:18.2300937Z       body.netdata-splash .md-col-span-11 {
2025-04-15T08:07:18.2301086Z         grid-column: auto / span 11;
2025-04-15T08:07:18.2301194Z       }
2025-04-15T08:07:18.2301200Z 
2025-04-15T08:07:18.2301358Z       body.netdata-splash .md-col-span-12 {
2025-04-15T08:07:18.2301489Z         grid-column: auto / span 12;
2025-04-15T08:07:18.2301596Z       }
2025-04-15T08:07:18.2301705Z     }
2025-04-15T08:07:18.2301710Z 
2025-04-15T08:07:18.2301858Z     body.netdata-splash .row-span-1 {
2025-04-15T08:07:18.2301989Z       grid-row: auto / span 1;
2025-04-15T08:07:18.2302090Z     }
2025-04-15T08:07:18.2302095Z 
2025-04-15T08:07:18.2302255Z     body.netdata-splash .row-span-2 {
2025-04-15T08:07:18.2302377Z       grid-row: auto / span 2;
2025-04-15T08:07:18.2302481Z     }
2025-04-15T08:07:18.2302487Z 
2025-04-15T08:07:18.2302642Z     body.netdata-splash .row-span-3 {
2025-04-15T08:07:18.2302777Z       grid-row: auto / span 3;
2025-04-15T08:07:18.2302884Z     }
2025-04-15T08:07:18.2302889Z 
2025-04-15T08:07:18.2303039Z     body.netdata-splash .row-span-4 {
2025-04-15T08:07:18.2303319Z       grid-row: auto / span 4;
2025-04-15T08:07:18.2303435Z     }
2025-04-15T08:07:18.2303441Z 
2025-04-15T08:07:18.2303590Z     body.netdata-splash .row-span-5 {
2025-04-15T08:07:18.2303723Z       grid-row: auto / span 5;
2025-04-15T08:07:18.2303828Z     }
2025-04-15T08:07:18.2303834Z 
2025-04-15T08:07:18.2303986Z     body.netdata-splash .row-span-6 {
2025-04-15T08:07:18.2304115Z       grid-row: auto / span 6;
2025-04-15T08:07:18.2304218Z     }
2025-04-15T08:07:18.2304224Z 
2025-04-15T08:07:18.2304378Z     body.netdata-splash .row-span-7 {
2025-04-15T08:07:18.2304502Z       grid-row: auto / span 7;
2025-04-15T08:07:18.2304611Z     }
2025-04-15T08:07:18.2304617Z 
2025-04-15T08:07:18.2304763Z     body.netdata-splash .row-span-8 {
2025-04-15T08:07:18.2304892Z       grid-row: auto / span 8;
2025-04-15T08:07:18.2305002Z     }
2025-04-15T08:07:18.2305008Z 
2025-04-15T08:07:18.2305157Z     body.netdata-splash .row-span-9 {
2025-04-15T08:07:18.2305289Z       grid-row: auto / span 9;
2025-04-15T08:07:18.2305402Z     }
2025-04-15T08:07:18.2305409Z 
2025-04-15T08:07:18.2305573Z     body.netdata-splash .row-span-10 {
2025-04-15T08:07:18.2305702Z       grid-row: auto / span 10;
2025-04-15T08:07:18.2305807Z     }
2025-04-15T08:07:18.2305813Z 
2025-04-15T08:07:18.2305965Z     body.netdata-splash .row-span-11 {
2025-04-15T08:07:18.2306248Z       grid-row: auto / span 11;
2025-04-15T08:07:18.2306366Z     }
2025-04-15T08:07:18.2306372Z 
2025-04-15T08:07:18.2306521Z     body.netdata-splash .row-span-12 {
2025-04-15T08:07:18.2306650Z       grid-row: auto / span 12;
2025-04-15T08:07:18.2306755Z     }
2025-04-15T08:07:18.2306760Z 
2025-04-15T08:07:18.2306902Z     body.netdata-splash .relative {
2025-04-15T08:07:18.2307032Z       position: relative;
2025-04-15T08:07:18.2307137Z     }
2025-04-15T08:07:18.2307143Z 
2025-04-15T08:07:18.2307470Z     body.netdata-splash .absolute {
2025-04-15T08:07:18.2307601Z       position: absolute;
2025-04-15T08:07:18.2307712Z     }
2025-04-15T08:07:18.2307718Z 
2025-04-15T08:07:18.2307868Z     body.netdata-splash .index-10 {
2025-04-15T08:07:18.2307981Z       z-index: 10;
2025-04-15T08:07:18.2308090Z     }
2025-04-15T08:07:18.2308095Z 
2025-04-15T08:07:18.2308236Z     body.netdata-splash .m-auto {
2025-04-15T08:07:18.2308356Z       margin: auto;
2025-04-15T08:07:18.2308456Z     }
2025-04-15T08:07:18.2308461Z 
2025-04-15T08:07:18.2308610Z     body.netdata-splash .full-h {
2025-04-15T08:07:18.2308723Z       height: 100%;
2025-04-15T08:07:18.2308827Z     }
2025-04-15T08:07:18.2308832Z 
2025-04-15T08:07:18.2308976Z     body.netdata-splash .flex {
2025-04-15T08:07:18.2309090Z       display: flex;
2025-04-15T08:07:18.2309197Z     }
2025-04-15T08:07:18.2309203Z 
2025-04-15T08:07:18.2309344Z     body.netdata-splash .flex-col {
2025-04-15T08:07:18.2309481Z       flex-direction: column;
2025-04-15T08:07:18.2309598Z     }
2025-04-15T08:07:18.2309604Z 
2025-04-15T08:07:18.2309762Z     body.netdata-splash .space-between {
2025-04-15T08:07:18.2309914Z       justify-content: space-between;
2025-04-15T08:07:18.2310025Z     }
2025-04-15T08:07:18.2310031Z 
2025-04-15T08:07:18.2310190Z     body.netdata-splash .align-center {
2025-04-15T08:07:18.2310316Z       align-items: center;
2025-04-15T08:07:18.2310420Z     }
2025-04-15T08:07:18.2310425Z 
2025-04-15T08:07:18.2310576Z     body.netdata-splash .container {
2025-04-15T08:07:18.2310709Z       background: var(--main-bg);
2025-04-15T08:07:18.2310829Z       height: 100vh;
2025-04-15T08:07:18.2310944Z       column-gap: 0;
2025-04-15T08:07:18.2311050Z     }
2025-04-15T08:07:18.2311057Z 
2025-04-15T08:07:18.2311196Z     body.netdata-splash .frame {
2025-04-15T08:07:18.2311308Z       height: 100vh;
2025-04-15T08:07:18.2311418Z     }
2025-04-15T08:07:18.2311424Z 
2025-04-15T08:07:18.2311589Z     body.netdata-splash .light-beam:after {
2025-04-15T08:07:18.2311710Z       content: "";
2025-04-15T08:07:18.2311843Z       position: absolute;
2025-04-15T08:07:18.2311952Z       top: 0;
2025-04-15T08:07:18.2312070Z       bottom: 0;
2025-04-15T08:07:18.2312179Z       left: 0;
2025-04-15T08:07:18.2312445Z       width: 1px;
2025-04-15T08:07:18.2312651Z       box-shadow: 20px 0px 110px 55px rgb(0 255 100 / 10%);
2025-04-15T08:07:18.2312757Z     }
2025-04-15T08:07:18.2312771Z 
2025-04-15T08:07:18.2312919Z     body.netdata-splash #setupGrid {
2025-04-15T08:07:18.2313037Z       opacity: 0.15;
2025-04-15T08:07:18.2313165Z       position: absolute;
2025-04-15T08:07:18.2313275Z       inset: 0;
2025-04-15T08:07:18.2313385Z     }
2025-04-15T08:07:18.2313392Z 
2025-04-15T08:07:18.2313546Z     body.netdata-splash #monitorGrid {
2025-04-15T08:07:18.2313662Z       opacity: 0.4;
2025-04-15T08:07:18.2313790Z       transition: 1s ease;
2025-04-15T08:07:18.2313890Z     }
2025-04-15T08:07:18.2313895Z 
2025-04-15T08:07:18.2314077Z     body.netdata-splash #monitorGrid.hovered {
2025-04-15T08:07:18.2314180Z       opacity: 0.7;
2025-04-15T08:07:18.2314292Z     }
2025-04-15T08:07:18.2314298Z 
2025-04-15T08:07:18.2314450Z     body.netdata-splash #sphereContainer {
2025-04-15T08:07:18.2314571Z       height: calc(100vh);
2025-04-15T08:07:18.2314698Z       position: relative;
2025-04-15T08:07:18.2314799Z     }
2025-04-15T08:07:18.2314805Z 
2025-04-15T08:07:18.2314965Z     body.netdata-splash #sphereContainer h4 {
2025-04-15T08:07:18.2315076Z       display: none;
2025-04-15T08:07:18.2315173Z     }
2025-04-15T08:07:18.2315178Z 
2025-04-15T08:07:18.2315327Z     body.netdata-splash .setup {
2025-04-15T08:07:18.2315433Z       z-index: 10;
2025-04-15T08:07:18.2315558Z       position: relative;
2025-04-15T08:07:18.2315708Z       box-shadow: 20px 0px 160px 5px #012f13c2;
2025-04-15T08:07:18.2315860Z       background: linear-gradient(90deg,
2025-04-15T08:07:18.2315975Z           rgba(0, 0, 0, 1) 0%,
2025-04-15T08:07:18.2316246Z           rgb(0 19 7 / 76%) 100%);
2025-04-15T08:07:18.2316355Z     }
2025-04-15T08:07:18.2316362Z 
2025-04-15T08:07:18.2316774Z     body.netdata-splash .setup>.stats {
2025-04-15T08:07:18.2316896Z       padding: 16px;
2025-04-15T08:07:18.2317009Z       overflow: auto;
2025-04-15T08:07:18.2317132Z       height: 100%;
2025-04-15T08:07:18.2317259Z       position: absolute;
2025-04-15T08:07:18.2317370Z       top: 65px;
2025-04-15T08:07:18.2317480Z       left: 0;
2025-04-15T08:07:18.2317584Z       right: 0;
2025-04-15T08:07:18.2317686Z       bottom: 0;
2025-04-15T08:07:18.2317789Z     }
2025-04-15T08:07:18.2317794Z 
2025-04-15T08:07:18.2317948Z     body.netdata-splash .setup .header {
2025-04-15T08:07:18.2318069Z       position: sticky;
2025-04-15T08:07:18.2318169Z       top: 0;
2025-04-15T08:07:18.2318298Z       padding: 8px 16px;
2025-04-15T08:07:18.2318401Z       margin: 0;
2025-04-15T08:07:18.2318534Z       backdrop-filter: blur(8px);
2025-04-15T08:07:18.2318669Z       background: rgba(0, 0, 0, 0.1);
2025-04-15T08:07:18.2318833Z       /* border-bottom: 1px solid var(--border); */
2025-04-15T08:07:18.2318951Z       display: flex;
2025-04-15T08:07:18.2319084Z       align-items: center;
2025-04-15T08:07:18.2319227Z       justify-content: space-between;
2025-04-15T08:07:18.2319332Z     }
2025-04-15T08:07:18.2319345Z 
2025-04-15T08:07:18.2319484Z     body.netdata-splash .header .title {
2025-04-15T08:07:18.2319596Z       display: flex;
2025-04-15T08:07:18.2319712Z       align-items: center;
2025-04-15T08:07:18.2319822Z       gap: 8px;
2025-04-15T08:07:18.2319918Z     }
2025-04-15T08:07:18.2319924Z 
2025-04-15T08:07:18.2320059Z     body.netdata-splash .header .logo {
2025-04-15T08:07:18.2320172Z       width: 32px;
2025-04-15T08:07:18.2320278Z       height: auto;
2025-04-15T08:07:18.2320380Z     }
2025-04-15T08:07:18.2320385Z 
2025-04-15T08:07:18.2320534Z     body.netdata-splash .splash-message {
2025-04-15T08:07:18.2320651Z       position: absolute;
2025-04-15T08:07:18.2320757Z       inset: 0;
2025-04-15T08:07:18.2320864Z       margin: auto;
2025-04-15T08:07:18.2320978Z       display: flex;
2025-04-15T08:07:18.2321097Z       align-items: center;
2025-04-15T08:07:18.2321228Z       justify-content: center;
2025-04-15T08:07:18.2321356Z       flex-direction: column;
2025-04-15T08:07:18.2321635Z       overflow-y: auto;
2025-04-15T08:07:18.2321744Z     }
2025-04-15T08:07:18.2321750Z 
2025-04-15T08:07:18.2321903Z     body.netdata-splash .splash-message p {
2025-04-15T08:07:18.2322019Z       margin-top: 0;
2025-04-15T08:07:18.2322141Z       margin-bottom: 24px;
2025-04-15T08:07:18.2322261Z       color: var(--text-light);
2025-04-15T08:07:18.2322378Z       filter: blur(0.6px);
2025-04-15T08:07:18.2322476Z     }
2025-04-15T08:07:18.2322481Z 
2025-04-15T08:07:18.2322621Z     body.netdata-splash .tagline {
2025-04-15T08:07:18.2322740Z       position: absolute;
2025-04-15T08:07:18.2322848Z       bottom: 24px;
2025-04-15T08:07:18.2322967Z       font-size: 12px;
2025-04-15T08:07:18.2323085Z       color: var(--text-light);
2025-04-15T08:07:18.2323187Z     }
2025-04-15T08:07:18.2323193Z 
2025-04-15T08:07:18.2323332Z     body.netdata-splash .skip-link {
2025-04-15T08:07:18.2323462Z       font-size: 12px;
2025-04-15T08:07:18.2323585Z       color: var(--text-light);
2025-04-15T08:07:18.2323658Z       text-align: center;
2025-04-15T08:07:18.2323727Z     }
2025-04-15T08:07:18.2323731Z 
2025-04-15T08:07:18.2323823Z     body.netdata-splash .license-link {
2025-04-15T08:07:18.2323901Z       padding: 0 16px 4px;
2025-04-15T08:07:18.2323969Z       font-size: 12px;
2025-04-15T08:07:18.2324044Z       color: var(--text-light);
2025-04-15T08:07:18.2324107Z     }
2025-04-15T08:07:18.2324110Z 
2025-04-15T08:07:18.2324191Z     body.netdata-splash .button {
2025-04-15T08:07:18.2324267Z       padding: 8px 12px;
2025-04-15T08:07:18.2324340Z       border-radius: 2px;
2025-04-15T08:07:18.2324411Z       font-size: 16px;
2025-04-15T08:07:18.2324480Z       min-width: 88px;
2025-04-15T08:07:18.2324549Z       text-align: center;
2025-04-15T08:07:18.2324621Z       cursor: pointer;
2025-04-15T08:07:18.2324696Z       transition: 250ms ease;
2025-04-15T08:07:18.2324766Z       border: none;
2025-04-15T08:07:18.2324939Z     }
2025-04-15T08:07:18.2324942Z 
2025-04-15T08:07:18.2325036Z     body.netdata-splash .button-primary {
2025-04-15T08:07:18.2325126Z       background: var(--primary);
2025-04-15T08:07:18.2325198Z       color: var(--text-light);
2025-04-15T08:07:18.2325261Z     }
2025-04-15T08:07:18.2325264Z 
2025-04-15T08:07:18.2325367Z     body.netdata-splash .button-primary:hover {
2025-04-15T08:07:18.2325451Z       background: var(--highlight);
2025-04-15T08:07:18.2325512Z     }
2025-04-15T08:07:18.2325516Z 
2025-04-15T08:07:18.2325599Z     body.netdata-splash a.button {
2025-04-15T08:07:18.2325682Z       color: var(--text-dark);
2025-04-15T08:07:18.2325745Z     }
2025-04-15T08:07:18.2325748Z 
2025-04-15T08:07:18.2325840Z     body.netdata-splash .button-ghost {
2025-04-15T08:07:18.2325918Z       background: transparent;
2025-04-15T08:07:18.2325998Z       color: var(--primary);
2025-04-15T08:07:18.2326215Z     }
2025-04-15T08:07:18.2326220Z 
2025-04-15T08:07:18.2326325Z     body.netdata-splash .button-ghost:hover {
2025-04-15T08:07:18.2326407Z       color: var(--highlight);
2025-04-15T08:07:18.2326467Z     }
2025-04-15T08:07:18.2326470Z 
2025-04-15T08:07:18.2326562Z     body.netdata-splash .clear-button {
2025-04-15T08:07:18.2326631Z       font-size: 12px;
2025-04-15T08:07:18.2326700Z       padding: 0;
2025-04-15T08:07:18.2326771Z       min-width: auto;
2025-04-15T08:07:18.2326829Z     }
2025-04-15T08:07:18.2326832Z 
2025-04-15T08:07:18.2326914Z     body.netdata-splash .tabs {
2025-04-15T08:07:18.2326982Z       display: flex;
2025-04-15T08:07:18.2327061Z       align-items: center;
2025-04-15T08:07:18.2327137Z       justify-content: center;
2025-04-15T08:07:18.2327227Z       border-top: 1px solid var(--border);
2025-04-15T08:07:18.2327312Z       backdrop-filter: blur(4px);
2025-04-15T08:07:18.2327373Z     }
2025-04-15T08:07:18.2327376Z 
2025-04-15T08:07:18.2327466Z     body.netdata-splash button.tab {
2025-04-15T08:07:18.2327550Z       background: rgba(0, 0, 0, 0.2);
2025-04-15T08:07:18.2327623Z       border: none;
2025-04-15T08:07:18.2327703Z       color: var(--menu-item);
2025-04-15T08:07:18.2327779Z       padding: 8px 0 24px;
2025-04-15T08:07:18.2327975Z       border-left: 0;
2025-04-15T08:07:18.2328048Z       cursor: pointer;
2025-04-15T08:07:18.2328128Z       backdrop-filter: blur(2px);
2025-04-15T08:07:18.2328201Z       width: 100%;
2025-04-15T08:07:18.2328272Z       font-size: 12px;
2025-04-15T08:07:18.2328345Z       display: flex;
2025-04-15T08:07:18.2328422Z       flex-direction: column;
2025-04-15T08:07:18.2328499Z       align-items: center;
2025-04-15T08:07:18.2328565Z       gap: 8px;
2025-04-15T08:07:18.2328627Z     }
2025-04-15T08:07:18.2328631Z 
2025-04-15T08:07:18.2328744Z     body.netdata-splash button.tab:first-child {
2025-04-15T08:07:18.2328844Z       /* border-left: 1px solid var(--primary); */
2025-04-15T08:07:18.2328909Z     }
2025-04-15T08:07:18.2328912Z 
2025-04-15T08:07:18.2329039Z     body.netdata-splash button.tab:not(.active):hover {
2025-04-15T08:07:18.2329126Z       color: var(--tab-hover);
2025-04-15T08:07:18.2329201Z       transition: 100ms ease;
2025-04-15T08:07:18.2329263Z     }
2025-04-15T08:07:18.2329266Z 
2025-04-15T08:07:18.2329374Z     body.netdata-splash button.tab.active {
2025-04-15T08:07:18.2329452Z       background: transparent;
2025-04-15T08:07:18.2329553Z       /* border-bottom: 1px solid transparent; */
2025-04-15T08:07:18.2329630Z       backdrop-filter: blur(0);
2025-04-15T08:07:18.2329704Z       color: var(--tab-active);
2025-04-15T08:07:18.2329775Z       cursor: default;
2025-04-15T08:07:18.2329838Z     }
2025-04-15T08:07:18.2329841Z 
2025-04-15T08:07:18.2329929Z     body.netdata-splash .tab-icon {
2025-04-15T08:07:18.2329997Z       width: 24px;
2025-04-15T08:07:18.2330068Z       height: 24px;
2025-04-15T08:07:18.2330126Z     }
2025-04-15T08:07:18.2330129Z 
2025-04-15T08:07:18.2330215Z     body.netdata-splash .tab-icon svg {
2025-04-15T08:07:18.2330287Z       height: 100%;
2025-04-15T08:07:18.2330353Z       width: 100%;
2025-04-15T08:07:18.2330535Z     }
2025-04-15T08:07:18.2330538Z 
2025-04-15T08:07:18.2330640Z     body.netdata-splash .tab-icon svg path {
2025-04-15T08:07:18.2330717Z       fill: var(--menu-item);
2025-04-15T08:07:18.2330800Z       transition: 100ms ease;
2025-04-15T08:07:18.2330862Z     }
2025-04-15T08:07:18.2330866Z 
2025-04-15T08:07:18.2331000Z     body.netdata-splash .tab.active .tab-icon svg path {
2025-04-15T08:07:18.2331076Z       fill: var(--tab-active);
2025-04-15T08:07:18.2331143Z     }
2025-04-15T08:07:18.2331147Z 
2025-04-15T08:07:18.2331241Z     button.tab:not(.active):hover svg path {
2025-04-15T08:07:18.2331316Z       fill: var(--tab-hover);
2025-04-15T08:07:18.2331381Z     }
2025-04-15T08:07:18.2331385Z 
2025-04-15T08:07:18.2331472Z     body.netdata-splash .panel {
2025-04-15T08:07:18.2331560Z       background: var(--panel-bg);
2025-04-15T08:07:18.2331632Z       padding: 16px;
2025-04-15T08:07:18.2331710Z       border-radius: 4px;
2025-04-15T08:07:18.2331799Z       border: 1px solid var(--border);
2025-04-15T08:07:18.2331883Z       backdrop-filter: blur(0px);
2025-04-15T08:07:18.2331949Z     }
2025-04-15T08:07:18.2331952Z 
2025-04-15T08:07:18.2332041Z     body.netdata-splash .panel-tab {
2025-04-15T08:07:18.2332128Z       border-radius: 0 0 4px 4px;
2025-04-15T08:07:18.2332197Z       border-top: 0;
2025-04-15T08:07:18.2332289Z       border-left: 1px solid var(--primary);
2025-04-15T08:07:18.2332388Z       border-bottom: 1px solid var(--primary);
2025-04-15T08:07:18.2332482Z       border-right: 1px solid var(--primary);
2025-04-15T08:07:18.2332561Z       padding: 4px 24px;
2025-04-15T08:07:18.2332629Z       display: none;
2025-04-15T08:07:18.2332694Z       height: 70%;
2025-04-15T08:07:18.2332771Z       overflow: auto;
2025-04-15T08:07:18.2332832Z     }
2025-04-15T08:07:18.2332836Z 
2025-04-15T08:07:18.2332923Z     body.netdata-splash .data-tab {
2025-04-15T08:07:18.2332994Z       display: block;
2025-04-15T08:07:18.2333065Z       opacity: 0;
2025-04-15T08:07:18.2333140Z       transition: 800ms ease;
2025-04-15T08:07:18.2333222Z       pointer-events: none;
2025-04-15T08:07:18.2333288Z     }
2025-04-15T08:07:18.2333291Z 
2025-04-15T08:07:18.2333387Z     body.netdata-splash .data-tab.active {
2025-04-15T08:07:18.2333543Z       opacity: 1;
2025-04-15T08:07:18.2333623Z       pointer-events: all;
2025-04-15T08:07:18.2333684Z     }
2025-04-15T08:07:18.2333688Z 
2025-04-15T08:07:18.2333793Z     body.netdata-splash .data-tab-container {
2025-04-15T08:07:18.2333869Z       position: absolute;
2025-04-15T08:07:18.2333939Z       left: 0;
2025-04-15T08:07:18.2334003Z       right: 0;
2025-04-15T08:07:18.2334074Z       top: 45%;
2025-04-15T08:07:18.2334144Z       /* height: 40vh; */
2025-04-15T08:07:18.2334207Z     }
2025-04-15T08:07:18.2334210Z 
2025-04-15T08:07:18.2334310Z     body.netdata-splash .system-container {
2025-04-15T08:07:18.2334379Z       overflow: auto;
2025-04-15T08:07:18.2334464Z       height: calc(100% - 330px);
2025-04-15T08:07:18.2334537Z       padding: 0 24px 24px;
2025-04-15T08:07:18.2334607Z       margin: 0 -24px;
2025-04-15T08:07:18.2334736Z       scrollbar-color: var(--scrollbar-thumb) #293030;
2025-04-15T08:07:18.2334814Z       scrollbar-width: thin;
2025-04-15T08:07:18.2334879Z     }
2025-04-15T08:07:18.2334888Z 
2025-04-15T08:07:18.2335022Z     body.netdata-splash .data-tab-container .system>div {
2025-04-15T08:07:18.2335095Z       display: flex;
2025-04-15T08:07:18.2335175Z       /* margin-bottom: 24px; */
2025-04-15T08:07:18.2335264Z       /* backdrop-filter: blur(1px); */
2025-04-15T08:07:18.2335337Z       height: auto;
2025-04-15T08:07:18.2335408Z       min-height: 40px;
2025-04-15T08:07:18.2335485Z       overflow: hidden;
2025-04-15T08:07:18.2335548Z     }
2025-04-15T08:07:18.2335551Z 
2025-04-15T08:07:18.2335702Z     body.netdata-splash .data-tab-container .system .key-value {
2025-04-15T08:07:18.2335783Z       flex-direction: column;
2025-04-15T08:07:18.2335850Z       gap: 8px;
2025-04-15T08:07:18.2335934Z       align-items: flex-start;
2025-04-15T08:07:18.2336013Z       justify-content: start;
2025-04-15T08:07:18.2336296Z       width: 100%;
2025-04-15T08:07:18.2336365Z       padding: 0;
2025-04-15T08:07:18.2336427Z     }
2025-04-15T08:07:18.2336430Z 
2025-04-15T08:07:18.2336654Z     body.netdata-splash .data-tab-container .system .key-value span:nth-child(1) {
2025-04-15T08:07:18.2336731Z       padding: 8px 16px;
2025-04-15T08:07:18.2336830Z       border-bottom: 1px solid var(--border);
2025-04-15T08:07:18.2336898Z       width: 100%;
2025-04-15T08:07:18.2336966Z       color: #8eae9b;
2025-04-15T08:07:18.2337053Z       background: rgba(0, 0, 0, 0.8);
2025-04-15T08:07:18.2337115Z     }
2025-04-15T08:07:18.2337118Z 
2025-04-15T08:07:18.2337319Z     body.netdata-splash .data-tab-container .system .key-value span:nth-child(2) {
2025-04-15T08:07:18.2337396Z       /* font-size: 16px; */
2025-04-15T08:07:18.2337475Z       padding: 4px 16px 12px;
2025-04-15T08:07:18.2337550Z       text-align: left;
2025-04-15T08:07:18.2337622Z       color: var(--accent);
2025-04-15T08:07:18.2337689Z     }
2025-04-15T08:07:18.2337698Z 
2025-04-15T08:07:18.2337793Z     body.netdata-splash .panel:hover h4 {
2025-04-15T08:07:18.2337873Z       color: var(--highlight);
2025-04-15T08:07:18.2337935Z     }
2025-04-15T08:07:18.2337943Z 
2025-04-15T08:07:18.2338038Z     body.netdata-splash .hide-title h4 {
2025-04-15T08:07:18.2338116Z       visibility: hidden;
2025-04-15T08:07:18.2338177Z     }
2025-04-15T08:07:18.2338181Z 
2025-04-15T08:07:18.2338298Z     body.netdata-splash .no-key span:first-child {
2025-04-15T08:07:18.2338369Z       display: none;
2025-04-15T08:07:18.2338436Z     }
2025-04-15T08:07:18.2338439Z 
2025-04-15T08:07:18.2338529Z     body.netdata-splash .no-title h4 {
2025-04-15T08:07:18.2338600Z       display: none;
2025-04-15T08:07:18.2338667Z     }
2025-04-15T08:07:18.2338671Z 
2025-04-15T08:07:18.2338769Z     body.netdata-splash .absolute-center {
2025-04-15T08:07:18.2338851Z       position: absolute;
2025-04-15T08:07:18.2338918Z       inset: 0;
2025-04-15T08:07:18.2338989Z       margin: auto;
2025-04-15T08:07:18.2339051Z     }
2025-04-15T08:07:18.2339059Z 
2025-04-15T08:07:18.2339147Z     body.netdata-splash .align-end {
2025-04-15T08:07:18.2339232Z       align-content: flex-end;
2025-04-15T08:07:18.2339293Z     }
2025-04-15T08:07:18.2339409Z 
2025-04-15T08:07:18.2339524Z     body.netdata-splash .panel-tab .separator {
2025-04-15T08:07:18.2339619Z       border-bottom: 1px solid var(--border);
2025-04-15T08:07:18.2339696Z       margin: 8px -24px;
2025-04-15T08:07:18.2339761Z     }
2025-04-15T08:07:18.2339765Z 
2025-04-15T08:07:18.2339861Z     body.netdata-splash .section-image {
2025-04-15T08:07:18.2339932Z       height: 16px;
2025-04-15T08:07:18.2340000Z       width: 16px;
2025-04-15T08:07:18.2340066Z     }
2025-04-15T08:07:18.2340069Z 
2025-04-15T08:07:18.2340167Z     body.netdata-splash .section-image svg {
2025-04-15T08:07:18.2340234Z       width: 100%;
2025-04-15T08:07:18.2340305Z       height: 100%;
2025-04-15T08:07:18.2340367Z     }
2025-04-15T08:07:18.2340370Z 
2025-04-15T08:07:18.2340462Z     body.netdata-splash .section-title {
2025-04-15T08:07:18.2340537Z       font-size: 14px;
2025-04-15T08:07:18.2340613Z       font-weight: bold;
2025-04-15T08:07:18.2340684Z       margin: 8px 0;
2025-04-15T08:07:18.2340768Z       display: inline-block;
2025-04-15T08:07:18.2340831Z     }
2025-04-15T08:07:18.2340834Z 
2025-04-15T08:07:18.2340947Z     body.netdata-splash .sphere-stats-container {
2025-04-15T08:07:18.2341016Z       width: 80%;
2025-04-15T08:07:18.2341084Z       height: 100vh;
2025-04-15T08:07:18.2341151Z       display: flex;
2025-04-15T08:07:18.2341228Z       align-items: center;
2025-04-15T08:07:18.2341311Z       flex-direction: column;
2025-04-15T08:07:18.2341391Z       justify-content: center;
2025-04-15T08:07:18.2341463Z       margin-bottom: 10vmin;
2025-04-15T08:07:18.2341528Z       gap: 16px;
2025-04-15T08:07:18.2341593Z     }
2025-04-15T08:07:18.2341596Z 
2025-04-15T08:07:18.2341678Z     body.netdata-splash .key-value {
2025-04-15T08:07:18.2341763Z       font-size: var(--font-small);
2025-04-15T08:07:18.2341831Z       display: flex;
2025-04-15T08:07:18.2342028Z       justify-content: space-between;
2025-04-15T08:07:18.2342102Z       align-items: center;
2025-04-15T08:07:18.2342171Z       padding: 8px 0;
2025-04-15T08:07:18.2342260Z       color: var(--key-value-table);
2025-04-15T08:07:18.2342322Z     }
2025-04-15T08:07:18.2342325Z 
2025-04-15T08:07:18.2342408Z     /* .key-value:nth-child(2n) {
2025-04-15T08:07:18.2342485Z       background: var(--row-2n);
2025-04-15T08:07:18.2342547Z     } */
2025-04-15T08:07:18.2342642Z     body.netdata-splash .key-value:hover {
2025-04-15T08:07:18.2342716Z       color: var(--highlight);
2025-04-15T08:07:18.2342779Z     }
2025-04-15T08:07:18.2342783Z 
2025-04-15T08:07:18.2342901Z     body.netdata-splash .key-value span:nth-child(2) {
2025-04-15T08:07:18.2342977Z       text-align: right;
2025-04-15T08:07:18.2343037Z     }
2025-04-15T08:07:18.2343040Z 
2025-04-15T08:07:18.2343136Z     body.netdata-splash .metrics-container {
2025-04-15T08:07:18.2343217Z       position: absolute;
2025-04-15T08:07:18.2343287Z       top: 150px;
2025-04-15T08:07:18.2343353Z     }
2025-04-15T08:07:18.2343356Z 
2025-04-15T08:07:18.2343479Z     body.netdata-splash .collected-metrics .key-value {
2025-04-15T08:07:18.2343559Z       flex-direction: column;
2025-04-15T08:07:18.2343636Z       align-items: center;
2025-04-15T08:07:18.2343709Z       justify-content: center;
2025-04-15T08:07:18.2343783Z       background: none;
2025-04-15T08:07:18.2343853Z       text-align: center;
2025-04-15T08:07:18.2343940Z       text-transform: uppercase;
2025-04-15T08:07:18.2344008Z       font-size: 12px;
2025-04-15T08:07:18.2344077Z       color: var(--text);
2025-04-15T08:07:18.2344142Z     }
2025-04-15T08:07:18.2344145Z 
2025-04-15T08:07:18.2344325Z     body.netdata-splash .collected-metrics .key-value span:nth-child(2) {
2025-04-15T08:07:18.2344399Z       font-size: 7vmin;
2025-04-15T08:07:18.2344468Z       font-weight: 700;
2025-04-15T08:07:18.2344541Z       color: rgb(254 254 254 / 80%);
2025-04-15T08:07:18.2344616Z       filter: blur(0.8px);
2025-04-15T08:07:18.2344688Z       text-align: center;
2025-04-15T08:07:18.2344750Z     }
2025-04-15T08:07:18.2344753Z 
2025-04-15T08:07:18.2344840Z     #server .key-value span:first-child,
2025-04-15T08:07:18.2345063Z     #package .key-value span:first-child {
2025-04-15T08:07:18.2345136Z       display: none;
2025-04-15T08:07:18.2345195Z     }
2025-04-15T08:07:18.2345199Z 
2025-04-15T08:07:18.2345291Z     #server .key-value span:nth-child(2),
2025-04-15T08:07:18.2345381Z     #package .key-value span:nth-child(2) {
2025-04-15T08:07:18.2345457Z       font-size: 12px;
2025-04-15T08:07:18.2345532Z       color: var(--primary);
2025-04-15T08:07:18.2345609Z       font-family: monospace;
2025-04-15T08:07:18.2345673Z     }
2025-04-15T08:07:18.2345677Z 
2025-04-15T08:07:18.2345764Z     body.netdata-splash .head-summary {
2025-04-15T08:07:18.2345833Z       left: 0;
2025-04-15T08:07:18.2345901Z       padding: 16px;
2025-04-15T08:07:18.2345967Z       right: 0;
2025-04-15T08:07:18.2346035Z       display: flex;
2025-04-15T08:07:18.2346207Z       flex-direction: row;
2025-04-15T08:07:18.2346299Z       justify-content: space-between;
2025-04-15T08:07:18.2346358Z     }
2025-04-15T08:07:18.2346362Z 
2025-04-15T08:07:18.2346450Z     body.netdata-splash .module {
2025-04-15T08:07:18.2346532Z       border: 2px solid var(--border);
2025-04-15T08:07:18.2346605Z       border-radius: 16px;
2025-04-15T08:07:18.2346759Z       box-shadow: -1px 1px var(--main-bg), -2px 2px var(--main-bg),
2025-04-15T08:07:18.2346883Z         -3px 3px var(--border), -4px 4px 24px var(--border);
2025-04-15T08:07:18.2346969Z       height: var(--module-height);
2025-04-15T08:07:18.2347037Z       overflow: auto;
2025-04-15T08:07:18.2347154Z       scrollbar-color: var(--scrollbar-thumb) #293030;
2025-04-15T08:07:18.2347231Z       scrollbar-width: thin;
2025-04-15T08:07:18.2347314Z       /* backdrop-filter: blur(2px); */
2025-04-15T08:07:18.2347378Z     }
2025-04-15T08:07:18.2347383Z 
2025-04-15T08:07:18.2347470Z     body.netdata-splash .module-header {
2025-04-15T08:07:18.2347683Z       display: flex;
2025-04-15T08:07:18.2347753Z       align-items: center;
2025-04-15T08:07:18.2347820Z       gap: 4px;
2025-04-15T08:07:18.2347903Z       padding: 4px 16px;
2025-04-15T08:07:18.2347983Z       background: rgba(0, 0, 0, 0.8);
2025-04-15T08:07:18.2348071Z       border-radius: 16px 16px 0 0;
2025-04-15T08:07:18.2348137Z       color: #8eae9b;
2025-04-15T08:07:18.2348231Z       border-bottom: 1px solid var(--border);
2025-04-15T08:07:18.2348309Z       position: sticky;
2025-04-15T08:07:18.2348372Z       top: 0;
2025-04-15T08:07:18.2348435Z     }
2025-04-15T08:07:18.2348438Z 
2025-04-15T08:07:18.2348555Z     body.netdata-splash .module-header svg path {
2025-04-15T08:07:18.2348632Z       fill: var(--accent);
2025-04-15T08:07:18.2348693Z     }
2025-04-15T08:07:18.2348696Z 
2025-04-15T08:07:18.2348798Z     body.netdata-splash .modules-container {
2025-04-15T08:07:18.2348875Z       max-height: 100%;
2025-04-15T08:07:18.2348949Z       text-align: center;
2025-04-15T08:07:18.2349025Z       margin: auto;
2025-04-15T08:07:18.2349097Z       column-gap: 24px;
2025-04-15T08:07:18.2349157Z     }
2025-04-15T08:07:18.2349165Z 
2025-04-15T08:07:18.2349263Z     body.netdata-splash .module-content {
2025-04-15T08:07:18.2349336Z       padding: 4px 16px;
2025-04-15T08:07:18.2349402Z     }
2025-04-15T08:07:18.2349405Z 
2025-04-15T08:07:18.2349510Z     body.netdata-splash .db-metrics-container {
2025-04-15T08:07:18.2349582Z       display: flex;
2025-04-15T08:07:18.2349659Z       justify-content: center;
2025-04-15T08:07:18.2349725Z       gap: 16px;
2025-04-15T08:07:18.2349789Z     }
2025-04-15T08:07:18.2349793Z 
2025-04-15T08:07:18.2349887Z     body.netdata-splash .db-metrics-blocks {
2025-04-15T08:07:18.2349961Z       /* display: flex; */
2025-04-15T08:07:18.2350044Z       /* flex-direction: column; */
2025-04-15T08:07:18.2350121Z       /* align-items: center;
2025-04-15T08:07:18.2350197Z       justify-content: center;
2025-04-15T08:07:18.2350262Z       gap: 24px; */
2025-04-15T08:07:18.2350347Z       height: var(--module-height);
2025-04-15T08:07:18.2350418Z       width: 100%;
2025-04-15T08:07:18.2350483Z     }
2025-04-15T08:07:18.2350487Z 
2025-04-15T08:07:18.2350671Z     /* .db-metrics-block {
2025-04-15T08:07:18.2350743Z       display: flex;
2025-04-15T08:07:18.2350824Z       flex-direction: column;
2025-04-15T08:07:18.2350896Z       text-align: center;
2025-04-15T08:07:18.2350970Z       min-width: 15vmax;
2025-04-15T08:07:18.2351036Z       height: 150px;
2025-04-15T08:07:18.2351106Z       padding: 0 24px;
2025-04-15T08:07:18.2351173Z     } */
2025-04-15T08:07:18.2351313Z     body.netdata-splash .db-metrics-blocks .module-content {
2025-04-15T08:07:18.2351383Z       padding: 0;
2025-04-15T08:07:18.2351442Z     }
2025-04-15T08:07:18.2351446Z 
2025-04-15T08:07:18.2351543Z     /* .db-metrics-block:not(:last-child) {
2025-04-15T08:07:18.2351636Z       border-right: 1px solid var(--border);
2025-04-15T08:07:18.2351697Z     } */
2025-04-15T08:07:18.2351794Z     body.netdata-splash .db-metrics-title {
2025-04-15T08:07:18.2351871Z       font-size: 1.5vmin;
2025-04-15T08:07:18.2351936Z     }
2025-04-15T08:07:18.2351939Z 
2025-04-15T08:07:18.2352050Z     body.netdata-splash .db-metrics-block-title {
2025-04-15T08:07:18.2352128Z       font-size: 14px;
2025-04-15T08:07:18.2352204Z       padding: 8px 16px;
2025-04-15T08:07:18.2352273Z       z-index: 100;
2025-04-15T08:07:18.2352350Z       font-weight: bold;
2025-04-15T08:07:18.2352416Z       color: #fff;
2025-04-15T08:07:18.2352475Z     }
2025-04-15T08:07:18.2352484Z 
2025-04-15T08:07:18.2352587Z     body.netdata-splash .db-metrics .key-value {
2025-04-15T08:07:18.2352654Z       display: flex;
2025-04-15T08:07:18.2352732Z       flex-direction: column;
2025-04-15T08:07:18.2352809Z       align-items: flex-start;
2025-04-15T08:07:18.2352873Z     }
2025-04-15T08:07:18.2352876Z 
2025-04-15T08:07:18.2353030Z     body.netdata-splash .db-metrics .key-value span:nth-child(2) {
2025-04-15T08:07:18.2353100Z       font-size: 12px;
2025-04-15T08:07:18.2353177Z       color: var(--accent);
2025-04-15T08:07:18.2353338Z       filter: blur(0.5px);
2025-04-15T08:07:18.2353413Z       text-align: center;
2025-04-15T08:07:18.2353473Z     }
2025-04-15T08:07:18.2353476Z 
2025-04-15T08:07:18.2353575Z     body.netdata-splash .db-metrics {
2025-04-15T08:07:18.2353648Z       padding: 8px 16px;
2025-04-15T08:07:18.2353744Z       border-bottom: 1px solid var(--border);
2025-04-15T08:07:18.2353808Z     }
2025-04-15T08:07:18.2353812Z 
2025-04-15T08:07:18.2353896Z     body.netdata-splash .disk-stats {
2025-04-15T08:07:18.2353976Z       /* border-bottom: 0; */
2025-04-15T08:07:18.2354043Z       padding: 16px;
2025-04-15T08:07:18.2354103Z     }
2025-04-15T08:07:18.2354111Z 
2025-04-15T08:07:18.2354256Z     body.netdata-splash .module-content:last-child .disk-stats {
2025-04-15T08:07:18.2354335Z       padding-bottom: 112px;
2025-04-15T08:07:18.2354399Z     }
2025-04-15T08:07:18.2354402Z 
2025-04-15T08:07:18.2354500Z     body.netdata-splash .disk-max .key-value {
2025-04-15T08:07:18.2354580Z       flex-direction: row;
2025-04-15T08:07:18.2354654Z       font-size: 12px;
2025-04-15T08:07:18.2354738Z       justify-content: space-between;
2025-04-15T08:07:18.2354813Z       padding: 2px 0;
2025-04-15T08:07:18.2354882Z     }
2025-04-15T08:07:18.2354886Z 
2025-04-15T08:07:18.2355030Z     body.netdata-splash .disk-max .key-value span:nth-child(2) {
2025-04-15T08:07:18.2355100Z       font-size: 12px;
2025-04-15T08:07:18.2355172Z       display: flex;
2025-04-15T08:07:18.2355255Z       justify-content: space-between;
2025-04-15T08:07:18.2355321Z       width: 100%;
2025-04-15T08:07:18.2355386Z     }
2025-04-15T08:07:18.2355389Z 
2025-04-15T08:07:18.2355488Z     body.netdata-splash .disk-used .key-value {
2025-04-15T08:07:18.2355562Z       padding: 2px 0;
2025-04-15T08:07:18.2355621Z     }
2025-04-15T08:07:18.2355625Z 
2025-04-15T08:07:18.2355792Z     body.netdata-splash .disk-max .key-value span:nth-child(2):before {
2025-04-15T08:07:18.2355872Z       content: "Disk Size";
2025-04-15T08:07:18.2355931Z     }
2025-04-15T08:07:18.2355940Z 
2025-04-15T08:07:18.2356202Z     body.netdata-splash .disk-used .key-value span:nth-child(2):before {
2025-04-15T08:07:18.2356273Z       content: "Used ";
2025-04-15T08:07:18.2356453Z     }
2025-04-15T08:07:18.2356457Z 
2025-04-15T08:07:18.2356606Z     body.netdata-splash .disk-used .key-value span:nth-child(2) {
2025-04-15T08:07:18.2356675Z       font-size: 12px;
2025-04-15T08:07:18.2356748Z       display: flex;
2025-04-15T08:07:18.2356831Z       justify-content: space-between;
2025-04-15T08:07:18.2356899Z       width: 100%;
2025-04-15T08:07:18.2356959Z     }
2025-04-15T08:07:18.2356963Z 
2025-04-15T08:07:18.2357111Z     body.netdata-splash .db-metrics .key-value span:first-child {
2025-04-15T08:07:18.2357181Z       font-size: 12px;
2025-04-15T08:07:18.2357254Z       color: var(--text);
2025-04-15T08:07:18.2357317Z     }
2025-04-15T08:07:18.2357321Z 
2025-04-15T08:07:18.2357425Z     body.netdata-splash .percentage-container {
2025-04-15T08:07:18.2357492Z       width: 100%;
2025-04-15T08:07:18.2357575Z       background: transparent;
2025-04-15T08:07:18.2357661Z       border: 1px solid var(--primary);
2025-04-15T08:07:18.2357732Z       height: 16px;
2025-04-15T08:07:18.2357808Z       border-radius: 1px;
2025-04-15T08:07:18.2357886Z       position: relative;
2025-04-15T08:07:18.2357949Z     }
2025-04-15T08:07:18.2357952Z 
2025-04-15T08:07:18.2358052Z     body.netdata-splash .percentage-bar {
2025-04-15T08:07:18.2358125Z       background: #016a2b94;
2025-04-15T08:07:18.2358196Z       position: absolute;
2025-04-15T08:07:18.2358265Z       bottom: 0;
2025-04-15T08:07:18.2358328Z       top: 0;
2025-04-15T08:07:18.2358396Z       left: 0;
2025-04-15T08:07:18.2358477Z       backdrop-filter: blur(1px);
2025-04-15T08:07:18.2358536Z     }
2025-04-15T08:07:18.2358539Z 
2025-04-15T08:07:18.2358638Z     body.netdata-splash .percentage-text {
2025-04-15T08:07:18.2358709Z       position: absolute;
2025-04-15T08:07:18.2358783Z       font-size: 12px;
2025-04-15T08:07:18.2358844Z       top: 0;
2025-04-15T08:07:18.2359029Z       padding: 0 2px;
2025-04-15T08:07:18.2359106Z       color: var(--accent);
2025-04-15T08:07:18.2359166Z     }
2025-04-15T08:07:18.2359169Z 
2025-04-15T08:07:18.2359270Z     body.netdata-splash .data-tab-table {
2025-04-15T08:07:18.2359339Z       padding: 16px;
2025-04-15T08:07:18.2359409Z       width: 400px;
2025-04-15T08:07:18.2359488Z       height: var(--module-height);
2025-04-15T08:07:18.2359553Z       margin: auto;
2025-04-15T08:07:18.2359618Z     }
2025-04-15T08:07:18.2359621Z 
2025-04-15T08:07:18.2359722Z     body.netdata-splash .node-info-container {
2025-04-15T08:07:18.2359793Z       display: flex;
2025-04-15T08:07:18.2359866Z       flex-direction: column;
2025-04-15T08:07:18.2359929Z       width: 100%;
2025-04-15T08:07:18.2360007Z       justify-content: center;
2025-04-15T08:07:18.2360079Z       align-items: center;
2025-04-15T08:07:18.2360148Z       gap: 8px;
2025-04-15T08:07:18.2360208Z     }
2025-04-15T08:07:18.2360211Z 
2025-04-15T08:07:18.2360301Z     body.netdata-splash .node-info {
2025-04-15T08:07:18.2360373Z       display: flex;
2025-04-15T08:07:18.2360447Z       justify-content: center;
2025-04-15T08:07:18.2360517Z       width: 100%;
2025-04-15T08:07:18.2360586Z       gap: 8px;
2025-04-15T08:07:18.2360663Z       flex-direction: row;
2025-04-15T08:07:18.2360723Z     }
2025-04-15T08:07:18.2360726Z 
2025-04-15T08:07:18.2360843Z     body.netdata-splash .node-info-container .title {
2025-04-15T08:07:18.2360918Z       font-size: 12px;
2025-04-15T08:07:18.2360978Z     }
2025-04-15T08:07:18.2360982Z 
2025-04-15T08:07:18.2361084Z     body.netdata-splash .node-info .key-value {
2025-04-15T08:07:18.2361169Z       border: 1px solid var(--highlight);
2025-04-15T08:07:18.2361245Z       padding: 2px 8px;
2025-04-15T08:07:18.2361317Z       border-radius: 4px;
2025-04-15T08:07:18.2361388Z       font-size: 12px;
2025-04-15T08:07:18.2361474Z       color: var(--highlight);
2025-04-15T08:07:18.2361542Z       height: 20px;
2025-04-15T08:07:18.2361608Z     }
2025-04-15T08:07:18.2361612Z 
2025-04-15T08:07:18.2361770Z     body.netdata-splash .node-info .key-value span:first-child {
2025-04-15T08:07:18.2361847Z       margin-right: 4px;
2025-04-15T08:07:18.2361925Z       font-weight: normal;
2025-04-15T08:07:18.2362071Z     }
2025-04-15T08:07:18.2362075Z 
2025-04-15T08:07:18.2362179Z     body.netdata-splash .availability {
2025-04-15T08:07:18.2362253Z       text-align: right;
2025-04-15T08:07:18.2362334Z       font-family: monospace;
2025-04-15T08:07:18.2362403Z       display: flex;
2025-04-15T08:07:18.2362479Z       flex-direction: column;
2025-04-15T08:07:18.2362569Z       text-transform: capitalize;
2025-04-15T08:07:18.2362644Z       padding: 8px 16px;
2025-04-15T08:07:18.2362715Z       color: #fff;
2025-04-15T08:07:18.2362785Z       font-size: 12px;
2025-04-15T08:07:18.2362846Z     }
2025-04-15T08:07:18.2362850Z 
2025-04-15T08:07:18.2362966Z     body.netdata-splash .availability .key-valye {
2025-04-15T08:07:18.2363036Z       padding: 4px 0;
2025-04-15T08:07:18.2363102Z     }
2025-04-15T08:07:18.2363106Z 
2025-04-15T08:07:18.2363197Z     body.netdata-splash .sub-module {
2025-04-15T08:07:18.2363268Z       width: 100%;
2025-04-15T08:07:18.2363329Z     }
2025-04-15T08:07:18.2363332Z 
2025-04-15T08:07:18.2363420Z     body.netdata-splash .hardware {
2025-04-15T08:07:18.2363501Z       flex-direction: column;
2025-04-15T08:07:18.2363561Z     }
2025-04-15T08:07:18.2363564Z 
2025-04-15T08:07:18.2363678Z     body.netdata-splash .hardware .module-content {
2025-04-15T08:07:18.2363745Z       padding: 0;
2025-04-15T08:07:18.2363813Z       display: flex;
2025-04-15T08:07:18.2363878Z     }
2025-04-15T08:07:18.2363881Z 
2025-04-15T08:07:18.2364012Z     body.netdata-splash .module.has-title .section-title {
2025-04-15T08:07:18.2364093Z       padding-bottom: 12px;
2025-04-15T08:07:18.2364163Z       margin-bottom: 0;
2025-04-15T08:07:18.2364227Z     }
2025-04-15T08:07:18.2364230Z 
2025-04-15T08:07:18.2364312Z     body.netdata-splash .h-auto {
2025-04-15T08:07:18.2364378Z       height: auto;
2025-04-15T08:07:18.2364445Z     }
2025-04-15T08:07:18.2364533Z 
2025-04-15T08:07:18.2364620Z     body.netdata-splash .none {
2025-04-15T08:07:18.2364691Z       display: none;
2025-04-15T08:07:18.2364749Z     }
2025-04-15T08:07:18.2364758Z 
2025-04-15T08:07:18.2364851Z     body.netdata-splash .claim-message {
2025-04-15T08:07:18.2364923Z       position: absolute;
2025-04-15T08:07:18.2364988Z       top: 0;
2025-04-15T08:07:18.2365054Z       left: 0;
2025-04-15T08:07:18.2365117Z       right: 0;
2025-04-15T08:07:18.2365187Z       margin: auto;
2025-04-15T08:07:18.2365255Z       padding: 0 24px;
2025-04-15T08:07:18.2365326Z       overflow-y: auto;
2025-04-15T08:07:18.2365389Z     }
2025-04-15T08:07:18.2365392Z 
2025-04-15T08:07:18.2365497Z     body.netdata-splash .claim-message .welcome {
2025-04-15T08:07:18.2365571Z       padding: 16px 0;
2025-04-15T08:07:18.2365642Z       text-align: center;
2025-04-15T08:07:18.2365700Z     }
2025-04-15T08:07:18.2365709Z 
2025-04-15T08:07:18.2365795Z     body.netdata-splash .text-center {
2025-04-15T08:07:18.2365872Z       text-align: center;
2025-04-15T08:07:18.2365936Z     }
2025-04-15T08:07:18.2365939Z 
2025-04-15T08:07:18.2366032Z     body.netdata-splash .connection-modal {
2025-04-15T08:07:18.2366215Z       background: rgba(0, 0, 0, 0.4);
2025-04-15T08:07:18.2366298Z       border: 1px solid var(--border);
2025-04-15T08:07:18.2366370Z       padding: 16px 16px;
2025-04-15T08:07:18.2366442Z       display: flex;
2025-04-15T08:07:18.2366517Z       flex-direction: column;
2025-04-15T08:07:18.2366589Z       gap: 12px;
2025-04-15T08:07:18.2366661Z       position: relative;
2025-04-15T08:07:18.2366729Z       font-size: 14px;
2025-04-15T08:07:18.2366793Z     }
2025-04-15T08:07:18.2366797Z 
2025-04-15T08:07:18.2366891Z     body.netdata-splash .connection-step {
2025-04-15T08:07:18.2366963Z       display: flex;
2025-04-15T08:07:18.2367038Z       flex-direction: column;
2025-04-15T08:07:18.2367107Z       gap: 12px;
2025-04-15T08:07:18.2367176Z       position: relative;
2025-04-15T08:07:18.2367247Z       min-height: 300px;
2025-04-15T08:07:18.2367317Z     }
2025-04-15T08:07:18.2367320Z 
2025-04-15T08:07:18.2367410Z     body.netdata-splash .dropdown-custom {
2025-04-15T08:07:18.2367481Z       display: flex;
2025-04-15T08:07:18.2367688Z       flex-direction: column;
2025-04-15T08:07:18.2367757Z       gap: 12px;
2025-04-15T08:07:18.2367860Z       position: relative;
2025-04-15T08:07:18.2367921Z     }
2025-04-15T08:07:18.2367924Z 
2025-04-15T08:07:18.2368015Z     body.netdata-splash .modal-footer {
2025-04-15T08:07:18.2368094Z       height: var(--footer-height);
2025-04-15T08:07:18.2368170Z       padding: 10px 0 0;
2025-04-15T08:07:18.2368237Z       display: flex;
2025-04-15T08:07:18.2368320Z       justify-content: space-between;
2025-04-15T08:07:18.2368385Z     }
2025-04-15T08:07:18.2368389Z 
2025-04-15T08:07:18.2368487Z     body.netdata-splash .modal-footer .button {
2025-04-15T08:07:18.2368561Z       height: 32px;
2025-04-15T08:07:18.2368632Z       font-size: 14px;
2025-04-15T08:07:18.2368693Z     }
2025-04-15T08:07:18.2368697Z 
2025-04-15T08:07:18.2368796Z     body.netdata-splash .list-options {
2025-04-15T08:07:18.2368862Z       margin: 0;
2025-04-15T08:07:18.2374778Z       padding: 0;
2025-04-15T08:07:18.2374893Z       list-style: none;
2025-04-15T08:07:18.2374976Z       height: 300px;
2025-04-15T08:07:18.2375048Z       overflow: auto;
2025-04-15T08:07:18.2375179Z       scrollbar-color: var(--scrollbar-thumb) #293030;
2025-04-15T08:07:18.2375259Z       scrollbar-width: thin;
2025-04-15T08:07:18.2375320Z     }
2025-04-15T08:07:18.2375325Z 
2025-04-15T08:07:18.2375430Z     body.netdata-splash .list-options li {
2025-04-15T08:07:18.2375505Z       padding: 8px 12px;
2025-04-15T08:07:18.2375601Z       background: var(--list-option-bg);
2025-04-15T08:07:18.2375703Z       border: 1px solid var(--border-neutral);
2025-04-15T08:07:18.2375790Z       margin-bottom: 12px;
2025-04-15T08:07:18.2375861Z       cursor: pointer;
2025-04-15T08:07:18.2375920Z     }
2025-04-15T08:07:18.2375924Z 
2025-04-15T08:07:18.2376043Z     body.netdata-splash .list-options li:hover {
2025-04-15T08:07:18.2376457Z       background: var(--list-option-hover-bg);
2025-04-15T08:07:18.2376522Z     }
2025-04-15T08:07:18.2376526Z 
2025-04-15T08:07:18.2376651Z     body.netdata-splash .list-options li.selected {
2025-04-15T08:07:18.2376760Z       background: var(--list-option-selected-bg);
2025-04-15T08:07:18.2376837Z       color: var(--highlight);
2025-04-15T08:07:18.2376908Z       display: flex;
2025-04-15T08:07:18.2377003Z       justify-content: space-between;
2025-04-15T08:07:18.2377063Z     }
2025-04-15T08:07:18.2377066Z 
2025-04-15T08:07:18.2377204Z     body.netdata-splash .list-options li.selected:after {
2025-04-15T08:07:18.2377274Z       content: "\2713";
2025-04-15T08:07:18.2377345Z       margin-left: 2px;
2025-04-15T08:07:18.2377409Z     }
2025-04-15T08:07:18.2377412Z 
2025-04-15T08:07:18.2377512Z     body.netdata-splash input[type="text"] {
2025-04-15T08:07:18.2377588Z       background: #2d3535;
2025-04-15T08:07:18.2377659Z       padding: 4px 8px;
2025-04-15T08:07:18.2377737Z       border: 0;
2025-04-15T08:07:18.2377807Z       font-size: 14px;
2025-04-15T08:07:18.2377875Z       min-height: 28px;
2025-04-15T08:07:18.2377950Z       color: var(--text);
2025-04-15T08:07:18.2378025Z       border-radius: 2px;
2025-04-15T08:07:18.2378087Z     }
2025-04-15T08:07:18.2378090Z 
2025-04-15T08:07:18.2378197Z     body.netdata-splash input[type="text"]:focus {
2025-04-15T08:07:18.2378283Z       outline: 1px solid var(--border);
2025-04-15T08:07:18.2378345Z     }
2025-04-15T08:07:18.2378349Z 
2025-04-15T08:07:18.2378434Z     body.netdata-splash .dropdown {
2025-04-15T08:07:18.2378508Z       position: relative;
2025-04-15T08:07:18.2378573Z       width: auto;
2025-04-15T08:07:18.2378657Z       border: 1px solid var(--border);
2025-04-15T08:07:18.2378727Z       border-radius: 4px;
2025-04-15T08:07:18.2378794Z       padding: 8px;
2025-04-15T08:07:18.2378867Z       cursor: pointer;
2025-04-15T08:07:18.2378926Z     }
2025-04-15T08:07:18.2378929Z 
2025-04-15T08:07:18.2379027Z     body.netdata-splash .dropdown-toggle {
2025-04-15T08:07:18.2379101Z       display: flex;
2025-04-15T08:07:18.2379186Z       justify-content: space-between;
2025-04-15T08:07:18.2379261Z       align-items: center;
2025-04-15T08:07:18.2379434Z     }
2025-04-15T08:07:18.2379439Z 
2025-04-15T08:07:18.2379549Z     body.netdata-splash .checkbox-container {
2025-04-15T08:07:18.2379616Z       display: none;
2025-04-15T08:07:18.2379690Z       position: absolute;
2025-04-15T08:07:18.2379757Z       top: 100%;
2025-04-15T08:07:18.2379818Z       left: 0;
2025-04-15T08:07:18.2379883Z       width: 100%;
2025-04-15T08:07:18.2379960Z       border: 1px solid var(--border);
2025-04-15T08:07:18.2380048Z       background-color: var(--main-bg);
2025-04-15T08:07:18.2380112Z       z-index: 1;
2025-04-15T08:07:18.2380182Z       max-height: 150px;
2025-04-15T08:07:18.2380255Z       overflow-y: auto;
2025-04-15T08:07:18.2380322Z       padding: 8px;
2025-04-15T08:07:18.2380382Z     }
2025-04-15T08:07:18.2380386Z 
2025-04-15T08:07:18.2380498Z     body.netdata-splash .checkbox-container label {
2025-04-15T08:07:18.2380572Z       display: block;
2025-04-15T08:07:18.2380649Z       margin-bottom: 8px;
2025-04-15T08:07:18.2380707Z     }
2025-04-15T08:07:18.2380714Z 
2025-04-15T08:07:18.2380826Z     body.netdata-splash .checkbox-container input {
2025-04-15T08:07:18.2380898Z       margin-right: 5px;
2025-04-15T08:07:18.2380962Z     }
2025-04-15T08:07:18.2380965Z 
2025-04-15T08:07:18.2381055Z     body.netdata-splash .selected-rooms {
2025-04-15T08:07:18.2381124Z       font-size: 14px;
2025-04-15T08:07:18.2381191Z       color: #333;
2025-04-15T08:07:18.2381249Z     }
2025-04-15T08:07:18.2381253Z 
2025-04-15T08:07:18.2381343Z     body.netdata-splash .text-padding {
2025-04-15T08:07:18.2381417Z       padding: 8px 8px 16px;
2025-04-15T08:07:18.2381476Z     }
2025-04-15T08:07:18.2381482Z 
2025-04-15T08:07:18.2381568Z     body.netdata-splash .nd-radio,
2025-04-15T08:07:18.2381653Z     body.netdata-splash .nd-checkbox {
2025-04-15T08:07:18.2381722Z       display: block;
2025-04-15T08:07:18.2381886Z       position: relative;
2025-04-15T08:07:18.2381963Z       padding-left: 32px;
2025-04-15T08:07:18.2382035Z       cursor: pointer;
2025-04-15T08:07:18.2382106Z       font-size: 16px;
2025-04-15T08:07:18.2382196Z       -webkit-user-select: none;
2025-04-15T08:07:18.2382274Z       -moz-user-select: none;
2025-04-15T08:07:18.2382349Z       user-select: none;
2025-04-15T08:07:18.2382420Z       line-height: 20px;
2025-04-15T08:07:18.2382479Z     }
2025-04-15T08:07:18.2382483Z 
2025-04-15T08:07:18.2382582Z     body.netdata-splash .nd-checkbox input {
2025-04-15T08:07:18.2382652Z       position: absolute;
2025-04-15T08:07:18.2382721Z       opacity: 0;
2025-04-15T08:07:18.2382789Z       cursor: pointer;
2025-04-15T08:07:18.2382857Z       height: 0;
2025-04-15T08:07:18.2382920Z       width: 0;
2025-04-15T08:07:18.2382978Z     }
2025-04-15T08:07:18.2382982Z 
2025-04-15T08:07:18.2383090Z     body.netdata-splash .nd-checkbox .checkmark {
2025-04-15T08:07:18.2383162Z       position: absolute;
2025-04-15T08:07:18.2383235Z       top: 0;
2025-04-15T08:07:18.2383297Z       left: 0;
2025-04-15T08:07:18.2383364Z       height: 16px;
2025-04-15T08:07:18.2383433Z       width: 16px;
2025-04-15T08:07:18.2383525Z       background-color: var(--main-bg);
2025-04-15T08:07:18.2383613Z       border: 1px solid var(--primary);
2025-04-15T08:07:18.2383685Z       border-radius: 2px;
2025-04-15T08:07:18.2383744Z     }
2025-04-15T08:07:18.2383748Z 
2025-04-15T08:07:18.2383894Z     body.netdata-splash .nd-checkbox:hover input~.checkmark {
2025-04-15T08:07:18.2383979Z       background-color: var(--border);
2025-04-15T08:07:18.2384043Z     }
2025-04-15T08:07:18.2384046Z 
2025-04-15T08:07:18.2384183Z     body.netdata-splash .nd-checkbox :hover input~.checkmark {
2025-04-15T08:07:18.2384265Z       background-color: #ccc;
2025-04-15T08:07:18.2384326Z     }
2025-04-15T08:07:18.2384329Z 
2025-04-15T08:07:18.2384469Z     body.netdata-splash .nd-checkbox input:checked~.checkmark {
2025-04-15T08:07:18.2384559Z       background-color: var(--boder);
2025-04-15T08:07:18.2384626Z     }
2025-04-15T08:07:18.2384630Z 
2025-04-15T08:07:18.2384753Z     body.netdata-splash .nd-checkbox .checkmark:after {
2025-04-15T08:07:18.2384906Z       content: "";
2025-04-15T08:07:18.2384987Z       position: absolute;
2025-04-15T08:07:18.2385054Z       display: none;
2025-04-15T08:07:18.2385112Z     }
2025-04-15T08:07:18.2385116Z 
2025-04-15T08:07:18.2385280Z     body.netdata-splash .nd-checkbox input:checked~.checkmark:after {
2025-04-15T08:07:18.2385349Z       display: block;
2025-04-15T08:07:18.2385412Z     }
2025-04-15T08:07:18.2385415Z 
2025-04-15T08:07:18.2385532Z     body.netdata-splash .nd-checkbox .checkmark:after {
2025-04-15T08:07:18.2385605Z       inset: 0 0 2px 0;
2025-04-15T08:07:18.2385672Z       margin: auto;
2025-04-15T08:07:18.2385737Z       width: 2px;
2025-04-15T08:07:18.2385806Z       height: 8px;
2025-04-15T08:07:18.2385887Z       border: solid var(--highlight);
2025-04-15T08:07:18.2385972Z       border-width: 0 2px 2px 0;
2025-04-15T08:07:18.2386157Z       transform: rotate(45deg);
2025-04-15T08:07:18.2386219Z     }
2025-04-15T08:07:18.2386223Z 
2025-04-15T08:07:18.2386297Z     /* Retention table */
2025-04-15T08:07:18.2386377Z     #tiers-container {
2025-04-15T08:07:18.2386446Z       height: auto;
2025-04-15T08:07:18.2386505Z     }
2025-04-15T08:07:18.2386508Z 
2025-04-15T08:07:18.2386579Z     #tiers-table {
2025-04-15T08:07:18.2386645Z       width: 100%;
2025-04-15T08:07:18.2386724Z       border-collapse: collapse;
2025-04-15T08:07:18.2386787Z     }
2025-04-15T08:07:18.2386790Z 
2025-04-15T08:07:18.2386889Z     #tiers-table thead tr:nth-of-type(1) th {
2025-04-15T08:07:18.2386966Z       padding-top: 16px;
2025-04-15T08:07:18.2387025Z     }
2025-04-15T08:07:18.2387029Z 
2025-04-15T08:07:18.2387120Z     #tiers-table thead tr:nth-of-type(2) th {
2025-04-15T08:07:18.2387199Z       padding-bottom: 16px;
2025-04-15T08:07:18.2387257Z     }
2025-04-15T08:07:18.2387261Z 
2025-04-15T08:07:18.2387353Z     #tiers-table tbody tr:nth-of-type(1) td {
2025-04-15T08:07:18.2387570Z       border-top: 1px solid var(--border);
2025-04-15T08:07:18.2387649Z       padding-top: 16px;
2025-04-15T08:07:18.2387710Z     }
2025-04-15T08:07:18.2387714Z 
2025-04-15T08:07:18.2387808Z     #tiers-table tbody tr:last-of-type td {
2025-04-15T08:07:18.2387887Z       padding-bottom: 24px;
2025-04-15T08:07:18.2387950Z     }
2025-04-15T08:07:18.2387953Z 
2025-04-15T08:07:18.2388026Z     #tiers-table th {
2025-04-15T08:07:18.2388106Z       font-size: var(--font-small);
2025-04-15T08:07:18.2388178Z       padding: 8px 4px;
2025-04-15T08:07:18.2388242Z     }
2025-04-15T08:07:18.2388245Z 
2025-04-15T08:07:18.2388313Z     #tiers-table td {
2025-04-15T08:07:18.2388399Z       font-size: var(--font-medium);
2025-04-15T08:07:18.2388472Z       text-align: center;
2025-04-15T08:07:18.2388546Z       padding: 12px 4px;
2025-04-15T08:07:18.2388605Z     }
2025-04-15T08:07:18.2388609Z 
2025-04-15T08:07:18.2388691Z     #tiers-table th:first-of-type,
2025-04-15T08:07:18.2388776Z     #tiers-table td:first-of-type {
2025-04-15T08:07:18.2388851Z       padding-left: 12px;
2025-04-15T08:07:18.2388911Z     }
2025-04-15T08:07:18.2388972Z   
2025-04-15T08:07:18.2389054Z     #tiers-table th:last-of-type,  
2025-04-15T08:07:18.2389140Z     #tiers-table td:last-of-type {
2025-04-15T08:07:18.2389216Z       padding-right: 12px;
2025-04-15T08:07:18.2389281Z     }
2025-04-15T08:07:18.2389284Z 
2025-04-15T08:07:18.2389363Z     #tiers-table .section-start {
2025-04-15T08:07:18.2389454Z       border-left: 1px solid var(--border);
2025-04-15T08:07:18.2389513Z     }
2025-04-15T08:07:18.2389517Z 
2025-04-15T08:07:18.2389592Z     .progress-indicator {
2025-04-15T08:07:18.2389659Z       gap: 8px;
2025-04-15T08:07:18.2389730Z       padding: 0 8px;
2025-04-15T08:07:18.2389796Z     }
2025-04-15T08:07:18.2389800Z 
2025-04-15T08:07:18.2389882Z     .progress-bar-container {
2025-04-15T08:07:18.2389954Z       position: relative;
2025-04-15T08:07:18.2390024Z       width: 100%;
2025-04-15T08:07:18.2390115Z       height: var(--progress-bar-height);
2025-04-15T08:07:18.2390220Z       background-color: var(--border-neutral);
2025-04-15T08:07:18.2390294Z       overflow: hidden;
2025-04-15T08:07:18.2390483Z       border-radius: 2px;
2025-04-15T08:07:18.2390546Z     }
2025-04-15T08:07:18.2390550Z 
2025-04-15T08:07:18.2390620Z     .progress-bar {
2025-04-15T08:07:18.2390695Z       position: absolute;
2025-04-15T08:07:18.2390757Z       top: 0;
2025-04-15T08:07:18.2390824Z       left: 0;
2025-04-15T08:07:18.2390913Z       height: var(--progress-bar-height);
2025-04-15T08:07:18.2390999Z       background-color: var(--primary);
2025-04-15T08:07:18.2391063Z     }
2025-04-15T08:07:18.2391066Z 
2025-04-15T08:07:18.2391130Z     #tooltip {
2025-04-15T08:07:18.2391205Z       max-width: 300px;
2025-04-15T08:07:18.2391287Z       background-color: var(--accent);
2025-04-15T08:07:18.2391368Z       color: var(--text-dark);
2025-04-15T08:07:18.2391440Z       border-radius: 4px;
2025-04-15T08:07:18.2391513Z       padding: 8px 16px;
2025-04-15T08:07:18.2391587Z       position: fixed;
2025-04-15T08:07:18.2391670Z       font-size: var(--font-small);
2025-04-15T08:07:18.2391743Z       line-height: 1.5;
2025-04-15T08:07:18.2391810Z       z-index: 9999;
2025-04-15T08:07:18.2391881Z       display: none;
2025-04-15T08:07:18.2391980Z     }</style><script>const toggleTab = tab => {
2025-04-15T08:07:18.2392120Z       const factors = document.querySelectorAll(".data-tab");
2025-04-15T08:07:18.2392246Z       const tabs = document.querySelectorAll(".btn-tab");
2025-04-15T08:07:18.2392249Z 
2025-04-15T08:07:18.2392336Z       factors.forEach(function (factor) {
2025-04-15T08:07:18.2392475Z         let dataTab = parseInt(factor.getAttribute("data-tab"));
2025-04-15T08:07:18.2392564Z         if (dataTab == tab || dataTab === 0) {
2025-04-15T08:07:18.2392650Z           factor.classList.add("active");
2025-04-15T08:07:18.2392717Z         } else {
2025-04-15T08:07:18.2392808Z           factor.classList.remove("active");
2025-04-15T08:07:18.2392872Z         }
2025-04-15T08:07:18.2392931Z       });
2025-04-15T08:07:18.2393018Z 
2025-04-15T08:07:18.2393105Z       // Toggle active class on tab buttons
2025-04-15T08:07:18.2393194Z       tabs.forEach(tabButton => {
2025-04-15T08:07:18.2393287Z         if (tabButton.dataset?.tab == tab) {
2025-04-15T08:07:18.2393381Z           tabButton.classList.add("active");
2025-04-15T08:07:18.2393445Z         } else {
2025-04-15T08:07:18.2393545Z           tabButton.classList.remove("active");
2025-04-15T08:07:18.2393605Z         }
2025-04-15T08:07:18.2393664Z       });
2025-04-15T08:07:18.2393729Z     }
2025-04-15T08:07:18.2393732Z 
2025-04-15T08:07:18.2393815Z     const initGrid = () => {
2025-04-15T08:07:18.2393976Z       const canvas1 = document.getElementById("monitorGrid");
2025-04-15T08:07:18.2394086Z       const context1 = canvas1.getContext("2d");
2025-04-15T08:07:18.2394207Z       const frame = document.querySelector(".frame");
2025-04-15T08:07:18.2394286Z       const cellSize = 4;
2025-04-15T08:07:18.2394359Z       const gapSize = 2;
2025-04-15T08:07:18.2394506Z       const colors = ["#001107", "#003114", "#014420", "#047031", "#049846"];
2025-04-15T08:07:18.2394510Z 
2025-04-15T08:07:18.2394578Z       let grid = [];
2025-04-15T08:07:18.2394585Z 
2025-04-15T08:07:18.2394673Z       const getRandomColor = () => {
2025-04-15T08:07:18.2394811Z         return colors[Math.floor(Math.random() * colors.length)];
2025-04-15T08:07:18.2394875Z       }
2025-04-15T08:07:18.2394879Z 
2025-04-15T08:07:18.2394982Z       const resizeCanvas = (canvas, context) => {
2025-04-15T08:07:18.2395069Z         canvas.width = frame.clientWidth;
2025-04-15T08:07:18.2395167Z         canvas.height = frame.clientHeight;
2025-04-15T08:07:18.2395171Z 
2025-04-15T08:07:18.2395321Z         const cols = Math.floor(canvas.width / (cellSize + gapSize));
2025-04-15T08:07:18.2395471Z         const rows = Math.floor(canvas.height / (cellSize + gapSize));
2025-04-15T08:07:18.2395475Z 
2025-04-15T08:07:18.2395567Z         grid = Array.from({ length: rows }, () =>
2025-04-15T08:07:18.2395678Z           Array.from({ length: cols }, getRandomColor)
2025-04-15T08:07:18.2395746Z         );
2025-04-15T08:07:18.2395749Z 
2025-04-15T08:07:18.2395832Z         drawGrid(context, canvas);
2025-04-15T08:07:18.2396002Z       }
2025-04-15T08:07:18.2396007Z 
2025-04-15T08:07:18.2396195Z       const drawGrid = (context, canvas) => {
2025-04-15T08:07:18.2396334Z         context.clearRect(0, 0, canvas.width, canvas.height);
2025-04-15T08:07:18.2396473Z         const cols = Math.floor(canvas.width / (cellSize + gapSize));
2025-04-15T08:07:18.2396623Z         const rows = Math.floor(canvas.height / (cellSize + gapSize));
2025-04-15T08:07:18.2396627Z 
2025-04-15T08:07:18.2396713Z         for (let row = 0; row < rows; row++) {
2025-04-15T08:07:18.2396799Z           for (let col = 0; col < cols; col++) {
2025-04-15T08:07:18.2396885Z             if (grid[row] && grid[row][col]) {
2025-04-15T08:07:18.2396975Z               context.fillStyle = grid[row][col];
2025-04-15T08:07:18.2397056Z               context.fillRect(
2025-04-15T08:07:18.2397144Z                 col * (cellSize + gapSize),
2025-04-15T08:07:18.2397228Z                 row * (cellSize + gapSize),
2025-04-15T08:07:18.2397295Z                 cellSize,
2025-04-15T08:07:18.2397365Z                 cellSize
2025-04-15T08:07:18.2397430Z               );
2025-04-15T08:07:18.2397490Z             }
2025-04-15T08:07:18.2397554Z           }
2025-04-15T08:07:18.2397614Z         }
2025-04-15T08:07:18.2397675Z       }
2025-04-15T08:07:18.2397678Z 
2025-04-15T08:07:18.2397768Z       resizeCanvas(canvas1, context1);
2025-04-15T08:07:18.2397772Z 
2025-04-15T08:07:18.2397963Z       window.addEventListener("resize", () => resizeCanvas(canvas1, context1));
2025-04-15T08:07:18.2447753Z     }</script></head><body class="loading netdata-splash"><noscript><iframe src="https://www.googletagmanager.com/ns.html?id=GTM-N6CBMJD" height="0" width="0" style="display:none;visibility:hidden"></iframe></noscript><div id="app" class="container grid"><div class="frame frame-left col-span-7 grid light-beam relative"><div class="head-summary absolute index-10"><div class="server"><div class="no-title" id="server"></div><div class="no-title" id="package"></div></div><div class="availability h-auto module"><div class="title">Cloud status</div><div class="no-key" id="cloud_status"></div></div></div><div class="col-span-12 row-span-11"><div id="sphereContainer"><div id="loadingMessage" class="loading-message">Loading...</div><div class="hide-title absolute-center sphere-stats-container"><div class="metrics-container"><div class="collected-metrics" id="collectedMetrics"></div><div class="node-info-container"><div class="title">NODES</div><div class="node-info" id="nodes_streaming"></div></div></div><div class="system-container data-tab data-tab-container" data-tab="2"><div class="system grid-columns-10 md-grid-columns-12"><div class="flex-col col-span-5 md-col-span-6"><div class="section-title">Kernel</div><div class="grid-columns-10"><div class="h-auto module col-span-5" id="kernel"></div><div class="h-auto module col-span-5" id="kernelVersion"></div></div></div><div class="flex-col col-span-5 md-col-span-6"><div class="section-title">OS</div><div class="grid-columns-10"><div id="os" class="h-auto module col-span-5"></div><div class="h-auto module col-span-5" id="id"></div></div></div><div class="hardware module-section col-span-10 md-col-span-12"><div class="section-title">Hardware</div><div class="grid-columns-10 md-grid-columns-12"><div class="module h-auto col-span-2 md-col-span-4" id="cpuCores"></div><div class="module h-auto col-span-2 md-col-span-4" id="cpuFrequency"></div><div class="module h-auto col-span-2 md-col-span-4" id="ram"></div><div class="module h-auto col-span-2 md-col-span-4" id="disk"></div><div class="module h-auto col-span-2 md-col-span-4" id="cpuArchitecture"></div><div class="module h-auto col-span-2 md-col-span-4" id="virtualization"></div></div></div></div></div><div class="data-tab data-tab-container" data-tab="1"><div class="db-metrics-container"><div id="tiers-container" class="db-metrics-blocks module"><table id="tiers-table"><thead><tr><th rowspan="2"><span data-tooltip="A database layer that stores metrics at a specific resolution.">Tier</span></th><th rowspan="2">Resolution</th><th colspan="2" class="section-start">Stored</th><th colspan="3" class="section-start">Retention</th><th colspan="2" class="section-start">Disk</th></tr><tr><th class="section-start">Metrics</th><th><span data-tooltip="The total number of measurements stored in the database across all metrics. Each sample represents a recorded value for a specific metric at a given time.">Samples</span></th><th class="section-start">Current</th><th><span data-tooltip="The maximum time data can be kept, based on the configured time and disk space limits.">Effective</span></th><th>Configured</th><th class="section-start">Used</th><th>Configured</th></tr></thead><tbody><tr id="tiers-table-data-placeholder"></tr></tbody></table></div></div></div><div class="data-tab data-tab-container" data-tab="3"><div class="modules-container grid"><div class="module col-span-4"><div class="module-header"><div class="section-image"><svg width="18" height="18" viewBox="0 0 18 18" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M16.5299 4.47019C16.2399 4.18019 15.7599 4.18019 15.4699 4.47019L13.5299 6.41019L11.5899 4.47019L13.5299 2.53019C13.8199 2.24019 13.8199 1.76019 13.5299 1.47019C13.2399 1.18019 12.7599 1.18019 12.4699 1.47019L10.5299 3.41019L8.99994 1.88019L5.74994 5.13019C4.93994 5.93019 4.49994 7.01019 4.49994 8.15019V8.38019L3.72994 9.15019C2.53994 10.3302 2.45994 12.2002 3.43994 13.5002L1.96994 14.9702C1.67994 15.2602 1.67994 15.7402 1.96994 16.0302C2.11994 16.1802 2.30994 16.2502 2.49994 16.2502C2.68994 16.2502 2.87994 16.1802 3.02994 16.0302L4.49994 14.5602C5.06994 15.0002 5.76994 15.2402 6.49994 15.2402C7.38994 15.2402 8.21994 14.8902 8.84994 14.2702L9.61994 13.5002H9.84994C10.9899 13.5002 12.0599 13.0602 12.8699 12.2502L16.1199 9.00019L14.5899 7.47019L16.5299 5.53019C16.8199 5.24019 16.8199 4.76019 16.5299 4.47019ZM11.8099 11.1902C11.2899 11.7102 10.5899 12.0002 9.84994 12.0002H8.99994L7.78994 13.2102C7.42994 13.5702 6.96994 13.7402 6.49994 13.7402C6.02994 13.7402 5.56994 13.5602 5.20994 13.2102L4.78994 12.7902C4.07994 12.0802 4.07994 10.9202 4.78994 10.2102L5.46994 9.53019L6.40994 10.4702C6.99994 11.0602 7.94994 11.0602 8.52994 10.4702L6.01994 7.96019C6.06994 7.30019 6.33994 6.67019 6.80994 6.19019L8.99994 4.00019L13.9999 9.00019L11.8099 11.1902Z" fill="var(--text)"/></svg></div><span class="section-title">Plugins</span></div><div class="module-content" id="plugins"></div></div><div class="module col-span-4"><div class="module-header"><div class="section-image"><svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M7 18C7.55 18 8 17.55 8 17C8 16.45 7.55 16 7 16C6.45 16 6 16.45 6 17C6 17.55 6.45 18 7 18ZM14 17.79C14.28 17.51 14.28 17.07 14 16.79C13.72 16.51 13.28 16.51 13 16.79C12.72 17.07 12.72 17.51 13 17.79C13.28 18.07 13.72 18.07 14 17.79ZM17 8V4H12V2H2V22H22V8H17ZM10 20H4V4H10V20ZM15 20H12V6H15V20ZM20 20H17V10H20V20ZM19 17.79C19.28 17.51 19.28 17.07 19 16.79C18.72 16.51 18.28 16.51 18 16.79C17.72 17.07 17.72 17.51 18 17.79C18.28 18.07 18.72 18.07 19 17.79Z" fill="var(--text)"/></svg></div><span class="section-title">Libraries</span></div><div class="module-content" id="libs"></div></div><div class="module col-span-4"><div class="module-header"><div class="section-image"><svg width="18" height="18" viewBox="0 0 18 18" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M4 16.0002H5V14.5002H4V16.0002ZM2 16.0002H3V14.5002H2V16.0002ZM15.28 6.97019L10.25 1.94019L5.22 6.97019C4.927 7.26319 4.927 7.73819 5.22 8.03119C5.513 8.32419 5.988 8.32419 6.281 8.03119L9.5 4.81119V11.8392C9.5 13.3062 8.306 14.5002 6.838 14.5002H6V16.0002H6.838C9.136 16.0002 11 14.1372 11 11.8382V4.81119L14.22 8.03119C14.366 8.17719 14.558 8.25119 14.75 8.25119C14.942 8.25119 15.134 8.17819 15.28 8.03119C15.573 7.73719 15.573 7.26319 15.28 6.97019Z" fill="var(--text)"/></svg></div><span class="section-title">Exporters</span></div><div class="module-content" id="exporters"></div></div></div></div><div class="data-tab data-tab-container" data-tab="4"><div class="module data-tab-table" id="directories"></div></div></div></div></div><div class="relative row-span-1 col-span-12 full-h"><div class="license-link"><a href="https://app.netdata.cloud/LICENSE.txt" target="_blank">Netdata UI License</a></div><div class="tabs full-h"><button type="button" name="button" class="btn-tab tab active" data-tab="1"><div class="tab-icon"><svg width="18" height="18" viewBox="0 0 18 18" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M9 10C14.153 10 16.5 7.927 16.5 6C16.5 4.073 14.153 2 9 2C3.847 2 1.5 4.073 1.5 6C1.5 7.927 3.847 10 9 10ZM9 3.5C12.313 3.5 15 4.619 15 6C15 7.381 12.313 8.5 9 8.5C5.687 8.5 3 7.381 3 6C3 4.619 5.687 3.5 9 3.5ZM14.566 12.931C13.68 13.85 11.523 14.5 9 14.5C6.477 14.5 4.32 13.85 3.434 12.931C2.639 12.547 2.01 12.081 1.545 11.563C1.518 11.708 1.5 11.854 1.5 12C1.5 13.927 3.847 16 9 16C14.153 16 16.5 13.927 16.5 12C16.5 11.854 16.482 11.708 16.455 11.562C15.99 12.081 15.361 12.546 14.566 12.931ZM14.566 9.931C13.68 10.85 11.523 11.5 9 11.5C6.477 11.5 4.32 10.85 3.434 9.931C2.639 9.547 2.01 9.081 1.545 8.563C1.518 8.708 1.5 8.854 1.5 9C1.5 10.927 3.847 13 9 13C14.153 13 16.5 10.927 16.5 9C16.5 8.854 16.482 8.708 16.455 8.562C15.99 9.081 15.361 9.546 14.566 9.931Z"/></svg></div>Database</button> <button type="button" name="button" class="btn-tab tab" data-tab="2"><div class="tab-icon"><svg width="60" height="60" viewBox="0 0 60 60" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M40.3125 18.75H19.6875C19.1697 18.75 18.75 19.1697 18.75 19.6875V40.3125C18.75 40.8303 19.1697 41.25 19.6875 41.25H40.3125C40.8303 41.25 41.25 40.8303 41.25 40.3125V19.6875C41.25 19.1697 40.8303 18.75 40.3125 18.75Z"/><path d="M54.375 22.5C54.8723 22.5 55.3492 22.3025 55.7008 21.9508C56.0525 21.5992 56.25 21.1223 56.25 20.625C56.25 20.1277 56.0525 19.6508 55.7008 19.2992C55.3492 18.9475 54.8723 18.75 54.375 18.75H52.5V15C52.4978 13.0115 51.707 11.1051 50.3009 9.6991C48.8949 8.29305 46.9885 7.50217 45 7.5H41.25V5.625C41.25 5.12772 41.0525 4.65081 40.7008 4.29917C40.3492 3.94754 39.8723 3.75 39.375 3.75C38.8777 3.75 38.4008 3.94754 38.0492 4.29917C37.6975 4.65081 37.5 5.12772 37.5 5.625V7.5H31.875V5.625C31.875 5.12772 31.6775 4.65081 31.3258 4.29917C30.9742 3.94754 30.4973 3.75 30 3.75C29.5027 3.75 29.0258 3.94754 28.6742 4.29917C28.3225 4.65081 28.125 5.12772 28.125 5.625V7.5H22.5V5.625C22.5 5.12772 22.3025 4.65081 21.9508 4.29917C21.5992 3.94754 21.1223 3.75 20.625 3.75C20.1277 3.75 19.6508 3.94754 19.2992 4.29917C18.9475 4.65081 18.75 5.12772 18.75 5.625V7.5H15C13.0115 7.50217 11.1051 8.29305 9.6991 9.6991C8.29305 11.1051 7.50217 13.0115 7.5 15V18.75H5.625C5.12772 18.75 4.65081 18.9475 4.29917 19.2992C3.94754 19.6508 3.75 20.1277 3.75 20.625C3.75 21.1223 3.94754 21.5992 4.29917 21.9508C4.65081 22.3025 5.12772 22.5 5.625 22.5H7.5V28.125H5.625C5.12772 28.125 4.65081 28.3225 4.29917 28.6742C3.94754 29.0258 3.75 29.5027 3.75 30C3.75 30.4973 3.94754 30.9742 4.29917 31.3258C4.65081 31.6775 5.12772 31.875 5.625 31.875H7.5V37.5H5.625C5.12772 37.5 4.65081 37.6975 4.29917 38.0492C3.94754 38.4008 3.75 38.8777 3.75 39.375C3.75 39.8723 3.94754 40.3492 4.29917 40.7008C4.65081 41.0525 5.12772 41.25 5.625 41.25H7.5V45C7.50217 46.9885 8.29305 48.8949 9.6991 50.3009C11.1051 51.707 13.0115 52.4978 15 52.5H18.75V54.375C18.75 54.8723 18.9475 55.3492 19.2992 55.7008C19.6508 56.0525 20.1277 56.25 20.625 56.25C21.1223 56.25 21.5992 56.0525 21.9508 55.7008C22.3025 55.3492 22.5 54.8723 22.5 54.375V52.5H28.125V54.375C28.125 54.8723 28.3225 55.3492 28.6742 55.7008C29.0258 56.0525 29.5027 56.25 30 56.25C30.4973 56.25 30.9742 56.0525 31.3258 55.7008C31.6775 55.3492 31.875 54.8723 31.875 54.375V52.5H37.5V54.375C37.5 54.8723 37.6975 55.3492 38.0492 55.7008C38.4008 56.0525 38.8777 56.25 39.375 56.25C39.8723 56.25 40.3492 56.0525 40.7008 55.7008C41.0525 55.3492 41.25 54.8723 41.25 54.375V52.5H45C46.9885 52.4978 48.8949 51.707 50.3009 50.3009C51.707 48.8949 52.4978 46.9885 52.5 45V41.25H54.375C54.8723 41.25 55.3492 41.0525 55.7008 40.7008C56.0525 40.3492 56.25 39.8723 56.25 39.375C56.25 38.8777 56.0525 38.4008 55.7008 38.0492C55.3492 37.6975 54.8723 37.5 54.375 37.5H52.5V31.875H54.375C54.8723 31.875 55.3492 31.6775 55.7008 31.3258C56.0525 30.9742 56.25 30.4973 56.25 30C56.25 29.5027 56.0525 29.0258 55.7008 28.6742C55.3492 28.3225 54.8723 28.125 54.375 28.125H52.5V22.5H54.375ZM45 41.25C45 42.2446 44.6049 43.1984 43.9016 43.9016C43.1984 44.6049 42.2446 45 41.25 45H18.75C17.7554 45 16.8016 44.6049 16.0984 43.9016C15.3951 43.1984 15 42.2446 15 41.25V18.75C15 17.7554 15.3951 16.8016 16.0984 16.0984C16.8016 15.3951 17.7554 15 18.75 15H41.25C42.2446 15 43.1984 15.3951 43.9016 16.0984C44.6049 16.8016 45 17.7554 45 18.75V41.25Z"/></svg></div>System</button> <button type="button" name="button" class="btn-tab tab" data-tab="3"><div class="tab-icon"><svg width="60" height="60" viewBox="0 0 60 60" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M59.7937 16.4062C59.7164 16.2322 59.6084 16.0734 59.475 15.9375C59.3495 15.8165 59.2112 15.7097 59.0625 15.6187L30.9 0.224957C30.615 0.0603916 30.2916 -0.0262451 29.9625 -0.0262451C29.6334 -0.0262451 29.31 0.0603916 29.025 0.224957L1.06875 15.525C1.06875 15.525 1.06875 15.6187 0.91875 15.6375C0.762779 15.7334 0.618116 15.8466 0.4875 15.975C0.433211 16.047 0.383128 16.1221 0.3375 16.2C0.244093 16.3333 0.168457 16.4783 0.1125 16.6312C0.1125 16.6312 0.1125 16.6312 0.1125 16.7437C0.103788 16.8435 0.103788 16.9439 0.1125 17.0437C0.1125 17.0437 0.1125 17.1562 0.1125 17.2125V42.7687C0.0613239 42.8827 0.0235706 43.0023 0 43.125L0 43.3875C0.142582 43.8604 0.466002 44.2579 0.9 44.4937L29.025 59.8312H29.1375H29.2875C29.5116 59.9337 29.7537 59.9911 30 60C30.2245 59.9926 30.4462 59.9482 30.6563 59.8687H30.7875H30.9L59.025 44.5312C59.3209 44.3693 59.5676 44.1306 59.7392 43.8402C59.9108 43.5498 60.0009 43.2185 60 42.8812V17.2125C59.9937 16.9939 59.9493 16.7782 59.8688 16.575C59.8516 16.5155 59.8264 16.4588 59.7937 16.4062ZM28.125 54.975L3.75 41.6625V20.3812L28.125 33.75V54.975ZM30 30.4125L5.79375 17.2875L30 4.01246L54.2062 17.1375L30 30.4125ZM56.25 41.6625L31.875 54.975V33.75L56.25 20.4562V41.6625Z"/></svg></div>Modules</button> <button type="button" name="button" class="btn-tab tab" data-tab="4"><div class="tab-icon"><svg width="18" height="18" viewBox="0 0 18 18" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M16 10.5V5.5H10V7.25H5.75V6.5H8V1.5H2V6.5H4.25V14.75H10V16.5H16V11.5H10V13.25H5.75V8.75H10V10.5H16ZM11.5 7H14.5V9H11.5V7ZM11.5 13H14.5V15H11.5V13ZM3.5 5V3H6.5V5H3.5Z"/></svg></div>Directories</button></div></div></div><div class="frame relative col-span-5 frame-right"><canvas id="monitorGrid"></canvas><div id="splashMessageContainer" class="splash-message"><svg width="133" height="105" viewBox="0 0 133 105" fill="none" xmlns="http://www.w3.org/2000/svg" class="logo"><path fill-rule="evenodd" clip-rule="evenodd" d="M81.697 105H55.0693L0.5 0.5H77.9598C108.079 0.554913 132.484 24.7711 132.5 54.6451C132.452 82.485 109.73 105 81.697 105Z" fill="#FCFFFD"/></svg><h1 class="text-center">Welcome to Netdata</h1><p id="msgSignIn">Please sign-in to continue</p><a id="btnSignIn" href="javascript:loadDashboard(true);" class="button button-primary">Sign-in</a><div class="tagline skip-link"><a class="opt-out-link" href="javascript:loadDashboard();">Skip and use the dashboard anonymously.</a> <span class="no-anonymous-access"></span></div></div><div id="claimingContentsContainer" class="claim-message" style="display:none;"><div class="welcome"><svg width="133" height="105" viewBox="0 0 133 105" fill="none" xmlns="http://www.w3.org/2000/svg" class="logo"><path fill-rule="evenodd" clip-rule="evenodd" d="M81.697 105H55.0693L0.5 0.5H77.9598C108.079 0.554913 132.484 24.7711 132.5 54.6451C132.452 82.485 109.73 105 81.697 105Z" fill="#FCFFFD"/></svg><h1 class="text-center">Welcome to Netdata</h1><span>Please connect your agent to continue.</span></div><div class="connection-modal"><div id="connectionStep-1"><div class="connection-step"><span class="text-small">Please select the space you want this agent to join:</span> <span class="loader">Loading spaces...</span><ul id="spacesList" class="list-options"></ul></div></div><div id="connectionStep-2" style="display:none;"><div class="connection-step"><div class="dropdown-custom" data-target="claimMessage"><div class="dropdown-custom-input flex space-between align-center"><span class="text-small">Select room(s)</span><button class="text-small button button-ghost clear-button">Clear</button></div><div id="roomsSelector" class="dropdown"><div class="dropdown-toggle"><span id="selectedItems" class="selected-items">Select room</span> <span>▼</span></div><div id="roomsSelectorOptionsContainer" class="checkbox-container"></div></div></div><div id="claimMessage" class="selected-message"></div><div class="">Please run the command below in your terminal:</div><code id="claimCommand"></code><div class="">and paste the generated private key in the field below:</div><input id="claimingPrivateKey" name="claimingPrivateKey" value="" placeholder="Private Key"/></div><div id="claimTip" class="text-padding text-small">Tip: If the command doesn’t work out-of-the-box, locate the {keyFilename} file, open it in your favourite text editor, and copy it to your clipboard.</div><div id="claimErrorMessage" class="text-padding error" style="display:none;"></div></div><div class="modal-footer flex-col"><div class="flex space-between"><button id="btnConnectionStepPrev" class="button button-ghost">&#8592; Back</button> <button id="btnConnectionStepNext" class="button button-primary">Next</button> <button id="btnClaim" class="button button-primary">Claim</button></div><div class="skip-link"><a class="signout-link" href="javascript:signout()">Sign out to switch user</a></div></div></div></div></div><div id="tooltip"></div></div></body><script>const initPrimaryButtonHover = () => {
2025-04-15T08:07:18.2448425Z     const button = document.getElementById("btnSignIn");
2025-04-15T08:07:18.2448559Z     const canvas = document.getElementById("monitorGrid");
2025-04-15T08:07:18.2448647Z 
2025-04-15T08:07:18.2448717Z     if (button) {
2025-04-15T08:07:18.2448823Z       button.addEventListener("mouseover", () => {
2025-04-15T08:07:18.2448923Z         canvas.classList.add("hovered");
2025-04-15T08:07:18.2448989Z       });
2025-04-15T08:07:18.2449057Z     }
2025-04-15T08:07:18.2449061Z 
2025-04-15T08:07:18.2449125Z     if (canvas) {
2025-04-15T08:07:18.2449225Z       button.addEventListener("mouseout", () => {
2025-04-15T08:07:18.2449321Z         canvas.classList.remove("hovered");
2025-04-15T08:07:18.2449383Z       });
2025-04-15T08:07:18.2449445Z     }
2025-04-15T08:07:18.2449506Z   }
2025-04-15T08:07:18.2449510Z 
2025-04-15T08:07:18.2449588Z   const initTabs = () => {
2025-04-15T08:07:18.2449718Z     const btnTabs = document.querySelectorAll(".btn-tab");
2025-04-15T08:07:18.2449797Z     btnTabs.forEach(btn => {
2025-04-15T08:07:18.2449892Z       btn.addEventListener("click", e => {
2025-04-15T08:07:18.2449990Z         const tab = e.currentTarget?.dataset?.tab;
2025-04-15T08:07:18.2450063Z         if (tab) {
2025-04-15T08:07:18.2450135Z           toggleTab(tab);
2025-04-15T08:07:18.2450194Z         }
2025-04-15T08:07:18.2450258Z       })
2025-04-15T08:07:18.2450319Z     })
2025-04-15T08:07:18.2450384Z   }
2025-04-15T08:07:18.2450388Z 
2025-04-15T08:07:18.2450469Z   // =============================================== //
2025-04-15T08:07:18.2450473Z 
2025-04-15T08:07:18.2450543Z   const status = {
2025-04-15T08:07:18.2450614Z     TIMEOUT: 'timeout',
2025-04-15T08:07:18.2450684Z     SUCCESS: 'success',
2025-04-15T08:07:18.2450759Z     SKIPPED: 'skipped'
2025-04-15T08:07:18.2450820Z   };
2025-04-15T08:07:18.2450823Z 
2025-04-15T08:07:18.2450905Z   const getSessionId = () => {
2025-04-15T08:07:18.2450993Z     const key = "telemetrySessionId"
2025-04-15T08:07:18.2451084Z     if (!sessionStorage.getItem(key)) {
2025-04-15T08:07:18.2451419Z       sessionStorage.setItem(key, self.crypto && self.crypto.randomUUID ? self.crypto.randomUUID() : new Date().getTime());
2025-04-15T08:07:18.2451483Z     }
2025-04-15T08:07:18.2451592Z     return sessionStorage.getItem(key) || "";
2025-04-15T08:07:18.2451654Z   }
2025-04-15T08:07:18.2451658Z 
2025-04-15T08:07:18.2451864Z   const defaultErrorMessage = "Something went wrong."
2025-04-15T08:07:18.2452118Z   const agentUri = window.location.origin + window.location.pathname.replace(pathsRegex, "");
2025-04-15T08:07:18.2452219Z   const telemetrySessionId = getSessionId();
2025-04-15T08:07:18.2452390Z   const ensureOneSlash = urlStr => urlStr.replace(/([^:]\/)\/+/g, "$1");
2025-04-15T08:07:18.2452394Z 
2025-04-15T08:07:18.2452505Z   // Utils =============================================================================== //
2025-04-15T08:07:18.2452508Z 
2025-04-15T08:07:18.2452595Z   const createElem = (tag, attrs) => {
2025-04-15T08:07:18.2452667Z     if (!tag) return null
2025-04-15T08:07:18.2452768Z     const elem = document.createElement(tag);
2025-04-15T08:07:18.2452852Z     if (Object.keys(attrs || {}).length) {
2025-04-15T08:07:18.2452948Z       Object.entries(attrs).forEach(([k, v]) => {
2025-04-15T08:07:18.2453026Z         elem[k] = v;
2025-04-15T08:07:18.2453086Z       })
2025-04-15T08:07:18.2453147Z     }
2025-04-15T08:07:18.2453220Z     return elem
2025-04-15T08:07:18.2453279Z   }
2025-04-15T08:07:18.2453286Z 
2025-04-15T08:07:18.2453420Z   const getDOM = ({ tag = "div", children = [], ...rest } = {}) => {
2025-04-15T08:07:18.2453524Z     const element = document.createElement(tag);
2025-04-15T08:07:18.2453528Z 
2025-04-15T08:07:18.2453639Z     Object.entries(rest || {}).forEach(([k, v]) => {
2025-04-15T08:07:18.2453720Z       if (element[k] !== undefined) {
2025-04-15T08:07:18.2453837Z         if (k == "dataset" && Object.keys(v).length == 1) {
2025-04-15T08:07:18.2453930Z           const dataPair = Object.entries(v)[0]
2025-04-15T08:07:18.2454020Z           element[k][dataPair[0]] = dataPair[1]
2025-04-15T08:07:18.2454083Z         } else {
2025-04-15T08:07:18.2454153Z           element[k] = v;
2025-04-15T08:07:18.2454218Z         }
2025-04-15T08:07:18.2454361Z       }
2025-04-15T08:07:18.2454427Z     })
2025-04-15T08:07:18.2454430Z 
2025-04-15T08:07:18.2454507Z     if (!!children?.length) {
2025-04-15T08:07:18.2454706Z       children.filter(({ condition = true }) => !!condition).forEach(childStructure => {
2025-04-15T08:07:18.2454819Z         element.appendChild(getDOM(childStructure));
2025-04-15T08:07:18.2454882Z       });
2025-04-15T08:07:18.2454944Z     }
2025-04-15T08:07:18.2454948Z 
2025-04-15T08:07:18.2455015Z     return element;
2025-04-15T08:07:18.2455077Z   }
2025-04-15T08:07:18.2455081Z 
2025-04-15T08:07:18.2455171Z   // ===================================================================================== //
2025-04-15T08:07:18.2455176Z 
2025-04-15T08:07:18.2455239Z   // Agent info
2025-04-15T08:07:18.2455410Z   const AGENT_INFO_KEY = `agentInfo:${window.envSettings.agentApiUrl}`
2025-04-15T08:07:18.2455489Z   const getAgentInfo = () => {
2025-04-15T08:07:18.2455619Z     const agentInfo = localStorage.getItem(AGENT_INFO_KEY)
2025-04-15T08:07:18.2455692Z     if (agentInfo) {
2025-04-15T08:07:18.2455758Z       try {
2025-04-15T08:07:18.2455868Z         return Promise.resolve(JSON.parse(agentInfo))
2025-04-15T08:07:18.2455939Z       } catch (err) {
2025-04-15T08:07:18.2456025Z         return Promise.resolve()
2025-04-15T08:07:18.2456178Z       }
2025-04-15T08:07:18.2456242Z     }
2025-04-15T08:07:18.2456246Z 
2025-04-15T08:07:18.2456599Z     return fetch(ensureOneSlash(`${window.envSettings.agentApiUrl}/api/v3/info`)).then(response => response.json()).then(data => {
2025-04-15T08:07:18.2456685Z       if (CONFIG.cache.agentInfo) {
2025-04-15T08:07:18.2456850Z         localStorage.setItem(AGENT_INFO_KEY, JSON.stringify(data || {}))
2025-04-15T08:07:18.2456914Z       }
2025-04-15T08:07:18.2456984Z       return data
2025-04-15T08:07:18.2457068Z     }).catch(() => Promise.resolve())
2025-04-15T08:07:18.2457132Z   }
2025-04-15T08:07:18.2457135Z 
2025-04-15T08:07:18.2457355Z   const loadStyle = (url, { media, insertAfter: aref, insertBefore: bref, rel, type } = {}) => {
2025-04-15T08:07:18.2457435Z     rel = rel || 'stylesheet'
2025-04-15T08:07:18.2457512Z     type = type || 'text/css'
2025-04-15T08:07:18.2457740Z     return new Promise(function (resolve, reject) {
2025-04-15T08:07:18.2457848Z       let link = document.createElement('link');
2025-04-15T08:07:18.2457925Z       link.type = type;
2025-04-15T08:07:18.2457992Z       link.rel = rel;
2025-04-15T08:07:18.2458064Z       link.href = url;
2025-04-15T08:07:18.2458142Z       link.media = media || 'all';
2025-04-15T08:07:18.2458146Z 
2025-04-15T08:07:18.2458231Z       link.onerror = function (err) {
2025-04-15T08:07:18.2458445Z         reject(new URIError(`loadStyle: the stylesheet ${err.target.src} is not accessible.`));
2025-04-15T08:07:18.2458509Z       };
2025-04-15T08:07:18.2458513Z 
2025-04-15T08:07:18.2458592Z       link.onload = function () {
2025-04-15T08:07:18.2458656Z         resolve();
2025-04-15T08:07:18.2458720Z       };
2025-04-15T08:07:18.2458723Z 
2025-04-15T08:07:18.2458787Z       if (aref) {
2025-04-15T08:07:18.2458938Z         aref.parentNode.insertBefore(link, aref.nextSibling);
2025-04-15T08:07:18.2458999Z         return;
2025-04-15T08:07:18.2459063Z       }
2025-04-15T08:07:18.2459071Z 
2025-04-15T08:07:18.2459134Z       if (bref) {
2025-04-15T08:07:18.2459236Z         bref.parentNode.insertBefore(link, bref);
2025-04-15T08:07:18.2459303Z         return;
2025-04-15T08:07:18.2459362Z       }
2025-04-15T08:07:18.2459366Z 
2025-04-15T08:07:18.2459459Z       document.head.appendChild(link);
2025-04-15T08:07:18.2459519Z     });
2025-04-15T08:07:18.2459579Z   }
2025-04-15T08:07:18.2459586Z 
2025-04-15T08:07:18.2459916Z   const loadScript = (url, { async = true, defer = false, insertAfter: aref, insertBefore: bref, timeout = 5000, attrs, skipIf } = {}) => {
2025-04-15T08:07:18.2460023Z     return new Promise(function (resolve, reject) {
2025-04-15T08:07:18.2460127Z       if (typeof skipIf === 'function' && skipIf()) {
2025-04-15T08:07:18.2460213Z         resolve(status.SKIPPED);
2025-04-15T08:07:18.2460401Z         return;
2025-04-15T08:07:18.2460462Z       }
2025-04-15T08:07:18.2460466Z 
2025-04-15T08:07:18.2460688Z       let rejectWithTimeout = setTimeout(function () { reject(status.TIMEOUT) }, timeout);
2025-04-15T08:07:18.2460692Z 
2025-04-15T08:07:18.2460801Z       let script = document.createElement('script');
2025-04-15T08:07:18.2460885Z       script.type = 'text/javascript';
2025-04-15T08:07:18.2460960Z       script.src = url;
2025-04-15T08:07:18.2461037Z       script.async = async;
2025-04-15T08:07:18.2461115Z       script.defer = defer;
2025-04-15T08:07:18.2461119Z 
2025-04-15T08:07:18.2461185Z       if (attrs) {
2025-04-15T08:07:18.2461267Z         for (let attr in attrs) {
2025-04-15T08:07:18.2461361Z           script.setAttribute(attr, attrs[attr]);
2025-04-15T08:07:18.2461425Z         }
2025-04-15T08:07:18.2461490Z       }
2025-04-15T08:07:18.2461494Z 
2025-04-15T08:07:18.2461578Z       script.onerror = function (err) {
2025-04-15T08:07:18.2461792Z         reject(new URIError(`loadScript: the script ${err.target.src} is not accessible.`));
2025-04-15T08:07:18.2461861Z       };
2025-04-15T08:07:18.2461865Z 
2025-04-15T08:07:18.2461946Z       script.onload = function () {
2025-04-15T08:07:18.2462046Z         clearTimeout(rejectWithTimeout);
2025-04-15T08:07:18.2462126Z         resolve(status.SUCCESS);
2025-04-15T08:07:18.2462192Z       };
2025-04-15T08:07:18.2462196Z 
2025-04-15T08:07:18.2462260Z       if (aref) {
2025-04-15T08:07:18.2462410Z         aref.parentNode.insertBefore(script, aref.nextSibling);
2025-04-15T08:07:18.2462473Z         return;
2025-04-15T08:07:18.2462535Z       }
2025-04-15T08:07:18.2462538Z 
2025-04-15T08:07:18.2462606Z       if (bref) {
2025-04-15T08:07:18.2462712Z         bref.parentNode.insertBefore(script, bref);
2025-04-15T08:07:18.2462777Z         return;
2025-04-15T08:07:18.2462837Z       }
2025-04-15T08:07:18.2462840Z 
2025-04-15T08:07:18.2462934Z       document.body.appendChild(script);
2025-04-15T08:07:18.2462996Z     });
2025-04-15T08:07:18.2463055Z   }
2025-04-15T08:07:18.2463064Z 
2025-04-15T08:07:18.2463658Z   __webpack_public_path__ = ensureOneSlash(window.envSettings.webpackPublicPath ? (window.envSettings.webpackPublicPath + "/") : (window.envSettings.agentApiUrl + "/v3/"))
2025-04-15T08:07:18.2463664Z 
2025-04-15T08:07:18.2463744Z   const loadLatestUI = () => {
2025-04-15T08:07:18.2464110Z     return fetch(__webpack_public_path__ + "bundlesManifest." + window.envSettings.version.toString().replace(/(\d+)\..+/, "$1") + ".json")
2025-04-15T08:07:18.2464232Z       .then(function (response) { return response.json() })
2025-04-15T08:07:18.2464314Z       .catch(() => goToOld('/v3'))
2025-04-15T08:07:18.2464391Z       .then(function (data) {
2025-04-15T08:07:18.2464485Z         Object.keys(data).forEach(function (k) {
2025-04-15T08:07:18.2464589Z           if (/\.(map|ico|html)$/.test(data[k])) return
2025-04-15T08:07:18.2464674Z           if (/static\//.test(data[k])) return
2025-04-15T08:07:18.2464678Z 
2025-04-15T08:07:18.2464763Z           if (/\.css.*$/.test(data[k])) {
2025-04-15T08:07:18.2464917Z             loadStyle(ensureOneSlash(__webpack_public_path__ + data[k]))
2025-04-15T08:07:18.2464982Z             return
2025-04-15T08:07:18.2465047Z           }
2025-04-15T08:07:18.2465051Z 
2025-04-15T08:07:18.2465126Z           if (/\.js.*$/.test(data[k])) {
2025-04-15T08:07:18.2465288Z             loadScript(ensureOneSlash(__webpack_public_path__ + data[k]), {
2025-04-15T08:07:18.2465357Z               async: false,
2025-04-15T08:07:18.2465420Z             });
2025-04-15T08:07:18.2465479Z           }
2025-04-15T08:07:18.2465538Z         })
2025-04-15T08:07:18.2465623Z         return Promise.resolve()
2025-04-15T08:07:18.2465683Z       })
2025-04-15T08:07:18.2465745Z   }
2025-04-15T08:07:18.2465748Z 
2025-04-15T08:07:18.2465828Z   const loadDashboard = signIn => {
2025-04-15T08:07:18.2465909Z     loadLatestUI().then(() => {
2025-04-15T08:07:18.2465974Z       if (signIn) {
2025-04-15T08:07:18.2466164Z         window.location.href = ensureOneSlash(
2025-04-15T08:07:18.2466502Z           `${window.envSettings.cloudUrl}/trust?redirect_uri=${encodeURIComponent(
2025-04-15T08:07:18.2466580Z             window.location.href
2025-04-15T08:07:18.2466675Z           )}&agent_uri=${encodeURIComponent(
2025-04-15T08:07:18.2466782Z             agentUri || window.envSettings.agentApiUrl
2025-04-15T08:07:18.2466885Z           )}&telemetry_session_id=${telemetrySessionId}`
2025-04-15T08:07:18.2466949Z         )
2025-04-15T08:07:18.2467008Z       }
2025-04-15T08:07:18.2467071Z     })
2025-04-15T08:07:18.2467130Z   }
2025-04-15T08:07:18.2467133Z 
2025-04-15T08:07:18.2467207Z   const signout = () => {
2025-04-15T08:07:18.2467304Z     localStorage.removeItem(CLOUD_TOKEN_KEY)
2025-04-15T08:07:18.2467384Z     window.location.reload()
2025-04-15T08:07:18.2467448Z   }
2025-04-15T08:07:18.2467452Z 
2025-04-15T08:07:18.2467532Z   const fetchRegistryInfo = () => {
2025-04-15T08:07:18.2467677Z     if (window.localNetdataRegistry) return Promise.resolve()
2025-04-15T08:07:18.2467681Z 
2025-04-15T08:07:18.2468106Z     return fetch(ensureOneSlash(window.envSettings.agentApiUrl + "/api/v1/registry?action=hello"), { cache: "no-cache", credentials: "include" })
2025-04-15T08:07:18.2468187Z       .then(response => {
2025-04-15T08:07:18.2468362Z         if (!response.ok) return Promise.reject({ message: defaultErrorMessage })
2025-04-15T08:07:18.2468440Z         return response.json()
2025-04-15T08:07:18.2468503Z       })
2025-04-15T08:07:18.2468568Z       .then(data => {
2025-04-15T08:07:18.2468744Z         if (!data) return Promise.reject({ message: "No registry data available." })
2025-04-15T08:07:18.2468748Z 
2025-04-15T08:07:18.2468855Z         let to = data.cloud_base_url.lastIndexOf('/');
2025-04-15T08:07:18.2469039Z         to = (to == -1 || to < data.cloud_base_url.length - 2) ? data.cloud_base_url.length : to;
2025-04-15T08:07:18.2469156Z         let cloudUrl = data.cloud_base_url.substring(0, to);
2025-04-15T08:07:18.2469160Z 
2025-04-15T08:07:18.2469254Z         let withoutNodes = btoa(JSON.stringify({
2025-04-15T08:07:18.2469342Z           registry: data.registry,
2025-04-15T08:07:18.2469426Z           machine_guid: data.machine_guid,
2025-04-15T08:07:18.2469634Z           hostname: data.hostname,
2025-04-15T08:07:18.2469711Z           agent: data.agent,
2025-04-15T08:07:18.2469778Z           nodes: []
2025-04-15T08:07:18.2469838Z         }))
2025-04-15T08:07:18.2469943Z         let iframe = document.createElement('iframe');
2025-04-15T08:07:18.2470262Z         iframe.src = data.registry + "/registry-access.html?x=" + withoutNodes + "&originUrl=" + window.envSettings.agentApiUrl;
2025-04-15T08:07:18.2470400Z         iframe.style = { position: "absolute", left: "-99999999px" };
2025-04-15T08:07:18.2470478Z         iframe.width = 0;
2025-04-15T08:07:18.2470549Z         iframe.height = 0;
2025-04-15T08:07:18.2470626Z         iframe.tabindex = -1;
2025-04-15T08:07:18.2470704Z         iframe.title = "empty";
2025-04-15T08:07:18.2470790Z         iframe.classList.add("hidden");
2025-04-15T08:07:18.2470885Z         document.body.appendChild(iframe);
2025-04-15T08:07:18.2470894Z 
2025-04-15T08:07:18.2470969Z         setTimeout(function () {
2025-04-15T08:07:18.2471118Z           document.title = data.hostname + ': Netdata Agent Console';
2025-04-15T08:07:18.2471403Z           iframe.contentWindow.postMessage(["netdata-registry", window.envSettings.agentApiUrl, data], "*")
2025-04-15T08:07:18.2471467Z         }, 300);
2025-04-15T08:07:18.2471474Z 
2025-04-15T08:07:18.2471602Z         window.addEventListener('message', function (event) {
2025-04-15T08:07:18.2471719Z           if (event.source !== iframe.contentWindow) return;
2025-04-15T08:07:18.2471723Z 
2025-04-15T08:07:18.2472014Z           if (event.data.status === "disabled") console.error("Your netdata registry is disabled! Check your configuration.")
2025-04-15T08:07:18.2472018Z 
2025-04-15T08:07:18.2472090Z           if (event.data) {
2025-04-15T08:07:18.2472194Z             if (!window.localNetdataRegistry) {
2025-04-15T08:07:18.2472290Z               window.localNetdataRegistry = {}
2025-04-15T08:07:18.2472443Z             }
2025-04-15T08:07:18.2472447Z 
2025-04-15T08:07:18.2472598Z             window.localNetdataRegistry.pg = event.data.person_guid
2025-04-15T08:07:18.2472607Z 
2025-04-15T08:07:18.2472692Z             if (!window.envSettings) {
2025-04-15T08:07:18.2472776Z               window.envSettings = {}
2025-04-15T08:07:18.2472836Z             }
2025-04-15T08:07:18.2472840Z 
2025-04-15T08:07:18.2472971Z             window.envSettings.visitor = event.data.person_guid
2025-04-15T08:07:18.2472975Z 
2025-04-15T08:07:18.2473039Z             try {
2025-04-15T08:07:18.2473241Z               var visitedNodesByName = event.data.urls.reduce(function (vn, visitedUrl) {
2025-04-15T08:07:18.2473343Z                 vn[visitedUrl[4]] = vn[visitedUrl[4]] || {}
2025-04-15T08:07:18.2473434Z                 vn[visitedUrl[4]].id = visitedUrl[0]
2025-04-15T08:07:18.2473528Z                 vn[visitedUrl[4]].name = visitedUrl[4]
2025-04-15T08:07:18.2473643Z                 vn[visitedUrl[4]].lastAccessTime = visitedUrl[2]
2025-04-15T08:07:18.2473765Z                 vn[visitedUrl[4]].urls = vn[visitedUrl[4]].urls || []
2025-04-15T08:07:18.2473870Z                 vn[visitedUrl[4]].urls.push(visitedUrl[1])
2025-04-15T08:07:18.2473874Z 
2025-04-15T08:07:18.2473943Z                 return vn
2025-04-15T08:07:18.2474006Z               }, {})
2025-04-15T08:07:18.2474010Z 
2025-04-15T08:07:18.2474204Z               window.visitedNodes = Object.keys(visitedNodesByName).map(function (vn) {
2025-04-15T08:07:18.2474294Z                 return visitedNodesByName[vn]
2025-04-15T08:07:18.2474355Z               })
2025-04-15T08:07:18.2474425Z             } catch (e) {
2025-04-15T08:07:18.2474490Z               // do nothing
2025-04-15T08:07:18.2474555Z             }
2025-04-15T08:07:18.2474615Z           }
2025-04-15T08:07:18.2474676Z         });
2025-04-15T08:07:18.2474680Z 
2025-04-15T08:07:18.2474760Z         return Promise.resolve()
2025-04-15T08:07:18.2474821Z       })
2025-04-15T08:07:18.2474890Z   }
2025-04-15T08:07:18.2474893Z 
2025-04-15T08:07:18.2475096Z   const cloudRequest = async (endpoint, {allowAnonymous = false, ...options} = {}) => {
2025-04-15T08:07:18.2475310Z     const cloudToken = localStorage.getItem(CLOUD_TOKEN_KEY)
2025-04-15T08:07:18.2475488Z     if (!allowAnonymous && !cloudToken) return Promise.reject("No cloud token")
2025-04-15T08:07:18.2475492Z 
2025-04-15T08:07:18.2475955Z     options = { ...options, headers: { ...(options?.headers || {}), ...(!!cloudToken && {Authorization: `*** } }
2025-04-15T08:07:18.2475960Z 
2025-04-15T08:07:18.2476275Z     return fetch(ensureOneSlash(`${window.envSettings.apiUrl}/${endpoint}`), options)
2025-04-15T08:07:18.2476342Z   }
2025-04-15T08:07:18.2476346Z 
2025-04-15T08:07:18.2476420Z   const sleep = (ms) => {
2025-04-15T08:07:18.2476550Z     return new Promise(resolve => setTimeout(resolve, ms));
2025-04-15T08:07:18.2476615Z   }
2025-04-15T08:07:18.2476618Z 
2025-04-15T08:07:18.2476733Z   const claimAgent = ({ key, token, rooms } = {}) => {
2025-04-15T08:07:18.2476839Z     const url = window.envSettings.apiUrl;
2025-04-15T08:07:18.2477000Z     let query = new URLSearchParams({ key, rooms, token, url }).toString()
2025-04-15T08:07:18.2477139Z     query = key && rooms && token && url && query ? `?${query}` : ""
2025-04-15T08:07:18.2477424Z     return fetch(ensureOneSlash(`${window.envSettings.agentApiUrl}/api/v3/claim${query}`)).then(response => {
2025-04-15T08:07:18.2477564Z       const contentType = response.headers.get("content-type");
2025-04-15T08:07:18.2477571Z 
2025-04-15T08:07:18.2477687Z       if (contentType && contentType.includes("text")) {
2025-04-15T08:07:18.2477765Z         throw response.text();
2025-04-15T08:07:18.2477830Z       }
2025-04-15T08:07:18.2477834Z 
2025-04-15T08:07:18.2477944Z       if (contentType && contentType.includes("json")) {
2025-04-15T08:07:18.2478027Z         return response.json();
2025-04-15T08:07:18.2478089Z       }
2025-04-15T08:07:18.2478092Z 
2025-04-15T08:07:18.2478236Z       throw new Error('Unsupported content type: ' + contentType);
2025-04-15T08:07:18.2478431Z     }).then(data => {
2025-04-15T08:07:18.2478512Z       if (data.success === false) {
2025-04-15T08:07:18.2478596Z         throw data.message
2025-04-15T08:07:18.2478655Z       }
2025-04-15T08:07:18.2478659Z 
2025-04-15T08:07:18.2478794Z       if (key && data.can_be_claimed === false && !data.agent.nd) {
2025-04-15T08:07:18.2478884Z         return sleep(1000).then(claimAgent);
2025-04-15T08:07:18.2478944Z       }
2025-04-15T08:07:18.2478947Z 
2025-04-15T08:07:18.2479019Z       return data
2025-04-15T08:07:18.2479079Z     });
2025-04-15T08:07:18.2479141Z   }
2025-04-15T08:07:18.2479144Z 
2025-04-15T08:07:18.2479217Z   const checkMe = mg => {
2025-04-15T08:07:18.2479424Z     return fetch(ensureOneSlash(`${window.envSettings.agentApiUrl}/api/v3/me`), {
2025-04-15T08:07:18.2479490Z       headers: {
2025-04-15T08:07:18.2479682Z         "X-Netdata-Auth": `***
2025-04-15T08:07:18.2479744Z       }
2025-04-15T08:07:18.2479805Z     })
2025-04-15T08:07:18.2479900Z       .then(response => response.json())
2025-04-15T08:07:18.2479967Z       .catch(() => ({
2025-04-15T08:07:18.2480035Z         auth: "none",
2025-04-15T08:07:18.2480113Z         cloud_account_id: null,
2025-04-15T08:07:18.2480185Z         client_name: "",
2025-04-15T08:07:18.2480267Z         access: ["anonymous-data"],
2025-04-15T08:07:18.2480336Z         user_role: "any",
2025-04-15T08:07:18.2480401Z       }))
2025-04-15T08:07:18.2480460Z   }
2025-04-15T08:07:18.2480463Z 
2025-04-15T08:07:18.2480548Z   const fetchUserAccess = (mg, nd) => {
2025-04-15T08:07:18.2480965Z     return cloudRequest(`/api/v1/agents/${mg}/user_agent_node_access${nd ? `?nodeID=${nd}` : ""}`, {allowAnonymous: true}).then(response => response.json()).then(data => {
2025-04-15T08:07:18.2481907Z       window.localNetdataRegistry.limitations = data.limitations ? {limit: data.limitations.limit || 99999999, customDashboardsLimit: data.limitations.custom_dashboards_limit || 99999999, windowsSupport: data.limitations.windows_support || false} : {limit: 99999999, customDashboardsLimit: 99999999, windowsSupport: true}
2025-04-15T08:07:18.2481920Z 
2025-04-15T08:07:18.2482133Z       if (data.user_node_status === "noAccess") {
2025-04-15T08:07:18.2482201Z         return data
2025-04-15T08:07:18.2482264Z       }
2025-04-15T08:07:18.2482397Z       window.localNetdataRegistry.spaceId = data.space_id
2025-04-15T08:07:18.2482400Z 
2025-04-15T08:07:18.2482514Z       const room = data.rooms.find(r => r.untouchable)
2025-04-15T08:07:18.2482518Z 
2025-04-15T08:07:18.2482631Z       window.localNetdataRegistry.roomId = room.id
2025-04-15T08:07:18.2482739Z       window.localNetdataRegistry.room = room
2025-04-15T08:07:18.2482743Z 
2025-04-15T08:07:18.2482807Z       return data
2025-04-15T08:07:18.2482878Z     }).catch((err) => { })
2025-04-15T08:07:18.2482942Z   }
2025-04-15T08:07:18.2482946Z 
2025-04-15T08:07:18.2483067Z   const getAgentToken = ({ mg, nd, claimId }, agent) => {
2025-04-15T08:07:18.2483374Z     return cloudRequest(`/api/v2/bearer_get_token?node_id=${nd}&claim_id=${claimId}&machine_guid=${mg}`).then(response => {
2025-04-15T08:07:18.2483463Z       if (response.status === 401) {
2025-04-15T08:07:18.2483531Z         signout()
2025-04-15T08:07:18.2483598Z         return
2025-04-15T08:07:18.2483657Z       }
2025-04-15T08:07:18.2483732Z       if (!response.ok) {
2025-04-15T08:07:18.2483843Z         // Parse the error response to extract the message
2025-04-15T08:07:18.2483943Z         return response.json().then(errorData => {
2025-04-15T08:07:18.2484054Z           const error = new Error(errorData.errorMessage);
2025-04-15T08:07:18.2484147Z           error.data = errorData.errorContext
2025-04-15T08:07:18.2484217Z           throw error
2025-04-15T08:07:18.2484279Z         });
2025-04-15T08:07:18.2484343Z       }
2025-04-15T08:07:18.2484422Z       return response.json();
2025-04-15T08:07:18.2484489Z     }).then(data => {
2025-04-15T08:07:18.2484566Z       if (data && data.token) {
2025-04-15T08:07:18.2484686Z         localStorage.setItem(`agentJWT:${mg}`, data?.token)
2025-04-15T08:07:18.2484924Z         localStorage.setItem(`agentJWTExp:${mg}`, data?.expiration)
2025-04-15T08:07:18.2484985Z       }
2025-04-15T08:07:18.2485056Z       return data
2025-04-15T08:07:18.2485125Z     }).catch((err) => {
2025-04-15T08:07:18.2485193Z       stopLoading()
2025-04-15T08:07:18.2485197Z 
2025-04-15T08:07:18.2485321Z       let message = "Something went wrong. Please try again."
2025-04-15T08:07:18.2485427Z       if (err.data && err.data.state === "created") {
2025-04-15T08:07:18.2485692Z         message = "The node is claimed and is syncing with Netdata Cloud. Please wait a few seconds and try again."
2025-04-15T08:07:18.2485756Z       } else {
2025-04-15T08:07:18.2485852Z         message = (err && err.message) || message
2025-04-15T08:07:18.2485915Z       }
2025-04-15T08:07:18.2485918Z 
2025-04-15T08:07:18.2485921Z 
2025-04-15T08:07:18.2486158Z       const msgSignIn = document.getElementById("msgSignIn");
2025-04-15T08:07:18.2486259Z       msgSignIn.textContent = message
2025-04-15T08:07:18.2486268Z 
2025-04-15T08:07:18.2486394Z       const btnSignIn = document.getElementById("btnSignIn");
2025-04-15T08:07:18.2486495Z       btnSignIn.style.display = "none"
2025-04-15T08:07:18.2486499Z 
2025-04-15T08:07:18.2486581Z       setupOptOutMessage(agent)
2025-04-15T08:07:18.2486650Z     })
2025-04-15T08:07:18.2486710Z   }
2025-04-15T08:07:18.2486713Z 
2025-04-15T08:07:18.2486803Z   const setupOptOutMessage = agent => {
2025-04-15T08:07:18.2486935Z     const bearerProtection = agent.api.bearer_protection;
2025-04-15T08:07:18.2486939Z 
2025-04-15T08:07:18.2487142Z     const isWindows = (agent.application.os.kernel || "").toLowerCase() === "windows"
2025-04-15T08:07:18.2487588Z     const lockWindows = isWindows && (!window.localNetdataRegistry.limitation || window.localNetdataRegistry.limitations.windowsSupport === false);
2025-04-15T08:07:18.2487592Z 
2025-04-15T08:07:18.2487739Z     const denyAnonymousAccess = bearerProtection || lockWindows;
2025-04-15T08:07:18.2487743Z 
2025-04-15T08:07:18.2487858Z     // Get all elements with the "opt-out-link" class
2025-04-15T08:07:18.2488050Z     const optOutLinkElems = document.getElementsByClassName("opt-out-link");
2025-04-15T08:07:18.2488276Z     if (optOutLinkElems.length > 0) {
2025-04-15T08:07:18.2488392Z       for (let i = 0; i < optOutLinkElems.length; i++) {
2025-04-15T08:07:18.2488584Z         optOutLinkElems[i].style.display = denyAnonymousAccess ? "none" : "inline";
2025-04-15T08:07:18.2488650Z       }
2025-04-15T08:07:18.2488710Z     }
2025-04-15T08:07:18.2488714Z 
2025-04-15T08:07:18.2488847Z     // Get all elements with the "no-anonymous-access" class
2025-04-15T08:07:18.2489108Z     const anonymousAccessDeniedElems = document.getElementsByClassName("no-anonymous-access");
2025-04-15T08:07:18.2489226Z     if (anonymousAccessDeniedElems.length > 0) {
2025-04-15T08:07:18.2489365Z       for (let i = 0; i < anonymousAccessDeniedElems.length; i++) {
2025-04-15T08:07:18.2489499Z         if (anonymousAccessDeniedElems[i].textContent === "") {
2025-04-15T08:07:18.2490281Z           anonymousAccessDeniedElems[i].innerHTML = bearerProtection ? "Anonymous access is not allowed. *** is enabled.<br />Please sign in to continue." : "Anonymous access to the dashboard of Windows nodes is not allowed.<br />Please sign in to continue.";
2025-04-15T08:07:18.2490352Z         }
2025-04-15T08:07:18.2490587Z         anonymousAccessDeniedElems[i].style.display = denyAnonymousAccess ? "inline" : "none";
2025-04-15T08:07:18.2490653Z       }
2025-04-15T08:07:18.2490712Z     }
2025-04-15T08:07:18.2490773Z   }
2025-04-15T08:07:18.2490777Z 
2025-04-15T08:07:18.2490879Z   const createClaimingToken = spaceId => {
2025-04-15T08:07:18.2490973Z     if (!spaceId) return Promise.resolve();
2025-04-15T08:07:18.2491078Z     toggleClaimingTokenLoadingState(true);
2025-04-15T08:07:18.2491261Z     return cloudRequest(`/api/v1/spaces/${spaceId}/token`).then(response => {
2025-04-15T08:07:18.2491370Z       toggleClaimingTokenLoadingState(false);
2025-04-15T08:07:18.2491585Z       return response.json();
2025-04-15T08:07:18.2491648Z     });
2025-04-15T08:07:18.2491712Z   }
2025-04-15T08:07:18.2491715Z 
2025-04-15T08:07:18.2491817Z   const getClaimingToken = async spaceId => {
2025-04-15T08:07:18.2491914Z     if (!spaceId) return Promise.resolve();
2025-04-15T08:07:18.2492086Z     const cachedToken = state.cache.claimingTokensPerSpace[spaceId];
2025-04-15T08:07:18.2492212Z     if (cachedToken) return Promise.resolve(cachedToken);
2025-04-15T08:07:18.2492331Z     const token = await createClaimingToken(spaceId);
2025-04-15T08:07:18.2492420Z     cacheClaimingToken(spaceId, token);
2025-04-15T08:07:18.2492513Z     return Promise.resolve(token);
2025-04-15T08:07:18.2492574Z   }
2025-04-15T08:07:18.2492577Z 
2025-04-15T08:07:18.2492658Z   const fetchSpaces = () => {
2025-04-15T08:07:18.2492748Z     toggleSpacesLoadingState(true);
2025-04-15T08:07:18.2492881Z     return cloudRequest("/api/v3/spaces").then(response => {
2025-04-15T08:07:18.2492979Z       toggleSpacesLoadingState(false);
2025-04-15T08:07:18.2493061Z       return response.json();
2025-04-15T08:07:18.2493126Z     });
2025-04-15T08:07:18.2493185Z   }
2025-04-15T08:07:18.2493188Z 
2025-04-15T08:07:18.2493271Z   const getSpaces = async () => {
2025-04-15T08:07:18.2493376Z     const cachedSpaces = state.cache.spaces;
2025-04-15T08:07:18.2493504Z     if (cachedSpaces) return Promise.resolve(cachedSpaces);
2025-04-15T08:07:18.2493593Z     const spaces = await fetchSpaces();
2025-04-15T08:07:18.2493669Z     cacheSpaces(spaces);
2025-04-15T08:07:18.2493759Z     return Promise.resolve(spaces);
2025-04-15T08:07:18.2493817Z   }
2025-04-15T08:07:18.2493820Z 
2025-04-15T08:07:18.2493907Z   const fetchSpaceRooms = spaceId => {
2025-04-15T08:07:18.2494005Z     if (!spaceId) return Promise.resolve([])
2025-04-15T08:07:18.2494096Z     toggleRoomsLoadingState(true);
2025-04-15T08:07:18.2494370Z     return cloudRequest(`/api/v2/spaces/${spaceId}/rooms?show_all=true&default=false`).then(response => {
2025-04-15T08:07:18.2494459Z       toggleRoomsLoadingState(false);
2025-04-15T08:07:18.2494542Z       return response.json();
2025-04-15T08:07:18.2494603Z     })
2025-04-15T08:07:18.2494661Z   }
2025-04-15T08:07:18.2494664Z 
2025-04-15T08:07:18.2494843Z   const getSpaceRooms = async spaceId => {
2025-04-15T08:07:18.2494939Z     if (!spaceId) return Promise.resolve([]);
2025-04-15T08:07:18.2495056Z     const cachedRooms = state.cache.rooms[spaceId];
2025-04-15T08:07:18.2495177Z     if (cachedRooms) return Promise.resolve(cachedRooms);
2025-04-15T08:07:18.2495279Z     const rooms = await fetchSpaceRooms(spaceId);
2025-04-15T08:07:18.2495362Z     cacheRooms(spaceId, rooms);
2025-04-15T08:07:18.2495447Z     return Promise.resolve(rooms);
2025-04-15T08:07:18.2495510Z   }
2025-04-15T08:07:18.2495513Z 
2025-04-15T08:07:18.2495607Z   const updateSelectedOptions = root => {
2025-04-15T08:07:18.2495678Z     if (!root) return;
2025-04-15T08:07:18.2495944Z     const checkboxes = root.querySelectorAll('.dropdown > .checkbox-container input[type="checkbox"]');
2025-04-15T08:07:18.2496039Z     const selected = Array.from(checkboxes)
2025-04-15T08:07:18.2496238Z       .filter((checkbox) => checkbox.checked)
2025-04-15T08:07:18.2496420Z       .map((checkbox) => ({ value: checkbox.value, name: checkbox.dataset.name }));
2025-04-15T08:07:18.2496425Z 
2025-04-15T08:07:18.2496551Z     const selectedNames = selected.map(({ name }) => name);
2025-04-15T08:07:18.2496687Z     const selectedValues = selected.map(({ value }) => value);
2025-04-15T08:07:18.2496691Z 
2025-04-15T08:07:18.2496833Z     const selectedSpaceIds = state.claim.selectedSpaceIds;
2025-04-15T08:07:18.2496919Z     const spaces = state.cache.spaces;
2025-04-15T08:07:18.2497232Z     const selectedSpaceName = selectedSpaceIds.length ? spaces.find(({ id }) => id == selectedSpaceIds[0])?.name : null;
2025-04-15T08:07:18.2497236Z 
2025-04-15T08:07:18.2497510Z     const dropdownChangeEvent = new CustomEvent("dropdownChange", { detail: { values: selectedValues } });
2025-04-15T08:07:18.2497611Z     root.dispatchEvent(dropdownChangeEvent);
2025-04-15T08:07:18.2497733Z 
2025-04-15T08:07:18.2497858Z     root.querySelector("#selectedItems").textContent =
2025-04-15T08:07:18.2498038Z       selectedNames.length > 0 ? selectedNames.join(", ") : "Select Rooms";
2025-04-15T08:07:18.2498043Z 
2025-04-15T08:07:18.2498194Z     const target = document.getElementById(root.dataset.target);
2025-04-15T08:07:18.2498273Z     target.textContent =
2025-04-15T08:07:18.2498355Z       selected.length > 0
2025-04-15T08:07:18.2498519Z         ? `You are ready to connect your agent to room(s): ${selectedNames.join(
2025-04-15T08:07:18.2498581Z           ", "
2025-04-15T08:07:18.2498739Z         )}${selectedSpaceName ? ` of ${selectedSpaceName} space` : ""}`
2025-04-15T08:07:18.2498804Z         : "";
2025-04-15T08:07:18.2498869Z   }
2025-04-15T08:07:18.2498872Z 
2025-04-15T08:07:18.2498963Z   const bindDropdownOptions = () => {
2025-04-15T08:07:18.2499129Z     document.querySelectorAll(".dropdown-custom").forEach(root => {
2025-04-15T08:07:18.2499296Z       root.querySelectorAll(".nd-checkbox > input").forEach(input => {
2025-04-15T08:07:18.2499475Z         input.addEventListener("change", () => updateSelectedOptions(root));
2025-04-15T08:07:18.2499545Z       });
2025-04-15T08:07:18.2499606Z     });
2025-04-15T08:07:18.2499669Z   }
2025-04-15T08:07:18.2499672Z 
2025-04-15T08:07:18.2499758Z   const buildRoomsList = (rooms = []) => {
2025-04-15T08:07:18.2499957Z     const container = document.getElementById("roomsSelectorOptionsContainer");
2025-04-15T08:07:18.2500028Z     if (container) {
2025-04-15T08:07:18.2500107Z       container.innerHTML = "";
2025-04-15T08:07:18.2500195Z       rooms.forEach(({ id, name }) => {
2025-04-15T08:07:18.2500299Z         const isDefaultSelected = name === "All nodes"
2025-04-15T08:07:18.2500303Z 
2025-04-15T08:07:18.2500388Z         if (isDefaultSelected) {
2025-04-15T08:07:18.2500473Z           setSelectedRoomsStatus(id)
2025-04-15T08:07:18.2500533Z         }
2025-04-15T08:07:18.2500541Z 
2025-04-15T08:07:18.2500689Z         const label = createElem("label", { classList: "nd-checkbox" });
2025-04-15T08:07:18.2501033Z         const input = createElem("input", { type: "checkbox", value: id, checked: isDefaultSelected });
2025-04-15T08:07:18.2501124Z         input.dataset.name = name;
2025-04-15T08:07:18.2501199Z         input.onchange = e => {
2025-04-15T08:07:18.2501294Z           setSelectedRoomsStatus(prev => {
2025-04-15T08:07:18.2501396Z             if (e.target.checked) return [...prev, id];
2025-04-15T08:07:18.2501482Z             return prev.filter(r => r != id);
2025-04-15T08:07:18.2501546Z           });
2025-04-15T08:07:18.2501606Z         }
2025-04-15T08:07:18.2501609Z 
2025-04-15T08:07:18.2501747Z         const span = createElem("span", { classList: "checkmark" });
2025-04-15T08:07:18.2501852Z         const text = document.createTextNode(name);
2025-04-15T08:07:18.2501856Z 
2025-04-15T08:07:18.2501941Z         label.appendChild(input);
2025-04-15T08:07:18.2502022Z         label.appendChild(span);
2025-04-15T08:07:18.2502106Z         label.appendChild(text);
2025-04-15T08:07:18.2502197Z         container.appendChild(label);
2025-04-15T08:07:18.2502258Z       });
2025-04-15T08:07:18.2502261Z 
2025-04-15T08:07:18.2502352Z       bindDropdownOptions();
2025-04-15T08:07:18.2502412Z     }
2025-04-15T08:07:18.2502474Z   }
2025-04-15T08:07:18.2502477Z 
2025-04-15T08:07:18.2502572Z   const buildSpacesList = (spaces = []) => {
2025-04-15T08:07:18.2502704Z     const container = document.getElementById("spacesList");
2025-04-15T08:07:18.2502776Z     if (container) {
2025-04-15T08:07:18.2502854Z       container.innerHTML = "";
2025-04-15T08:07:18.2502977Z       spaces.forEach(({ id, name, permissions = [] }) => {
2025-04-15T08:07:18.2503085Z         if (!permissions.includes("node:Create")) return
2025-04-15T08:07:18.2503088Z 
2025-04-15T08:07:18.2503177Z         const listItem = createElem("li");
2025-04-15T08:07:18.2503264Z         listItem.innerText = name;
2025-04-15T08:07:18.2503360Z         listItem.className = "space-item";
2025-04-15T08:07:18.2503536Z         listItem.dataset.id = id;
2025-04-15T08:07:18.2503621Z         listItem.onclick = async () => {
2025-04-15T08:07:18.2503883Z           document.querySelectorAll(".space-item").forEach(item => item.classList.remove("selected"));
2025-04-15T08:07:18.2503981Z           listItem.classList.add("selected");
2025-04-15T08:07:18.2504070Z           setSelectedSpacesStatus([id]);
2025-04-15T08:07:18.2504138Z         };
2025-04-15T08:07:18.2504225Z         container.appendChild(listItem);
2025-04-15T08:07:18.2504289Z       });
2025-04-15T08:07:18.2504350Z     }
2025-04-15T08:07:18.2504433Z     return Promise.resolve();
2025-04-15T08:07:18.2504498Z   }
2025-04-15T08:07:18.2504501Z 
2025-04-15T08:07:18.2504588Z   const initCustomDropdown = () => {
2025-04-15T08:07:18.2504674Z     const toggleDropdown = e => {
2025-04-15T08:07:18.2504754Z       if (!e.currentTarget) return;
2025-04-15T08:07:18.2504977Z       const checkboxContainer = e.currentTarget.querySelector(".checkbox-container");
2025-04-15T08:07:18.2505065Z       if (checkboxContainer) {
2025-04-15T08:07:18.2505346Z         checkboxContainer.style.display = checkboxContainer.style.display === "block" ? "none" : "block";
2025-04-15T08:07:18.2505420Z       }
2025-04-15T08:07:18.2505480Z     }
2025-04-15T08:07:18.2505484Z 
2025-04-15T08:07:18.2505568Z     const clearSelection = e => {
2025-04-15T08:07:18.2505649Z       if (!e.currentTarget) return;
2025-04-15T08:07:18.2505795Z       const root = e.currentTarget.closest(".dropdown-custom");
2025-04-15T08:07:18.2505861Z       if (root) {
2025-04-15T08:07:18.2506224Z         const checkboxes = root.querySelectorAll('.dropdown > .checkbox-container input[type="checkbox"]');
2025-04-15T08:07:18.2506385Z         checkboxes.forEach((checkbox) => (checkbox.checked = false));
2025-04-15T08:07:18.2506473Z         updateSelectedOptions(root);
2025-04-15T08:07:18.2506541Z       }
2025-04-15T08:07:18.2506610Z     }
2025-04-15T08:07:18.2506613Z 
2025-04-15T08:07:18.2506781Z     document.querySelectorAll(".dropdown-custom").forEach(root => {
2025-04-15T08:07:18.2506913Z       const btnClear = root.querySelector(".clear-button");
2025-04-15T08:07:18.2507146Z       const dropdown = root.querySelector(".dropdown");
2025-04-15T08:07:18.2507226Z       if (dropdown) {
2025-04-15T08:07:18.2507296Z         if (btnClear) {
2025-04-15T08:07:18.2507431Z           btnClear.addEventListener("click", clearSelection);
2025-04-15T08:07:18.2507493Z         }
2025-04-15T08:07:18.2507618Z         dropdown.addEventListener("click", toggleDropdown);
2025-04-15T08:07:18.2507683Z       }
2025-04-15T08:07:18.2507743Z     });
2025-04-15T08:07:18.2507747Z 
2025-04-15T08:07:18.2507854Z     document.addEventListener("click", (e) => {
2025-04-15T08:07:18.2508030Z       document.querySelectorAll(".dropdown-custom").forEach(dropdown => {
2025-04-15T08:07:18.2508224Z         const checkboxContainer = dropdown.querySelector(".checkbox-container");
2025-04-15T08:07:18.2508385Z         if (dropdown && checkboxContainer && !dropdown.contains(e.target)) {
2025-04-15T08:07:18.2508500Z           checkboxContainer.style.display = "none";
2025-04-15T08:07:18.2508567Z         }
2025-04-15T08:07:18.2508631Z       });
2025-04-15T08:07:18.2508699Z     });
2025-04-15T08:07:18.2508702Z 
2025-04-15T08:07:18.2508785Z     return Promise.resolve();
2025-04-15T08:07:18.2508849Z   }
2025-04-15T08:07:18.2508852Z 
2025-04-15T08:07:18.2508944Z   const initClaimingElements = () => {
2025-04-15T08:07:18.2509098Z     const claimCommand = document.getElementById("claimCommand");
2025-04-15T08:07:18.2509227Z     const claimTip = document.getElementById("claimTip");
2025-04-15T08:07:18.2509391Z     const btnPrev = document.getElementById("btnConnectionStepPrev");
2025-04-15T08:07:18.2509562Z     const btnNext = document.getElementById("btnConnectionStepNext");
2025-04-15T08:07:18.2509688Z     const btnClaim = document.getElementById("btnClaim");
2025-04-15T08:07:18.2509886Z     const claimingPrivateKey = document.getElementById("claimingPrivateKey");
2025-04-15T08:07:18.2510001Z 
2025-04-15T08:07:18.2510120Z     if (claimCommand && !!state.claim?.status?.command) {
2025-04-15T08:07:18.2510255Z       claimCommand.innerText = state.claim.status.command;
2025-04-15T08:07:18.2510325Z     }
2025-04-15T08:07:18.2510329Z 
2025-04-15T08:07:18.2510441Z     if (claimTip && !!state.claim?.status?.key_filename) {
2025-04-15T08:07:18.2511108Z       claimTip.innerText = `Tip: If the command doesn’t work out-of-the-box, locate the ${state.claim.status.key_filename} file, open it in your favourite text editor, and copy it to your clipboard.`;
2025-04-15T08:07:18.2511172Z     }
2025-04-15T08:07:18.2511175Z 
2025-04-15T08:07:18.2511246Z     if (btnPrev) {
2025-04-15T08:07:18.2511350Z       btnPrev.addEventListener("click", () => {
2025-04-15T08:07:18.2511445Z         setClaimingStep(prev => prev - 1);
2025-04-15T08:07:18.2511514Z       });
2025-04-15T08:07:18.2511574Z     }
2025-04-15T08:07:18.2511578Z 
2025-04-15T08:07:18.2511648Z     if (btnNext) {
2025-04-15T08:07:18.2511764Z       btnNext.addEventListener("click", async () => {
2025-04-15T08:07:18.2511911Z         const newStep = await setClaimingStep(prev => prev + 1);
2025-04-15T08:07:18.2512059Z         if (newStep == 2 && !!state.claim.selectedSpaceIds.length) {
2025-04-15T08:07:18.2512176Z           const spaceId = state.claim.selectedSpaceIds[0];
2025-04-15T08:07:18.2512282Z           const rooms = await getSpaceRooms(spaceId);
2025-04-15T08:07:18.2512365Z           buildRoomsList(rooms);
2025-04-15T08:07:18.2512459Z           await getClaimingToken(spaceId);
2025-04-15T08:07:18.2512522Z         }
2025-04-15T08:07:18.2512584Z       });
2025-04-15T08:07:18.2512649Z     }
2025-04-15T08:07:18.2512652Z 
2025-04-15T08:07:18.2512721Z     if (btnClaim) {
2025-04-15T08:07:18.2512843Z       btnClaim.addEventListener("click", async () => {
2025-04-15T08:07:18.2512948Z         toggleClaimingAgentLoadingState(true);
2025-04-15T08:07:18.2513043Z         await setClaimResponseState({});
2025-04-15T08:07:18.2513223Z         const { selectedSpaceIds, selectedRoomIds, privateKey } = state.claim;
2025-04-15T08:07:18.2513537Z         const { token } = selectedSpaceIds.length ? state.cache.claimingTokensPerSpace[selectedSpaceIds[0]] || {} : {};
2025-04-15T08:07:18.2513651Z 
2025-04-15T08:07:18.2513733Z         let didCatch = false;
2025-04-15T08:07:18.2513970Z         const data = await claimAgent({ key: privateKey, token, rooms: selectedRoomIds }).catch(err => {
2025-04-15T08:07:18.2514048Z           didCatch = true;
2025-04-15T08:07:18.2514163Z           setClaimResponseState({ error: err.message });
2025-04-15T08:07:18.2514230Z         })
2025-04-15T08:07:18.2514234Z 
2025-04-15T08:07:18.2514314Z         if (data === "invalid key") {
2025-04-15T08:07:18.2514386Z           didCatch = true;
2025-04-15T08:07:18.2514505Z           setClaimResponseState({ error: "Invalid key" });
2025-04-15T08:07:18.2514567Z         }
2025-04-15T08:07:18.2514677Z         toggleClaimingAgentLoadingState(false);
2025-04-15T08:07:18.2514681Z 
2025-04-15T08:07:18.2514755Z         if (didCatch) return;
2025-04-15T08:07:18.2514763Z 
2025-04-15T08:07:18.2514832Z         if (data) {
2025-04-15T08:07:18.2514904Z           if (data.success) {
2025-04-15T08:07:18.2514996Z             window.location.reload();
2025-04-15T08:07:18.2515064Z           } else {
2025-04-15T08:07:18.2515152Z             setClaimResponseState(data);
2025-04-15T08:07:18.2515216Z           }
2025-04-15T08:07:18.2515276Z         }
2025-04-15T08:07:18.2515337Z       });
2025-04-15T08:07:18.2515398Z     }
2025-04-15T08:07:18.2515402Z 
2025-04-15T08:07:18.2515480Z     if (claimingPrivateKey) {
2025-04-15T08:07:18.2515752Z       claimingPrivateKey.addEventListener("input", e => setClaimingPrivateKeyState(e.target.value));
2025-04-15T08:07:18.2515813Z     }
2025-04-15T08:07:18.2515879Z   }
2025-04-15T08:07:18.2515883Z 
2025-04-15T08:07:18.2515969Z   const setClaimStatus = async () => {
2025-04-15T08:07:18.2516157Z     const status = await claimAgent();
2025-04-15T08:07:18.2516242Z     const claimStatus = {
2025-04-15T08:07:18.2516501Z       command: status.cmd || `sudo cat ${status.key_filename}`,
2025-04-15T08:07:18.2516569Z       ...status
2025-04-15T08:07:18.2516630Z     };
2025-04-15T08:07:18.2516736Z     await setClaimStatusState(claimStatus);
2025-04-15T08:07:18.2516817Z     return Promise.resolve();
2025-04-15T08:07:18.2516878Z   }
2025-04-15T08:07:18.2516881Z 
2025-04-15T08:07:18.2516978Z   const prepareClaiming = async agent => {
2025-04-15T08:07:18.2517054Z     await setClaimStatus();
2025-04-15T08:07:18.2517139Z     setupOptOutMessage(agent)
2025-04-15T08:07:18.2517221Z     const spaces = await getSpaces();
2025-04-15T08:07:18.2517306Z     await buildSpacesList(spaces);
2025-04-15T08:07:18.2517393Z     initCustomDropdown();
2025-04-15T08:07:18.2517473Z     initClaimingElements();
2025-04-15T08:07:18.2517541Z     syncUI();
2025-04-15T08:07:18.2517601Z   }
2025-04-15T08:07:18.2517605Z 
2025-04-15T08:07:18.2517691Z   const startLoading = () => {
2025-04-15T08:07:18.2517772Z     const body = document.body;
2025-04-15T08:07:18.2517841Z     if (body) {
2025-04-15T08:07:18.2517929Z       body.classList.add("loading");
2025-04-15T08:07:18.2517990Z     }
2025-04-15T08:07:18.2518055Z   }
2025-04-15T08:07:18.2518058Z 
2025-04-15T08:07:18.2518140Z   const stopLoading = () => {
2025-04-15T08:07:18.2518217Z     const body = document.body;
2025-04-15T08:07:18.2518287Z     if (body) {
2025-04-15T08:07:18.2518378Z       body.classList.remove("loading");
2025-04-15T08:07:18.2518483Z       window.dispatchEvent(new Event("resize"));
2025-04-15T08:07:18.2518544Z     }
2025-04-15T08:07:18.2518605Z   }
2025-04-15T08:07:18.2518608Z 
2025-04-15T08:07:18.2518763Z   const showErrorMessage = (message = defaultErrorMessage) => {
2025-04-15T08:07:18.2518939Z     const messageContainer = document.getElementById("loadingMessage");
2025-04-15T08:07:18.2519021Z     if (messageContainer) {
2025-04-15T08:07:18.2519115Z       messageContainer.innerHTML = message;
2025-04-15T08:07:18.2519187Z       startLoading();
2025-04-15T08:07:18.2519247Z     }
2025-04-15T08:07:18.2519312Z   }
2025-04-15T08:07:18.2519316Z 
2025-04-15T08:07:18.2519398Z   const initMetrics = data => {
2025-04-15T08:07:18.2519712Z     if (!data?.agents?.[0]) return Promise.reject({ message: "No agent data available." })
2025-04-15T08:07:18.2519717Z 
2025-04-15T08:07:18.2519868Z     const setPercentageBarWidth = (containerId, percent) => {
2025-04-15T08:07:18.2520000Z       const container = document.getElementById(containerId);
2025-04-15T08:07:18.2520072Z       if (container) {
2025-04-15T08:07:18.2520223Z         const percentageContainer = document.createElement("div");
2025-04-15T08:07:18.2520367Z         percentageContainer.className = "percentage-container";
2025-04-15T08:07:18.2520371Z 
2025-04-15T08:07:18.2520498Z         const percentageBar = document.createElement("div");
2025-04-15T08:07:18.2520607Z         percentageBar.className = "percentage-bar";
2025-04-15T08:07:18.2520716Z         percentageBar.style.width = percent + "%";
2025-04-15T08:07:18.2520719Z 
2025-04-15T08:07:18.2520850Z         const percentageText = document.createElement("div");
2025-04-15T08:07:18.2520966Z         percentageText.className = "percentage-text";
2025-04-15T08:07:18.2521197Z         percentageText.innerText = percent + "%"; // Display the rounded percentage value with "%"
2025-04-15T08:07:18.2521201Z 
2025-04-15T08:07:18.2521339Z         // Calculate the right position dynamically, capped at 96%
2025-04-15T08:07:18.2521473Z         const rightPosition = Math.min(100 - percent, 96) + "%";
2025-04-15T08:07:18.2521582Z         percentageText.style.right = rightPosition;
2025-04-15T08:07:18.2521585Z 
2025-04-15T08:07:18.2521720Z         percentageContainer.appendChild(percentageBar);
2025-04-15T08:07:18.2521940Z         percentageContainer.appendChild(percentageText); // Append the percentage text
2025-04-15T08:07:18.2521943Z 
2025-04-15T08:07:18.2522053Z         container.appendChild(percentageContainer);
2025-04-15T08:07:18.2522116Z       }
2025-04-15T08:07:18.2522179Z     }
2025-04-15T08:07:18.2522182Z 
2025-04-15T08:07:18.2522365Z     const units = ["", "K", "M", "B", "T", "P", "E"]
2025-04-15T08:07:18.2522369Z 
2025-04-15T08:07:18.2522460Z     const abbreviateNumber = number => {
2025-04-15T08:07:18.2522541Z       if (!number) return 0
2025-04-15T08:07:18.2522602Z     
2025-04-15T08:07:18.2522717Z       const tier = (Math.log10(Math.abs(number)) / 3) | 0
2025-04-15T08:07:18.2522776Z     
2025-04-15T08:07:18.2522855Z       if (!tier) return number
2025-04-15T08:07:18.2522915Z     
2025-04-15T08:07:18.2522993Z       const suffix = units[tier]
2025-04-15T08:07:18.2523081Z       const scale = Math.pow(10, tier * 3)
2025-04-15T08:07:18.2523160Z       const scaled = number / scale
2025-04-15T08:07:18.2523247Z       return scaled.toFixed(1) + suffix
2025-04-15T08:07:18.2523308Z     }
2025-04-15T08:07:18.2523311Z 
2025-04-15T08:07:18.2523394Z     const formatBytes = (bytes) => {
2025-04-15T08:07:18.2523476Z       if (bytes === 0) return "0 Bytes";
2025-04-15T08:07:18.2523543Z       const k = 1024,
2025-04-15T08:07:18.2523681Z         sizes = ["Bytes", "KB", "MB", "GB", "TB", "PB", "EB", "ZB", "YB"],
2025-04-15T08:07:18.2523782Z         i = Math.floor(Math.log(bytes) / Math.log(k));
2025-04-15T08:07:18.2523854Z       return (
2025-04-15T08:07:18.2524001Z         parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + " " + sizes[i]
2025-04-15T08:07:18.2524063Z       );
2025-04-15T08:07:18.2524127Z     }
2025-04-15T08:07:18.2524131Z 
2025-04-15T08:07:18.2524227Z     const formatLargeNumbers = (number) => {
2025-04-15T08:07:18.2524321Z       return number.toLocaleString();
2025-04-15T08:07:18.2524382Z     }
2025-04-15T08:07:18.2524385Z 
2025-04-15T08:07:18.2524478Z     const formatTimestamp = (timestamp) => {
2025-04-15T08:07:18.2524574Z       const date = new Date(timestamp * 1000);
2025-04-15T08:07:18.2524644Z       const months = [
2025-04-15T08:07:18.2524711Z         "Jan",
2025-04-15T08:07:18.2524773Z         "Feb",
2025-04-15T08:07:18.2524838Z         "Mar",
2025-04-15T08:07:18.2524901Z         "Apr",
2025-04-15T08:07:18.2524970Z         "May",
2025-04-15T08:07:18.2525035Z         "Jun",
2025-04-15T08:07:18.2525096Z         "Jul",
2025-04-15T08:07:18.2525160Z         "Aug",
2025-04-15T08:07:18.2525306Z         "Sep",
2025-04-15T08:07:18.2525371Z         "Oct",
2025-04-15T08:07:18.2525436Z         "Nov",
2025-04-15T08:07:18.2525497Z         "Dec",
2025-04-15T08:07:18.2525562Z       ];
2025-04-15T08:07:18.2525692Z       const days = ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"];
2025-04-15T08:07:18.2525779Z       const day = days[date.getUTCDay()];
2025-04-15T08:07:18.2525879Z       const month = months[date.getUTCMonth()];
2025-04-15T08:07:18.2525966Z       const year = date.getUTCFullYear();
2025-04-15T08:07:18.2526217Z       const hours = date.getUTCHours().toString().padStart(2, "0");
2025-04-15T08:07:18.2526378Z       const minutes = date.getUTCMinutes().toString().padStart(2, "0");
2025-04-15T08:07:18.2526532Z       const seconds = date.getUTCSeconds().toString().padStart(2, "0");
2025-04-15T08:07:18.2526535Z 
2025-04-15T08:07:18.2526715Z       return `${month} ${date.getUTCDate()}, ${year} ${hours}:${minutes}:${seconds}`;
2025-04-15T08:07:18.2526780Z     }
2025-04-15T08:07:18.2526783Z 
2025-04-15T08:07:18.2526914Z     const formatDuration = (seconds, short = false) => {
2025-04-15T08:07:18.2527003Z       if (seconds <= 0) return "0 seconds";
2025-04-15T08:07:18.2527111Z       const days = Math.floor(seconds / (24 * 3600));
2025-04-15T08:07:18.2527231Z       const hours = Math.floor((seconds % (24 * 3600)) / 3600);
2025-04-15T08:07:18.2527342Z       const minutes = Math.floor((seconds % 3600) / 60);
2025-04-15T08:07:18.2527433Z       const remainingSeconds = seconds % 60;
2025-04-15T08:07:18.2527437Z 
2025-04-15T08:07:18.2527507Z       if (short) {
2025-04-15T08:07:18.2527582Z         if (days > 3) {
2025-04-15T08:07:18.2527658Z           return days + " days";
2025-04-15T08:07:18.2527734Z         } else if (days > 0) {
2025-04-15T08:07:18.2527821Z           return days * 24 + hours + " hours";
2025-04-15T08:07:18.2528007Z         }
2025-04-15T08:07:18.2528070Z       }
2025-04-15T08:07:18.2528075Z 
2025-04-15T08:07:18.2528147Z       const parts = [];
2025-04-15T08:07:18.2528287Z       if (days > 0) parts.push(days + " day" + (days > 1 ? "s" : ""));
2025-04-15T08:07:18.2528426Z       if (hours > 0) parts.push(hours + " hour" + (hours > 1 ? "s" : ""));
2025-04-15T08:07:18.2528500Z       if (minutes > 0)
2025-04-15T08:07:18.2528636Z         parts.push(minutes + " minute" + (minutes > 1 ? "s" : ""));
2025-04-15T08:07:18.2528715Z       if (remainingSeconds > 0)
2025-04-15T08:07:18.2528789Z         parts.push(
2025-04-15T08:07:18.2528943Z           remainingSeconds + " second" + (remainingSeconds > 1 ? "s" : "")
2025-04-15T08:07:18.2529011Z         );
2025-04-15T08:07:18.2529133Z       return parts.join(" • ");
2025-04-15T08:07:18.2529198Z     }
2025-04-15T08:07:18.2529202Z 
2025-04-15T08:07:18.2529290Z     const createKeyValuePairs = (
2025-04-15T08:07:18.2529357Z       containerId,
2025-04-15T08:07:18.2529426Z       dataObject,
2025-04-15T08:07:18.2529498Z       keys = null,
2025-04-15T08:07:18.2529576Z       shortFormat = false,
2025-04-15T08:07:18.2529656Z       usePercentageBar = false
2025-04-15T08:07:18.2529725Z     ) => {
2025-04-15T08:07:18.2529862Z       const container = document.getElementById(containerId);
2025-04-15T08:07:18.2529936Z       if (!container) return;
2025-04-15T08:07:18.2530076Z       if (dataObject === null || typeof dataObject !== "object") return
2025-04-15T08:07:18.2530080Z 
2025-04-15T08:07:18.2530190Z       container.innerHTML = ""; // Clear the container
2025-04-15T08:07:18.2530194Z 
2025-04-15T08:07:18.2530307Z       const keysToUse = keys || Object.keys(dataObject);
2025-04-15T08:07:18.2530310Z 
2025-04-15T08:07:18.2530399Z       keysToUse.forEach(function (key) {
2025-04-15T08:07:18.2530497Z         if (dataObject.hasOwnProperty(key)) {
2025-04-15T08:07:18.2530595Z           let value = dataObject[key].toString();
2025-04-15T08:07:18.2530675Z           if (value === "false") return;
2025-04-15T08:07:18.2530684Z 
2025-04-15T08:07:18.2530768Z           if (key === "cpu_frequency") {
2025-04-15T08:07:18.2530883Z             value = (dataObject[key] / 1e9).toFixed(2) + " GHz";
2025-04-15T08:07:18.2531068Z           } else if (
2025-04-15T08:07:18.2531143Z             key === "ram" ||
2025-04-15T08:07:18.2531213Z             key === "disk" ||
2025-04-15T08:07:18.2531293Z             key === "disk_used" ||
2025-04-15T08:07:18.2531364Z             key === "disk_max"
2025-04-15T08:07:18.2531428Z           ) {
2025-04-15T08:07:18.2531522Z             value = formatBytes(dataObject[key]);
2025-04-15T08:07:18.2531591Z           } else if (
2025-04-15T08:07:18.2531664Z             key === "samples" ||
2025-04-15T08:07:18.2531750Z             key === "currently_collected_metrics"
2025-04-15T08:07:18.2531814Z           ) {
2025-04-15T08:07:18.2531919Z             value = formatLargeNumbers(dataObject[key]);
2025-04-15T08:07:18.2532014Z           } else if (key === "from" || key === "to") {
2025-04-15T08:07:18.2532118Z             value = formatTimestamp(dataObject[key]);
2025-04-15T08:07:18.2532183Z           } else if (
2025-04-15T08:07:18.2532262Z             key === "retention" ||
2025-04-15T08:07:18.2532351Z             key === "expected_retention" ||
2025-04-15T08:07:18.2532434Z             key === "requested_retention"
2025-04-15T08:07:18.2532495Z           ) {
2025-04-15T08:07:18.2532625Z             value = formatDuration(dataObject[key], shortFormat);
2025-04-15T08:07:18.2532714Z           } else if (key === "disk_percent") {
2025-04-15T08:07:18.2532917Z             const roundedValue = Math.round(dataObject[key]); // Round the percentage value
2025-04-15T08:07:18.2533001Z             if (usePercentageBar) {
2025-04-15T08:07:18.2533125Z               setPercentageBarWidth(containerId, roundedValue);
2025-04-15T08:07:18.2533270Z               return; // No need to create key-value pair for percentage bar
2025-04-15T08:07:18.2533335Z             } else {
2025-04-15T08:07:18.2533472Z               value = roundedValue + "%"; // Append "%" to the rounded value
2025-04-15T08:07:18.2533649Z             }
2025-04-15T08:07:18.2533713Z           }
2025-04-15T08:07:18.2533717Z 
2025-04-15T08:07:18.2533799Z           const div = getDOM({
2025-04-15T08:07:18.2533867Z             tag: "div",
2025-04-15T08:07:18.2533950Z             classList: "key-value",
2025-04-15T08:07:18.2534019Z             children: [
2025-04-15T08:07:18.2534082Z               {
2025-04-15T08:07:18.2534158Z                 tag: "span",
2025-04-15T08:07:18.2534335Z                 innerText: key.charAt(0).toUpperCase() + key.slice(1).replace(/_/g, " ")
2025-04-15T08:07:18.2534403Z               },
2025-04-15T08:07:18.2534466Z               {
2025-04-15T08:07:18.2534536Z                 tag: "span",
2025-04-15T08:07:18.2534618Z                 innerText: value,
2025-04-15T08:07:18.2534701Z                 condition: value !== "true"
2025-04-15T08:07:18.2534767Z               }
2025-04-15T08:07:18.2534829Z             ]
2025-04-15T08:07:18.2534890Z           });
2025-04-15T08:07:18.2534902Z 
2025-04-15T08:07:18.2534990Z           container.appendChild(div);
2025-04-15T08:07:18.2535051Z         }
2025-04-15T08:07:18.2535115Z       });
2025-04-15T08:07:18.2535179Z     }
2025-04-15T08:07:18.2535183Z 
2025-04-15T08:07:18.2535281Z     const setupCollectedMetrics = data => {
2025-04-15T08:07:18.2535364Z       const agent = data?.agents?.[0]
2025-04-15T08:07:18.2535548Z       const metricsFromDbSize = agent?.db_size?.[0]?.currently_collected_metrics
2025-04-15T08:07:18.2535838Z       const collectedMetrics = metricsFromDbSize !== undefined ? metricsFromDbSize : agent?.metrics?.collected;
2025-04-15T08:07:18.2535996Z       const container = document.getElementById("collectedMetrics");
2025-04-15T08:07:18.2536229Z       if (collectedMetrics === undefined || !container) return;
2025-04-15T08:07:18.2536234Z 
2025-04-15T08:07:18.2536309Z       const div = getDOM({
2025-04-15T08:07:18.2536378Z         tag: "div",
2025-04-15T08:07:18.2536454Z         classList: "key-value",
2025-04-15T08:07:18.2536527Z         children: [
2025-04-15T08:07:18.2536596Z           {
2025-04-15T08:07:18.2536665Z             tag: "span",
2025-04-15T08:07:18.2536886Z             innerText: "Currently Collected Metrics"
2025-04-15T08:07:18.2536952Z           },
2025-04-15T08:07:18.2537014Z           {
2025-04-15T08:07:18.2537086Z             tag: "span",
2025-04-15T08:07:18.2537408Z             innerText: collectedMetrics > 99999 ? abbreviateNumber(collectedMetrics) : formatLargeNumbers(collectedMetrics),
2025-04-15T08:07:18.2537654Z             // ...(collectedMetrics > 99999 ? { dataset: { tooltip: formatLargeNumbers(collectedMetrics) } } : {})
2025-04-15T08:07:18.2537717Z           }
2025-04-15T08:07:18.2537782Z         ]
2025-04-15T08:07:18.2537843Z       });
2025-04-15T08:07:18.2537847Z 
2025-04-15T08:07:18.2537932Z       container.appendChild(div);
2025-04-15T08:07:18.2537997Z     }
2025-04-15T08:07:18.2538001Z 
2025-04-15T08:07:18.2538073Z     const buildTier = ({
2025-04-15T08:07:18.2538143Z       tier: index,
2025-04-15T08:07:18.2538215Z       granularity,
2025-04-15T08:07:18.2538282Z       metrics,
2025-04-15T08:07:18.2538346Z       samples,
2025-04-15T08:07:18.2538420Z       retention_human,
2025-04-15T08:07:18.2538503Z       expected_retention_human,
2025-04-15T08:07:18.2538580Z       requested_retention_human,
2025-04-15T08:07:18.2538649Z       disk_used,
2025-04-15T08:07:18.2538716Z       disk_percent,
2025-04-15T08:07:18.2538779Z       disk_max,
2025-04-15T08:07:18.2538846Z       ...rest
2025-04-15T08:07:18.2538907Z     }) => {
2025-04-15T08:07:18.2539058Z       const disk_used_exists = disk_used !== null && !isNaN(disk_used)
2025-04-15T08:07:18.2539192Z       const disk_max_exists = disk_max !== null && !isNaN(disk_max)
2025-04-15T08:07:18.2539196Z 
2025-04-15T08:07:18.2539281Z       const contentsStructure = {
2025-04-15T08:07:18.2539350Z         tag: "tr",
2025-04-15T08:07:18.2539417Z         children: [
2025-04-15T08:07:18.2539483Z           {
2025-04-15T08:07:18.2539550Z             tag: "td",
2025-04-15T08:07:18.2539752Z             classList: "cell-data",
2025-04-15T08:07:18.2539827Z             textContent: index
2025-04-15T08:07:18.2539889Z           },
2025-04-15T08:07:18.2539958Z           {
2025-04-15T08:07:18.2540024Z             tag: "td",
2025-04-15T08:07:18.2540105Z             classList: "cell-data",
2025-04-15T08:07:18.2540188Z             textContent: granularity
2025-04-15T08:07:18.2540250Z           },
2025-04-15T08:07:18.2540315Z           {
2025-04-15T08:07:18.2540380Z             tag: "td",
2025-04-15T08:07:18.2540479Z             classList: "cell-data section-start",
2025-04-15T08:07:18.2540547Z             children: [
2025-04-15T08:07:18.2540609Z               {
2025-04-15T08:07:18.2540684Z                 tag: "span",
2025-04-15T08:07:18.2540787Z                 textContent: abbreviateNumber(metrics),
2025-04-15T08:07:18.2540913Z                 // dataset: { tooltip: formatLargeNumbers(metrics) }
2025-04-15T08:07:18.2540974Z               }
2025-04-15T08:07:18.2541034Z             ]
2025-04-15T08:07:18.2541104Z           },
2025-04-15T08:07:18.2541164Z           {
2025-04-15T08:07:18.2541234Z             tag: "td",
2025-04-15T08:07:18.2541312Z             classList: "cell-data",
2025-04-15T08:07:18.2541383Z             children: [
2025-04-15T08:07:18.2541446Z               {
2025-04-15T08:07:18.2541515Z                 tag: "span",
2025-04-15T08:07:18.2541619Z                 textContent: abbreviateNumber(samples),
2025-04-15T08:07:18.2541737Z                 // dataset: { tooltip: formatLargeNumbers(samples) }
2025-04-15T08:07:18.2541802Z               }
2025-04-15T08:07:18.2541864Z             ]
2025-04-15T08:07:18.2541924Z           },
2025-04-15T08:07:18.2541989Z           {
2025-04-15T08:07:18.2542055Z             tag: "td",
2025-04-15T08:07:18.2542149Z             classList: "cell-data section-start",
2025-04-15T08:07:18.2542242Z             textContent: retention_human || "-"
2025-04-15T08:07:18.2542304Z           },
2025-04-15T08:07:18.2542369Z           {
2025-04-15T08:07:18.2542439Z             tag: "td",
2025-04-15T08:07:18.2542518Z             classList: "cell-data",
2025-04-15T08:07:18.2542625Z             textContent: expected_retention_human || "-"
2025-04-15T08:07:18.2542778Z           },
2025-04-15T08:07:18.2542842Z           {
2025-04-15T08:07:18.2542909Z             tag: "td",
2025-04-15T08:07:18.2542990Z             classList: "cell-data",
2025-04-15T08:07:18.2543098Z             textContent: requested_retention_human || "-"
2025-04-15T08:07:18.2543164Z           },
2025-04-15T08:07:18.2543224Z           {
2025-04-15T08:07:18.2543288Z             tag: "td",
2025-04-15T08:07:18.2543382Z             classList: "cell-data section-start",
2025-04-15T08:07:18.2543450Z             children: [
2025-04-15T08:07:18.2543515Z               {
2025-04-15T08:07:18.2543632Z                 className: "progress-indicator flex flex-col",
2025-04-15T08:07:18.2543703Z                 children: [
2025-04-15T08:07:18.2543770Z                   {
2025-04-15T08:07:18.2543842Z                     tag: "span",
2025-04-15T08:07:18.2544002Z                     textContent: disk_used_exists ? formatBytes(disk_used) : "-"
2025-04-15T08:07:18.2544065Z                   },
2025-04-15T08:07:18.2544154Z                   ...(disk_used_exists ? [{
2025-04-15T08:07:18.2544257Z                     className: "progress-bar-container",
2025-04-15T08:07:18.2544326Z                     children: [
2025-04-15T08:07:18.2544395Z                       {
2025-04-15T08:07:18.2544486Z                         className: "progress-bar",
2025-04-15T08:07:18.2544561Z                         dataset: {
2025-04-15T08:07:18.2544642Z                           fill: disk_percent
2025-04-15T08:07:18.2544708Z                         }
2025-04-15T08:07:18.2544774Z                       }
2025-04-15T08:07:18.2544836Z                     ]
2025-04-15T08:07:18.2544905Z                   }] : [])
2025-04-15T08:07:18.2544968Z                 ]
2025-04-15T08:07:18.2545030Z               }
2025-04-15T08:07:18.2545098Z             ]
2025-04-15T08:07:18.2545244Z           },
2025-04-15T08:07:18.2545308Z           {
2025-04-15T08:07:18.2545376Z             tag: "td",
2025-04-15T08:07:18.2545457Z             classList: "cell-data",
2025-04-15T08:07:18.2545602Z             textContent: disk_max_exists ? formatBytes(disk_max) : "-"
2025-04-15T08:07:18.2545664Z           }
2025-04-15T08:07:18.2545728Z         ]
2025-04-15T08:07:18.2545790Z       }
2025-04-15T08:07:18.2545794Z 
2025-04-15T08:07:18.2545887Z       return getDOM(contentsStructure);
2025-04-15T08:07:18.2545949Z     }
2025-04-15T08:07:18.2545953Z 
2025-04-15T08:07:18.2546030Z     const buildTiers = () => {
2025-04-15T08:07:18.2546225Z       const tiers = data.agents[0].db_size || [];
2025-04-15T08:07:18.2546435Z       const placeholder = document.getElementById("tiers-table-data-placeholder");
2025-04-15T08:07:18.2546528Z       if (placeholder && !!tiers.length) {
2025-04-15T08:07:18.2546614Z         const rows = tiers.map(buildTier)
2025-04-15T08:07:18.2546708Z         placeholder.replaceWith(...rows);
2025-04-15T08:07:18.2546778Z       }
2025-04-15T08:07:18.2546782Z 
2025-04-15T08:07:18.2546861Z       return Promise.resolve()
2025-04-15T08:07:18.2546928Z     }
2025-04-15T08:07:18.2546936Z 
2025-04-15T08:07:18.2547026Z     const setupProgressBars = () => {
2025-04-15T08:07:18.2547180Z       document.querySelectorAll(".progress-bar").forEach(el => {
2025-04-15T08:07:18.2547262Z         const fill = el.dataset.fill
2025-04-15T08:07:18.2547339Z         el.style.width = `${fill}%`
2025-04-15T08:07:18.2547405Z       })
2025-04-15T08:07:18.2547465Z     }
2025-04-15T08:07:18.2547469Z 
2025-04-15T08:07:18.2547633Z     createKeyValuePairs("kernel", data.agents[0].application.os, [
2025-04-15T08:07:18.2547700Z       "kernel",
2025-04-15T08:07:18.2547764Z     ]);
2025-04-15T08:07:18.2547946Z     createKeyValuePairs("kernelVersion", data.agents[0].application.os, [
2025-04-15T08:07:18.2548017Z       "kernel_version",
2025-04-15T08:07:18.2548081Z     ]);
2025-04-15T08:07:18.2548245Z     createKeyValuePairs("id", data.agents[0].application.os, ["id"]);
2025-04-15T08:07:18.2548412Z     createKeyValuePairs("os", data.agents[0].application.os, ["os"]);
2025-04-15T08:07:18.2548416Z 
2025-04-15T08:07:18.2548724Z     createKeyValuePairs("package", data.agents[0].application.package, [
2025-04-15T08:07:18.2548800Z       "version",
2025-04-15T08:07:18.2548862Z     ]);
2025-04-15T08:07:18.2548942Z     createKeyValuePairs(
2025-04-15T08:07:18.2549013Z       "directories",
2025-04-15T08:07:18.2549109Z       data.agents[0].application.directories
2025-04-15T08:07:18.2549174Z     );
2025-04-15T08:07:18.2549303Z     createKeyValuePairs("server", data.agents[0], ["nm"]);
2025-04-15T08:07:18.2549463Z     createKeyValuePairs("cpuCores", data.agents[0].application.hw, [
2025-04-15T08:07:18.2549533Z       "cpu_cores",
2025-04-15T08:07:18.2549595Z     ]);
2025-04-15T08:07:18.2549773Z     createKeyValuePairs("cpuFrequency", data.agents[0].application.hw, [
2025-04-15T08:07:18.2549845Z       "cpu_frequency",
2025-04-15T08:07:18.2549911Z     ]);
2025-04-15T08:07:18.2550081Z     createKeyValuePairs("ram", data.agents[0].application.hw, ["ram"]);
2025-04-15T08:07:18.2550265Z     createKeyValuePairs("disk", data.agents[0].application.hw, ["disk"]);
2025-04-15T08:07:18.2550463Z     createKeyValuePairs("cpuArchitecture", data.agents[0].application.hw, [
2025-04-15T08:07:18.2550540Z       "cpu_architecture",
2025-04-15T08:07:18.2550606Z     ]);
2025-04-15T08:07:18.2550785Z     createKeyValuePairs("virtualization", data.agents[0].application.hw, [
2025-04-15T08:07:18.2550862Z       "virtualization",
2025-04-15T08:07:18.2550927Z     ]);
2025-04-15T08:07:18.2551101Z     createKeyValuePairs("cloud_status", data.agents[0].cloud, ["status"]);
2025-04-15T08:07:18.2551263Z     createKeyValuePairs("nodes_streaming", data.agents[0].nodes);
2025-04-15T08:07:18.2551511Z     createKeyValuePairs("plugins", data.agents[0].application.plugins);
2025-04-15T08:07:18.2551801Z     createKeyValuePairs("libs", data.agents[0].application.libs);
2025-04-15T08:07:18.2552137Z     createKeyValuePairs("exporters", data.agents[0].application.exporters);
2025-04-15T08:07:18.2552230Z     setupCollectedMetrics(data);
2025-04-15T08:07:18.2552234Z 
2025-04-15T08:07:18.2552348Z     buildTiers().then(() => setupProgressBars())
2025-04-15T08:07:18.2552351Z 
2025-04-15T08:07:18.2552433Z     return Promise.resolve();
2025-04-15T08:07:18.2552498Z   }
2025-04-15T08:07:18.2552502Z 
2025-04-15T08:07:18.2552581Z   const initTooltips = () => {
2025-04-15T08:07:18.2552707Z     const tooltip = document.getElementById("tooltip");
2025-04-15T08:07:18.2552779Z     if (!tooltip) return;
2025-04-15T08:07:18.2552783Z 
2025-04-15T08:07:18.2552935Z     document.querySelectorAll("[data-tooltip]").forEach(elem => {
2025-04-15T08:07:18.2553041Z       elem.addEventListener("mouseenter", () => {
2025-04-15T08:07:18.2553138Z         const content = elem.dataset.tooltip;
2025-04-15T08:07:18.2553251Z         const rect = elem.getBoundingClientRect();
2025-04-15T08:07:18.2553333Z         const top = rect.bottom + 10;
2025-04-15T08:07:18.2553414Z         const left = rect.x;
2025-04-15T08:07:18.2553504Z         tooltip.textContent = content;
2025-04-15T08:07:18.2553598Z         tooltip.style.top = `${top}px`;
2025-04-15T08:07:18.2553690Z         tooltip.style.left = `${left}px`;
2025-04-15T08:07:18.2553777Z         tooltip.style.display = "block";
2025-04-15T08:07:18.2553843Z       });
2025-04-15T08:07:18.2553846Z 
2025-04-15T08:07:18.2553945Z       elem.addEventListener("mouseleave", () => {
2025-04-15T08:07:18.2554032Z         tooltip.textContent = "";
2025-04-15T08:07:18.2554222Z         tooltip.style.display = "none";
2025-04-15T08:07:18.2554287Z       })
2025-04-15T08:07:18.2554352Z     })
2025-04-15T08:07:18.2554412Z   }
2025-04-15T08:07:18.2554416Z 
2025-04-15T08:07:18.2554479Z   /**
2025-04-15T08:07:18.2554577Z    * Get agent info and initialize splash screen
2025-04-15T08:07:18.2554637Z    */
2025-04-15T08:07:18.2554731Z   const initSplashScreen = async () => {
2025-04-15T08:07:18.2554864Z     const msgSignIn = document.getElementById("msgSignIn");
2025-04-15T08:07:18.2555002Z     const btnSignIn = document.getElementById("btnSignIn");
2025-04-15T08:07:18.2555185Z     msgSignIn.textContent = "Please wait..."
2025-04-15T08:07:18.2555278Z     btnSignIn.style.display = "none"
2025-04-15T08:07:18.2555286Z 
2025-04-15T08:07:18.2555379Z     const agentInfo = await getAgentInfo()
2025-04-15T08:07:18.2555383Z 
2025-04-15T08:07:18.2555743Z     if (!agentInfo || !Array.isArray(agentInfo.agents) || !agentInfo.agents[0]) return Promise.reject({ message: "No agent data available." })
2025-04-15T08:07:18.2555747Z 
2025-04-15T08:07:18.2555856Z     const agent = (agentInfo?.agents || [])[0] || {}
2025-04-15T08:07:18.2555962Z     const status = agent.cloud && agent.cloud.status
2025-04-15T08:07:18.2556175Z     const claimId = agent.cloud && agent.cloud.claim_id
2025-04-15T08:07:18.2556282Z     const cloudUrl = agent.cloud && agent.cloud.url
2025-04-15T08:07:18.2556286Z 
2025-04-15T08:07:18.2556382Z     window.localNetdataRegistry = {
2025-04-15T08:07:18.2556462Z       hostname: agent.nm,
2025-04-15T08:07:18.2556528Z       mg: agent.mg,
2025-04-15T08:07:18.2556597Z       nd: agent.nd,
2025-04-15T08:07:18.2556671Z       claimId: claimId,
2025-04-15T08:07:18.2556754Z       xNetdataAuthHeader: true
2025-04-15T08:07:18.2556814Z     }
2025-04-15T08:07:18.2556817Z 
2025-04-15T08:07:18.2557004Z     window.envSettings.cloudUrl = cloudUrl || window.envSettings.cloudUrl
2025-04-15T08:07:18.2557175Z     window.envSettings.apiUrl = cloudUrl || window.envSettings.apiUrl
2025-04-15T08:07:18.2557179Z 
2025-04-15T08:07:18.2557334Z     const isCloudSignedIn = !!localStorage.getItem(CLOUD_TOKEN_KEY)
2025-04-15T08:07:18.2557338Z 
2025-04-15T08:07:18.2557418Z     if (!isCloudSignedIn) {
2025-04-15T08:07:18.2557506Z       msgSignIn.style.display = "inline"
2025-04-15T08:07:18.2557637Z       msgSignIn.textContent = "Please sign-in to continue"
2025-04-15T08:07:18.2557728Z       btnSignIn.style.display = "block"
2025-04-15T08:07:18.2557793Z     }
2025-04-15T08:07:18.2557934Z 
2025-04-15T08:07:18.2558013Z     initMetrics(agentInfo)
2025-04-15T08:07:18.2558017Z 
2025-04-15T08:07:18.2558169Z     if (!claimId && isCloudSignedIn && !window.envSettings.isLocal) {
2025-04-15T08:07:18.2558258Z       setShouldClaimStatus(true);
2025-04-15T08:07:18.2558338Z       prepareClaiming(agent)
2025-04-15T08:07:18.2558448Z       return Promise.resolve({ stopLoading: true })
2025-04-15T08:07:18.2558510Z     }
2025-04-15T08:07:18.2558514Z 
2025-04-15T08:07:18.2558599Z     let me = await checkMe(agent.mg)
2025-04-15T08:07:18.2558602Z 
2025-04-15T08:07:18.2558781Z     if (isCloudSignedIn && agent.nd && (me.auth === "none" || me.auth === "god")) {
2025-04-15T08:07:18.2558994Z       await getAgentToken({ mg: agent.mg, nd: agent.nd, claimId: agent.cloud.claim_id }, agent)
2025-04-15T08:07:18.2559078Z       me = await checkMe(agent.mg)
2025-04-15T08:07:18.2559140Z     }
2025-04-15T08:07:18.2559143Z 
2025-04-15T08:07:18.2559307Z     const claimStatusesToProceed = ["online", "indirect", "offline"]
2025-04-15T08:07:18.2559315Z 
2025-04-15T08:07:18.2559505Z     if ((me.auth === "bearer" || me.auth === "god") && claimStatusesToProceed.includes(status)) {
2025-04-15T08:07:18.2559612Z       await fetchUserAccess(agent.mg, agent.nd)
2025-04-15T08:07:18.2559691Z       return loadDashboard()
2025-04-15T08:07:18.2559790Z     } else if (window.envSettings.isLocal) {
2025-04-15T08:07:18.2559866Z       return loadDashboard()
2025-04-15T08:07:18.2559929Z     } else {
2025-04-15T08:07:18.2560028Z       await fetchUserAccess(agent.mg, agent.nd)
2025-04-15T08:07:18.2560089Z     }
2025-04-15T08:07:18.2560093Z 
2025-04-15T08:07:18.2560172Z     if (!isCloudSignedIn) {
2025-04-15T08:07:18.2560256Z       setupOptOutMessage(agent)
2025-04-15T08:07:18.2560364Z       return Promise.resolve({ stopLoading: true })
2025-04-15T08:07:18.2560432Z     }
2025-04-15T08:07:18.2560436Z 
2025-04-15T08:07:18.2560515Z     return Promise.resolve()
2025-04-15T08:07:18.2560582Z   }
2025-04-15T08:07:18.2560586Z 
2025-04-15T08:07:18.2560671Z   // =============================================== //
2025-04-15T08:07:18.2560674Z 
2025-04-15T08:07:18.2560809Z   document.addEventListener("DOMContentLoaded", () => {
2025-04-15T08:07:18.2560990Z     initGrid();
2025-04-15T08:07:18.2561082Z     initPrimaryButtonHover();
2025-04-15T08:07:18.2561154Z     toggleTab(1);
2025-04-15T08:07:18.2561221Z     initTabs();
2025-04-15T08:07:18.2561225Z 
2025-04-15T08:07:18.2561376Z     fetchRegistryInfo().then(initSplashScreen).then(data => {
2025-04-15T08:07:18.2561458Z       if (data?.stopLoading) {
2025-04-15T08:07:18.2561532Z         stopLoading()
2025-04-15T08:07:18.2561594Z       }
2025-04-15T08:07:18.2561664Z       initTooltips()
2025-04-15T08:07:18.2561736Z     }).catch(err => {
2025-04-15T08:07:18.2561821Z       showErrorMessage(err?.message)
2025-04-15T08:07:18.2561886Z     })
2025-04-15T08:07:18.2562204Z   });</script></html><!doctype html><html lang="en" dir="ltr"><head><meta charset="utf-8"/><title>Netdata</title><script>const CONFIG = {
2025-04-15T08:07:18.2562277Z       cache: {
2025-04-15T08:07:18.2562356Z         agentInfo: false,
2025-04-15T08:07:18.2562430Z         cloudToken: true,
2025-04-15T08:07:18.2562511Z         agentToken: true,
2025-04-15T08:07:18.2562575Z       }
2025-04-15T08:07:18.2562638Z     }
2025-04-15T08:07:18.2562645Z 
2025-04-15T08:07:18.2562797Z     // STATE MANAGEMENT ======================================================================== //
2025-04-15T08:07:18.2562868Z     const state = {
2025-04-15T08:07:18.2562938Z       loading: {
2025-04-15T08:07:18.2563008Z         spaces: false,
2025-04-15T08:07:18.2563083Z         rooms: false,
2025-04-15T08:07:18.2563160Z         claimingToken: false,
2025-04-15T08:07:18.2563235Z         claimingAgent: false
2025-04-15T08:07:18.2563302Z       },
2025-04-15T08:07:18.2563365Z       claim: {
2025-04-15T08:07:18.2563436Z         status: {},
2025-04-15T08:07:18.2563503Z         response: {},
2025-04-15T08:07:18.2563579Z         shouldClaim: false,
2025-04-15T08:07:18.2563735Z         step: 1,
2025-04-15T08:07:18.2563813Z         selectedSpaceIds: [],
2025-04-15T08:07:18.2563890Z         selectedRoomIds: [],
2025-04-15T08:07:18.2563962Z         privateKey: ""
2025-04-15T08:07:18.2564027Z       },
2025-04-15T08:07:18.2564094Z       cache: {
2025-04-15T08:07:18.2564168Z         spaces: undefined,
2025-04-15T08:07:18.2564237Z         rooms: {},
2025-04-15T08:07:18.2564325Z         claimingTokensPerSpace: {}
2025-04-15T08:07:18.2564387Z       }
2025-04-15T08:07:18.2564452Z     }
2025-04-15T08:07:18.2564455Z 
2025-04-15T08:07:18.2564544Z     const getSelectedRooms = state => {
2025-04-15T08:07:18.2564807Z       const spaceId = state.claim.selectedSpaceIds.length ? state.claim.selectedSpaceIds[0] : null;
2025-04-15T08:07:18.2564884Z       if (!spaceId) return [];
2025-04-15T08:07:18.2564996Z       if (state.claim.selectedRoomIds.length) {
2025-04-15T08:07:18.2565260Z         return state.cache?.rooms?.[spaceId]?.filter(({ id }) => state.claim.selectedRoomIds.includes(id)) || [];
2025-04-15T08:07:18.2565329Z       }
2025-04-15T08:07:18.2565396Z       return [];
2025-04-15T08:07:18.2565456Z     }
2025-04-15T08:07:18.2565460Z 
2025-04-15T08:07:18.2565539Z     const syncUI = () => {
2025-04-15T08:07:18.2565605Z       // Elements
2025-04-15T08:07:18.2565805Z       const splashMessage = document.getElementById("splashMessageContainer");
2025-04-15T08:07:18.2565990Z       const claiming = document.getElementById("claimingContentsContainer");
2025-04-15T08:07:18.2566222Z       const step1 = document.getElementById("connectionStep-1");
2025-04-15T08:07:18.2566363Z       const step2 = document.getElementById("connectionStep-2");
2025-04-15T08:07:18.2566530Z       const btnPrev = document.getElementById("btnConnectionStepPrev");
2025-04-15T08:07:18.2566696Z       const btnNext = document.getElementById("btnConnectionStepNext");
2025-04-15T08:07:18.2566822Z       const btnClaim = document.getElementById("btnClaim");
2025-04-15T08:07:18.2566978Z       const roomsSelector = document.getElementById("roomsSelector");
2025-04-15T08:07:18.2567169Z       const claimErrorMessage = document.getElementById("claimErrorMessage");
2025-04-15T08:07:18.2567173Z 
2025-04-15T08:07:18.2567238Z       // State
2025-04-15T08:07:18.2567765Z       const { spaces: spacesLoading, rooms: roomsLoading, claimingToken: claimingTokenLoading, claimingAgent: claimingAgentLoading } = state.loading;
2025-04-15T08:07:18.2568032Z       const { shouldClaim, step, selectedSpaceIds, selectedRoomIds, privateKey } = state.claim;
2025-04-15T08:07:18.2568475Z       const claimingTokenExists = state.claim.selectedSpaceIds.length ? !!state.cache.claimingTokensPerSpace[state.claim.selectedSpaceIds[0]] : false;
2025-04-15T08:07:18.2568480Z 
2025-04-15T08:07:18.2568645Z       splashMessage.style.display = !shouldClaim ? "initial" : "none";
2025-04-15T08:07:18.2568790Z       claiming.style.display = shouldClaim ? "initial" : "none";
2025-04-15T08:07:18.2568794Z 
2025-04-15T08:07:18.2568868Z       // Loading spaces
2025-04-15T08:07:18.2568940Z       if (step1) {
2025-04-15T08:07:18.2569072Z         const spacesLoader = step1.querySelector(".loader");
2025-04-15T08:07:18.2569151Z         if (spacesLoader) {
2025-04-15T08:07:18.2569328Z           spacesLoader.style.display = spacesLoading ? "initial" : "none";
2025-04-15T08:07:18.2569390Z         }
2025-04-15T08:07:18.2569454Z       }
2025-04-15T08:07:18.2569458Z 
2025-04-15T08:07:18.2569526Z       // Loading rooms
2025-04-15T08:07:18.2569605Z       if (roomsSelector) {
2025-04-15T08:07:18.2569762Z         const message = roomsSelector.querySelector(".selected-items");
2025-04-15T08:07:18.2569982Z         const selectedRoomNames = getSelectedRooms(state).map(({ name }) => name).join(", ");
2025-04-15T08:07:18.2570055Z         if (message) {
2025-04-15T08:07:18.2570296Z           message.innerText = roomsLoading ? "Loading rooms..." : (selectedRoomNames || "Select room");
2025-04-15T08:07:18.2570362Z         }
2025-04-15T08:07:18.2570423Z       }
2025-04-15T08:07:18.2570426Z 
2025-04-15T08:07:18.2570501Z       // Steps visibility
2025-04-15T08:07:18.2570739Z       step1.style.display = step == 1 ? "initial" : "none";
2025-04-15T08:07:18.2570859Z       step2.style.display = step == 2 ? "initial" : "none";
2025-04-15T08:07:18.2570864Z 
2025-04-15T08:07:18.2570940Z       // Rooms
2025-04-15T08:07:18.2571010Z       if (step == 1) {
2025-04-15T08:07:18.2571083Z         // Reset rooms
2025-04-15T08:07:18.2571439Z         const checkboxes = document.getElementById("roomsSelectorOptionsContainer").querySelectorAll('input[type="checkbox"]');
2025-04-15T08:07:18.2571536Z         checkboxes.forEach((checkbox) => {
2025-04-15T08:07:18.2571625Z           if (checkbox.checked) {
2025-04-15T08:07:18.2571712Z             checkbox.checked = false;
2025-04-15T08:07:18.2571832Z             checkbox.dispatchEvent(new Event("change"));
2025-04-15T08:07:18.2571896Z           }
2025-04-15T08:07:18.2571964Z         });
2025-04-15T08:07:18.2572028Z       }
2025-04-15T08:07:18.2572031Z 
2025-04-15T08:07:18.2572111Z       if (claimErrorMessage) {
2025-04-15T08:07:18.2572349Z         claimErrorMessage.style.display = state.claim?.response?.error ? "initial" : "none";
2025-04-15T08:07:18.2572614Z         claimErrorMessage.innerText = state.claim?.response?.error ? state.claim.response.error : "";
2025-04-15T08:07:18.2572684Z       }
2025-04-15T08:07:18.2572687Z 
2025-04-15T08:07:18.2572753Z       // Footer
2025-04-15T08:07:18.2572867Z       btnPrev.style.opacity = step == 1 ? "0" : "1";
2025-04-15T08:07:18.2573005Z       btnPrev.style.cursor = step == 1 ? "default" : "pointer";
2025-04-15T08:07:18.2573093Z       btnPrev.disabled = step == 1;
2025-04-15T08:07:18.2573230Z       btnNext.style.display = step == 1 ? "initial" : "none";
2025-04-15T08:07:18.2573342Z       btnNext.disabled = !selectedSpaceIds.length;
2025-04-15T08:07:18.2573483Z       btnClaim.style.display = step == 2 ? "initial" : "none";
2025-04-15T08:07:18.2573851Z       btnClaim.disabled = !selectedRoomIds.length || !privateKey || !claimingTokenExists || claimingTokenLoading || claimingAgentLoading;
2025-04-15T08:07:18.2574043Z       btnClaim.textContent = claimingAgentLoading ? "Claiming..." : "Claim";
2025-04-15T08:07:18.2574047Z 
2025-04-15T08:07:18.2574214Z       return Promise.resolve();
2025-04-15T08:07:18.2574281Z     }
2025-04-15T08:07:18.2574284Z 
2025-04-15T08:07:18.2574405Z     const toggleSpacesLoadingState = isLoading => {
2025-04-15T08:07:18.2574533Z       state.loading = { ...state.loading, spaces: isLoading };
2025-04-15T08:07:18.2574612Z       return syncUI();
2025-04-15T08:07:18.2613522Z     }
2025-04-15T08:07:18.2613536Z 
2025-04-15T08:07:18.2613713Z     const toggleRoomsLoadingState = isLoading => {
2025-04-15T08:07:18.2613888Z       state.loading = { ...state.loading, rooms: isLoading };
2025-04-15T08:07:18.2613964Z       return syncUI();
2025-04-15T08:07:18.2614032Z     }
2025-04-15T08:07:18.2614036Z 
2025-04-15T08:07:18.2614218Z     const toggleClaimingTokenLoadingState = isLoading => {
2025-04-15T08:07:18.2614378Z       state.loading = { ...state.loading, claimingToken: isLoading };
2025-04-15T08:07:18.2614465Z       return syncUI();
2025-04-15T08:07:18.2614531Z     }
2025-04-15T08:07:18.2614535Z 
2025-04-15T08:07:18.2614675Z     const toggleClaimingAgentLoadingState = isLoading => {
2025-04-15T08:07:18.2614825Z       state.loading = { ...state.loading, claimingAgent: isLoading };
2025-04-15T08:07:18.2614899Z       return syncUI();
2025-04-15T08:07:18.2614961Z     }
2025-04-15T08:07:18.2614964Z 
2025-04-15T08:07:18.2615078Z     const setShouldClaimStatus = shouldClaim => {
2025-04-15T08:07:18.2615185Z       state.claim = { ...state.claim, shouldClaim };
2025-04-15T08:07:18.2615262Z       return syncUI();
2025-04-15T08:07:18.2615324Z     }
2025-04-15T08:07:18.2615328Z 
2025-04-15T08:07:18.2615423Z     const setClaimStatusState = status => {
2025-04-15T08:07:18.2615523Z       state.claim = { ...state.claim, status };
2025-04-15T08:07:18.2615592Z       return syncUI();
2025-04-15T08:07:18.2615658Z     }
2025-04-15T08:07:18.2615662Z 
2025-04-15T08:07:18.2615763Z     const setClaimResponseState = response => {
2025-04-15T08:07:18.2616043Z       state.claim = { ...state.claim, response };
2025-04-15T08:07:18.2616239Z       return syncUI();
2025-04-15T08:07:18.2616306Z     }
2025-04-15T08:07:18.2616310Z 
2025-04-15T08:07:18.2616407Z     const setClaimingStep = async arg => {
2025-04-15T08:07:18.2616580Z       const nextStep = typeof arg == "function" ? arg(state.claim.step) : arg;
2025-04-15T08:07:18.2616860Z       state.claim = { ...state.claim, step: nextStep, ...(nextStep == 1 ? { selectedRoomIds: [], privateKey: "" } : {}) };
2025-04-15T08:07:18.2616933Z       await syncUI();
2025-04-15T08:07:18.2617027Z       return Promise.resolve(nextStep);
2025-04-15T08:07:18.2617094Z     }
2025-04-15T08:07:18.2617098Z 
2025-04-15T08:07:18.2617199Z     const setSelectedSpacesStatus = arg => {
2025-04-15T08:07:18.2617491Z       const spaceIds = typeof arg == "function" ? arg(state.claim.selectedSpaceIds) : Array.isArray(arg) ? arg : [arg];
2025-04-15T08:07:18.2617741Z       state.claim = { ...state.claim, selectedSpaceIds: spaceIds, selectedRoomIds: [], privateKey: "" };
2025-04-15T08:07:18.2617821Z       return syncUI();
2025-04-15T08:07:18.2617883Z     }
2025-04-15T08:07:18.2617889Z 
2025-04-15T08:07:18.2617992Z     const setSelectedRoomsStatus = arg => {
2025-04-15T08:07:18.2618266Z       const roomIds = typeof arg == "function" ? arg(state.claim.selectedRoomIds) : Array.isArray(arg) ? arg : [arg];
2025-04-15T08:07:18.2618404Z       state.claim = { ...state.claim, selectedRoomIds: roomIds };
2025-04-15T08:07:18.2618481Z       return syncUI();
2025-04-15T08:07:18.2618544Z     }
2025-04-15T08:07:18.2618547Z 
2025-04-15T08:07:18.2618678Z     const setClaimingPrivateKeyState = (value = "") => {
2025-04-15T08:07:18.2618798Z       state.claim = { ...state.claim, privateKey: value };
2025-04-15T08:07:18.2618873Z       return syncUI();
2025-04-15T08:07:18.2618936Z     }
2025-04-15T08:07:18.2618939Z 
2025-04-15T08:07:18.2619028Z     const cacheSpaces = (spaces) => {
2025-04-15T08:07:18.2619132Z       if (!spaces) return Promise.resolve([]);
2025-04-15T08:07:18.2619223Z       state.cache.spaces = spaces;
2025-04-15T08:07:18.2619315Z       return Promise.resolve(spaces);
2025-04-15T08:07:18.2619491Z     }
2025-04-15T08:07:18.2619497Z 
2025-04-15T08:07:18.2619593Z     const cacheRooms = (spaceId, rooms) => {
2025-04-15T08:07:18.2619698Z       if (!spaceId) return Promise.resolve([]);
2025-04-15T08:07:18.2619850Z       state.cache.rooms = { ...state.cache.rooms, [spaceId]: rooms };
2025-04-15T08:07:18.2619937Z       return Promise.resolve(rooms);
2025-04-15T08:07:18.2620040Z     }
2025-04-15T08:07:18.2620046Z 
2025-04-15T08:07:18.2620244Z     const cacheClaimingToken = (spaceId, token) => {
2025-04-15T08:07:18.2620417Z       if (!spaceId || !token) return Promise.resolve();
2025-04-15T08:07:18.2620695Z       state.cache.claimingTokensPerSpace = { ...state.cache.claimingTokensPerSpace, [spaceId]: token };
2025-04-15T08:07:18.2620782Z       return Promise.resolve(token);
2025-04-15T08:07:18.2620842Z     }
2025-04-15T08:07:18.2620854Z 
2025-04-15T08:07:18.2620956Z     // ========================================================================================= //
2025-04-15T08:07:18.2620961Z 
2025-04-15T08:07:18.2621327Z     const pathsRegex = /\/(spaces|nodes|overview|alerts|dashboards|anomalies|events|cloud|v3)\/?.*/;
2025-04-15T08:07:18.2621419Z     function getBasename() {
2025-04-15T08:07:18.2621642Z       return window.location.origin + window.location.pathname.replace(pathsRegex, "")
2025-04-15T08:07:18.2621706Z     }
2025-04-15T08:07:18.2621710Z 
2025-04-15T08:07:18.2621792Z     let goToOld = function(path) {
2025-04-15T08:07:18.2621882Z       let goToUrl = getBasename() + path;
2025-04-15T08:07:18.2621962Z       if (path !== "/v3") {
2025-04-15T08:07:18.2622197Z         let pathsRegex = /(\/(spaces|nodes|overview|alerts|dashboards|anomalies|events|cloud|v3)\/?.*)/
2025-04-15T08:07:18.2622393Z         if (pathsRegex.test(window.location.origin + window.location.pathname)) {
2025-04-15T08:07:18.2622628Z           goToUrl = (window.location.origin + window.location.pathname).replace(pathsRegex, "/v3$1")
2025-04-15T08:07:18.2622831Z         }
2025-04-15T08:07:18.2622894Z       }
2025-04-15T08:07:18.2623094Z       window.location.replace(ensureOneSlash(goToUrl + window.location.search))
2025-04-15T08:07:18.2623159Z     }
2025-04-15T08:07:18.2623163Z 
2025-04-15T08:07:18.2623310Z     const searchParams = new URLSearchParams(location.search);
2025-04-15T08:07:18.2623394Z     window.envSettings = {
2025-04-15T08:07:18.2623467Z       isAgent: true,
2025-04-15T08:07:18.2623571Z       apiUrl: "https://app.netdata.cloud",
2025-04-15T08:07:18.2623676Z       cloudUrl: "https://app.netdata.cloud",
2025-04-15T08:07:18.2623760Z       demoSlug: "netdata-demo",
2025-04-15T08:07:18.2625989Z       demoFavourites: {"postgresql":["Applications-0_Postgres-1"],"redis":["Applications-0_Redis-1"],"dns-query":["Applications-0_CoreDNS-1"],"http-endpoints":["Applications-0_HTTP_Checks-1"],"nginx":["Applications-0_web_log-1","Applications-0_Nginx-1"],"apache":["Applications-0_Apache-1"],"host-reachability":["Synthetic_Checks-0"],"cassandra":["Applications-0_Cassandra-1"],"coredns":["Applications-0_CoreDNS-1"],"logind":["Applications-0_systemd_LoginD-1"],"iis":["Applications-0_MS_IIS-1"],"active-directory":["Applications-0_MS_Active_Directory-1"],"windows":["Applications-0_Windows-1","Applications-0_MS_Active_Directory-1","Applications-0_MS_IIS-1","Applications-0_MS_SQL-1","Applications-0_MS_Exchange-1","Applications-0__NET_Framework-1"],"docker":["Containers___VMs-0"],"ups":["Hardware___Sensors-0_NUT_UPS-1"]},
2025-04-15T08:07:18.2626312Z       webpackPublicPath: "https://app.netdata.cloud" || (getBasename() + "/v3"),
2025-04-15T08:07:18.2626446Z       agentApiUrl: searchParams.get("agent") || getBasename(),
2025-04-15T08:07:18.2626627Z       posthogToken: "phc_hnhlqe6D2Q4IcQNrFItaqdXJAxQ8RcHkPAFAp74pubv",
2025-04-15T08:07:18.2626704Z       version: "7.48.0",
2025-04-15T08:07:18.2626776Z       tracking: !false,
2025-04-15T08:07:18.2626870Z       cookieDomain: ".netdata.cloud",
2025-04-15T08:07:18.2626946Z       onprem: false,
2025-04-15T08:07:18.2627014Z       isLocal: false,
2025-04-15T08:07:18.2627095Z       nodeEnv: "production"
2025-04-15T08:07:18.2627271Z     }
2025-04-15T08:07:18.2627276Z 
2025-04-15T08:07:18.2627364Z     window.visitedNodes = []
2025-04-15T08:07:18.2627368Z 
2025-04-15T08:07:18.2627458Z     const getHashValueByKey = key => {
2025-04-15T08:07:18.2627703Z       return location.hash.substr(1).split("&").find(pair => pair.split("=")[0] == key)?.split("=")[1]
2025-04-15T08:07:18.2627763Z     }
2025-04-15T08:07:18.2627766Z 
2025-04-15T08:07:18.2627839Z     // Check cloud token
2025-04-15T08:07:18.2627931Z     const CLOUD_TOKEN_KEY = "netdataJWT"
2025-04-15T08:07:18.2628063Z     const redirectUri = getHashValueByKey("redirect_uri")
2025-04-15T08:07:18.2628162Z     const token = getHashValueByKey("token")
2025-04-15T08:07:18.2628227Z     if (token) {
2025-04-15T08:07:18.2628339Z       localStorage.setItem(CLOUD_TOKEN_KEY, token)
2025-04-15T08:07:18.2628404Z     }
2025-04-15T08:07:18.2628474Z     if (redirectUri) {
2025-04-15T08:07:18.2628541Z       try {
2025-04-15T08:07:18.2628670Z         const decodedUrl = decodeURIComponent(redirectUri)
2025-04-15T08:07:18.2628827Z         const parsedUrl = new URL(decodedUrl, window.location.origin)
2025-04-15T08:07:18.2628831Z 
2025-04-15T08:07:18.2628948Z         if (parsedUrl.origin === window.location.origin) {
2025-04-15T08:07:18.2629047Z           window.location.href = parsedUrl.href
2025-04-15T08:07:18.2629113Z         } else {
2025-04-15T08:07:18.2629288Z           console.error("Blocked potentially unsafe redirect to: ", decodedUrl)
2025-04-15T08:07:18.2629353Z         }
2025-04-15T08:07:18.2629423Z       } catch (error) {
2025-04-15T08:07:18.2629554Z         console.error("Invalid URL detected: ", error.message)
2025-04-15T08:07:18.2629619Z       }
2025-04-15T08:07:18.2629715Z     }</script><style>body.netdata-splash {
2025-04-15T08:07:18.2629788Z       height: 100%;
2025-04-15T08:07:18.2629979Z       overflow: hidden;
2025-04-15T08:07:18.2630065Z       background: var(--main-bg);
2025-04-15T08:07:18.2630132Z       margin: 0;
2025-04-15T08:07:18.2630200Z       padding: 0;
2025-04-15T08:07:18.2630285Z       color: var(--text);
2025-04-15T08:07:18.2630461Z       font-family: system-ui, "Segoe UI", Roboto, Helvetica, Arial, sans-serif,
2025-04-15T08:07:18.2630598Z         "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
2025-04-15T08:07:18.2630659Z     }
2025-04-15T08:07:18.2630662Z 
2025-04-15T08:07:18.2630727Z     :root {
2025-04-15T08:07:18.2630811Z       --scrollbar-thumb: #fcfffd;
2025-04-15T08:07:18.2630888Z       --primary: #00ab44;
2025-04-15T08:07:18.2630963Z       --text: #93a4a4;
2025-04-15T08:07:18.2631037Z       --text-dark: #001107;
2025-04-15T08:07:18.2631116Z       --text-light: #fcfffd;
2025-04-15T08:07:18.2631187Z       --menu-item: #5b6c6c;
2025-04-15T08:07:18.2631258Z       --main-bg: #000;
2025-04-15T08:07:18.2631335Z       --highlight: #00ef5f;
2025-04-15T08:07:18.2631415Z       --tab-active: #ddffeb;
2025-04-15T08:07:18.2631489Z       --tab-hover: #d2d9d9;
2025-04-15T08:07:18.2631572Z       --panel-bg: transparent;
2025-04-15T08:07:18.2631651Z       --font-small: 14px;
2025-04-15T08:07:18.2631730Z       --font-medium: 16px;
2025-04-15T08:07:18.2631849Z       --row-2n: #101313;
2025-04-15T08:07:18.2631980Z       --border: #00ab4436;
2025-04-15T08:07:18.2632114Z       --border-neutral: #252c2c;
2025-04-15T08:07:18.2632195Z       --key-value-table: #93a4a4;
2025-04-15T08:07:18.2632269Z       --accent: #ddffeb;
2025-04-15T08:07:18.2632344Z       --module-height: 45vh;
2025-04-15T08:07:18.2632444Z       --list-option-bg: rgba(12, 15, 15, 0.5);
2025-04-15T08:07:18.2632532Z       --list-option-selected-bg: #000;
2025-04-15T08:07:18.2632635Z       --list-option-hover-bg: rgba(12, 15, 15, 1);
2025-04-15T08:07:18.2632712Z       --footer-height: 70px;
2025-04-15T08:07:18.2632785Z       --code-bg: #00220e;
2025-04-15T08:07:18.2632873Z       --progress-bar-height: 2px;
2025-04-15T08:07:18.2632966Z       background-color: var(--main-bg);
2025-04-15T08:07:18.2633027Z     }
2025-04-15T08:07:18.2633031Z 
2025-04-15T08:07:18.2633097Z     :root iframe {
2025-04-15T08:07:18.2633262Z       border-width: 0;
2025-04-15T08:07:18.2633330Z     }
2025-04-15T08:07:18.2633334Z 
2025-04-15T08:07:18.2633440Z     body.netdata-splash.loading .frame-right {
2025-04-15T08:07:18.2633511Z       display: none;
2025-04-15T08:07:18.2633571Z     }
2025-04-15T08:07:18.2633574Z 
2025-04-15T08:07:18.2633677Z     body.netdata-splash.loading .frame-left {
2025-04-15T08:07:18.2633757Z       grid-column: auto / span 12;
2025-04-15T08:07:18.2633817Z     }
2025-04-15T08:07:18.2633821Z 
2025-04-15T08:07:18.2633957Z     body.netdata-splash.loading .sphere-stats-container,
2025-04-15T08:07:18.2634058Z     body.netdata-splash.loading .head-summary,
2025-04-15T08:07:18.2634150Z     body.netdata-splash.loading .tabs {
2025-04-15T08:07:18.2634219Z       display: none;
2025-04-15T08:07:18.2634281Z     }
2025-04-15T08:07:18.2634291Z 
2025-04-15T08:07:18.2634402Z     body.netdata-splash.loading .loading-message {
2025-04-15T08:07:18.2634469Z       display: flex;
2025-04-15T08:07:18.2634545Z       position: absolute;
2025-04-15T08:07:18.2634614Z       inset: 0;
2025-04-15T08:07:18.2634684Z       margin: auto;
2025-04-15T08:07:18.2634756Z       align-items: center;
2025-04-15T08:07:18.2634832Z       justify-content: center;
2025-04-15T08:07:18.2634908Z       color: var(--accent);
2025-04-15T08:07:18.2634967Z     }
2025-04-15T08:07:18.2634971Z 
2025-04-15T08:07:18.2635054Z     body.netdata-splash .error {
2025-04-15T08:07:18.2635122Z       color: #DB162F;
2025-04-15T08:07:18.2635186Z     }
2025-04-15T08:07:18.2635189Z 
2025-04-15T08:07:18.2635283Z     body.netdata-splash .loading-message {
2025-04-15T08:07:18.2635349Z       display: none;
2025-04-15T08:07:18.2635413Z     }
2025-04-15T08:07:18.2635417Z 
2025-04-15T08:07:18.2635494Z     body.netdata-splash h1 {
2025-04-15T08:07:18.2635567Z       font-size: 36px;
2025-04-15T08:07:18.2635745Z       margin-top: 8px;
2025-04-15T08:07:18.2635818Z       margin-bottom: 8px;
2025-04-15T08:07:18.2635898Z       color: var(--text-light);
2025-04-15T08:07:18.2635976Z       filter: blur(0.6px);
2025-04-15T08:07:18.2636039Z     }
2025-04-15T08:07:18.2636043Z 
2025-04-15T08:07:18.2636229Z     body.netdata-splash h2 {
2025-04-15T08:07:18.2636304Z       font-size: 16px;
2025-04-15T08:07:18.2636364Z     }
2025-04-15T08:07:18.2636368Z 
2025-04-15T08:07:18.2636443Z     body.netdata-splash h4 {
2025-04-15T08:07:18.2636521Z       font-size: 12px;
2025-04-15T08:07:18.2636594Z       margin-bottom: 12px;
2025-04-15T08:07:18.2636667Z       margin-top: 8px;
2025-04-15T08:07:18.2636727Z     }
2025-04-15T08:07:18.2636730Z 
2025-04-15T08:07:18.2636810Z     body.netdata-splash a:link,
2025-04-15T08:07:18.2636899Z     body.netdata-splash a:visited,
2025-04-15T08:07:18.2636982Z     body.netdata-splash a:active {
2025-04-15T08:07:18.2637062Z       text-decoration: none;
2025-04-15T08:07:18.2637136Z       color: var(--primary);
2025-04-15T08:07:18.2637206Z     }
2025-04-15T08:07:18.2637209Z 
2025-04-15T08:07:18.2637290Z     body.netdata-splash a:hover {
2025-04-15T08:07:18.2637370Z       color: var(--highlight);
2025-04-15T08:07:18.2637437Z     }
2025-04-15T08:07:18.2637441Z 
2025-04-15T08:07:18.2637524Z     body.netdata-splash canvas {
2025-04-15T08:07:18.2637599Z       display: block;
2025-04-15T08:07:18.2637661Z     }
2025-04-15T08:07:18.2637664Z 
2025-04-15T08:07:18.2637744Z     body.netdata-splash code {
2025-04-15T08:07:18.2637827Z       background: var(--code-bg);
2025-04-15T08:07:18.2637903Z       color: var(--highlight);
2025-04-15T08:07:18.2637990Z       border: 1px solid var(--border);
2025-04-15T08:07:18.2638067Z       border-radius: 2px;
2025-04-15T08:07:18.2638141Z       padding: 12px;
2025-04-15T08:07:18.2638219Z       line-break: anywhere;
2025-04-15T08:07:18.2638294Z       word-break: break-all;
2025-04-15T08:07:18.2638357Z     }
2025-04-15T08:07:18.2638361Z 
2025-04-15T08:07:18.2638449Z     body.netdata-splash .text-small {
2025-04-15T08:07:18.2638527Z       font-size: 12px;
2025-04-15T08:07:18.2638588Z     }
2025-04-15T08:07:18.2638591Z 
2025-04-15T08:07:18.2638671Z     body.netdata-splash .logo {
2025-04-15T08:07:18.2638989Z       filter: drop-shadow(2px 2px 32px rgba(255, 255, 255, 0.7)) blur(1px);
2025-04-15T08:07:18.2639118Z       opacity: 0.9;
2025-04-15T08:07:18.2639243Z       width: 150px;
2025-04-15T08:07:18.2639343Z       height: 150px;
2025-04-15T08:07:18.2639408Z     }
2025-04-15T08:07:18.2639411Z 
2025-04-15T08:07:18.2639515Z     body.netdata-splash .claim-message .logo {
2025-04-15T08:07:18.2639581Z       width: 100px;
2025-04-15T08:07:18.2639652Z       height: 100px;
2025-04-15T08:07:18.2639711Z     }
2025-04-15T08:07:18.2639715Z 
2025-04-15T08:07:18.2639797Z     body.netdata-splash .grid {
2025-04-15T08:07:18.2639867Z       display: grid;
2025-04-15T08:07:18.2639945Z       grid-column-gap: 16px;
2025-04-15T08:07:18.2640024Z       grid-row-gap: 16px;
2025-04-15T08:07:18.2640122Z       grid-template-columns: repeat(12, 1fr);
2025-04-15T08:07:18.2640228Z       grid-template-rows: repeat(12, 1fr);
2025-04-15T08:07:18.2640310Z       grid-auto-rows: min-content;
2025-04-15T08:07:18.2640374Z     }
2025-04-15T08:07:18.2640383Z 
2025-04-15T08:07:18.2640477Z     body.netdata-splash .grid-columns-10 {
2025-04-15T08:07:18.2640545Z       display: grid;
2025-04-15T08:07:18.2640627Z       grid-column-gap: 16px;
2025-04-15T08:07:18.2640700Z       grid-row-gap: 16px;
2025-04-15T08:07:18.2640799Z       grid-template-columns: repeat(10, 1fr);
2025-04-15T08:07:18.2640859Z     }
2025-04-15T08:07:18.2640862Z 
2025-04-15T08:07:18.2640951Z     body.netdata-splash .col-span-1 {
2025-04-15T08:07:18.2641034Z       grid-column: auto / span 1;
2025-04-15T08:07:18.2641096Z     }
2025-04-15T08:07:18.2641099Z 
2025-04-15T08:07:18.2641187Z     body.netdata-splash .col-span-2 {
2025-04-15T08:07:18.2641265Z       grid-column: auto / span 2;
2025-04-15T08:07:18.2641330Z     }
2025-04-15T08:07:18.2641334Z 
2025-04-15T08:07:18.2641420Z     body.netdata-splash .col-span-3 {
2025-04-15T08:07:18.2641630Z       grid-column: auto / span 3;
2025-04-15T08:07:18.2641697Z     }
2025-04-15T08:07:18.2641700Z 
2025-04-15T08:07:18.2641788Z     body.netdata-splash .col-span-4 {
2025-04-15T08:07:18.2641868Z       grid-column: auto / span 4;
2025-04-15T08:07:18.2641927Z     }
2025-04-15T08:07:18.2641931Z 
2025-04-15T08:07:18.2642017Z     body.netdata-splash .col-span-5 {
2025-04-15T08:07:18.2642091Z       grid-column: auto / span 5;
2025-04-15T08:07:18.2642152Z     }
2025-04-15T08:07:18.2642155Z 
2025-04-15T08:07:18.2642244Z     body.netdata-splash .col-span-6 {
2025-04-15T08:07:18.2642322Z       grid-column: auto / span 6;
2025-04-15T08:07:18.2642386Z     }
2025-04-15T08:07:18.2642389Z 
2025-04-15T08:07:18.2642471Z     body.netdata-splash .col-span-7 {
2025-04-15T08:07:18.2642548Z       grid-column: auto / span 7;
2025-04-15T08:07:18.2642606Z     }
2025-04-15T08:07:18.2642610Z 
2025-04-15T08:07:18.2642692Z     body.netdata-splash .col-span-8 {
2025-04-15T08:07:18.2642775Z       grid-column: auto / span 8;
2025-04-15T08:07:18.2642834Z     }
2025-04-15T08:07:18.2642838Z 
2025-04-15T08:07:18.2642924Z     body.netdata-splash .col-span-9 {
2025-04-15T08:07:18.2643003Z       grid-column: auto / span 9;
2025-04-15T08:07:18.2643063Z     }
2025-04-15T08:07:18.2643069Z 
2025-04-15T08:07:18.2643155Z     body.netdata-splash .col-span-10 {
2025-04-15T08:07:18.2643231Z       grid-column: auto / span 10;
2025-04-15T08:07:18.2643294Z     }
2025-04-15T08:07:18.2643297Z 
2025-04-15T08:07:18.2643380Z     body.netdata-splash .col-span-11 {
2025-04-15T08:07:18.2643460Z       grid-column: auto / span 11;
2025-04-15T08:07:18.2643519Z     }
2025-04-15T08:07:18.2643523Z 
2025-04-15T08:07:18.2643609Z     body.netdata-splash .col-span-12 {
2025-04-15T08:07:18.2643688Z       grid-column: auto / span 12;
2025-04-15T08:07:18.2643748Z     }
2025-04-15T08:07:18.2643751Z 
2025-04-15T08:07:18.2643839Z     body.netdata-splash .col-start-1 {
2025-04-15T08:07:18.2643917Z       grid-column-start: 1;
2025-04-15T08:07:18.2643987Z     }
2025-04-15T08:07:18.2643990Z 
2025-04-15T08:07:18.2644075Z     body.netdata-splash .col-start-2 {
2025-04-15T08:07:18.2644153Z       grid-column-start: 2;
2025-04-15T08:07:18.2644299Z     }
2025-04-15T08:07:18.2644303Z 
2025-04-15T08:07:18.2644390Z     body.netdata-splash .col-start-3 {
2025-04-15T08:07:18.2644469Z       grid-column-start: 3;
2025-04-15T08:07:18.2644532Z     }
2025-04-15T08:07:18.2644535Z 
2025-04-15T08:07:18.2644621Z     body.netdata-splash .col-start-4 {
2025-04-15T08:07:18.2644696Z       grid-column-start: 4;
2025-04-15T08:07:18.2644757Z     }
2025-04-15T08:07:18.2644761Z 
2025-04-15T08:07:18.2644848Z     body.netdata-splash .col-start-5 {
2025-04-15T08:07:18.2644927Z       grid-column-start: 5;
2025-04-15T08:07:18.2644989Z     }
2025-04-15T08:07:18.2644993Z 
2025-04-15T08:07:18.2645080Z     body.netdata-splash .col-start-6 {
2025-04-15T08:07:18.2645154Z       grid-column-start: 6;
2025-04-15T08:07:18.2645218Z     }
2025-04-15T08:07:18.2645221Z 
2025-04-15T08:07:18.2645310Z     body.netdata-splash .col-start-7 {
2025-04-15T08:07:18.2645387Z       grid-column-start: 7;
2025-04-15T08:07:18.2645448Z     }
2025-04-15T08:07:18.2645451Z 
2025-04-15T08:07:18.2645545Z     body.netdata-splash .col-start-8 {
2025-04-15T08:07:18.2645620Z       grid-column-start: 8;
2025-04-15T08:07:18.2645680Z     }
2025-04-15T08:07:18.2645684Z 
2025-04-15T08:07:18.2645771Z     body.netdata-splash .col-start-9 {
2025-04-15T08:07:18.2645845Z       grid-column-start: 9;
2025-04-15T08:07:18.2645908Z     }
2025-04-15T08:07:18.2645912Z 
2025-04-15T08:07:18.2646003Z     body.netdata-splash .col-start-10 {
2025-04-15T08:07:18.2646324Z       grid-column-start: 10;
2025-04-15T08:07:18.2646388Z     }
2025-04-15T08:07:18.2646391Z 
2025-04-15T08:07:18.2646479Z     body.netdata-splash .col-start-12 {
2025-04-15T08:07:18.2646562Z       grid-column-start: 11;
2025-04-15T08:07:18.2646621Z     }
2025-04-15T08:07:18.2646624Z 
2025-04-15T08:07:18.2646721Z     body.netdata-splash .col-start-12 {
2025-04-15T08:07:18.2646918Z       grid-column-start: 12;
2025-04-15T08:07:18.2646978Z     }
2025-04-15T08:07:18.2646982Z 
2025-04-15T08:07:18.2647074Z     @media screen and (max-width: 1280px) {
2025-04-15T08:07:18.2647185Z       body.netdata-splash .md-grid-columns-12 {
2025-04-15T08:07:18.2647260Z         display: grid;
2025-04-15T08:07:18.2647340Z         grid-column-gap: 16px;
2025-04-15T08:07:18.2647416Z         grid-row-gap: 16px;
2025-04-15T08:07:18.2647512Z         grid-template-columns: repeat(12, 1fr);
2025-04-15T08:07:18.2647576Z       }
2025-04-15T08:07:18.2647580Z 
2025-04-15T08:07:18.2647676Z       body.netdata-splash .md-col-span-1 {
2025-04-15T08:07:18.2647757Z         grid-column: auto / span 1;
2025-04-15T08:07:18.2647823Z       }
2025-04-15T08:07:18.2647828Z 
2025-04-15T08:07:18.2647917Z       body.netdata-splash .md-col-span-2 {
2025-04-15T08:07:18.2647997Z         grid-column: auto / span 2;
2025-04-15T08:07:18.2648058Z       }
2025-04-15T08:07:18.2648062Z 
2025-04-15T08:07:18.2648150Z       body.netdata-splash .md-col-span-3 {
2025-04-15T08:07:18.2648237Z         grid-column: auto / span 3;
2025-04-15T08:07:18.2648297Z       }
2025-04-15T08:07:18.2648301Z 
2025-04-15T08:07:18.2648395Z       body.netdata-splash .md-col-span-4 {
2025-04-15T08:07:18.2648471Z         grid-column: auto / span 4;
2025-04-15T08:07:18.2648536Z       }
2025-04-15T08:07:18.2648539Z 
2025-04-15T08:07:18.2648626Z       body.netdata-splash .md-col-span-5 {
2025-04-15T08:07:18.2648705Z         grid-column: auto / span 5;
2025-04-15T08:07:18.2648770Z       }
2025-04-15T08:07:18.2648773Z 
2025-04-15T08:07:18.2648859Z       body.netdata-splash .md-col-span-6 {
2025-04-15T08:07:18.2648941Z         grid-column: auto / span 6;
2025-04-15T08:07:18.2649002Z       }
2025-04-15T08:07:18.2649005Z 
2025-04-15T08:07:18.2649096Z       body.netdata-splash .md-col-span-7 {
2025-04-15T08:07:18.2649173Z         grid-column: auto / span 7;
2025-04-15T08:07:18.2649234Z       }
2025-04-15T08:07:18.2649238Z 
2025-04-15T08:07:18.2649329Z       body.netdata-splash .md-col-span-8 {
2025-04-15T08:07:18.2649410Z         grid-column: auto / span 8;
2025-04-15T08:07:18.2649478Z       }
2025-04-15T08:07:18.2649482Z 
2025-04-15T08:07:18.2649698Z       body.netdata-splash .md-col-span-9 {
2025-04-15T08:07:18.2649779Z         grid-column: auto / span 9;
2025-04-15T08:07:18.2649844Z       }
2025-04-15T08:07:18.2649847Z 
2025-04-15T08:07:18.2649941Z       body.netdata-splash .md-col-span-10 {
2025-04-15T08:07:18.2650024Z         grid-column: auto / span 10;
2025-04-15T08:07:18.2650086Z       }
2025-04-15T08:07:18.2650090Z 
2025-04-15T08:07:18.2650182Z       body.netdata-splash .md-col-span-11 {
2025-04-15T08:07:18.2650259Z         grid-column: auto / span 11;
2025-04-15T08:07:18.2650320Z       }
2025-04-15T08:07:18.2650324Z 
2025-04-15T08:07:18.2650415Z       body.netdata-splash .md-col-span-12 {
2025-04-15T08:07:18.2650500Z         grid-column: auto / span 12;
2025-04-15T08:07:18.2650567Z       }
2025-04-15T08:07:18.2650628Z     }
2025-04-15T08:07:18.2650632Z 
2025-04-15T08:07:18.2650730Z     body.netdata-splash .row-span-1 {
2025-04-15T08:07:18.2650806Z       grid-row: auto / span 1;
2025-04-15T08:07:18.2650868Z     }
2025-04-15T08:07:18.2650871Z 
2025-04-15T08:07:18.2650966Z     body.netdata-splash .row-span-2 {
2025-04-15T08:07:18.2651048Z       grid-row: auto / span 2;
2025-04-15T08:07:18.2651113Z     }
2025-04-15T08:07:18.2651117Z 
2025-04-15T08:07:18.2651201Z     body.netdata-splash .row-span-3 {
2025-04-15T08:07:18.2651279Z       grid-row: auto / span 3;
2025-04-15T08:07:18.2651344Z     }
2025-04-15T08:07:18.2651347Z 
2025-04-15T08:07:18.2651430Z     body.netdata-splash .row-span-4 {
2025-04-15T08:07:18.2651507Z       grid-row: auto / span 4;
2025-04-15T08:07:18.2651568Z     }
2025-04-15T08:07:18.2651571Z 
2025-04-15T08:07:18.2651659Z     body.netdata-splash .row-span-5 {
2025-04-15T08:07:18.2651734Z       grid-row: auto / span 5;
2025-04-15T08:07:18.2651795Z     }
2025-04-15T08:07:18.2651802Z 
2025-04-15T08:07:18.2651887Z     body.netdata-splash .row-span-6 {
2025-04-15T08:07:18.2652047Z       grid-row: auto / span 6;
2025-04-15T08:07:18.2652111Z     }
2025-04-15T08:07:18.2652115Z 
2025-04-15T08:07:18.2652199Z     body.netdata-splash .row-span-7 {
2025-04-15T08:07:18.2652281Z       grid-row: auto / span 7;
2025-04-15T08:07:18.2652343Z     }
2025-04-15T08:07:18.2652346Z 
2025-04-15T08:07:18.2652429Z     body.netdata-splash .row-span-8 {
2025-04-15T08:07:18.2652506Z       grid-row: auto / span 8;
2025-04-15T08:07:18.2652567Z     }
2025-04-15T08:07:18.2652570Z 
2025-04-15T08:07:18.2652659Z     body.netdata-splash .row-span-9 {
2025-04-15T08:07:18.2652733Z       grid-row: auto / span 9;
2025-04-15T08:07:18.2652801Z     }
2025-04-15T08:07:18.2652804Z 
2025-04-15T08:07:18.2652891Z     body.netdata-splash .row-span-10 {
2025-04-15T08:07:18.2652967Z       grid-row: auto / span 10;
2025-04-15T08:07:18.2653030Z     }
2025-04-15T08:07:18.2653033Z 
2025-04-15T08:07:18.2653118Z     body.netdata-splash .row-span-11 {
2025-04-15T08:07:18.2653194Z       grid-row: auto / span 11;
2025-04-15T08:07:18.2653259Z     }
2025-04-15T08:07:18.2653263Z 
2025-04-15T08:07:18.2653349Z     body.netdata-splash .row-span-12 {
2025-04-15T08:07:18.2653421Z       grid-row: auto / span 12;
2025-04-15T08:07:18.2653484Z     }
2025-04-15T08:07:18.2653487Z 
2025-04-15T08:07:18.2653574Z     body.netdata-splash .relative {
2025-04-15T08:07:18.2653647Z       position: relative;
2025-04-15T08:07:18.2653709Z     }
2025-04-15T08:07:18.2653712Z 
2025-04-15T08:07:18.2653794Z     body.netdata-splash .absolute {
2025-04-15T08:07:18.2653867Z       position: absolute;
2025-04-15T08:07:18.2653930Z     }
2025-04-15T08:07:18.2653933Z 
2025-04-15T08:07:18.2654012Z     body.netdata-splash .index-10 {
2025-04-15T08:07:18.2654083Z       z-index: 10;
2025-04-15T08:07:18.2654144Z     }
2025-04-15T08:07:18.2654147Z 
2025-04-15T08:07:18.2654233Z     body.netdata-splash .m-auto {
2025-04-15T08:07:18.2654303Z       margin: auto;
2025-04-15T08:07:18.2654365Z     }
2025-04-15T08:07:18.2654369Z 
2025-04-15T08:07:18.2654457Z     body.netdata-splash .full-h {
2025-04-15T08:07:18.2654531Z       height: 100%;
2025-04-15T08:07:18.2654596Z     }
2025-04-15T08:07:18.2654599Z 
2025-04-15T08:07:18.2654678Z     body.netdata-splash .flex {
2025-04-15T08:07:18.2654854Z       display: flex;
2025-04-15T08:07:18.2654918Z     }
2025-04-15T08:07:18.2654922Z 
2025-04-15T08:07:18.2655005Z     body.netdata-splash .flex-col {
2025-04-15T08:07:18.2655092Z       flex-direction: column;
2025-04-15T08:07:18.2655153Z     }
2025-04-15T08:07:18.2655156Z 
2025-04-15T08:07:18.2655251Z     body.netdata-splash .space-between {
2025-04-15T08:07:18.2655338Z       justify-content: space-between;
2025-04-15T08:07:18.2655399Z     }
2025-04-15T08:07:18.2655406Z 
2025-04-15T08:07:18.2655492Z     body.netdata-splash .align-center {
2025-04-15T08:07:18.2655566Z       align-items: center;
2025-04-15T08:07:18.2655631Z     }
2025-04-15T08:07:18.2655634Z 
2025-04-15T08:07:18.2655719Z     body.netdata-splash .container {
2025-04-15T08:07:18.2655803Z       background: var(--main-bg);
2025-04-15T08:07:18.2655877Z       height: 100vh;
2025-04-15T08:07:18.2655947Z       column-gap: 0;
2025-04-15T08:07:18.2656012Z     }
2025-04-15T08:07:18.2656016Z 
2025-04-15T08:07:18.2656202Z     body.netdata-splash .frame {
2025-04-15T08:07:18.2656277Z       height: 100vh;
2025-04-15T08:07:18.2656338Z     }
2025-04-15T08:07:18.2656341Z 
2025-04-15T08:07:18.2656440Z     body.netdata-splash .light-beam:after {
2025-04-15T08:07:18.2656508Z       content: "";
2025-04-15T08:07:18.2656583Z       position: absolute;
2025-04-15T08:07:18.2656655Z       top: 0;
2025-04-15T08:07:18.2656722Z       bottom: 0;
2025-04-15T08:07:18.2656791Z       left: 0;
2025-04-15T08:07:18.2656857Z       width: 1px;
2025-04-15T08:07:18.2656978Z       box-shadow: 20px 0px 110px 55px rgb(0 255 100 / 10%);
2025-04-15T08:07:18.2657048Z     }
2025-04-15T08:07:18.2657051Z 
2025-04-15T08:07:18.2657137Z     body.netdata-splash #setupGrid {
2025-04-15T08:07:18.2657211Z       opacity: 0.15;
2025-04-15T08:07:18.2657284Z       position: absolute;
2025-04-15T08:07:18.2657474Z       inset: 0;
2025-04-15T08:07:18.2657539Z     }
2025-04-15T08:07:18.2657542Z 
2025-04-15T08:07:18.2657628Z     body.netdata-splash #monitorGrid {
2025-04-15T08:07:18.2657706Z       opacity: 0.4;
2025-04-15T08:07:18.2657780Z       transition: 1s ease;
2025-04-15T08:07:18.2657843Z     }
2025-04-15T08:07:18.2657847Z 
2025-04-15T08:07:18.2657951Z     body.netdata-splash #monitorGrid.hovered {
2025-04-15T08:07:18.2658018Z       opacity: 0.7;
2025-04-15T08:07:18.2658083Z     }
2025-04-15T08:07:18.2658086Z 
2025-04-15T08:07:18.2658179Z     body.netdata-splash #sphereContainer {
2025-04-15T08:07:18.2658253Z       height: calc(100vh);
2025-04-15T08:07:18.2658324Z       position: relative;
2025-04-15T08:07:18.2658382Z     }
2025-04-15T08:07:18.2658390Z 
2025-04-15T08:07:18.2658487Z     body.netdata-splash #sphereContainer h4 {
2025-04-15T08:07:18.2658556Z       display: none;
2025-04-15T08:07:18.2658617Z     }
2025-04-15T08:07:18.2658621Z 
2025-04-15T08:07:18.2658702Z     body.netdata-splash .setup {
2025-04-15T08:07:18.2658776Z       z-index: 10;
2025-04-15T08:07:18.2658848Z       position: relative;
2025-04-15T08:07:18.2658939Z       box-shadow: 20px 0px 160px 5px #012f13c2;
2025-04-15T08:07:18.2659036Z       background: linear-gradient(90deg,
2025-04-15T08:07:18.2659105Z           rgba(0, 0, 0, 1) 0%,
2025-04-15T08:07:18.2659179Z           rgb(0 19 7 / 76%) 100%);
2025-04-15T08:07:18.2659239Z     }
2025-04-15T08:07:18.2659242Z 
2025-04-15T08:07:18.2659329Z     body.netdata-splash .setup>.stats {
2025-04-15T08:07:18.2659397Z       padding: 16px;
2025-04-15T08:07:18.2659468Z       overflow: auto;
2025-04-15T08:07:18.2659535Z       height: 100%;
2025-04-15T08:07:18.2659606Z       position: absolute;
2025-04-15T08:07:18.2659676Z       top: 65px;
2025-04-15T08:07:18.2659738Z       left: 0;
2025-04-15T08:07:18.2659801Z       right: 0;
2025-04-15T08:07:18.2659868Z       bottom: 0;
2025-04-15T08:07:18.2659930Z     }
2025-04-15T08:07:18.2659934Z 
2025-04-15T08:07:18.2660026Z     body.netdata-splash .setup .header {
2025-04-15T08:07:18.2660100Z       position: sticky;
2025-04-15T08:07:18.2660165Z       top: 0;
2025-04-15T08:07:18.2660244Z       padding: 8px 16px;
2025-04-15T08:07:18.2660419Z       margin: 0;
2025-04-15T08:07:18.2660508Z       backdrop-filter: blur(8px);
2025-04-15T08:07:18.2660588Z       background: rgba(0, 0, 0, 0.1);
2025-04-15T08:07:18.2660696Z       /* border-bottom: 1px solid var(--border); */
2025-04-15T08:07:18.2660769Z       display: flex;
2025-04-15T08:07:18.2660842Z       align-items: center;
2025-04-15T08:07:18.2660932Z       justify-content: space-between;
2025-04-15T08:07:18.2660995Z     }
2025-04-15T08:07:18.2660998Z 
2025-04-15T08:07:18.2661089Z     body.netdata-splash .header .title {
2025-04-15T08:07:18.2661157Z       display: flex;
2025-04-15T08:07:18.2661229Z       align-items: center;
2025-04-15T08:07:18.2661297Z       gap: 8px;
2025-04-15T08:07:18.2661356Z     }
2025-04-15T08:07:18.2661360Z 
2025-04-15T08:07:18.2661447Z     body.netdata-splash .header .logo {
2025-04-15T08:07:18.2661519Z       width: 32px;
2025-04-15T08:07:18.2661584Z       height: auto;
2025-04-15T08:07:18.2661646Z     }
2025-04-15T08:07:18.2661649Z 
2025-04-15T08:07:18.2661745Z     body.netdata-splash .splash-message {
2025-04-15T08:07:18.2661821Z       position: absolute;
2025-04-15T08:07:18.2661884Z       inset: 0;
2025-04-15T08:07:18.2661952Z       margin: auto;
2025-04-15T08:07:18.2662020Z       display: flex;
2025-04-15T08:07:18.2662092Z       align-items: center;
2025-04-15T08:07:18.2662172Z       justify-content: center;
2025-04-15T08:07:18.2662250Z       flex-direction: column;
2025-04-15T08:07:18.2662325Z       overflow-y: auto;
2025-04-15T08:07:18.2662387Z     }
2025-04-15T08:07:18.2662390Z 
2025-04-15T08:07:18.2662485Z     body.netdata-splash .splash-message p {
2025-04-15T08:07:18.2662558Z       margin-top: 0;
2025-04-15T08:07:18.2662633Z       margin-bottom: 24px;
2025-04-15T08:07:18.2662714Z       color: var(--text-light);
2025-04-15T08:07:18.2662788Z       filter: blur(0.6px);
2025-04-15T08:07:18.2662940Z     }
2025-04-15T08:07:18.2662944Z 
2025-04-15T08:07:18.2663031Z     body.netdata-splash .tagline {
2025-04-15T08:07:18.2663105Z       position: absolute;
2025-04-15T08:07:18.2663182Z       bottom: 24px;
2025-04-15T08:07:18.2663255Z       font-size: 12px;
2025-04-15T08:07:18.2663335Z       color: var(--text-light);
2025-04-15T08:07:18.2663396Z     }
2025-04-15T08:07:18.2663400Z 
2025-04-15T08:07:18.2663488Z     body.netdata-splash .skip-link {
2025-04-15T08:07:18.2663561Z       font-size: 12px;
2025-04-15T08:07:18.2663639Z       color: var(--text-light);
2025-04-15T08:07:18.2663715Z       text-align: center;
2025-04-15T08:07:18.2663776Z     }
2025-04-15T08:07:18.2663779Z 
2025-04-15T08:07:18.2663873Z     body.netdata-splash .license-link {
2025-04-15T08:07:18.2663947Z       padding: 0 16px 4px;
2025-04-15T08:07:18.2664017Z       font-size: 12px;
2025-04-15T08:07:18.2664095Z       color: var(--text-light);
2025-04-15T08:07:18.2664157Z     }
2025-04-15T08:07:18.2664160Z 
2025-04-15T08:07:18.2664254Z     body.netdata-splash .button {
2025-04-15T08:07:18.2664327Z       padding: 8px 12px;
2025-04-15T08:07:18.2664399Z       border-radius: 2px;
2025-04-15T08:07:18.2664476Z       font-size: 16px;
2025-04-15T08:07:18.2664545Z       min-width: 88px;
2025-04-15T08:07:18.2664620Z       text-align: center;
2025-04-15T08:07:18.2664690Z       cursor: pointer;
2025-04-15T08:07:18.2664766Z       transition: 250ms ease;
2025-04-15T08:07:18.2664839Z       border: none;
2025-04-15T08:07:18.2664899Z     }
2025-04-15T08:07:18.2664903Z 
2025-04-15T08:07:18.2665003Z     body.netdata-splash .button-primary {
2025-04-15T08:07:18.2665083Z       background: var(--primary);
2025-04-15T08:07:18.2665165Z       color: var(--text-light);
2025-04-15T08:07:18.2665226Z     }
2025-04-15T08:07:18.2665230Z 
2025-04-15T08:07:18.2665332Z     body.netdata-splash .button-primary:hover {
2025-04-15T08:07:18.2665417Z       background: var(--highlight);
2025-04-15T08:07:18.2665478Z     }
2025-04-15T08:07:18.2665481Z 
2025-04-15T08:07:18.2665574Z     body.netdata-splash a.button {
2025-04-15T08:07:18.2665649Z       color: var(--text-dark);
2025-04-15T08:07:18.2665712Z     }
2025-04-15T08:07:18.2665715Z 
2025-04-15T08:07:18.2665891Z     body.netdata-splash .button-ghost {
2025-04-15T08:07:18.2665974Z       background: transparent;
2025-04-15T08:07:18.2666053Z       color: var(--primary);
2025-04-15T08:07:18.2666211Z     }
2025-04-15T08:07:18.2666215Z 
2025-04-15T08:07:18.2666323Z     body.netdata-splash .button-ghost:hover {
2025-04-15T08:07:18.2666398Z       color: var(--highlight);
2025-04-15T08:07:18.2666457Z     }
2025-04-15T08:07:18.2666465Z 
2025-04-15T08:07:18.2666550Z     body.netdata-splash .clear-button {
2025-04-15T08:07:18.2666621Z       font-size: 12px;
2025-04-15T08:07:18.2666692Z       padding: 0;
2025-04-15T08:07:18.2666761Z       min-width: auto;
2025-04-15T08:07:18.2666826Z     }
2025-04-15T08:07:18.2666830Z 
2025-04-15T08:07:18.2666911Z     body.netdata-splash .tabs {
2025-04-15T08:07:18.2666979Z       display: flex;
2025-04-15T08:07:18.2667062Z       align-items: center;
2025-04-15T08:07:18.2667136Z       justify-content: center;
2025-04-15T08:07:18.2667228Z       border-top: 1px solid var(--border);
2025-04-15T08:07:18.2667313Z       backdrop-filter: blur(4px);
2025-04-15T08:07:18.2667374Z     }
2025-04-15T08:07:18.2667381Z 
2025-04-15T08:07:18.2667467Z     body.netdata-splash button.tab {
2025-04-15T08:07:18.2667548Z       background: rgba(0, 0, 0, 0.2);
2025-04-15T08:07:18.2667618Z       border: none;
2025-04-15T08:07:18.2667691Z       color: var(--menu-item);
2025-04-15T08:07:18.2667767Z       padding: 8px 0 24px;
2025-04-15T08:07:18.2667837Z       border-left: 0;
2025-04-15T08:07:18.2667932Z       cursor: pointer;
2025-04-15T08:07:18.2668013Z       backdrop-filter: blur(2px);
2025-04-15T08:07:18.2668081Z       width: 100%;
2025-04-15T08:07:18.2668154Z       font-size: 12px;
2025-04-15T08:07:18.2668221Z       display: flex;
2025-04-15T08:07:18.2668297Z       flex-direction: column;
2025-04-15T08:07:18.2668372Z       align-items: center;
2025-04-15T08:07:18.2668559Z       gap: 8px;
2025-04-15T08:07:18.2668621Z     }
2025-04-15T08:07:18.2668625Z 
2025-04-15T08:07:18.2668735Z     body.netdata-splash button.tab:first-child {
2025-04-15T08:07:18.2668843Z       /* border-left: 1px solid var(--primary); */
2025-04-15T08:07:18.2668905Z     }
2025-04-15T08:07:18.2668908Z 
2025-04-15T08:07:18.2669033Z     body.netdata-splash button.tab:not(.active):hover {
2025-04-15T08:07:18.2669112Z       color: var(--tab-hover);
2025-04-15T08:07:18.2669185Z       transition: 100ms ease;
2025-04-15T08:07:18.2669248Z     }
2025-04-15T08:07:18.2669251Z 
2025-04-15T08:07:18.2669346Z     body.netdata-splash button.tab.active {
2025-04-15T08:07:18.2669423Z       background: transparent;
2025-04-15T08:07:18.2669523Z       /* border-bottom: 1px solid transparent; */
2025-04-15T08:07:18.2669601Z       backdrop-filter: blur(0);
2025-04-15T08:07:18.2669678Z       color: var(--tab-active);
2025-04-15T08:07:18.2669746Z       cursor: default;
2025-04-15T08:07:18.2669816Z     }
2025-04-15T08:07:18.2669820Z 
2025-04-15T08:07:18.2669903Z     body.netdata-splash .tab-icon {
2025-04-15T08:07:18.2669969Z       width: 24px;
2025-04-15T08:07:18.2670044Z       height: 24px;
2025-04-15T08:07:18.2670105Z     }
2025-04-15T08:07:18.2670109Z 
2025-04-15T08:07:18.2670199Z     body.netdata-splash .tab-icon svg {
2025-04-15T08:07:18.2670266Z       height: 100%;
2025-04-15T08:07:18.2670331Z       width: 100%;
2025-04-15T08:07:18.2670395Z     }
2025-04-15T08:07:18.2670399Z 
2025-04-15T08:07:18.2670498Z     body.netdata-splash .tab-icon svg path {
2025-04-15T08:07:18.2670579Z       fill: var(--menu-item);
2025-04-15T08:07:18.2670651Z       transition: 100ms ease;
2025-04-15T08:07:18.2670715Z     }
2025-04-15T08:07:18.2670718Z 
2025-04-15T08:07:18.2670845Z     body.netdata-splash .tab.active .tab-icon svg path {
2025-04-15T08:07:18.2670920Z       fill: var(--tab-active);
2025-04-15T08:07:18.2670983Z     }
2025-04-15T08:07:18.2670987Z 
2025-04-15T08:07:18.2671077Z     button.tab:not(.active):hover svg path {
2025-04-15T08:07:18.2671160Z       fill: var(--tab-hover);
2025-04-15T08:07:18.2671220Z     }
2025-04-15T08:07:18.2671223Z 
2025-04-15T08:07:18.2671422Z     body.netdata-splash .panel {
2025-04-15T08:07:18.2671507Z       background: var(--panel-bg);
2025-04-15T08:07:18.2671578Z       padding: 16px;
2025-04-15T08:07:18.2671656Z       border-radius: 4px;
2025-04-15T08:07:18.2671738Z       border: 1px solid var(--border);
2025-04-15T08:07:18.2671819Z       backdrop-filter: blur(0px);
2025-04-15T08:07:18.2671879Z     }
2025-04-15T08:07:18.2671882Z 
2025-04-15T08:07:18.2671966Z     body.netdata-splash .panel-tab {
2025-04-15T08:07:18.2672045Z       border-radius: 0 0 4px 4px;
2025-04-15T08:07:18.2672113Z       border-top: 0;
2025-04-15T08:07:18.2672204Z       border-left: 1px solid var(--primary);
2025-04-15T08:07:18.2672293Z       border-bottom: 1px solid var(--primary);
2025-04-15T08:07:18.2672387Z       border-right: 1px solid var(--primary);
2025-04-15T08:07:18.2672461Z       padding: 4px 24px;
2025-04-15T08:07:18.2672535Z       display: none;
2025-04-15T08:07:18.2672606Z       height: 70%;
2025-04-15T08:07:18.2672675Z       overflow: auto;
2025-04-15T08:07:18.2672737Z     }
2025-04-15T08:07:18.2672745Z 
2025-04-15T08:07:18.2672829Z     body.netdata-splash .data-tab {
2025-04-15T08:07:18.2672898Z       display: block;
2025-04-15T08:07:18.2672971Z       opacity: 0;
2025-04-15T08:07:18.2673043Z       transition: 800ms ease;
2025-04-15T08:07:18.2673123Z       pointer-events: none;
2025-04-15T08:07:18.2673183Z     }
2025-04-15T08:07:18.2673186Z 
2025-04-15T08:07:18.2673282Z     body.netdata-splash .data-tab.active {
2025-04-15T08:07:18.2673350Z       opacity: 1;
2025-04-15T08:07:18.2673424Z       pointer-events: all;
2025-04-15T08:07:18.2673488Z     }
2025-04-15T08:07:18.2673491Z 
2025-04-15T08:07:18.2673590Z     body.netdata-splash .data-tab-container {
2025-04-15T08:07:18.2673667Z       position: absolute;
2025-04-15T08:07:18.2673729Z       left: 0;
2025-04-15T08:07:18.2673793Z       right: 0;
2025-04-15T08:07:18.2673952Z       top: 45%;
2025-04-15T08:07:18.2674020Z       /* height: 40vh; */
2025-04-15T08:07:18.2674082Z     }
2025-04-15T08:07:18.2674085Z 
2025-04-15T08:07:18.2674183Z     body.netdata-splash .system-container {
2025-04-15T08:07:18.2674250Z       overflow: auto;
2025-04-15T08:07:18.2674329Z       height: calc(100% - 330px);
2025-04-15T08:07:18.2674403Z       padding: 0 24px 24px;
2025-04-15T08:07:18.2674479Z       margin: 0 -24px;
2025-04-15T08:07:18.2674594Z       scrollbar-color: var(--scrollbar-thumb) #293030;
2025-04-15T08:07:18.2674676Z       scrollbar-width: thin;
2025-04-15T08:07:18.2674737Z     }
2025-04-15T08:07:18.2674740Z 
2025-04-15T08:07:18.2674875Z     body.netdata-splash .data-tab-container .system>div {
2025-04-15T08:07:18.2674949Z       display: flex;
2025-04-15T08:07:18.2675026Z       /* margin-bottom: 24px; */
2025-04-15T08:07:18.2675114Z       /* backdrop-filter: blur(1px); */
2025-04-15T08:07:18.2675180Z       height: auto;
2025-04-15T08:07:18.2675252Z       min-height: 40px;
2025-04-15T08:07:18.2675331Z       overflow: hidden;
2025-04-15T08:07:18.2675390Z     }
2025-04-15T08:07:18.2675393Z 
2025-04-15T08:07:18.2675552Z     body.netdata-splash .data-tab-container .system .key-value {
2025-04-15T08:07:18.2675628Z       flex-direction: column;
2025-04-15T08:07:18.2675697Z       gap: 8px;
2025-04-15T08:07:18.2675775Z       align-items: flex-start;
2025-04-15T08:07:18.2675851Z       justify-content: start;
2025-04-15T08:07:18.2675920Z       width: 100%;
2025-04-15T08:07:18.2675986Z       padding: 0;
2025-04-15T08:07:18.2676049Z     }
2025-04-15T08:07:18.2676146Z 
2025-04-15T08:07:18.2676351Z     body.netdata-splash .data-tab-container .system .key-value span:nth-child(1) {
2025-04-15T08:07:18.2676428Z       padding: 8px 16px;
2025-04-15T08:07:18.2676522Z       border-bottom: 1px solid var(--border);
2025-04-15T08:07:18.2676587Z       width: 100%;
2025-04-15T08:07:18.2676658Z       color: #8eae9b;
2025-04-15T08:07:18.2676737Z       background: rgba(0, 0, 0, 0.8);
2025-04-15T08:07:18.2676807Z     }
2025-04-15T08:07:18.2676811Z 
2025-04-15T08:07:18.2677002Z     body.netdata-splash .data-tab-container .system .key-value span:nth-child(2) {
2025-04-15T08:07:18.2677211Z       /* font-size: 16px; */
2025-04-15T08:07:18.2677295Z       padding: 4px 16px 12px;
2025-04-15T08:07:18.2677368Z       text-align: left;
2025-04-15T08:07:18.2677442Z       color: var(--accent);
2025-04-15T08:07:18.2677503Z     }
2025-04-15T08:07:18.2677506Z 
2025-04-15T08:07:18.2677602Z     body.netdata-splash .panel:hover h4 {
2025-04-15T08:07:18.2677678Z       color: var(--highlight);
2025-04-15T08:07:18.2677738Z     }
2025-04-15T08:07:18.2677741Z 
2025-04-15T08:07:18.2677835Z     body.netdata-splash .hide-title h4 {
2025-04-15T08:07:18.2677907Z       visibility: hidden;
2025-04-15T08:07:18.2677970Z     }
2025-04-15T08:07:18.2677974Z 
2025-04-15T08:07:18.2678083Z     body.netdata-splash .no-key span:first-child {
2025-04-15T08:07:18.2678150Z       display: none;
2025-04-15T08:07:18.2678214Z     }
2025-04-15T08:07:18.2678222Z 
2025-04-15T08:07:18.2678309Z     body.netdata-splash .no-title h4 {
2025-04-15T08:07:18.2678379Z       display: none;
2025-04-15T08:07:18.2678441Z     }
2025-04-15T08:07:18.2678444Z 
2025-04-15T08:07:18.2678543Z     body.netdata-splash .absolute-center {
2025-04-15T08:07:18.2678617Z       position: absolute;
2025-04-15T08:07:18.2678681Z       inset: 0;
2025-04-15T08:07:18.2678753Z       margin: auto;
2025-04-15T08:07:18.2678814Z     }
2025-04-15T08:07:18.2678817Z 
2025-04-15T08:07:18.2678907Z     body.netdata-splash .align-end {
2025-04-15T08:07:18.2678983Z       align-content: flex-end;
2025-04-15T08:07:18.2679042Z     }
2025-04-15T08:07:18.2679048Z 
2025-04-15T08:07:18.2679153Z     body.netdata-splash .panel-tab .separator {
2025-04-15T08:07:18.2679241Z       border-bottom: 1px solid var(--border);
2025-04-15T08:07:18.2679319Z       margin: 8px -24px;
2025-04-15T08:07:18.2679379Z     }
2025-04-15T08:07:18.2679383Z 
2025-04-15T08:07:18.2679472Z     body.netdata-splash .section-image {
2025-04-15T08:07:18.2679655Z       height: 16px;
2025-04-15T08:07:18.2679721Z       width: 16px;
2025-04-15T08:07:18.2679784Z     }
2025-04-15T08:07:18.2679787Z 
2025-04-15T08:07:18.2679887Z     body.netdata-splash .section-image svg {
2025-04-15T08:07:18.2679959Z       width: 100%;
2025-04-15T08:07:18.2680027Z       height: 100%;
2025-04-15T08:07:18.2680092Z     }
2025-04-15T08:07:18.2680095Z 
2025-04-15T08:07:18.2680186Z     body.netdata-splash .section-title {
2025-04-15T08:07:18.2680260Z       font-size: 14px;
2025-04-15T08:07:18.2680338Z       font-weight: bold;
2025-04-15T08:07:18.2680406Z       margin: 8px 0;
2025-04-15T08:07:18.2680489Z       display: inline-block;
2025-04-15T08:07:18.2680550Z     }
2025-04-15T08:07:18.2680553Z 
2025-04-15T08:07:18.2680666Z     body.netdata-splash .sphere-stats-container {
2025-04-15T08:07:18.2680733Z       width: 80%;
2025-04-15T08:07:18.2680800Z       height: 100vh;
2025-04-15T08:07:18.2680871Z       display: flex;
2025-04-15T08:07:18.2680945Z       align-items: center;
2025-04-15T08:07:18.2681024Z       flex-direction: column;
2025-04-15T08:07:18.2681104Z       justify-content: center;
2025-04-15T08:07:18.2681178Z       margin-bottom: 10vmin;
2025-04-15T08:07:18.2681253Z       gap: 16px;
2025-04-15T08:07:18.2681313Z     }
2025-04-15T08:07:18.2681316Z 
2025-04-15T08:07:18.2681404Z     body.netdata-splash .key-value {
2025-04-15T08:07:18.2681484Z       font-size: var(--font-small);
2025-04-15T08:07:18.2681552Z       display: flex;
2025-04-15T08:07:18.2681641Z       justify-content: space-between;
2025-04-15T08:07:18.2681713Z       align-items: center;
2025-04-15T08:07:18.2681788Z       padding: 8px 0;
2025-04-15T08:07:18.2681868Z       color: var(--key-value-table);
2025-04-15T08:07:18.2681928Z     }
2025-04-15T08:07:18.2681931Z 
2025-04-15T08:07:18.2682012Z     /* .key-value:nth-child(2n) {
2025-04-15T08:07:18.2682091Z       background: var(--row-2n);
2025-04-15T08:07:18.2682158Z     } */
2025-04-15T08:07:18.2682250Z     body.netdata-splash .key-value:hover {
2025-04-15T08:07:18.2682335Z       color: var(--highlight);
2025-04-15T08:07:18.2682396Z     }
2025-04-15T08:07:18.2682399Z 
2025-04-15T08:07:18.2682514Z     body.netdata-splash .key-value span:nth-child(2) {
2025-04-15T08:07:18.2682674Z       text-align: right;
2025-04-15T08:07:18.2682737Z     }
2025-04-15T08:07:18.2682741Z 
2025-04-15T08:07:18.2682840Z     body.netdata-splash .metrics-container {
2025-04-15T08:07:18.2682912Z       position: absolute;
2025-04-15T08:07:18.2682977Z       top: 150px;
2025-04-15T08:07:18.2683041Z     }
2025-04-15T08:07:18.2683045Z 
2025-04-15T08:07:18.2683165Z     body.netdata-splash .collected-metrics .key-value {
2025-04-15T08:07:18.2683244Z       flex-direction: column;
2025-04-15T08:07:18.2683317Z       align-items: center;
2025-04-15T08:07:18.2683394Z       justify-content: center;
2025-04-15T08:07:18.2683468Z       background: none;
2025-04-15T08:07:18.2683540Z       text-align: center;
2025-04-15T08:07:18.2683624Z       text-transform: uppercase;
2025-04-15T08:07:18.2683695Z       font-size: 12px;
2025-04-15T08:07:18.2683775Z       color: var(--text);
2025-04-15T08:07:18.2683835Z     }
2025-04-15T08:07:18.2683838Z 
2025-04-15T08:07:18.2684020Z     body.netdata-splash .collected-metrics .key-value span:nth-child(2) {
2025-04-15T08:07:18.2684094Z       font-size: 7vmin;
2025-04-15T08:07:18.2684164Z       font-weight: 700;
2025-04-15T08:07:18.2684241Z       color: rgb(254 254 254 / 80%);
2025-04-15T08:07:18.2684312Z       filter: blur(0.8px);
2025-04-15T08:07:18.2684384Z       text-align: center;
2025-04-15T08:07:18.2684443Z     }
2025-04-15T08:07:18.2684447Z 
2025-04-15T08:07:18.2684534Z     #server .key-value span:first-child,
2025-04-15T08:07:18.2684628Z     #package .key-value span:first-child {
2025-04-15T08:07:18.2684696Z       display: none;
2025-04-15T08:07:18.2684758Z     }
2025-04-15T08:07:18.2684761Z 
2025-04-15T08:07:18.2684846Z     #server .key-value span:nth-child(2),
2025-04-15T08:07:18.2684937Z     #package .key-value span:nth-child(2) {
2025-04-15T08:07:18.2685010Z       font-size: 12px;
2025-04-15T08:07:18.2685171Z       color: var(--primary);
2025-04-15T08:07:18.2685250Z       font-family: monospace;
2025-04-15T08:07:18.2685311Z     }
2025-04-15T08:07:18.2685315Z 
2025-04-15T08:07:18.2685413Z     body.netdata-splash .head-summary {
2025-04-15T08:07:18.2685479Z       left: 0;
2025-04-15T08:07:18.2685547Z       padding: 16px;
2025-04-15T08:07:18.2685618Z       right: 0;
2025-04-15T08:07:18.2685684Z       display: flex;
2025-04-15T08:07:18.2685761Z       flex-direction: row;
2025-04-15T08:07:18.2685846Z       justify-content: space-between;
2025-04-15T08:07:18.2685905Z     }
2025-04-15T08:07:18.2685908Z 
2025-04-15T08:07:18.2685993Z     body.netdata-splash .module {
2025-04-15T08:07:18.2686173Z       border: 2px solid var(--border);
2025-04-15T08:07:18.2686253Z       border-radius: 16px;
2025-04-15T08:07:18.2686406Z       box-shadow: -1px 1px var(--main-bg), -2px 2px var(--main-bg),
2025-04-15T08:07:18.2686526Z         -3px 3px var(--border), -4px 4px 24px var(--border);
2025-04-15T08:07:18.2686613Z       height: var(--module-height);
2025-04-15T08:07:18.2686686Z       overflow: auto;
2025-04-15T08:07:18.2686805Z       scrollbar-color: var(--scrollbar-thumb) #293030;
2025-04-15T08:07:18.2686887Z       scrollbar-width: thin;
2025-04-15T08:07:18.2686975Z       /* backdrop-filter: blur(2px); */
2025-04-15T08:07:18.2687034Z     }
2025-04-15T08:07:18.2687037Z 
2025-04-15T08:07:18.2687132Z     body.netdata-splash .module-header {
2025-04-15T08:07:18.2687200Z       display: flex;
2025-04-15T08:07:18.2687271Z       align-items: center;
2025-04-15T08:07:18.2687341Z       gap: 4px;
2025-04-15T08:07:18.2687414Z       padding: 4px 16px;
2025-04-15T08:07:18.2687498Z       background: rgba(0, 0, 0, 0.8);
2025-04-15T08:07:18.2687576Z       border-radius: 16px 16px 0 0;
2025-04-15T08:07:18.2687644Z       color: #8eae9b;
2025-04-15T08:07:18.2687739Z       border-bottom: 1px solid var(--border);
2025-04-15T08:07:18.2687811Z       position: sticky;
2025-04-15T08:07:18.2687878Z       top: 0;
2025-04-15T08:07:18.2687944Z     }
2025-04-15T08:07:18.2687947Z 
2025-04-15T08:07:18.2688056Z     body.netdata-splash .module-header svg path {
2025-04-15T08:07:18.2688134Z       fill: var(--accent);
2025-04-15T08:07:18.2688311Z     }
2025-04-15T08:07:18.2688315Z 
2025-04-15T08:07:18.2688423Z     body.netdata-splash .modules-container {
2025-04-15T08:07:18.2688495Z       max-height: 100%;
2025-04-15T08:07:18.2688572Z       text-align: center;
2025-04-15T08:07:18.2688640Z       margin: auto;
2025-04-15T08:07:18.2688714Z       column-gap: 24px;
2025-04-15T08:07:18.2688778Z     }
2025-04-15T08:07:18.2688782Z 
2025-04-15T08:07:18.2688875Z     body.netdata-splash .module-content {
2025-04-15T08:07:18.2688952Z       padding: 4px 16px;
2025-04-15T08:07:18.2689012Z     }
2025-04-15T08:07:18.2689016Z 
2025-04-15T08:07:18.2689121Z     body.netdata-splash .db-metrics-container {
2025-04-15T08:07:18.2689193Z       display: flex;
2025-04-15T08:07:18.2689270Z       justify-content: center;
2025-04-15T08:07:18.2689343Z       gap: 16px;
2025-04-15T08:07:18.2689408Z     }
2025-04-15T08:07:18.2689411Z 
2025-04-15T08:07:18.2689511Z     body.netdata-splash .db-metrics-blocks {
2025-04-15T08:07:18.2689583Z       /* display: flex; */
2025-04-15T08:07:18.2689667Z       /* flex-direction: column; */
2025-04-15T08:07:18.2689747Z       /* align-items: center;
2025-04-15T08:07:18.2689825Z       justify-content: center;
2025-04-15T08:07:18.2689897Z       gap: 24px; */
2025-04-15T08:07:18.2689978Z       height: var(--module-height);
2025-04-15T08:07:18.2690046Z       width: 100%;
2025-04-15T08:07:18.2690111Z     }
2025-04-15T08:07:18.2690114Z 
2025-04-15T08:07:18.2690190Z     /* .db-metrics-block {
2025-04-15T08:07:18.2690262Z       display: flex;
2025-04-15T08:07:18.2690339Z       flex-direction: column;
2025-04-15T08:07:18.2690415Z       text-align: center;
2025-04-15T08:07:18.2690487Z       min-width: 15vmax;
2025-04-15T08:07:18.2690556Z       height: 150px;
2025-04-15T08:07:18.2690634Z       padding: 0 24px;
2025-04-15T08:07:18.2690697Z     } */
2025-04-15T08:07:18.2690953Z     body.netdata-splash .db-metrics-blocks .module-content {
2025-04-15T08:07:18.2691022Z       padding: 0;
2025-04-15T08:07:18.2691084Z     }
2025-04-15T08:07:18.2691088Z 
2025-04-15T08:07:18.2691186Z     /* .db-metrics-block:not(:last-child) {
2025-04-15T08:07:18.2691276Z       border-right: 1px solid var(--border);
2025-04-15T08:07:18.2691339Z     } */
2025-04-15T08:07:18.2691433Z     body.netdata-splash .db-metrics-title {
2025-04-15T08:07:18.2691504Z       font-size: 1.5vmin;
2025-04-15T08:07:18.2691572Z     }
2025-04-15T08:07:18.2691575Z 
2025-04-15T08:07:18.2691683Z     body.netdata-splash .db-metrics-block-title {
2025-04-15T08:07:18.2691756Z       font-size: 14px;
2025-04-15T08:07:18.2691829Z       padding: 8px 16px;
2025-04-15T08:07:18.2691898Z       z-index: 100;
2025-04-15T08:07:18.2691969Z       font-weight: bold;
2025-04-15T08:07:18.2692036Z       color: #fff;
2025-04-15T08:07:18.2692101Z     }
2025-04-15T08:07:18.2692105Z 
2025-04-15T08:07:18.2692207Z     body.netdata-splash .db-metrics .key-value {
2025-04-15T08:07:18.2692285Z       display: flex;
2025-04-15T08:07:18.2692361Z       flex-direction: column;
2025-04-15T08:07:18.2692439Z       align-items: flex-start;
2025-04-15T08:07:18.2692509Z     }
2025-04-15T08:07:18.2692512Z 
2025-04-15T08:07:18.2692667Z     body.netdata-splash .db-metrics .key-value span:nth-child(2) {
2025-04-15T08:07:18.2692742Z       font-size: 12px;
2025-04-15T08:07:18.2692816Z       color: var(--accent);
2025-04-15T08:07:18.2692898Z       filter: blur(0.5px);
2025-04-15T08:07:18.2692970Z       text-align: center;
2025-04-15T08:07:18.2693031Z     }
2025-04-15T08:07:18.2693035Z 
2025-04-15T08:07:18.2693126Z     body.netdata-splash .db-metrics {
2025-04-15T08:07:18.2693200Z       padding: 8px 16px;
2025-04-15T08:07:18.2693293Z       border-bottom: 1px solid var(--border);
2025-04-15T08:07:18.2693355Z     }
2025-04-15T08:07:18.2693359Z 
2025-04-15T08:07:18.2693448Z     body.netdata-splash .disk-stats {
2025-04-15T08:07:18.2693523Z       /* border-bottom: 0; */
2025-04-15T08:07:18.2693598Z       padding: 16px;
2025-04-15T08:07:18.2693662Z     }
2025-04-15T08:07:18.2693665Z 
2025-04-15T08:07:18.2693896Z     body.netdata-splash .module-content:last-child .disk-stats {
2025-04-15T08:07:18.2693988Z       padding-bottom: 112px;
2025-04-15T08:07:18.2694049Z     }
2025-04-15T08:07:18.2694053Z 
2025-04-15T08:07:18.2694151Z     body.netdata-splash .disk-max .key-value {
2025-04-15T08:07:18.2694233Z       flex-direction: row;
2025-04-15T08:07:18.2694303Z       font-size: 12px;
2025-04-15T08:07:18.2694392Z       justify-content: space-between;
2025-04-15T08:07:18.2694463Z       padding: 2px 0;
2025-04-15T08:07:18.2694524Z     }
2025-04-15T08:07:18.2694527Z 
2025-04-15T08:07:18.2694670Z     body.netdata-splash .disk-max .key-value span:nth-child(2) {
2025-04-15T08:07:18.2694740Z       font-size: 12px;
2025-04-15T08:07:18.2694811Z       display: flex;
2025-04-15T08:07:18.2694895Z       justify-content: space-between;
2025-04-15T08:07:18.2694965Z       width: 100%;
2025-04-15T08:07:18.2695035Z     }
2025-04-15T08:07:18.2695038Z 
2025-04-15T08:07:18.2695140Z     body.netdata-splash .disk-used .key-value {
2025-04-15T08:07:18.2695215Z       padding: 2px 0;
2025-04-15T08:07:18.2695284Z     }
2025-04-15T08:07:18.2695287Z 
2025-04-15T08:07:18.2695460Z     body.netdata-splash .disk-max .key-value span:nth-child(2):before {
2025-04-15T08:07:18.2695538Z       content: "Disk Size";
2025-04-15T08:07:18.2695606Z     }
2025-04-15T08:07:18.2695610Z 
2025-04-15T08:07:18.2695775Z     body.netdata-splash .disk-used .key-value span:nth-child(2):before {
2025-04-15T08:07:18.2695849Z       content: "Used ";
2025-04-15T08:07:18.2695914Z     }
2025-04-15T08:07:18.2695918Z 
2025-04-15T08:07:18.2696163Z     body.netdata-splash .disk-used .key-value span:nth-child(2) {
2025-04-15T08:07:18.2696242Z       font-size: 12px;
2025-04-15T08:07:18.2696310Z       display: flex;
2025-04-15T08:07:18.2696399Z       justify-content: space-between;
2025-04-15T08:07:18.2696466Z       width: 100%;
2025-04-15T08:07:18.2696664Z     }
2025-04-15T08:07:18.2696668Z 
2025-04-15T08:07:18.2696827Z     body.netdata-splash .db-metrics .key-value span:first-child {
2025-04-15T08:07:18.2696899Z       font-size: 12px;
2025-04-15T08:07:18.2696983Z       color: var(--text);
2025-04-15T08:07:18.2697045Z     }
2025-04-15T08:07:18.2697048Z 
2025-04-15T08:07:18.2697160Z     body.netdata-splash .percentage-container {
2025-04-15T08:07:18.2697227Z       width: 100%;
2025-04-15T08:07:18.2697305Z       background: transparent;
2025-04-15T08:07:18.2697393Z       border: 1px solid var(--primary);
2025-04-15T08:07:18.2697465Z       height: 16px;
2025-04-15T08:07:18.2697544Z       border-radius: 1px;
2025-04-15T08:07:18.2697617Z       position: relative;
2025-04-15T08:07:18.2697679Z     }
2025-04-15T08:07:18.2697682Z 
2025-04-15T08:07:18.2697782Z     body.netdata-splash .percentage-bar {
2025-04-15T08:07:18.2697858Z       background: #016a2b94;
2025-04-15T08:07:18.2697936Z       position: absolute;
2025-04-15T08:07:18.2698002Z       bottom: 0;
2025-04-15T08:07:18.2698071Z       top: 0;
2025-04-15T08:07:18.2698140Z       left: 0;
2025-04-15T08:07:18.2698223Z       backdrop-filter: blur(1px);
2025-04-15T08:07:18.2698285Z     }
2025-04-15T08:07:18.2698293Z 
2025-04-15T08:07:18.2698388Z     body.netdata-splash .percentage-text {
2025-04-15T08:07:18.2698461Z       position: absolute;
2025-04-15T08:07:18.2698531Z       font-size: 12px;
2025-04-15T08:07:18.2698594Z       top: 0;
2025-04-15T08:07:18.2698667Z       padding: 0 2px;
2025-04-15T08:07:18.2698739Z       color: var(--accent);
2025-04-15T08:07:18.2698802Z     }
2025-04-15T08:07:18.2698806Z 
2025-04-15T08:07:18.2698895Z     body.netdata-splash .data-tab-table {
2025-04-15T08:07:18.2698962Z       padding: 16px;
2025-04-15T08:07:18.2699033Z       width: 400px;
2025-04-15T08:07:18.2699117Z       height: var(--module-height);
2025-04-15T08:07:18.2699189Z       margin: auto;
2025-04-15T08:07:18.2699251Z     }
2025-04-15T08:07:18.2699255Z 
2025-04-15T08:07:18.2699367Z     body.netdata-splash .node-info-container {
2025-04-15T08:07:18.2699442Z       display: flex;
2025-04-15T08:07:18.2699522Z       flex-direction: column;
2025-04-15T08:07:18.2699593Z       width: 100%;
2025-04-15T08:07:18.2699787Z       justify-content: center;
2025-04-15T08:07:18.2699868Z       align-items: center;
2025-04-15T08:07:18.2699935Z       gap: 8px;
2025-04-15T08:07:18.2699999Z     }
2025-04-15T08:07:18.2700003Z 
2025-04-15T08:07:18.2700097Z     body.netdata-splash .node-info {
2025-04-15T08:07:18.2700165Z       display: flex;
2025-04-15T08:07:18.2700245Z       justify-content: center;
2025-04-15T08:07:18.2700310Z       width: 100%;
2025-04-15T08:07:18.2700375Z       gap: 8px;
2025-04-15T08:07:18.2700452Z       flex-direction: row;
2025-04-15T08:07:18.2700514Z     }
2025-04-15T08:07:18.2700518Z 
2025-04-15T08:07:18.2700643Z     body.netdata-splash .node-info-container .title {
2025-04-15T08:07:18.2700716Z       font-size: 12px;
2025-04-15T08:07:18.2700780Z     }
2025-04-15T08:07:18.2700784Z 
2025-04-15T08:07:18.2700885Z     body.netdata-splash .node-info .key-value {
2025-04-15T08:07:18.2700979Z       border: 1px solid var(--highlight);
2025-04-15T08:07:18.2701054Z       padding: 2px 8px;
2025-04-15T08:07:18.2701133Z       border-radius: 4px;
2025-04-15T08:07:18.2701208Z       font-size: 12px;
2025-04-15T08:07:18.2701282Z       color: var(--highlight);
2025-04-15T08:07:18.2701350Z       height: 20px;
2025-04-15T08:07:18.2701413Z     }
2025-04-15T08:07:18.2701416Z 
2025-04-15T08:07:18.2701565Z     body.netdata-splash .node-info .key-value span:first-child {
2025-04-15T08:07:18.2701644Z       margin-right: 4px;
2025-04-15T08:07:18.2701717Z       font-weight: normal;
2025-04-15T08:07:18.2701779Z     }
2025-04-15T08:07:18.2701784Z 
2025-04-15T08:07:18.2701874Z     body.netdata-splash .availability {
2025-04-15T08:07:18.2701946Z       text-align: right;
2025-04-15T08:07:18.2702027Z       font-family: monospace;
2025-04-15T08:07:18.2702096Z       display: flex;
2025-04-15T08:07:18.2702178Z       flex-direction: column;
2025-04-15T08:07:18.2702262Z       text-transform: capitalize;
2025-04-15T08:07:18.2702438Z       padding: 8px 16px;
2025-04-15T08:07:18.2702510Z       color: #fff;
2025-04-15T08:07:18.2702582Z       font-size: 12px;
2025-04-15T08:07:18.2702652Z     }
2025-04-15T08:07:18.2702656Z 
2025-04-15T08:07:18.2702767Z     body.netdata-splash .availability .key-valye {
2025-04-15T08:07:18.2702841Z       padding: 4px 0;
2025-04-15T08:07:18.2702901Z     }
2025-04-15T08:07:18.2702904Z 
2025-04-15T08:07:18.2702993Z     body.netdata-splash .sub-module {
2025-04-15T08:07:18.2703063Z       width: 100%;
2025-04-15T08:07:18.2703124Z     }
2025-04-15T08:07:18.2703127Z 
2025-04-15T08:07:18.2703215Z     body.netdata-splash .hardware {
2025-04-15T08:07:18.2703291Z       flex-direction: column;
2025-04-15T08:07:18.2703351Z     }
2025-04-15T08:07:18.2703362Z 
2025-04-15T08:07:18.2703473Z     body.netdata-splash .hardware .module-content {
2025-04-15T08:07:18.2703541Z       padding: 0;
2025-04-15T08:07:18.2703613Z       display: flex;
2025-04-15T08:07:18.2703673Z     }
2025-04-15T08:07:18.2703681Z 
2025-04-15T08:07:18.2703818Z     body.netdata-splash .module.has-title .section-title {
2025-04-15T08:07:18.2703895Z       padding-bottom: 12px;
2025-04-15T08:07:18.2703971Z       margin-bottom: 0;
2025-04-15T08:07:18.2704039Z     }
2025-04-15T08:07:18.2704042Z 
2025-04-15T08:07:18.2704126Z     body.netdata-splash .h-auto {
2025-04-15T08:07:18.2704197Z       height: auto;
2025-04-15T08:07:18.2704258Z     }
2025-04-15T08:07:18.2704261Z 
2025-04-15T08:07:18.2704346Z     body.netdata-splash .none {
2025-04-15T08:07:18.2704415Z       display: none;
2025-04-15T08:07:18.2704474Z     }
2025-04-15T08:07:18.2704477Z 
2025-04-15T08:07:18.2704574Z     body.netdata-splash .claim-message {
2025-04-15T08:07:18.2704648Z       position: absolute;
2025-04-15T08:07:18.2704715Z       top: 0;
2025-04-15T08:07:18.2704780Z       left: 0;
2025-04-15T08:07:18.2704848Z       right: 0;
2025-04-15T08:07:18.2704923Z       margin: auto;
2025-04-15T08:07:18.2704994Z       padding: 0 24px;
2025-04-15T08:07:18.2705078Z       overflow-y: auto;
2025-04-15T08:07:18.2705140Z     }
2025-04-15T08:07:18.2705143Z 
2025-04-15T08:07:18.2705258Z     body.netdata-splash .claim-message .welcome {
2025-04-15T08:07:18.2705415Z       padding: 16px 0;
2025-04-15T08:07:18.2705491Z       text-align: center;
2025-04-15T08:07:18.2705559Z     }
2025-04-15T08:07:18.2705563Z 
2025-04-15T08:07:18.2705655Z     body.netdata-splash .text-center {
2025-04-15T08:07:18.2705732Z       text-align: center;
2025-04-15T08:07:18.2705794Z     }
2025-04-15T08:07:18.2705797Z 
2025-04-15T08:07:18.2705896Z     body.netdata-splash .connection-modal {
2025-04-15T08:07:18.2705983Z       background: rgba(0, 0, 0, 0.4);
2025-04-15T08:07:18.2706157Z       border: 1px solid var(--border);
2025-04-15T08:07:18.2706238Z       padding: 16px 16px;
2025-04-15T08:07:18.2706309Z       display: flex;
2025-04-15T08:07:18.2706399Z       flex-direction: column;
2025-04-15T08:07:18.2706473Z       gap: 12px;
2025-04-15T08:07:18.2706548Z       position: relative;
2025-04-15T08:07:18.2706631Z       font-size: 14px;
2025-04-15T08:07:18.2706692Z     }
2025-04-15T08:07:18.2706696Z 
2025-04-15T08:07:18.2706795Z     body.netdata-splash .connection-step {
2025-04-15T08:07:18.2706869Z       display: flex;
2025-04-15T08:07:18.2706946Z       flex-direction: column;
2025-04-15T08:07:18.2707017Z       gap: 12px;
2025-04-15T08:07:18.2707089Z       position: relative;
2025-04-15T08:07:18.2707165Z       min-height: 300px;
2025-04-15T08:07:18.2707225Z     }
2025-04-15T08:07:18.2707228Z 
2025-04-15T08:07:18.2707326Z     body.netdata-splash .dropdown-custom {
2025-04-15T08:07:18.2707395Z       display: flex;
2025-04-15T08:07:18.2707473Z       flex-direction: column;
2025-04-15T08:07:18.2707543Z       gap: 12px;
2025-04-15T08:07:18.2707619Z       position: relative;
2025-04-15T08:07:18.2707684Z     }
2025-04-15T08:07:18.2707688Z 
2025-04-15T08:07:18.2707779Z     body.netdata-splash .modal-footer {
2025-04-15T08:07:18.2707861Z       height: var(--footer-height);
2025-04-15T08:07:18.2707940Z       padding: 10px 0 0;
2025-04-15T08:07:18.2708132Z       display: flex;
2025-04-15T08:07:18.2708224Z       justify-content: space-between;
2025-04-15T08:07:18.2708285Z     }
2025-04-15T08:07:18.2708293Z 
2025-04-15T08:07:18.2708400Z     body.netdata-splash .modal-footer .button {
2025-04-15T08:07:18.2708470Z       height: 32px;
2025-04-15T08:07:18.2708542Z       font-size: 14px;
2025-04-15T08:07:18.2708610Z     }
2025-04-15T08:07:18.2708613Z 
2025-04-15T08:07:18.2708703Z     body.netdata-splash .list-options {
2025-04-15T08:07:18.2708773Z       margin: 0;
2025-04-15T08:07:18.2708842Z       padding: 0;
2025-04-15T08:07:18.2708914Z       list-style: none;
2025-04-15T08:07:18.2708989Z       height: 300px;
2025-04-15T08:07:18.2709061Z       overflow: auto;
2025-04-15T08:07:18.2709181Z       scrollbar-color: var(--scrollbar-thumb) #293030;
2025-04-15T08:07:18.2709260Z       scrollbar-width: thin;
2025-04-15T08:07:18.2709324Z     }
2025-04-15T08:07:18.2709327Z 
2025-04-15T08:07:18.2709425Z     body.netdata-splash .list-options li {
2025-04-15T08:07:18.2709502Z       padding: 8px 12px;
2025-04-15T08:07:18.2709594Z       background: var(--list-option-bg);
2025-04-15T08:07:18.2709693Z       border: 1px solid var(--border-neutral);
2025-04-15T08:07:18.2709773Z       margin-bottom: 12px;
2025-04-15T08:07:18.2709844Z       cursor: pointer;
2025-04-15T08:07:18.2709905Z     }
2025-04-15T08:07:18.2709908Z 
2025-04-15T08:07:18.2710019Z     body.netdata-splash .list-options li:hover {
2025-04-15T08:07:18.2710118Z       background: var(--list-option-hover-bg);
2025-04-15T08:07:18.2710188Z     }
2025-04-15T08:07:18.2710191Z 
2025-04-15T08:07:18.2710302Z     body.netdata-splash .list-options li.selected {
2025-04-15T08:07:18.2710413Z       background: var(--list-option-selected-bg);
2025-04-15T08:07:18.2710492Z       color: var(--highlight);
2025-04-15T08:07:18.2710561Z       display: flex;
2025-04-15T08:07:18.2710653Z       justify-content: space-between;
2025-04-15T08:07:18.2710715Z     }
2025-04-15T08:07:18.2710719Z 
2025-04-15T08:07:18.2710857Z     body.netdata-splash .list-options li.selected:after {
2025-04-15T08:07:18.2710931Z       content: "\2713";
2025-04-15T08:07:18.2711006Z       margin-left: 2px;
2025-04-15T08:07:18.2711188Z     }
2025-04-15T08:07:18.2711193Z 
2025-04-15T08:07:18.2711293Z     body.netdata-splash input[type="text"] {
2025-04-15T08:07:18.2711373Z       background: #2d3535;
2025-04-15T08:07:18.2711445Z       padding: 4px 8px;
2025-04-15T08:07:18.2711516Z       border: 0;
2025-04-15T08:07:18.2711588Z       font-size: 14px;
2025-04-15T08:07:18.2711661Z       min-height: 28px;
2025-04-15T08:07:18.2711738Z       color: var(--text);
2025-04-15T08:07:18.2711813Z       border-radius: 2px;
2025-04-15T08:07:18.2711883Z     }
2025-04-15T08:07:18.2711886Z 
2025-04-15T08:07:18.2711995Z     body.netdata-splash input[type="text"]:focus {
2025-04-15T08:07:18.2712079Z       outline: 1px solid var(--border);
2025-04-15T08:07:18.2712146Z     }
2025-04-15T08:07:18.2712149Z 
2025-04-15T08:07:18.2712235Z     body.netdata-splash .dropdown {
2025-04-15T08:07:18.2712319Z       position: relative;
2025-04-15T08:07:18.2712388Z       width: auto;
2025-04-15T08:07:18.2712470Z       border: 1px solid var(--border);
2025-04-15T08:07:18.2712551Z       border-radius: 4px;
2025-04-15T08:07:18.2712621Z       padding: 8px;
2025-04-15T08:07:18.2712698Z       cursor: pointer;
2025-04-15T08:07:18.2712763Z     }
2025-04-15T08:07:18.2712767Z 
2025-04-15T08:07:18.2712867Z     body.netdata-splash .dropdown-toggle {
2025-04-15T08:07:18.2712938Z       display: flex;
2025-04-15T08:07:18.2713023Z       justify-content: space-between;
2025-04-15T08:07:18.2713103Z       align-items: center;
2025-04-15T08:07:18.2713165Z     }
2025-04-15T08:07:18.2713169Z 
2025-04-15T08:07:18.2713276Z     body.netdata-splash .checkbox-container {
2025-04-15T08:07:18.2713347Z       display: none;
2025-04-15T08:07:18.2713424Z       position: absolute;
2025-04-15T08:07:18.2713491Z       top: 100%;
2025-04-15T08:07:18.2713558Z       left: 0;
2025-04-15T08:07:18.2713633Z       width: 100%;
2025-04-15T08:07:18.2713806Z       border: 1px solid var(--border);
2025-04-15T08:07:18.2713899Z       background-color: var(--main-bg);
2025-04-15T08:07:18.2713969Z       z-index: 1;
2025-04-15T08:07:18.2714050Z       max-height: 150px;
2025-04-15T08:07:18.2714129Z       overflow-y: auto;
2025-04-15T08:07:18.2714202Z       padding: 8px;
2025-04-15T08:07:18.2714269Z     }
2025-04-15T08:07:18.2714273Z 
2025-04-15T08:07:18.2714385Z     body.netdata-splash .checkbox-container label {
2025-04-15T08:07:18.2714456Z       display: block;
2025-04-15T08:07:18.2714538Z       margin-bottom: 8px;
2025-04-15T08:07:18.2714601Z     }
2025-04-15T08:07:18.2714605Z 
2025-04-15T08:07:18.2714724Z     body.netdata-splash .checkbox-container input {
2025-04-15T08:07:18.2714799Z       margin-right: 5px;
2025-04-15T08:07:18.2714870Z     }
2025-04-15T08:07:18.2714873Z 
2025-04-15T08:07:18.2714968Z     body.netdata-splash .selected-rooms {
2025-04-15T08:07:18.2715040Z       font-size: 14px;
2025-04-15T08:07:18.2715117Z       color: #333;
2025-04-15T08:07:18.2715186Z     }
2025-04-15T08:07:18.2715190Z 
2025-04-15T08:07:18.2715287Z     body.netdata-splash .text-padding {
2025-04-15T08:07:18.2715373Z       padding: 8px 8px 16px;
2025-04-15T08:07:18.2715436Z     }
2025-04-15T08:07:18.2715445Z 
2025-04-15T08:07:18.2715536Z     body.netdata-splash .nd-radio,
2025-04-15T08:07:18.2715626Z     body.netdata-splash .nd-checkbox {
2025-04-15T08:07:18.2715705Z       display: block;
2025-04-15T08:07:18.2715781Z       position: relative;
2025-04-15T08:07:18.2715866Z       padding-left: 32px;
2025-04-15T08:07:18.2715938Z       cursor: pointer;
2025-04-15T08:07:18.2716013Z       font-size: 16px;
2025-04-15T08:07:18.2716203Z       -webkit-user-select: none;
2025-04-15T08:07:18.2716287Z       -moz-user-select: none;
2025-04-15T08:07:18.2716369Z       user-select: none;
2025-04-15T08:07:18.2716444Z       line-height: 20px;
2025-04-15T08:07:18.2716507Z     }
2025-04-15T08:07:18.2716510Z 
2025-04-15T08:07:18.2716615Z     body.netdata-splash .nd-checkbox input {
2025-04-15T08:07:18.2716695Z       position: absolute;
2025-04-15T08:07:18.2716770Z       opacity: 0;
2025-04-15T08:07:18.2716844Z       cursor: pointer;
2025-04-15T08:07:18.2717034Z       height: 0;
2025-04-15T08:07:18.2717105Z       width: 0;
2025-04-15T08:07:18.2717168Z     }
2025-04-15T08:07:18.2717171Z 
2025-04-15T08:07:18.2717287Z     body.netdata-splash .nd-checkbox .checkmark {
2025-04-15T08:07:18.2717361Z       position: absolute;
2025-04-15T08:07:18.2717433Z       top: 0;
2025-04-15T08:07:18.2717498Z       left: 0;
2025-04-15T08:07:18.2717568Z       height: 16px;
2025-04-15T08:07:18.2717714Z       width: 16px;
2025-04-15T08:07:18.2717835Z       background-color: var(--main-bg);
2025-04-15T08:07:18.2717989Z       border: 1px solid var(--primary);
2025-04-15T08:07:18.2718189Z       border-radius: 2px;
2025-04-15T08:07:18.2718300Z     }
2025-04-15T08:07:18.2718342Z 
2025-04-15T08:07:18.2718543Z     body.netdata-splash .nd-checkbox:hover input~.checkmark {
2025-04-15T08:07:18.2718663Z       background-color: var(--border);
2025-04-15T08:07:18.2718802Z     }
2025-04-15T08:07:18.2718805Z 
2025-04-15T08:07:18.2718964Z     body.netdata-splash .nd-checkbox :hover input~.checkmark {
2025-04-15T08:07:18.2719192Z       background-color: #ccc;
2025-04-15T08:07:18.2719304Z     }
2025-04-15T08:07:18.2719308Z 
2025-04-15T08:07:18.2719520Z     body.netdata-splash .nd-checkbox input:checked~.checkmark {
2025-04-15T08:07:18.2719644Z       background-color: var(--boder);
2025-04-15T08:07:18.2719737Z     }
2025-04-15T08:07:18.2719741Z 
2025-04-15T08:07:18.2719960Z     body.netdata-splash .nd-checkbox .checkmark:after {
2025-04-15T08:07:18.2720076Z       content: "";
2025-04-15T08:07:18.2720236Z       position: absolute;
2025-04-15T08:07:18.2720340Z       display: none;
2025-04-15T08:07:18.2720438Z     }
2025-04-15T08:07:18.2720477Z 
2025-04-15T08:07:18.2720655Z     body.netdata-splash .nd-checkbox input:checked~.checkmark:after {
2025-04-15T08:07:18.2720808Z       display: block;
2025-04-15T08:07:18.2720975Z     }
2025-04-15T08:07:18.2721100Z 
2025-04-15T08:07:18.2721265Z     body.netdata-splash .nd-checkbox .checkmark:after {
2025-04-15T08:07:18.2721403Z       inset: 0 0 2px 0;
2025-04-15T08:07:18.2721511Z       margin: auto;
2025-04-15T08:07:18.2721702Z       width: 2px;
2025-04-15T08:07:18.2721819Z       height: 8px;
2025-04-15T08:07:18.2721936Z       border: solid var(--highlight);
2025-04-15T08:07:18.2722087Z       border-width: 0 2px 2px 0;
2025-04-15T08:07:18.2722199Z       transform: rotate(45deg);
2025-04-15T08:07:18.2722313Z     }
2025-04-15T08:07:18.2722317Z 
2025-04-15T08:07:18.2722490Z     /* Retention table */
2025-04-15T08:07:18.2722614Z     #tiers-container {
2025-04-15T08:07:18.2722753Z       height: auto;
2025-04-15T08:07:18.2722849Z     }
2025-04-15T08:07:18.2722852Z 
2025-04-15T08:07:18.2722991Z     #tiers-table {
2025-04-15T08:07:18.2723090Z       width: 100%;
2025-04-15T08:07:18.2723308Z       border-collapse: collapse;
2025-04-15T08:07:18.2723403Z     }
2025-04-15T08:07:18.2723407Z 
2025-04-15T08:07:18.2723547Z     #tiers-table thead tr:nth-of-type(1) th {
2025-04-15T08:07:18.2723694Z       padding-top: 16px;
2025-04-15T08:07:18.2723807Z     }
2025-04-15T08:07:18.2723810Z 
2025-04-15T08:07:18.2724014Z     #tiers-table thead tr:nth-of-type(2) th {
2025-04-15T08:07:18.2724146Z       padding-bottom: 16px;
2025-04-15T08:07:18.2724273Z     }
2025-04-15T08:07:18.2724277Z 
2025-04-15T08:07:18.2724402Z     #tiers-table tbody tr:nth-of-type(1) td {
2025-04-15T08:07:18.2724524Z       border-top: 1px solid var(--border);
2025-04-15T08:07:18.2724669Z       padding-top: 16px;
2025-04-15T08:07:18.2724811Z     }
2025-04-15T08:07:18.2724815Z 
2025-04-15T08:07:18.2724990Z     #tiers-table tbody tr:last-of-type td {
2025-04-15T08:07:18.2725104Z       padding-bottom: 24px;
2025-04-15T08:07:18.2725250Z     }
2025-04-15T08:07:18.2725253Z 
2025-04-15T08:07:18.2725360Z     #tiers-table th {
2025-04-15T08:07:18.2725462Z       font-size: var(--font-small);
2025-04-15T08:07:18.2725669Z       padding: 8px 4px;
2025-04-15T08:07:18.2725768Z     }
2025-04-15T08:07:18.2725771Z 
2025-04-15T08:07:18.2725910Z     #tiers-table td {
2025-04-15T08:07:18.2726044Z       font-size: var(--font-medium);
2025-04-15T08:07:18.2726428Z       text-align: center;
2025-04-15T08:07:18.2726624Z       padding: 12px 4px;
2025-04-15T08:07:18.2726736Z     }
2025-04-15T08:07:18.2726740Z 
2025-04-15T08:07:18.2726915Z     #tiers-table th:first-of-type,
2025-04-15T08:07:18.2727036Z     #tiers-table td:first-of-type {
2025-04-15T08:07:18.2727181Z       padding-left: 12px;
2025-04-15T08:07:18.2727259Z     }
2025-04-15T08:07:18.2727408Z   
2025-04-15T08:07:18.2727578Z     #tiers-table th:last-of-type,  
2025-04-15T08:07:18.2727710Z     #tiers-table td:last-of-type {
2025-04-15T08:07:18.2727856Z       padding-right: 12px;
2025-04-15T08:07:18.2727950Z     }
2025-04-15T08:07:18.2727953Z 
2025-04-15T08:07:18.2728136Z     #tiers-table .section-start {
2025-04-15T08:07:18.2728277Z       border-left: 1px solid var(--border);
2025-04-15T08:07:18.2728387Z     }
2025-04-15T08:07:18.2728397Z 
2025-04-15T08:07:18.2728548Z     .progress-indicator {
2025-04-15T08:07:18.2728647Z       gap: 8px;
2025-04-15T08:07:18.2728772Z       padding: 0 8px;
2025-04-15T08:07:18.2728921Z     }
2025-04-15T08:07:18.2728925Z 
2025-04-15T08:07:18.2729113Z     .progress-bar-container {
2025-04-15T08:07:18.2729221Z       position: relative;
2025-04-15T08:07:18.2729320Z       width: 100%;
2025-04-15T08:07:18.2729483Z       height: var(--progress-bar-height);
2025-04-15T08:07:18.2729600Z       background-color: var(--border-neutral);
2025-04-15T08:07:18.2729823Z       overflow: hidden;
2025-04-15T08:07:18.2729932Z       border-radius: 2px;
2025-04-15T08:07:18.2730027Z     }
2025-04-15T08:07:18.2730031Z 
2025-04-15T08:07:18.2730170Z     .progress-bar {
2025-04-15T08:07:18.2730279Z       position: absolute;
2025-04-15T08:07:18.2730451Z       top: 0;
2025-04-15T08:07:18.2730583Z       left: 0;
2025-04-15T08:07:18.2730743Z       height: var(--progress-bar-height);
2025-04-15T08:07:18.2730863Z       background-color: var(--primary);
2025-04-15T08:07:18.2731138Z     }
2025-04-15T08:07:18.2731142Z 
2025-04-15T08:07:18.2731282Z     #tooltip {
2025-04-15T08:07:18.2731463Z       max-width: 300px;
2025-04-15T08:07:18.2731643Z       background-color: var(--accent);
2025-04-15T08:07:18.2731756Z       color: var(--text-dark);
2025-04-15T08:07:18.2731865Z       border-radius: 4px;
2025-04-15T08:07:18.2732007Z       padding: 8px 16px;
2025-04-15T08:07:18.2732112Z       position: fixed;
2025-04-15T08:07:18.2732328Z       font-size: var(--font-small);
2025-04-15T08:07:18.2732436Z       line-height: 1.5;
2025-04-15T08:07:18.2732573Z       z-index: 9999;
2025-04-15T08:07:18.2732675Z       display: none;
2025-04-15T08:07:18.2732822Z     }</style><script>const toggleTab = tab => {
2025-04-15T08:07:18.2733067Z       const factors = document.querySelectorAll(".data-tab");
2025-04-15T08:07:18.2733238Z       const tabs = document.querySelectorAll(".btn-tab");
2025-04-15T08:07:18.2733242Z 
2025-04-15T08:07:18.2733401Z       factors.forEach(function (factor) {
2025-04-15T08:07:18.2733574Z         let dataTab = parseInt(factor.getAttribute("data-tab"));
2025-04-15T08:07:18.2733751Z         if (dataTab == tab || dataTab === 0) {
2025-04-15T08:07:18.2733863Z           factor.classList.add("active");
2025-04-15T08:07:18.2734018Z         } else {
2025-04-15T08:07:18.2734196Z           factor.classList.remove("active");
2025-04-15T08:07:18.2734291Z         }
2025-04-15T08:07:18.2734436Z       });
2025-04-15T08:07:18.2734440Z 
2025-04-15T08:07:18.2734560Z       // Toggle active class on tab buttons
2025-04-15T08:07:18.2734746Z       tabs.forEach(tabButton => {
2025-04-15T08:07:18.2734883Z         if (tabButton.dataset?.tab == tab) {
2025-04-15T08:07:18.2735005Z           tabButton.classList.add("active");
2025-04-15T08:07:18.2735137Z         } else {
2025-04-15T08:07:18.2735282Z           tabButton.classList.remove("active");
2025-04-15T08:07:18.2735397Z         }
2025-04-15T08:07:18.2735538Z       });
2025-04-15T08:07:18.2735649Z     }
2025-04-15T08:07:18.2735658Z 
2025-04-15T08:07:18.2736263Z     const initGrid = () => {
2025-04-15T08:07:18.2736449Z       const canvas1 = document.getElementById("monitorGrid");
2025-04-15T08:07:18.2736740Z       const context1 = canvas1.getContext("2d");
2025-04-15T08:07:18.2736879Z       const frame = document.querySelector(".frame");
2025-04-15T08:07:18.2737096Z       const cellSize = 4;
2025-04-15T08:07:18.2737204Z       const gapSize = 2;
2025-04-15T08:07:18.2737392Z       const colors = ["#001107", "#003114", "#014420", "#047031", "#049846"];
2025-04-15T08:07:18.2737397Z 
2025-04-15T08:07:18.2737533Z       let grid = [];
2025-04-15T08:07:18.2737537Z 
2025-04-15T08:07:18.2737653Z       const getRandomColor = () => {
2025-04-15T08:07:18.2737909Z         return colors[Math.floor(Math.random() * colors.length)];
2025-04-15T08:07:18.2738020Z       }
2025-04-15T08:07:18.2738024Z 
2025-04-15T08:07:18.2738208Z       const resizeCanvas = (canvas, context) => {
2025-04-15T08:07:18.2738329Z         canvas.width = frame.clientWidth;
2025-04-15T08:07:18.2738458Z         canvas.height = frame.clientHeight;
2025-04-15T08:07:18.2738498Z 
2025-04-15T08:07:18.2738661Z         const cols = Math.floor(canvas.width / (cellSize + gapSize));
2025-04-15T08:07:18.2738889Z         const rows = Math.floor(canvas.height / (cellSize + gapSize));
2025-04-15T08:07:18.2738894Z 
2025-04-15T08:07:18.2739088Z         grid = Array.from({ length: rows }, () =>
2025-04-15T08:07:18.2739226Z           Array.from({ length: cols }, getRandomColor)
2025-04-15T08:07:18.2739356Z         );
2025-04-15T08:07:18.2739360Z 
2025-04-15T08:07:18.2739474Z         drawGrid(context, canvas);
2025-04-15T08:07:18.2739635Z       }
2025-04-15T08:07:18.2739639Z 
2025-04-15T08:07:18.2739794Z       const drawGrid = (context, canvas) => {
2025-04-15T08:07:18.2739953Z         context.clearRect(0, 0, canvas.width, canvas.height);
2025-04-15T08:07:18.2740154Z         const cols = Math.floor(canvas.width / (cellSize + gapSize));
2025-04-15T08:07:18.2740325Z         const rows = Math.floor(canvas.height / (cellSize + gapSize));
2025-04-15T08:07:18.2740442Z 
2025-04-15T08:07:18.2740584Z         for (let row = 0; row < rows; row++) {
2025-04-15T08:07:18.2740775Z           for (let col = 0; col < cols; col++) {
2025-04-15T08:07:18.2740941Z             if (grid[row] && grid[row][col]) {
2025-04-15T08:07:18.2741064Z               context.fillStyle = grid[row][col];
2025-04-15T08:07:18.2741209Z               context.fillRect(
2025-04-15T08:07:18.2741324Z                 col * (cellSize + gapSize),
2025-04-15T08:07:18.2741421Z                 row * (cellSize + gapSize),
2025-04-15T08:07:18.2741637Z                 cellSize,
2025-04-15T08:07:18.2741737Z                 cellSize
2025-04-15T08:07:18.2741865Z               );
2025-04-15T08:07:18.2741960Z             }
2025-04-15T08:07:18.2742054Z           }
2025-04-15T08:07:18.2742232Z         }
2025-04-15T08:07:18.2742345Z       }
2025-04-15T08:07:18.2742350Z 
2025-04-15T08:07:18.2742501Z       resizeCanvas(canvas1, context1);
2025-04-15T08:07:18.2742511Z 
2025-04-15T08:07:18.2742734Z       window.addEventListener("resize", () => resizeCanvas(canvas1, context1));
2025-04-15T08:07:18.2793144Z     }</script></head><body class="loading netdata-splash"><noscript><iframe src="https://www.googletagmanager.com/ns.html?id=GTM-N6CBMJD" height="0" width="0" style="display:none;visibility:hidden"></iframe></noscript><div id="app" class="container grid"><div class="frame frame-left col-span-7 grid light-beam relative"><div class="head-summary absolute index-10"><div class="server"><div class="no-title" id="server"></div><div class="no-title" id="package"></div></div><div class="availability h-auto module"><div class="title">Cloud status</div><div class="no-key" id="cloud_status"></div></div></div><div class="col-span-12 row-span-11"><div id="sphereContainer"><div id="loadingMessage" class="loading-message">Loading...</div><div class="hide-title absolute-center sphere-stats-container"><div class="metrics-container"><div class="collected-metrics" id="collectedMetrics"></div><div class="node-info-container"><div class="title">NODES</div><div class="node-info" id="nodes_streaming"></div></div></div><div class="system-container data-tab data-tab-container" data-tab="2"><div class="system grid-columns-10 md-grid-columns-12"><div class="flex-col col-span-5 md-col-span-6"><div class="section-title">Kernel</div><div class="grid-columns-10"><div class="h-auto module col-span-5" id="kernel"></div><div class="h-auto module col-span-5" id="kernelVersion"></div></div></div><div class="flex-col col-span-5 md-col-span-6"><div class="section-title">OS</div><div class="grid-columns-10"><div id="os" class="h-auto module col-span-5"></div><div class="h-auto module col-span-5" id="id"></div></div></div><div class="hardware module-section col-span-10 md-col-span-12"><div class="section-title">Hardware</div><div class="grid-columns-10 md-grid-columns-12"><div class="module h-auto col-span-2 md-col-span-4" id="cpuCores"></div><div class="module h-auto col-span-2 md-col-span-4" id="cpuFrequency"></div><div class="module h-auto col-span-2 md-col-span-4" id="ram"></div><div class="module h-auto col-span-2 md-col-span-4" id="disk"></div><div class="module h-auto col-span-2 md-col-span-4" id="cpuArchitecture"></div><div class="module h-auto col-span-2 md-col-span-4" id="virtualization"></div></div></div></div></div><div class="data-tab data-tab-container" data-tab="1"><div class="db-metrics-container"><div id="tiers-container" class="db-metrics-blocks module"><table id="tiers-table"><thead><tr><th rowspan="2"><span data-tooltip="A database layer that stores metrics at a specific resolution.">Tier</span></th><th rowspan="2">Resolution</th><th colspan="2" class="section-start">Stored</th><th colspan="3" class="section-start">Retention</th><th colspan="2" class="section-start">Disk</th></tr><tr><th class="section-start">Metrics</th><th><span data-tooltip="The total number of measurements stored in the database across all metrics. Each sample represents a recorded value for a specific metric at a given time.">Samples</span></th><th class="section-start">Current</th><th><span data-tooltip="The maximum time data can be kept, based on the configured time and disk space limits.">Effective</span></th><th>Configured</th><th class="section-start">Used</th><th>Configured</th></tr></thead><tbody><tr id="tiers-table-data-placeholder"></tr></tbody></table></div></div></div><div class="data-tab data-tab-container" data-tab="3"><div class="modules-container grid"><div class="module col-span-4"><div class="module-header"><div class="section-image"><svg width="18" height="18" viewBox="0 0 18 18" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M16.5299 4.47019C16.2399 4.18019 15.7599 4.18019 15.4699 4.47019L13.5299 6.41019L11.5899 4.47019L13.5299 2.53019C13.8199 2.24019 13.8199 1.76019 13.5299 1.47019C13.2399 1.18019 12.7599 1.18019 12.4699 1.47019L10.5299 3.41019L8.99994 1.88019L5.74994 5.13019C4.93994 5.93019 4.49994 7.01019 4.49994 8.15019V8.38019L3.72994 9.15019C2.53994 10.3302 2.45994 12.2002 3.43994 13.5002L1.96994 14.9702C1.67994 15.2602 1.67994 15.7402 1.96994 16.0302C2.11994 16.1802 2.30994 16.2502 2.49994 16.2502C2.68994 16.2502 2.87994 16.1802 3.02994 16.0302L4.49994 14.5602C5.06994 15.0002 5.76994 15.2402 6.49994 15.2402C7.38994 15.2402 8.21994 14.8902 8.84994 14.2702L9.61994 13.5002H9.84994C10.9899 13.5002 12.0599 13.0602 12.8699 12.2502L16.1199 9.00019L14.5899 7.47019L16.5299 5.53019C16.8199 5.24019 16.8199 4.76019 16.5299 4.47019ZM11.8099 11.1902C11.2899 11.7102 10.5899 12.0002 9.84994 12.0002H8.99994L7.78994 13.2102C7.42994 13.5702 6.96994 13.7402 6.49994 13.7402C6.02994 13.7402 5.56994 13.5602 5.20994 13.2102L4.78994 12.7902C4.07994 12.0802 4.07994 10.9202 4.78994 10.2102L5.46994 9.53019L6.40994 10.4702C6.99994 11.0602 7.94994 11.0602 8.52994 10.4702L6.01994 7.96019C6.06994 7.30019 6.33994 6.67019 6.80994 6.19019L8.99994 4.00019L13.9999 9.00019L11.8099 11.1902Z" fill="var(--text)"/></svg></div><span class="section-title">Plugins</span></div><div class="module-content" id="plugins"></div></div><div class="module col-span-4"><div class="module-header"><div class="section-image"><svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M7 18C7.55 18 8 17.55 8 17C8 16.45 7.55 16 7 16C6.45 16 6 16.45 6 17C6 17.55 6.45 18 7 18ZM14 17.79C14.28 17.51 14.28 17.07 14 16.79C13.72 16.51 13.28 16.51 13 16.79C12.72 17.07 12.72 17.51 13 17.79C13.28 18.07 13.72 18.07 14 17.79ZM17 8V4H12V2H2V22H22V8H17ZM10 20H4V4H10V20ZM15 20H12V6H15V20ZM20 20H17V10H20V20ZM19 17.79C19.28 17.51 19.28 17.07 19 16.79C18.72 16.51 18.28 16.51 18 16.79C17.72 17.07 17.72 17.51 18 17.79C18.28 18.07 18.72 18.07 19 17.79Z" fill="var(--text)"/></svg></div><span class="section-title">Libraries</span></div><div class="module-content" id="libs"></div></div><div class="module col-span-4"><div class="module-header"><div class="section-image"><svg width="18" height="18" viewBox="0 0 18 18" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M4 16.0002H5V14.5002H4V16.0002ZM2 16.0002H3V14.5002H2V16.0002ZM15.28 6.97019L10.25 1.94019L5.22 6.97019C4.927 7.26319 4.927 7.73819 5.22 8.03119C5.513 8.32419 5.988 8.32419 6.281 8.03119L9.5 4.81119V11.8392C9.5 13.3062 8.306 14.5002 6.838 14.5002H6V16.0002H6.838C9.136 16.0002 11 14.1372 11 11.8382V4.81119L14.22 8.03119C14.366 8.17719 14.558 8.25119 14.75 8.25119C14.942 8.25119 15.134 8.17819 15.28 8.03119C15.573 7.73719 15.573 7.26319 15.28 6.97019Z" fill="var(--text)"/></svg></div><span class="section-title">Exporters</span></div><div class="module-content" id="exporters"></div></div></div></div><div class="data-tab data-tab-container" data-tab="4"><div class="module data-tab-table" id="directories"></div></div></div></div></div><div class="relative row-span-1 col-span-12 full-h"><div class="license-link"><a href="https://app.netdata.cloud/LICENSE.txt" target="_blank">Netdata UI License</a></div><div class="tabs full-h"><button type="button" name="button" class="btn-tab tab active" data-tab="1"><div class="tab-icon"><svg width="18" height="18" viewBox="0 0 18 18" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M9 10C14.153 10 16.5 7.927 16.5 6C16.5 4.073 14.153 2 9 2C3.847 2 1.5 4.073 1.5 6C1.5 7.927 3.847 10 9 10ZM9 3.5C12.313 3.5 15 4.619 15 6C15 7.381 12.313 8.5 9 8.5C5.687 8.5 3 7.381 3 6C3 4.619 5.687 3.5 9 3.5ZM14.566 12.931C13.68 13.85 11.523 14.5 9 14.5C6.477 14.5 4.32 13.85 3.434 12.931C2.639 12.547 2.01 12.081 1.545 11.563C1.518 11.708 1.5 11.854 1.5 12C1.5 13.927 3.847 16 9 16C14.153 16 16.5 13.927 16.5 12C16.5 11.854 16.482 11.708 16.455 11.562C15.99 12.081 15.361 12.546 14.566 12.931ZM14.566 9.931C13.68 10.85 11.523 11.5 9 11.5C6.477 11.5 4.32 10.85 3.434 9.931C2.639 9.547 2.01 9.081 1.545 8.563C1.518 8.708 1.5 8.854 1.5 9C1.5 10.927 3.847 13 9 13C14.153 13 16.5 10.927 16.5 9C16.5 8.854 16.482 8.708 16.455 8.562C15.99 9.081 15.361 9.546 14.566 9.931Z"/></svg></div>Database</button> <button type="button" name="button" class="btn-tab tab" data-tab="2"><div class="tab-icon"><svg width="60" height="60" viewBox="0 0 60 60" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M40.3125 18.75H19.6875C19.1697 18.75 18.75 19.1697 18.75 19.6875V40.3125C18.75 40.8303 19.1697 41.25 19.6875 41.25H40.3125C40.8303 41.25 41.25 40.8303 41.25 40.3125V19.6875C41.25 19.1697 40.8303 18.75 40.3125 18.75Z"/><path d="M54.375 22.5C54.8723 22.5 55.3492 22.3025 55.7008 21.9508C56.0525 21.5992 56.25 21.1223 56.25 20.625C56.25 20.1277 56.0525 19.6508 55.7008 19.2992C55.3492 18.9475 54.8723 18.75 54.375 18.75H52.5V15C52.4978 13.0115 51.707 11.1051 50.3009 9.6991C48.8949 8.29305 46.9885 7.50217 45 7.5H41.25V5.625C41.25 5.12772 41.0525 4.65081 40.7008 4.29917C40.3492 3.94754 39.8723 3.75 39.375 3.75C38.8777 3.75 38.4008 3.94754 38.0492 4.29917C37.6975 4.65081 37.5 5.12772 37.5 5.625V7.5H31.875V5.625C31.875 5.12772 31.6775 4.65081 31.3258 4.29917C30.9742 3.94754 30.4973 3.75 30 3.75C29.5027 3.75 29.0258 3.94754 28.6742 4.29917C28.3225 4.65081 28.125 5.12772 28.125 5.625V7.5H22.5V5.625C22.5 5.12772 22.3025 4.65081 21.9508 4.29917C21.5992 3.94754 21.1223 3.75 20.625 3.75C20.1277 3.75 19.6508 3.94754 19.2992 4.29917C18.9475 4.65081 18.75 5.12772 18.75 5.625V7.5H15C13.0115 7.50217 11.1051 8.29305 9.6991 9.6991C8.29305 11.1051 7.50217 13.0115 7.5 15V18.75H5.625C5.12772 18.75 4.65081 18.9475 4.29917 19.2992C3.94754 19.6508 3.75 20.1277 3.75 20.625C3.75 21.1223 3.94754 21.5992 4.29917 21.9508C4.65081 22.3025 5.12772 22.5 5.625 22.5H7.5V28.125H5.625C5.12772 28.125 4.65081 28.3225 4.29917 28.6742C3.94754 29.0258 3.75 29.5027 3.75 30C3.75 30.4973 3.94754 30.9742 4.29917 31.3258C4.65081 31.6775 5.12772 31.875 5.625 31.875H7.5V37.5H5.625C5.12772 37.5 4.65081 37.6975 4.29917 38.0492C3.94754 38.4008 3.75 38.8777 3.75 39.375C3.75 39.8723 3.94754 40.3492 4.29917 40.7008C4.65081 41.0525 5.12772 41.25 5.625 41.25H7.5V45C7.50217 46.9885 8.29305 48.8949 9.6991 50.3009C11.1051 51.707 13.0115 52.4978 15 52.5H18.75V54.375C18.75 54.8723 18.9475 55.3492 19.2992 55.7008C19.6508 56.0525 20.1277 56.25 20.625 56.25C21.1223 56.25 21.5992 56.0525 21.9508 55.7008C22.3025 55.3492 22.5 54.8723 22.5 54.375V52.5H28.125V54.375C28.125 54.8723 28.3225 55.3492 28.6742 55.7008C29.0258 56.0525 29.5027 56.25 30 56.25C30.4973 56.25 30.9742 56.0525 31.3258 55.7008C31.6775 55.3492 31.875 54.8723 31.875 54.375V52.5H37.5V54.375C37.5 54.8723 37.6975 55.3492 38.0492 55.7008C38.4008 56.0525 38.8777 56.25 39.375 56.25C39.8723 56.25 40.3492 56.0525 40.7008 55.7008C41.0525 55.3492 41.25 54.8723 41.25 54.375V52.5H45C46.9885 52.4978 48.8949 51.707 50.3009 50.3009C51.707 48.8949 52.4978 46.9885 52.5 45V41.25H54.375C54.8723 41.25 55.3492 41.0525 55.7008 40.7008C56.0525 40.3492 56.25 39.8723 56.25 39.375C56.25 38.8777 56.0525 38.4008 55.7008 38.0492C55.3492 37.6975 54.8723 37.5 54.375 37.5H52.5V31.875H54.375C54.8723 31.875 55.3492 31.6775 55.7008 31.3258C56.0525 30.9742 56.25 30.4973 56.25 30C56.25 29.5027 56.0525 29.0258 55.7008 28.6742C55.3492 28.3225 54.8723 28.125 54.375 28.125H52.5V22.5H54.375ZM45 41.25C45 42.2446 44.6049 43.1984 43.9016 43.9016C43.1984 44.6049 42.2446 45 41.25 45H18.75C17.7554 45 16.8016 44.6049 16.0984 43.9016C15.3951 43.1984 15 42.2446 15 41.25V18.75C15 17.7554 15.3951 16.8016 16.0984 16.0984C16.8016 15.3951 17.7554 15 18.75 15H41.25C42.2446 15 43.1984 15.3951 43.9016 16.0984C44.6049 16.8016 45 17.7554 45 18.75V41.25Z"/></svg></div>System</button> <button type="button" name="button" class="btn-tab tab" data-tab="3"><div class="tab-icon"><svg width="60" height="60" viewBox="0 0 60 60" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M59.7937 16.4062C59.7164 16.2322 59.6084 16.0734 59.475 15.9375C59.3495 15.8165 59.2112 15.7097 59.0625 15.6187L30.9 0.224957C30.615 0.0603916 30.2916 -0.0262451 29.9625 -0.0262451C29.6334 -0.0262451 29.31 0.0603916 29.025 0.224957L1.06875 15.525C1.06875 15.525 1.06875 15.6187 0.91875 15.6375C0.762779 15.7334 0.618116 15.8466 0.4875 15.975C0.433211 16.047 0.383128 16.1221 0.3375 16.2C0.244093 16.3333 0.168457 16.4783 0.1125 16.6312C0.1125 16.6312 0.1125 16.6312 0.1125 16.7437C0.103788 16.8435 0.103788 16.9439 0.1125 17.0437C0.1125 17.0437 0.1125 17.1562 0.1125 17.2125V42.7687C0.0613239 42.8827 0.0235706 43.0023 0 43.125L0 43.3875C0.142582 43.8604 0.466002 44.2579 0.9 44.4937L29.025 59.8312H29.1375H29.2875C29.5116 59.9337 29.7537 59.9911 30 60C30.2245 59.9926 30.4462 59.9482 30.6563 59.8687H30.7875H30.9L59.025 44.5312C59.3209 44.3693 59.5676 44.1306 59.7392 43.8402C59.9108 43.5498 60.0009 43.2185 60 42.8812V17.2125C59.9937 16.9939 59.9493 16.7782 59.8688 16.575C59.8516 16.5155 59.8264 16.4588 59.7937 16.4062ZM28.125 54.975L3.75 41.6625V20.3812L28.125 33.75V54.975ZM30 30.4125L5.79375 17.2875L30 4.01246L54.2062 17.1375L30 30.4125ZM56.25 41.6625L31.875 54.975V33.75L56.25 20.4562V41.6625Z"/></svg></div>Modules</button> <button type="button" name="button" class="btn-tab tab" data-tab="4"><div class="tab-icon"><svg width="18" height="18" viewBox="0 0 18 18" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M16 10.5V5.5H10V7.25H5.75V6.5H8V1.5H2V6.5H4.25V14.75H10V16.5H16V11.5H10V13.25H5.75V8.75H10V10.5H16ZM11.5 7H14.5V9H11.5V7ZM11.5 13H14.5V15H11.5V13ZM3.5 5V3H6.5V5H3.5Z"/></svg></div>Directories</button></div></div></div><div class="frame relative col-span-5 frame-right"><canvas id="monitorGrid"></canvas><div id="splashMessageContainer" class="splash-message"><svg width="133" height="105" viewBox="0 0 133 105" fill="none" xmlns="http://www.w3.org/2000/svg" class="logo"><path fill-rule="evenodd" clip-rule="evenodd" d="M81.697 105H55.0693L0.5 0.5H77.9598C108.079 0.554913 132.484 24.7711 132.5 54.6451C132.452 82.485 109.73 105 81.697 105Z" fill="#FCFFFD"/></svg><h1 class="text-center">Welcome to Netdata</h1><p id="msgSignIn">Please sign-in to continue</p><a id="btnSignIn" href="javascript:loadDashboard(true);" class="button button-primary">Sign-in</a><div class="tagline skip-link"><a class="opt-out-link" href="javascript:loadDashboard();">Skip and use the dashboard anonymously.</a> <span class="no-anonymous-access"></span></div></div><div id="claimingContentsContainer" class="claim-message" style="display:none;"><div class="welcome"><svg width="133" height="105" viewBox="0 0 133 105" fill="none" xmlns="http://www.w3.org/2000/svg" class="logo"><path fill-rule="evenodd" clip-rule="evenodd" d="M81.697 105H55.0693L0.5 0.5H77.9598C108.079 0.554913 132.484 24.7711 132.5 54.6451C132.452 82.485 109.73 105 81.697 105Z" fill="#FCFFFD"/></svg><h1 class="text-center">Welcome to Netdata</h1><span>Please connect your agent to continue.</span></div><div class="connection-modal"><div id="connectionStep-1"><div class="connection-step"><span class="text-small">Please select the space you want this agent to join:</span> <span class="loader">Loading spaces...</span><ul id="spacesList" class="list-options"></ul></div></div><div id="connectionStep-2" style="display:none;"><div class="connection-step"><div class="dropdown-custom" data-target="claimMessage"><div class="dropdown-custom-input flex space-between align-center"><span class="text-small">Select room(s)</span><button class="text-small button button-ghost clear-button">Clear</button></div><div id="roomsSelector" class="dropdown"><div class="dropdown-toggle"><span id="selectedItems" class="selected-items">Select room</span> <span>▼</span></div><div id="roomsSelectorOptionsContainer" class="checkbox-container"></div></div></div><div id="claimMessage" class="selected-message"></div><div class="">Please run the command below in your terminal:</div><code id="claimCommand"></code><div class="">and paste the generated private key in the field below:</div><input id="claimingPrivateKey" name="claimingPrivateKey" value="" placeholder="Private Key"/></div><div id="claimTip" class="text-padding text-small">Tip: If the command doesn’t work out-of-the-box, locate the {keyFilename} file, open it in your favourite text editor, and copy it to your clipboard.</div><div id="claimErrorMessage" class="text-padding error" style="display:none;"></div></div><div class="modal-footer flex-col"><div class="flex space-between"><button id="btnConnectionStepPrev" class="button button-ghost">&#8592; Back</button> <button id="btnConnectionStepNext" class="button button-primary">Next</button> <button id="btnClaim" class="button button-primary">Claim</button></div><div class="skip-link"><a class="signout-link" href="javascript:signout()">Sign out to switch user</a></div></div></div></div></div><div id="tooltip"></div></div></body><script>const initPrimaryButtonHover = () => {
2025-04-15T08:07:18.2793835Z     const button = document.getElementById("btnSignIn");
2025-04-15T08:07:18.2794111Z     const canvas = document.getElementById("monitorGrid");
2025-04-15T08:07:18.2794116Z 
2025-04-15T08:07:18.2794219Z     if (button) {
2025-04-15T08:07:18.2794362Z       button.addEventListener("mouseover", () => {
2025-04-15T08:07:18.2794540Z         canvas.classList.add("hovered");
2025-04-15T08:07:18.2794637Z       });
2025-04-15T08:07:18.2794801Z     }
2025-04-15T08:07:18.2794805Z 
2025-04-15T08:07:18.2794919Z     if (canvas) {
2025-04-15T08:07:18.2795091Z       button.addEventListener("mouseout", () => {
2025-04-15T08:07:18.2795233Z         canvas.classList.remove("hovered");
2025-04-15T08:07:18.2795328Z       });
2025-04-15T08:07:18.2795450Z     }
2025-04-15T08:07:18.2795598Z   }
2025-04-15T08:07:18.2795603Z 
2025-04-15T08:07:18.2795762Z   const initTabs = () => {
2025-04-15T08:07:18.2796027Z     const btnTabs = document.querySelectorAll(".btn-tab");
2025-04-15T08:07:18.2796252Z     btnTabs.forEach(btn => {
2025-04-15T08:07:18.2796419Z       btn.addEventListener("click", e => {
2025-04-15T08:07:18.2796537Z         const tab = e.currentTarget?.dataset?.tab;
2025-04-15T08:07:18.2796745Z         if (tab) {
2025-04-15T08:07:18.2796881Z           toggleTab(tab);
2025-04-15T08:07:18.2797016Z         }
2025-04-15T08:07:18.2797111Z       })
2025-04-15T08:07:18.2797205Z     })
2025-04-15T08:07:18.2797367Z   }
2025-04-15T08:07:18.2797372Z 
2025-04-15T08:07:18.2797503Z   // =============================================== //
2025-04-15T08:07:18.2797507Z 
2025-04-15T08:07:18.2797661Z   const status = {
2025-04-15T08:07:18.2797767Z     TIMEOUT: 'timeout',
2025-04-15T08:07:18.2797869Z     SUCCESS: 'success',
2025-04-15T08:07:18.2797993Z     SKIPPED: 'skipped'
2025-04-15T08:07:18.2798138Z   };
2025-04-15T08:07:18.2798142Z 
2025-04-15T08:07:18.2798320Z   const getSessionId = () => {
2025-04-15T08:07:18.2798443Z     const key = "telemetrySessionId"
2025-04-15T08:07:18.2798606Z     if (!sessionStorage.getItem(key)) {
2025-04-15T08:07:18.2798971Z       sessionStorage.setItem(key, self.crypto && self.crypto.randomUUID ? self.crypto.randomUUID() : new Date().getTime());
2025-04-15T08:07:18.2799135Z     }
2025-04-15T08:07:18.2799299Z     return sessionStorage.getItem(key) || "";
2025-04-15T08:07:18.2799392Z   }
2025-04-15T08:07:18.2799396Z 
2025-04-15T08:07:18.2799585Z   const defaultErrorMessage = "Something went wrong."
2025-04-15T08:07:18.2799868Z   const agentUri = window.location.origin + window.location.pathname.replace(pathsRegex, "");
2025-04-15T08:07:18.2800021Z   const telemetrySessionId = getSessionId();
2025-04-15T08:07:18.2800269Z   const ensureOneSlash = urlStr => urlStr.replace(/([^:]\/)\/+/g, "$1");
2025-04-15T08:07:18.2800274Z 
2025-04-15T08:07:18.2800630Z   // Utils =============================================================================== //
2025-04-15T08:07:18.2800634Z 
2025-04-15T08:07:18.2800761Z   const createElem = (tag, attrs) => {
2025-04-15T08:07:18.2800869Z     if (!tag) return null
2025-04-15T08:07:18.2801037Z     const elem = document.createElement(tag);
2025-04-15T08:07:18.2801160Z     if (Object.keys(attrs || {}).length) {
2025-04-15T08:07:18.2801400Z       Object.entries(attrs).forEach(([k, v]) => {
2025-04-15T08:07:18.2801501Z         elem[k] = v;
2025-04-15T08:07:18.2801629Z       })
2025-04-15T08:07:18.2801722Z     }
2025-04-15T08:07:18.2801837Z     return elem
2025-04-15T08:07:18.2802002Z   }
2025-04-15T08:07:18.2802005Z 
2025-04-15T08:07:18.2802193Z   const getDOM = ({ tag = "div", children = [], ...rest } = {}) => {
2025-04-15T08:07:18.2802369Z     const element = document.createElement(tag);
2025-04-15T08:07:18.2802373Z 
2025-04-15T08:07:18.2802514Z     Object.entries(rest || {}).forEach(([k, v]) => {
2025-04-15T08:07:18.2802689Z       if (element[k] !== undefined) {
2025-04-15T08:07:18.2802820Z         if (k == "dataset" && Object.keys(v).length == 1) {
2025-04-15T08:07:18.2803003Z           const dataPair = Object.entries(v)[0]
2025-04-15T08:07:18.2803176Z           element[k][dataPair[0]] = dataPair[1]
2025-04-15T08:07:18.2803274Z         } else {
2025-04-15T08:07:18.2803428Z           element[k] = v;
2025-04-15T08:07:18.2803524Z         }
2025-04-15T08:07:18.2803697Z       }
2025-04-15T08:07:18.2803809Z     })
2025-04-15T08:07:18.2803813Z 
2025-04-15T08:07:18.2803924Z     if (!!children?.length) {
2025-04-15T08:07:18.2804187Z       children.filter(({ condition = true }) => !!condition).forEach(childStructure => {
2025-04-15T08:07:18.2804348Z         element.appendChild(getDOM(childStructure));
2025-04-15T08:07:18.2804464Z       });
2025-04-15T08:07:18.2804606Z     }
2025-04-15T08:07:18.2804610Z 
2025-04-15T08:07:18.2804726Z     return element;
2025-04-15T08:07:18.2804857Z   }
2025-04-15T08:07:18.2804861Z 
2025-04-15T08:07:18.2805009Z   // ===================================================================================== //
2025-04-15T08:07:18.2805014Z 
2025-04-15T08:07:18.2805150Z   // Agent info
2025-04-15T08:07:18.2805450Z   const AGENT_INFO_KEY = `agentInfo:${window.envSettings.agentApiUrl}`
2025-04-15T08:07:18.2805669Z   const getAgentInfo = () => {
2025-04-15T08:07:18.2805834Z     const agentInfo = localStorage.getItem(AGENT_INFO_KEY)
2025-04-15T08:07:18.2805988Z     if (agentInfo) {
2025-04-15T08:07:18.2806193Z       try {
2025-04-15T08:07:18.2806349Z         return Promise.resolve(JSON.parse(agentInfo))
2025-04-15T08:07:18.2806527Z       } catch (err) {
2025-04-15T08:07:18.2806665Z         return Promise.resolve()
2025-04-15T08:07:18.2806813Z       }
2025-04-15T08:07:18.2806906Z     }
2025-04-15T08:07:18.2806910Z 
2025-04-15T08:07:18.2807306Z     return fetch(ensureOneSlash(`${window.envSettings.agentApiUrl}/api/v3/info`)).then(response => response.json()).then(data => {
2025-04-15T08:07:18.2807447Z       if (CONFIG.cache.agentInfo) {
2025-04-15T08:07:18.2807711Z         localStorage.setItem(AGENT_INFO_KEY, JSON.stringify(data || {}))
2025-04-15T08:07:18.2807875Z       }
2025-04-15T08:07:18.2807984Z       return data
2025-04-15T08:07:18.2808135Z     }).catch(() => Promise.resolve())
2025-04-15T08:07:18.2808227Z   }
2025-04-15T08:07:18.2808231Z 
2025-04-15T08:07:18.2808554Z   const loadStyle = (url, { media, insertAfter: aref, insertBefore: bref, rel, type } = {}) => {
2025-04-15T08:07:18.2808697Z     rel = rel || 'stylesheet'
2025-04-15T08:07:18.2808807Z     type = type || 'text/css'
2025-04-15T08:07:18.2808982Z     return new Promise(function (resolve, reject) {
2025-04-15T08:07:18.2809116Z       let link = document.createElement('link');
2025-04-15T08:07:18.2809244Z       link.type = type;
2025-04-15T08:07:18.2809440Z       link.rel = rel;
2025-04-15T08:07:18.2809578Z       link.href = url;
2025-04-15T08:07:18.2809726Z       link.media = media || 'all';
2025-04-15T08:07:18.2809730Z 
2025-04-15T08:07:18.2809845Z       link.onerror = function (err) {
2025-04-15T08:07:18.2810255Z         reject(new URIError(`loadStyle: the stylesheet ${err.target.src} is not accessible.`));
2025-04-15T08:07:18.2813621Z       };
2025-04-15T08:07:18.2813641Z 
2025-04-15T08:07:18.2813757Z       link.onload = function () {
2025-04-15T08:07:18.2813832Z         resolve();
2025-04-15T08:07:18.2813896Z       };
2025-04-15T08:07:18.2813901Z 
2025-04-15T08:07:18.2813979Z       if (aref) {
2025-04-15T08:07:18.2814164Z         aref.parentNode.insertBefore(link, aref.nextSibling);
2025-04-15T08:07:18.2814229Z         return;
2025-04-15T08:07:18.2814296Z       }
2025-04-15T08:07:18.2814300Z 
2025-04-15T08:07:18.2814363Z       if (bref) {
2025-04-15T08:07:18.2814478Z         bref.parentNode.insertBefore(link, bref);
2025-04-15T08:07:18.2814543Z         return;
2025-04-15T08:07:18.2814602Z       }
2025-04-15T08:07:18.2814606Z 
2025-04-15T08:07:18.2814708Z       document.head.appendChild(link);
2025-04-15T08:07:18.2814768Z     });
2025-04-15T08:07:18.2814830Z   }
2025-04-15T08:07:18.2814840Z 
2025-04-15T08:07:18.2815176Z   const loadScript = (url, { async = true, defer = false, insertAfter: aref, insertBefore: bref, timeout = 5000, attrs, skipIf } = {}) => {
2025-04-15T08:07:18.2815291Z     return new Promise(function (resolve, reject) {
2025-04-15T08:07:18.2815400Z       if (typeof skipIf === 'function' && skipIf()) {
2025-04-15T08:07:18.2815484Z         resolve(status.SKIPPED);
2025-04-15T08:07:18.2815552Z         return;
2025-04-15T08:07:18.2815611Z       }
2025-04-15T08:07:18.2815615Z 
2025-04-15T08:07:18.2815839Z       let rejectWithTimeout = setTimeout(function () { reject(status.TIMEOUT) }, timeout);
2025-04-15T08:07:18.2815843Z 
2025-04-15T08:07:18.2815956Z       let script = document.createElement('script');
2025-04-15T08:07:18.2816043Z       script.type = 'text/javascript';
2025-04-15T08:07:18.2816427Z       script.src = url;
2025-04-15T08:07:18.2816505Z       script.async = async;
2025-04-15T08:07:18.2816580Z       script.defer = defer;
2025-04-15T08:07:18.2816590Z 
2025-04-15T08:07:18.2816653Z       if (attrs) {
2025-04-15T08:07:18.2816734Z         for (let attr in attrs) {
2025-04-15T08:07:18.2816991Z           script.setAttribute(attr, attrs[attr]);
2025-04-15T08:07:18.2817061Z         }
2025-04-15T08:07:18.2817124Z       }
2025-04-15T08:07:18.2817128Z 
2025-04-15T08:07:18.2817211Z       script.onerror = function (err) {
2025-04-15T08:07:18.2817431Z         reject(new URIError(`loadScript: the script ${err.target.src} is not accessible.`));
2025-04-15T08:07:18.2817493Z       };
2025-04-15T08:07:18.2817496Z 
2025-04-15T08:07:18.2817584Z       script.onload = function () {
2025-04-15T08:07:18.2817680Z         clearTimeout(rejectWithTimeout);
2025-04-15T08:07:18.2817758Z         resolve(status.SUCCESS);
2025-04-15T08:07:18.2817822Z       };
2025-04-15T08:07:18.2817825Z 
2025-04-15T08:07:18.2817888Z       if (aref) {
2025-04-15T08:07:18.2818045Z         aref.parentNode.insertBefore(script, aref.nextSibling);
2025-04-15T08:07:18.2818108Z         return;
2025-04-15T08:07:18.2818174Z       }
2025-04-15T08:07:18.2818178Z 
2025-04-15T08:07:18.2818245Z       if (bref) {
2025-04-15T08:07:18.2818360Z         bref.parentNode.insertBefore(script, bref);
2025-04-15T08:07:18.2818430Z         return;
2025-04-15T08:07:18.2818492Z       }
2025-04-15T08:07:18.2818495Z 
2025-04-15T08:07:18.2818591Z       document.body.appendChild(script);
2025-04-15T08:07:18.2818650Z     });
2025-04-15T08:07:18.2818709Z   }
2025-04-15T08:07:18.2818713Z 
2025-04-15T08:07:18.2819227Z   __webpack_public_path__ = ensureOneSlash(window.envSettings.webpackPublicPath ? (window.envSettings.webpackPublicPath + "/") : (window.envSettings.agentApiUrl + "/v3/"))
2025-04-15T08:07:18.2819231Z 
2025-04-15T08:07:18.2819310Z   const loadLatestUI = () => {
2025-04-15T08:07:18.2819681Z     return fetch(__webpack_public_path__ + "bundlesManifest." + window.envSettings.version.toString().replace(/(\d+)\..+/, "$1") + ".json")
2025-04-15T08:07:18.2819805Z       .then(function (response) { return response.json() })
2025-04-15T08:07:18.2820005Z       .catch(() => goToOld('/v3'))
2025-04-15T08:07:18.2820082Z       .then(function (data) {
2025-04-15T08:07:18.2820182Z         Object.keys(data).forEach(function (k) {
2025-04-15T08:07:18.2820295Z           if (/\.(map|ico|html)$/.test(data[k])) return
2025-04-15T08:07:18.2820383Z           if (/static\//.test(data[k])) return
2025-04-15T08:07:18.2820386Z 
2025-04-15T08:07:18.2820472Z           if (/\.css.*$/.test(data[k])) {
2025-04-15T08:07:18.2820628Z             loadStyle(ensureOneSlash(__webpack_public_path__ + data[k]))
2025-04-15T08:07:18.2820699Z             return
2025-04-15T08:07:18.2820763Z           }
2025-04-15T08:07:18.2820767Z 
2025-04-15T08:07:18.2820845Z           if (/\.js.*$/.test(data[k])) {
2025-04-15T08:07:18.2821008Z             loadScript(ensureOneSlash(__webpack_public_path__ + data[k]), {
2025-04-15T08:07:18.2821081Z               async: false,
2025-04-15T08:07:18.2821151Z             });
2025-04-15T08:07:18.2821214Z           }
2025-04-15T08:07:18.2821285Z         })
2025-04-15T08:07:18.2821373Z         return Promise.resolve()
2025-04-15T08:07:18.2821436Z       })
2025-04-15T08:07:18.2821503Z   }
2025-04-15T08:07:18.2821507Z 
2025-04-15T08:07:18.2821596Z   const loadDashboard = signIn => {
2025-04-15T08:07:18.2821678Z     loadLatestUI().then(() => {
2025-04-15T08:07:18.2821745Z       if (signIn) {
2025-04-15T08:07:18.2821843Z         window.location.href = ensureOneSlash(
2025-04-15T08:07:18.2822039Z           `${window.envSettings.cloudUrl}/trust?redirect_uri=${encodeURIComponent(
2025-04-15T08:07:18.2822121Z             window.location.href
2025-04-15T08:07:18.2822217Z           )}&agent_uri=${encodeURIComponent(
2025-04-15T08:07:18.2822327Z             agentUri || window.envSettings.agentApiUrl
2025-04-15T08:07:18.2822438Z           )}&telemetry_session_id=${telemetrySessionId}`
2025-04-15T08:07:18.2822503Z         )
2025-04-15T08:07:18.2822566Z       }
2025-04-15T08:07:18.2822630Z     })
2025-04-15T08:07:18.2822692Z   }
2025-04-15T08:07:18.2822696Z 
2025-04-15T08:07:18.2822780Z   const signout = () => {
2025-04-15T08:07:18.2822881Z     localStorage.removeItem(CLOUD_TOKEN_KEY)
2025-04-15T08:07:18.2822965Z     window.location.reload()
2025-04-15T08:07:18.2823165Z   }
2025-04-15T08:07:18.2823169Z 
2025-04-15T08:07:18.2823256Z   const fetchRegistryInfo = () => {
2025-04-15T08:07:18.2823407Z     if (window.localNetdataRegistry) return Promise.resolve()
2025-04-15T08:07:18.2823411Z 
2025-04-15T08:07:18.2823803Z     return fetch(ensureOneSlash(window.envSettings.agentApiUrl + "/api/v1/registry?action=hello"), { cache: "no-cache", credentials: "include" })
2025-04-15T08:07:18.2823883Z       .then(response => {
2025-04-15T08:07:18.2824059Z         if (!response.ok) return Promise.reject({ message: defaultErrorMessage })
2025-04-15T08:07:18.2824142Z         return response.json()
2025-04-15T08:07:18.2824210Z       })
2025-04-15T08:07:18.2824278Z       .then(data => {
2025-04-15T08:07:18.2824453Z         if (!data) return Promise.reject({ message: "No registry data available." })
2025-04-15T08:07:18.2824462Z 
2025-04-15T08:07:18.2824570Z         let to = data.cloud_base_url.lastIndexOf('/');
2025-04-15T08:07:18.2824774Z         to = (to == -1 || to < data.cloud_base_url.length - 2) ? data.cloud_base_url.length : to;
2025-04-15T08:07:18.2824898Z         let cloudUrl = data.cloud_base_url.substring(0, to);
2025-04-15T08:07:18.2824902Z 
2025-04-15T08:07:18.2825003Z         let withoutNodes = btoa(JSON.stringify({
2025-04-15T08:07:18.2825087Z           registry: data.registry,
2025-04-15T08:07:18.2825175Z           machine_guid: data.machine_guid,
2025-04-15T08:07:18.2825259Z           hostname: data.hostname,
2025-04-15T08:07:18.2825332Z           agent: data.agent,
2025-04-15T08:07:18.2825398Z           nodes: []
2025-04-15T08:07:18.2825458Z         }))
2025-04-15T08:07:18.2825564Z         let iframe = document.createElement('iframe');
2025-04-15T08:07:18.2825893Z         iframe.src = data.registry + "/registry-access.html?x=" + withoutNodes + "&originUrl=" + window.envSettings.agentApiUrl;
2025-04-15T08:07:18.2826235Z         iframe.style = { position: "absolute", left: "-99999999px" };
2025-04-15T08:07:18.2826312Z         iframe.width = 0;
2025-04-15T08:07:18.2826392Z         iframe.height = 0;
2025-04-15T08:07:18.2826475Z         iframe.tabindex = -1;
2025-04-15T08:07:18.2826551Z         iframe.title = "empty";
2025-04-15T08:07:18.2826638Z         iframe.classList.add("hidden");
2025-04-15T08:07:18.2826736Z         document.body.appendChild(iframe);
2025-04-15T08:07:18.2826740Z 
2025-04-15T08:07:18.2826818Z         setTimeout(function () {
2025-04-15T08:07:18.2826963Z           document.title = data.hostname + ': Netdata Agent Console';
2025-04-15T08:07:18.2827246Z           iframe.contentWindow.postMessage(["netdata-registry", window.envSettings.agentApiUrl, data], "*")
2025-04-15T08:07:18.2827307Z         }, 300);
2025-04-15T08:07:18.2827314Z 
2025-04-15T08:07:18.2827441Z         window.addEventListener('message', function (event) {
2025-04-15T08:07:18.2827556Z           if (event.source !== iframe.contentWindow) return;
2025-04-15T08:07:18.2827564Z 
2025-04-15T08:07:18.2827863Z           if (event.data.status === "disabled") console.error("Your netdata registry is disabled! Check your configuration.")
2025-04-15T08:07:18.2827868Z 
2025-04-15T08:07:18.2827941Z           if (event.data) {
2025-04-15T08:07:18.2828042Z             if (!window.localNetdataRegistry) {
2025-04-15T08:07:18.2828136Z               window.localNetdataRegistry = {}
2025-04-15T08:07:18.2828202Z             }
2025-04-15T08:07:18.2828206Z 
2025-04-15T08:07:18.2828352Z             window.localNetdataRegistry.pg = event.data.person_guid
2025-04-15T08:07:18.2828356Z 
2025-04-15T08:07:18.2828443Z             if (!window.envSettings) {
2025-04-15T08:07:18.2828526Z               window.envSettings = {}
2025-04-15T08:07:18.2828587Z             }
2025-04-15T08:07:18.2828591Z 
2025-04-15T08:07:18.2828726Z             window.envSettings.visitor = event.data.person_guid
2025-04-15T08:07:18.2828730Z 
2025-04-15T08:07:18.2828796Z             try {
2025-04-15T08:07:18.2828999Z               var visitedNodesByName = event.data.urls.reduce(function (vn, visitedUrl) {
2025-04-15T08:07:18.2829215Z                 vn[visitedUrl[4]] = vn[visitedUrl[4]] || {}
2025-04-15T08:07:18.2829313Z                 vn[visitedUrl[4]].id = visitedUrl[0]
2025-04-15T08:07:18.2829404Z                 vn[visitedUrl[4]].name = visitedUrl[4]
2025-04-15T08:07:18.2829518Z                 vn[visitedUrl[4]].lastAccessTime = visitedUrl[2]
2025-04-15T08:07:18.2829641Z                 vn[visitedUrl[4]].urls = vn[visitedUrl[4]].urls || []
2025-04-15T08:07:18.2829743Z                 vn[visitedUrl[4]].urls.push(visitedUrl[1])
2025-04-15T08:07:18.2829747Z 
2025-04-15T08:07:18.2829817Z                 return vn
2025-04-15T08:07:18.2829880Z               }, {})
2025-04-15T08:07:18.2829884Z 
2025-04-15T08:07:18.2830080Z               window.visitedNodes = Object.keys(visitedNodesByName).map(function (vn) {
2025-04-15T08:07:18.2830170Z                 return visitedNodesByName[vn]
2025-04-15T08:07:18.2830235Z               })
2025-04-15T08:07:18.2830310Z             } catch (e) {
2025-04-15T08:07:18.2830377Z               // do nothing
2025-04-15T08:07:18.2830446Z             }
2025-04-15T08:07:18.2830506Z           }
2025-04-15T08:07:18.2830566Z         });
2025-04-15T08:07:18.2830570Z 
2025-04-15T08:07:18.2830654Z         return Promise.resolve()
2025-04-15T08:07:18.2830714Z       })
2025-04-15T08:07:18.2830777Z   }
2025-04-15T08:07:18.2830780Z 
2025-04-15T08:07:18.2830987Z   const cloudRequest = async (endpoint, {allowAnonymous = false, ...options} = {}) => {
2025-04-15T08:07:18.2831125Z     const cloudToken = localStorage.getItem(CLOUD_TOKEN_KEY)
2025-04-15T08:07:18.2831300Z     if (!allowAnonymous && !cloudToken) return Promise.reject("No cloud token")
2025-04-15T08:07:18.2831304Z 
2025-04-15T08:07:18.2831713Z     options = { ...options, headers: { ...(options?.headers || {}), ...(!!cloudToken && {Authorization: `*** } }
2025-04-15T08:07:18.2831718Z 
2025-04-15T08:07:18.2832048Z     return fetch(ensureOneSlash(`${window.envSettings.apiUrl}/${endpoint}`), options)
2025-04-15T08:07:18.2832115Z   }
2025-04-15T08:07:18.2832119Z 
2025-04-15T08:07:18.2832199Z   const sleep = (ms) => {
2025-04-15T08:07:18.2832330Z     return new Promise(resolve => setTimeout(resolve, ms));
2025-04-15T08:07:18.2832395Z   }
2025-04-15T08:07:18.2832399Z 
2025-04-15T08:07:18.2832513Z   const claimAgent = ({ key, token, rooms } = {}) => {
2025-04-15T08:07:18.2832616Z     const url = window.envSettings.apiUrl;
2025-04-15T08:07:18.2832778Z     let query = new URLSearchParams({ key, rooms, token, url }).toString()
2025-04-15T08:07:18.2832913Z     query = key && rooms && token && url && query ? `?${query}` : ""
2025-04-15T08:07:18.2833198Z     return fetch(ensureOneSlash(`${window.envSettings.agentApiUrl}/api/v3/claim${query}`)).then(response => {
2025-04-15T08:07:18.2833345Z       const contentType = response.headers.get("content-type");
2025-04-15T08:07:18.2833349Z 
2025-04-15T08:07:18.2833465Z       if (contentType && contentType.includes("text")) {
2025-04-15T08:07:18.2833550Z         throw response.text();
2025-04-15T08:07:18.2833616Z       }
2025-04-15T08:07:18.2833619Z 
2025-04-15T08:07:18.2833734Z       if (contentType && contentType.includes("json")) {
2025-04-15T08:07:18.2833816Z         return response.json();
2025-04-15T08:07:18.2833877Z       }
2025-04-15T08:07:18.2833880Z 
2025-04-15T08:07:18.2834025Z       throw new Error('Unsupported content type: ' + contentType);
2025-04-15T08:07:18.2834094Z     }).then(data => {
2025-04-15T08:07:18.2834172Z       if (data.success === false) {
2025-04-15T08:07:18.2834253Z         throw data.message
2025-04-15T08:07:18.2834314Z       }
2025-04-15T08:07:18.2834318Z 
2025-04-15T08:07:18.2834452Z       if (key && data.can_be_claimed === false && !data.agent.nd) {
2025-04-15T08:07:18.2834542Z         return sleep(1000).then(claimAgent);
2025-04-15T08:07:18.2834602Z       }
2025-04-15T08:07:18.2834609Z 
2025-04-15T08:07:18.2834675Z       return data
2025-04-15T08:07:18.2834739Z     });
2025-04-15T08:07:18.2834803Z   }
2025-04-15T08:07:18.2834806Z 
2025-04-15T08:07:18.2834879Z   const checkMe = mg => {
2025-04-15T08:07:18.2835171Z     return fetch(ensureOneSlash(`${window.envSettings.agentApiUrl}/api/v3/me`), {
2025-04-15T08:07:18.2835242Z       headers: {
2025-04-15T08:07:18.2835432Z         "X-Netdata-Auth": `***
2025-04-15T08:07:18.2835496Z       }
2025-04-15T08:07:18.2835556Z     })
2025-04-15T08:07:18.2835646Z       .then(response => response.json())
2025-04-15T08:07:18.2835714Z       .catch(() => ({
2025-04-15T08:07:18.2835782Z         auth: "none",
2025-04-15T08:07:18.2835859Z         cloud_account_id: null,
2025-04-15T08:07:18.2835932Z         client_name: "",
2025-04-15T08:07:18.2836016Z         access: ["anonymous-data"],
2025-04-15T08:07:18.2836229Z         user_role: "any",
2025-04-15T08:07:18.2836301Z       }))
2025-04-15T08:07:18.2836362Z   }
2025-04-15T08:07:18.2836366Z 
2025-04-15T08:07:18.2836452Z   const fetchUserAccess = (mg, nd) => {
2025-04-15T08:07:18.2836873Z     return cloudRequest(`/api/v1/agents/${mg}/user_agent_node_access${nd ? `?nodeID=${nd}` : ""}`, {allowAnonymous: true}).then(response => response.json()).then(data => {
2025-04-15T08:07:18.2837815Z       window.localNetdataRegistry.limitations = data.limitations ? {limit: data.limitations.limit || 99999999, customDashboardsLimit: data.limitations.custom_dashboards_limit || 99999999, windowsSupport: data.limitations.windows_support || false} : {limit: 99999999, customDashboardsLimit: 99999999, windowsSupport: true}
2025-04-15T08:07:18.2837824Z 
2025-04-15T08:07:18.2837922Z       if (data.user_node_status === "noAccess") {
2025-04-15T08:07:18.2837988Z         return data
2025-04-15T08:07:18.2838053Z       }
2025-04-15T08:07:18.2838186Z       window.localNetdataRegistry.spaceId = data.space_id
2025-04-15T08:07:18.2838190Z 
2025-04-15T08:07:18.2838304Z       const room = data.rooms.find(r => r.untouchable)
2025-04-15T08:07:18.2838308Z 
2025-04-15T08:07:18.2838421Z       window.localNetdataRegistry.roomId = room.id
2025-04-15T08:07:18.2838675Z       window.localNetdataRegistry.room = room
2025-04-15T08:07:18.2838679Z 
2025-04-15T08:07:18.2838744Z       return data
2025-04-15T08:07:18.2838822Z     }).catch((err) => { })
2025-04-15T08:07:18.2838882Z   }
2025-04-15T08:07:18.2838887Z 
2025-04-15T08:07:18.2839007Z   const getAgentToken = ({ mg, nd, claimId }, agent) => {
2025-04-15T08:07:18.2839315Z     return cloudRequest(`/api/v2/bearer_get_token?node_id=${nd}&claim_id=${claimId}&machine_guid=${mg}`).then(response => {
2025-04-15T08:07:18.2839398Z       if (response.status === 401) {
2025-04-15T08:07:18.2839465Z         signout()
2025-04-15T08:07:18.2839528Z         return
2025-04-15T08:07:18.2839589Z       }
2025-04-15T08:07:18.2839664Z       if (!response.ok) {
2025-04-15T08:07:18.2839782Z         // Parse the error response to extract the message
2025-04-15T08:07:18.2839884Z         return response.json().then(errorData => {
2025-04-15T08:07:18.2839996Z           const error = new Error(errorData.errorMessage);
2025-04-15T08:07:18.2840094Z           error.data = errorData.errorContext
2025-04-15T08:07:18.2840165Z           throw error
2025-04-15T08:07:18.2840228Z         });
2025-04-15T08:07:18.2840295Z       }
2025-04-15T08:07:18.2840375Z       return response.json();
2025-04-15T08:07:18.2840448Z     }).then(data => {
2025-04-15T08:07:18.2840526Z       if (data && data.token) {
2025-04-15T08:07:18.2840645Z         localStorage.setItem(`agentJWT:${mg}`, data?.token)
2025-04-15T08:07:18.2840796Z         localStorage.setItem(`agentJWTExp:${mg}`, data?.expiration)
2025-04-15T08:07:18.2840857Z       }
2025-04-15T08:07:18.2840924Z       return data
2025-04-15T08:07:18.2840993Z     }).catch((err) => {
2025-04-15T08:07:18.2841060Z       stopLoading()
2025-04-15T08:07:18.2841063Z 
2025-04-15T08:07:18.2841192Z       let message = "Something went wrong. Please try again."
2025-04-15T08:07:18.2841293Z       if (err.data && err.data.state === "created") {
2025-04-15T08:07:18.2841555Z         message = "The node is claimed and is syncing with Netdata Cloud. Please wait a few seconds and try again."
2025-04-15T08:07:18.2841622Z       } else {
2025-04-15T08:07:18.2841826Z         message = (err && err.message) || message
2025-04-15T08:07:18.2841889Z       }
2025-04-15T08:07:18.2841894Z 
2025-04-15T08:07:18.2841897Z 
2025-04-15T08:07:18.2842028Z       const msgSignIn = document.getElementById("msgSignIn");
2025-04-15T08:07:18.2842119Z       msgSignIn.textContent = message
2025-04-15T08:07:18.2842123Z 
2025-04-15T08:07:18.2842247Z       const btnSignIn = document.getElementById("btnSignIn");
2025-04-15T08:07:18.2842339Z       btnSignIn.style.display = "none"
2025-04-15T08:07:18.2842343Z 
2025-04-15T08:07:18.2842425Z       setupOptOutMessage(agent)
2025-04-15T08:07:18.2842489Z     })
2025-04-15T08:07:18.2842548Z   }
2025-04-15T08:07:18.2842551Z 
2025-04-15T08:07:18.2842639Z   const setupOptOutMessage = agent => {
2025-04-15T08:07:18.2842771Z     const bearerProtection = agent.api.bearer_protection;
2025-04-15T08:07:18.2842783Z 
2025-04-15T08:07:18.2842985Z     const isWindows = (agent.application.os.kernel || "").toLowerCase() === "windows"
2025-04-15T08:07:18.2843435Z     const lockWindows = isWindows && (!window.localNetdataRegistry.limitation || window.localNetdataRegistry.limitations.windowsSupport === false);
2025-04-15T08:07:18.2843439Z 
2025-04-15T08:07:18.2843589Z     const denyAnonymousAccess = bearerProtection || lockWindows;
2025-04-15T08:07:18.2843593Z 
2025-04-15T08:07:18.2843708Z     // Get all elements with the "opt-out-link" class
2025-04-15T08:07:18.2843902Z     const optOutLinkElems = document.getElementsByClassName("opt-out-link");
2025-04-15T08:07:18.2843997Z     if (optOutLinkElems.length > 0) {
2025-04-15T08:07:18.2844110Z       for (let i = 0; i < optOutLinkElems.length; i++) {
2025-04-15T08:07:18.2844304Z         optOutLinkElems[i].style.display = denyAnonymousAccess ? "none" : "inline";
2025-04-15T08:07:18.2844370Z       }
2025-04-15T08:07:18.2844432Z     }
2025-04-15T08:07:18.2844436Z 
2025-04-15T08:07:18.2844650Z     // Get all elements with the "no-anonymous-access" class
2025-04-15T08:07:18.2844913Z     const anonymousAccessDeniedElems = document.getElementsByClassName("no-anonymous-access");
2025-04-15T08:07:18.2845029Z     if (anonymousAccessDeniedElems.length > 0) {
2025-04-15T08:07:18.2845169Z       for (let i = 0; i < anonymousAccessDeniedElems.length; i++) {
2025-04-15T08:07:18.2845301Z         if (anonymousAccessDeniedElems[i].textContent === "") {
2025-04-15T08:07:18.2846154Z           anonymousAccessDeniedElems[i].innerHTML = bearerProtection ? "Anonymous access is not allowed. *** is enabled.<br />Please sign in to continue." : "Anonymous access to the dashboard of Windows nodes is not allowed.<br />Please sign in to continue.";
2025-04-15T08:07:18.2846226Z         }
2025-04-15T08:07:18.2846460Z         anonymousAccessDeniedElems[i].style.display = denyAnonymousAccess ? "inline" : "none";
2025-04-15T08:07:18.2846527Z       }
2025-04-15T08:07:18.2846588Z     }
2025-04-15T08:07:18.2846652Z   }
2025-04-15T08:07:18.2846661Z 
2025-04-15T08:07:18.2846765Z   const createClaimingToken = spaceId => {
2025-04-15T08:07:18.2846861Z     if (!spaceId) return Promise.resolve();
2025-04-15T08:07:18.2846969Z     toggleClaimingTokenLoadingState(true);
2025-04-15T08:07:18.2847155Z     return cloudRequest(`/api/v1/spaces/${spaceId}/token`).then(response => {
2025-04-15T08:07:18.2847262Z       toggleClaimingTokenLoadingState(false);
2025-04-15T08:07:18.2847343Z       return response.json();
2025-04-15T08:07:18.2847406Z     });
2025-04-15T08:07:18.2847469Z   }
2025-04-15T08:07:18.2847473Z 
2025-04-15T08:07:18.2847568Z   const getClaimingToken = async spaceId => {
2025-04-15T08:07:18.2847663Z     if (!spaceId) return Promise.resolve();
2025-04-15T08:07:18.2847832Z     const cachedToken = state.cache.claimingTokensPerSpace[spaceId];
2025-04-15T08:07:18.2847958Z     if (cachedToken) return Promise.resolve(cachedToken);
2025-04-15T08:07:18.2848074Z     const token = await createClaimingToken(spaceId);
2025-04-15T08:07:18.2848169Z     cacheClaimingToken(spaceId, token);
2025-04-15T08:07:18.2848256Z     return Promise.resolve(token);
2025-04-15T08:07:18.2848315Z   }
2025-04-15T08:07:18.2848319Z 
2025-04-15T08:07:18.2848515Z   const fetchSpaces = () => {
2025-04-15T08:07:18.2848609Z     toggleSpacesLoadingState(true);
2025-04-15T08:07:18.2848748Z     return cloudRequest("/api/v3/spaces").then(response => {
2025-04-15T08:07:18.2848847Z       toggleSpacesLoadingState(false);
2025-04-15T08:07:18.2848926Z       return response.json();
2025-04-15T08:07:18.2848990Z     });
2025-04-15T08:07:18.2849049Z   }
2025-04-15T08:07:18.2849052Z 
2025-04-15T08:07:18.2849133Z   const getSpaces = async () => {
2025-04-15T08:07:18.2849231Z     const cachedSpaces = state.cache.spaces;
2025-04-15T08:07:18.2849360Z     if (cachedSpaces) return Promise.resolve(cachedSpaces);
2025-04-15T08:07:18.2849446Z     const spaces = await fetchSpaces();
2025-04-15T08:07:18.2849523Z     cacheSpaces(spaces);
2025-04-15T08:07:18.2849608Z     return Promise.resolve(spaces);
2025-04-15T08:07:18.2849672Z   }
2025-04-15T08:07:18.2849675Z 
2025-04-15T08:07:18.2849760Z   const fetchSpaceRooms = spaceId => {
2025-04-15T08:07:18.2849863Z     if (!spaceId) return Promise.resolve([])
2025-04-15T08:07:18.2849952Z     toggleRoomsLoadingState(true);
2025-04-15T08:07:18.2850222Z     return cloudRequest(`/api/v2/spaces/${spaceId}/rooms?show_all=true&default=false`).then(response => {
2025-04-15T08:07:18.2850312Z       toggleRoomsLoadingState(false);
2025-04-15T08:07:18.2850392Z       return response.json();
2025-04-15T08:07:18.2850456Z     })
2025-04-15T08:07:18.2850517Z   }
2025-04-15T08:07:18.2850520Z 
2025-04-15T08:07:18.2850616Z   const getSpaceRooms = async spaceId => {
2025-04-15T08:07:18.2850710Z     if (!spaceId) return Promise.resolve([]);
2025-04-15T08:07:18.2850824Z     const cachedRooms = state.cache.rooms[spaceId];
2025-04-15T08:07:18.2850948Z     if (cachedRooms) return Promise.resolve(cachedRooms);
2025-04-15T08:07:18.2851057Z     const rooms = await fetchSpaceRooms(spaceId);
2025-04-15T08:07:18.2851253Z     cacheRooms(spaceId, rooms);
2025-04-15T08:07:18.2851338Z     return Promise.resolve(rooms);
2025-04-15T08:07:18.2851403Z   }
2025-04-15T08:07:18.2851407Z 
2025-04-15T08:07:18.2851507Z   const updateSelectedOptions = root => {
2025-04-15T08:07:18.2851580Z     if (!root) return;
2025-04-15T08:07:18.2851843Z     const checkboxes = root.querySelectorAll('.dropdown > .checkbox-container input[type="checkbox"]');
2025-04-15T08:07:18.2851934Z     const selected = Array.from(checkboxes)
2025-04-15T08:07:18.2852031Z       .filter((checkbox) => checkbox.checked)
2025-04-15T08:07:18.2852207Z       .map((checkbox) => ({ value: checkbox.value, name: checkbox.dataset.name }));
2025-04-15T08:07:18.2852212Z 
2025-04-15T08:07:18.2852338Z     const selectedNames = selected.map(({ name }) => name);
2025-04-15T08:07:18.2852473Z     const selectedValues = selected.map(({ value }) => value);
2025-04-15T08:07:18.2852477Z 
2025-04-15T08:07:18.2852614Z     const selectedSpaceIds = state.claim.selectedSpaceIds;
2025-04-15T08:07:18.2852705Z     const spaces = state.cache.spaces;
2025-04-15T08:07:18.2853021Z     const selectedSpaceName = selectedSpaceIds.length ? spaces.find(({ id }) => id == selectedSpaceIds[0])?.name : null;
2025-04-15T08:07:18.2853025Z 
2025-04-15T08:07:18.2853295Z     const dropdownChangeEvent = new CustomEvent("dropdownChange", { detail: { values: selectedValues } });
2025-04-15T08:07:18.2853394Z     root.dispatchEvent(dropdownChangeEvent);
2025-04-15T08:07:18.2853402Z 
2025-04-15T08:07:18.2853519Z     root.querySelector("#selectedItems").textContent =
2025-04-15T08:07:18.2853689Z       selectedNames.length > 0 ? selectedNames.join(", ") : "Select Rooms";
2025-04-15T08:07:18.2853693Z 
2025-04-15T08:07:18.2853846Z     const target = document.getElementById(root.dataset.target);
2025-04-15T08:07:18.2853926Z     target.textContent =
2025-04-15T08:07:18.2854004Z       selected.length > 0
2025-04-15T08:07:18.2854167Z         ? `You are ready to connect your agent to room(s): ${selectedNames.join(
2025-04-15T08:07:18.2854234Z           ", "
2025-04-15T08:07:18.2854387Z         )}${selectedSpaceName ? ` of ${selectedSpaceName} space` : ""}`
2025-04-15T08:07:18.2854531Z         : "";
2025-04-15T08:07:18.2854597Z   }
2025-04-15T08:07:18.2854601Z 
2025-04-15T08:07:18.2854690Z   const bindDropdownOptions = () => {
2025-04-15T08:07:18.2854857Z     document.querySelectorAll(".dropdown-custom").forEach(root => {
2025-04-15T08:07:18.2855018Z       root.querySelectorAll(".nd-checkbox > input").forEach(input => {
2025-04-15T08:07:18.2855195Z         input.addEventListener("change", () => updateSelectedOptions(root));
2025-04-15T08:07:18.2855260Z       });
2025-04-15T08:07:18.2855320Z     });
2025-04-15T08:07:18.2855384Z   }
2025-04-15T08:07:18.2855388Z 
2025-04-15T08:07:18.2855475Z   const buildRoomsList = (rooms = []) => {
2025-04-15T08:07:18.2855675Z     const container = document.getElementById("roomsSelectorOptionsContainer");
2025-04-15T08:07:18.2855747Z     if (container) {
2025-04-15T08:07:18.2855835Z       container.innerHTML = "";
2025-04-15T08:07:18.2855919Z       rooms.forEach(({ id, name }) => {
2025-04-15T08:07:18.2856027Z         const isDefaultSelected = name === "All nodes"
2025-04-15T08:07:18.2856036Z 
2025-04-15T08:07:18.2856215Z         if (isDefaultSelected) {
2025-04-15T08:07:18.2856302Z           setSelectedRoomsStatus(id)
2025-04-15T08:07:18.2856371Z         }
2025-04-15T08:07:18.2856375Z 
2025-04-15T08:07:18.2856520Z         const label = createElem("label", { classList: "nd-checkbox" });
2025-04-15T08:07:18.2856743Z         const input = createElem("input", { type: "checkbox", value: id, checked: isDefaultSelected });
2025-04-15T08:07:18.2856830Z         input.dataset.name = name;
2025-04-15T08:07:18.2856905Z         input.onchange = e => {
2025-04-15T08:07:18.2857000Z           setSelectedRoomsStatus(prev => {
2025-04-15T08:07:18.2857101Z             if (e.target.checked) return [...prev, id];
2025-04-15T08:07:18.2857190Z             return prev.filter(r => r != id);
2025-04-15T08:07:18.2857372Z           });
2025-04-15T08:07:18.2857434Z         }
2025-04-15T08:07:18.2857437Z 
2025-04-15T08:07:18.2857577Z         const span = createElem("span", { classList: "checkmark" });
2025-04-15T08:07:18.2857683Z         const text = document.createTextNode(name);
2025-04-15T08:07:18.2857688Z 
2025-04-15T08:07:18.2857772Z         label.appendChild(input);
2025-04-15T08:07:18.2857854Z         label.appendChild(span);
2025-04-15T08:07:18.2857933Z         label.appendChild(text);
2025-04-15T08:07:18.2858024Z         container.appendChild(label);
2025-04-15T08:07:18.2858086Z       });
2025-04-15T08:07:18.2858090Z 
2025-04-15T08:07:18.2858173Z       bindDropdownOptions();
2025-04-15T08:07:18.2858233Z     }
2025-04-15T08:07:18.2858296Z   }
2025-04-15T08:07:18.2858300Z 
2025-04-15T08:07:18.2858393Z   const buildSpacesList = (spaces = []) => {
2025-04-15T08:07:18.2858530Z     const container = document.getElementById("spacesList");
2025-04-15T08:07:18.2858602Z     if (container) {
2025-04-15T08:07:18.2858685Z       container.innerHTML = "";
2025-04-15T08:07:18.2858805Z       spaces.forEach(({ id, name, permissions = [] }) => {
2025-04-15T08:07:18.2858919Z         if (!permissions.includes("node:Create")) return
2025-04-15T08:07:18.2858923Z 
2025-04-15T08:07:18.2859011Z         const listItem = createElem("li");
2025-04-15T08:07:18.2859092Z         listItem.innerText = name;
2025-04-15T08:07:18.2859180Z         listItem.className = "space-item";
2025-04-15T08:07:18.2859265Z         listItem.dataset.id = id;
2025-04-15T08:07:18.2859351Z         listItem.onclick = async () => {
2025-04-15T08:07:18.2859602Z           document.querySelectorAll(".space-item").forEach(item => item.classList.remove("selected"));
2025-04-15T08:07:18.2859694Z           listItem.classList.add("selected");
2025-04-15T08:07:18.2859785Z           setSelectedSpacesStatus([id]);
2025-04-15T08:07:18.2859847Z         };
2025-04-15T08:07:18.2859935Z         container.appendChild(listItem);
2025-04-15T08:07:18.2860003Z       });
2025-04-15T08:07:18.2860068Z     }
2025-04-15T08:07:18.2860194Z     return Promise.resolve();
2025-04-15T08:07:18.2860300Z   }
2025-04-15T08:07:18.2860308Z 
2025-04-15T08:07:18.2860627Z   const initCustomDropdown = () => {
2025-04-15T08:07:18.2860772Z     const toggleDropdown = e => {
2025-04-15T08:07:18.2860900Z       if (!e.currentTarget) return;
2025-04-15T08:07:18.2861120Z       const checkboxContainer = e.currentTarget.querySelector(".checkbox-container");
2025-04-15T08:07:18.2861200Z       if (checkboxContainer) {
2025-04-15T08:07:18.2861481Z         checkboxContainer.style.display = checkboxContainer.style.display === "block" ? "none" : "block";
2025-04-15T08:07:18.2861542Z       }
2025-04-15T08:07:18.2861602Z     }
2025-04-15T08:07:18.2861606Z 
2025-04-15T08:07:18.2861688Z     const clearSelection = e => {
2025-04-15T08:07:18.2861766Z       if (!e.currentTarget) return;
2025-04-15T08:07:18.2861906Z       const root = e.currentTarget.closest(".dropdown-custom");
2025-04-15T08:07:18.2861970Z       if (root) {
2025-04-15T08:07:18.2862240Z         const checkboxes = root.querySelectorAll('.dropdown > .checkbox-container input[type="checkbox"]');
2025-04-15T08:07:18.2862399Z         checkboxes.forEach((checkbox) => (checkbox.checked = false));
2025-04-15T08:07:18.2862489Z         updateSelectedOptions(root);
2025-04-15T08:07:18.2862559Z       }
2025-04-15T08:07:18.2862620Z     }
2025-04-15T08:07:18.2862624Z 
2025-04-15T08:07:18.2862788Z     document.querySelectorAll(".dropdown-custom").forEach(root => {
2025-04-15T08:07:18.2862913Z       const btnClear = root.querySelector(".clear-button");
2025-04-15T08:07:18.2863027Z       const dropdown = root.querySelector(".dropdown");
2025-04-15T08:07:18.2863103Z       if (dropdown) {
2025-04-15T08:07:18.2863172Z         if (btnClear) {
2025-04-15T08:07:18.2863302Z           btnClear.addEventListener("click", clearSelection);
2025-04-15T08:07:18.2863362Z         }
2025-04-15T08:07:18.2863490Z         dropdown.addEventListener("click", toggleDropdown);
2025-04-15T08:07:18.2863549Z       }
2025-04-15T08:07:18.2863701Z     });
2025-04-15T08:07:18.2863704Z 
2025-04-15T08:07:18.2863810Z     document.addEventListener("click", (e) => {
2025-04-15T08:07:18.2863989Z       document.querySelectorAll(".dropdown-custom").forEach(dropdown => {
2025-04-15T08:07:18.2864180Z         const checkboxContainer = dropdown.querySelector(".checkbox-container");
2025-04-15T08:07:18.2864338Z         if (dropdown && checkboxContainer && !dropdown.contains(e.target)) {
2025-04-15T08:07:18.2864444Z           checkboxContainer.style.display = "none";
2025-04-15T08:07:18.2864509Z         }
2025-04-15T08:07:18.2864568Z       });
2025-04-15T08:07:18.2864630Z     });
2025-04-15T08:07:18.2864634Z 
2025-04-15T08:07:18.2864713Z     return Promise.resolve();
2025-04-15T08:07:18.2864777Z   }
2025-04-15T08:07:18.2864781Z 
2025-04-15T08:07:18.2864869Z   const initClaimingElements = () => {
2025-04-15T08:07:18.2865021Z     const claimCommand = document.getElementById("claimCommand");
2025-04-15T08:07:18.2865148Z     const claimTip = document.getElementById("claimTip");
2025-04-15T08:07:18.2865315Z     const btnPrev = document.getElementById("btnConnectionStepPrev");
2025-04-15T08:07:18.2865479Z     const btnNext = document.getElementById("btnConnectionStepNext");
2025-04-15T08:07:18.2865600Z     const btnClaim = document.getElementById("btnClaim");
2025-04-15T08:07:18.2865793Z     const claimingPrivateKey = document.getElementById("claimingPrivateKey");
2025-04-15T08:07:18.2865796Z 
2025-04-15T08:07:18.2865907Z     if (claimCommand && !!state.claim?.status?.command) {
2025-04-15T08:07:18.2866038Z       claimCommand.innerText = state.claim.status.command;
2025-04-15T08:07:18.2866346Z     }
2025-04-15T08:07:18.2866350Z 
2025-04-15T08:07:18.2866460Z     if (claimTip && !!state.claim?.status?.key_filename) {
2025-04-15T08:07:18.2867176Z       claimTip.innerText = `Tip: If the command doesn’t work out-of-the-box, locate the ${state.claim.status.key_filename} file, open it in your favourite text editor, and copy it to your clipboard.`;
2025-04-15T08:07:18.2867249Z     }
2025-04-15T08:07:18.2867253Z 
2025-04-15T08:07:18.2867330Z     if (btnPrev) {
2025-04-15T08:07:18.2867434Z       btnPrev.addEventListener("click", () => {
2025-04-15T08:07:18.2867675Z         setClaimingStep(prev => prev - 1);
2025-04-15T08:07:18.2867743Z       });
2025-04-15T08:07:18.2867804Z     }
2025-04-15T08:07:18.2867808Z 
2025-04-15T08:07:18.2867879Z     if (btnNext) {
2025-04-15T08:07:18.2868023Z       btnNext.addEventListener("click", async () => {
2025-04-15T08:07:18.2868159Z         const newStep = await setClaimingStep(prev => prev + 1);
2025-04-15T08:07:18.2868301Z         if (newStep == 2 && !!state.claim.selectedSpaceIds.length) {
2025-04-15T08:07:18.2868416Z           const spaceId = state.claim.selectedSpaceIds[0];
2025-04-15T08:07:18.2868521Z           const rooms = await getSpaceRooms(spaceId);
2025-04-15T08:07:18.2868602Z           buildRoomsList(rooms);
2025-04-15T08:07:18.2868695Z           await getClaimingToken(spaceId);
2025-04-15T08:07:18.2868757Z         }
2025-04-15T08:07:18.2868827Z       });
2025-04-15T08:07:18.2868887Z     }
2025-04-15T08:07:18.2868891Z 
2025-04-15T08:07:18.2868958Z     if (btnClaim) {
2025-04-15T08:07:18.2869081Z       btnClaim.addEventListener("click", async () => {
2025-04-15T08:07:18.2869185Z         toggleClaimingAgentLoadingState(true);
2025-04-15T08:07:18.2869277Z         await setClaimResponseState({});
2025-04-15T08:07:18.2869457Z         const { selectedSpaceIds, selectedRoomIds, privateKey } = state.claim;
2025-04-15T08:07:18.2869764Z         const { token } = selectedSpaceIds.length ? state.cache.claimingTokensPerSpace[selectedSpaceIds[0]] || {} : {};
2025-04-15T08:07:18.2869769Z 
2025-04-15T08:07:18.2869843Z         let didCatch = false;
2025-04-15T08:07:18.2870078Z         const data = await claimAgent({ key: privateKey, token, rooms: selectedRoomIds }).catch(err => {
2025-04-15T08:07:18.2870154Z           didCatch = true;
2025-04-15T08:07:18.2870267Z           setClaimResponseState({ error: err.message });
2025-04-15T08:07:18.2870449Z         })
2025-04-15T08:07:18.2870454Z 
2025-04-15T08:07:18.2870538Z         if (data === "invalid key") {
2025-04-15T08:07:18.2870613Z           didCatch = true;
2025-04-15T08:07:18.2870729Z           setClaimResponseState({ error: "Invalid key" });
2025-04-15T08:07:18.2870790Z         }
2025-04-15T08:07:18.2870896Z         toggleClaimingAgentLoadingState(false);
2025-04-15T08:07:18.2870900Z 
2025-04-15T08:07:18.2870972Z         if (didCatch) return;
2025-04-15T08:07:18.2870976Z 
2025-04-15T08:07:18.2871044Z         if (data) {
2025-04-15T08:07:18.2871115Z           if (data.success) {
2025-04-15T08:07:18.2871204Z             window.location.reload();
2025-04-15T08:07:18.2871267Z           } else {
2025-04-15T08:07:18.2871353Z             setClaimResponseState(data);
2025-04-15T08:07:18.2871419Z           }
2025-04-15T08:07:18.2871480Z         }
2025-04-15T08:07:18.2871545Z       });
2025-04-15T08:07:18.2871604Z     }
2025-04-15T08:07:18.2871608Z 
2025-04-15T08:07:18.2871685Z     if (claimingPrivateKey) {
2025-04-15T08:07:18.2871965Z       claimingPrivateKey.addEventListener("input", e => setClaimingPrivateKeyState(e.target.value));
2025-04-15T08:07:18.2872026Z     }
2025-04-15T08:07:18.2872093Z   }
2025-04-15T08:07:18.2872097Z 
2025-04-15T08:07:18.2872181Z   const setClaimStatus = async () => {
2025-04-15T08:07:18.2872264Z     const status = await claimAgent();
2025-04-15T08:07:18.2872341Z     const claimStatus = {
2025-04-15T08:07:18.2872476Z       command: status.cmd || `sudo cat ${status.key_filename}`,
2025-04-15T08:07:18.2872544Z       ...status
2025-04-15T08:07:18.2872602Z     };
2025-04-15T08:07:18.2872701Z     await setClaimStatusState(claimStatus);
2025-04-15T08:07:18.2872780Z     return Promise.resolve();
2025-04-15T08:07:18.2872838Z   }
2025-04-15T08:07:18.2872842Z 
2025-04-15T08:07:18.2872935Z   const prepareClaiming = async agent => {
2025-04-15T08:07:18.2873014Z     await setClaimStatus();
2025-04-15T08:07:18.2873098Z     setupOptOutMessage(agent)
2025-04-15T08:07:18.2873179Z     const spaces = await getSpaces();
2025-04-15T08:07:18.2873268Z     await buildSpacesList(spaces);
2025-04-15T08:07:18.2873349Z     initCustomDropdown();
2025-04-15T08:07:18.2873509Z     initClaimingElements();
2025-04-15T08:07:18.2873582Z     syncUI();
2025-04-15T08:07:18.2873642Z   }
2025-04-15T08:07:18.2873646Z 
2025-04-15T08:07:18.2873726Z   const startLoading = () => {
2025-04-15T08:07:18.2873805Z     const body = document.body;
2025-04-15T08:07:18.2873871Z     if (body) {
2025-04-15T08:07:18.2873960Z       body.classList.add("loading");
2025-04-15T08:07:18.2874020Z     }
2025-04-15T08:07:18.2874083Z   }
2025-04-15T08:07:18.2874086Z 
2025-04-15T08:07:18.2874161Z   const stopLoading = () => {
2025-04-15T08:07:18.2874237Z     const body = document.body;
2025-04-15T08:07:18.2874303Z     if (body) {
2025-04-15T08:07:18.2874392Z       body.classList.remove("loading");
2025-04-15T08:07:18.2874497Z       window.dispatchEvent(new Event("resize"));
2025-04-15T08:07:18.2874557Z     }
2025-04-15T08:07:18.2874616Z   }
2025-04-15T08:07:18.2874628Z 
2025-04-15T08:07:18.2874776Z   const showErrorMessage = (message = defaultErrorMessage) => {
2025-04-15T08:07:18.2874956Z     const messageContainer = document.getElementById("loadingMessage");
2025-04-15T08:07:18.2875035Z     if (messageContainer) {
2025-04-15T08:07:18.2875128Z       messageContainer.innerHTML = message;
2025-04-15T08:07:18.2875201Z       startLoading();
2025-04-15T08:07:18.2875261Z     }
2025-04-15T08:07:18.2875319Z   }
2025-04-15T08:07:18.2875322Z 
2025-04-15T08:07:18.2875402Z   const initMetrics = data => {
2025-04-15T08:07:18.2875596Z     if (!data?.agents?.[0]) return Promise.reject({ message: "No agent data available." })
2025-04-15T08:07:18.2875601Z 
2025-04-15T08:07:18.2875744Z     const setPercentageBarWidth = (containerId, percent) => {
2025-04-15T08:07:18.2875875Z       const container = document.getElementById(containerId);
2025-04-15T08:07:18.2875945Z       if (container) {
2025-04-15T08:07:18.2876197Z         const percentageContainer = document.createElement("div");
2025-04-15T08:07:18.2876467Z         percentageContainer.className = "percentage-container";
2025-04-15T08:07:18.2876476Z 
2025-04-15T08:07:18.2876606Z         const percentageBar = document.createElement("div");
2025-04-15T08:07:18.2876716Z         percentageBar.className = "percentage-bar";
2025-04-15T08:07:18.2876825Z         percentageBar.style.width = percent + "%";
2025-04-15T08:07:18.2876829Z 
2025-04-15T08:07:18.2876955Z         const percentageText = document.createElement("div");
2025-04-15T08:07:18.2877072Z         percentageText.className = "percentage-text";
2025-04-15T08:07:18.2877300Z         percentageText.innerText = percent + "%"; // Display the rounded percentage value with "%"
2025-04-15T08:07:18.2877304Z 
2025-04-15T08:07:18.2877442Z         // Calculate the right position dynamically, capped at 96%
2025-04-15T08:07:18.2877574Z         const rightPosition = Math.min(100 - percent, 96) + "%";
2025-04-15T08:07:18.2877680Z         percentageText.style.right = rightPosition;
2025-04-15T08:07:18.2877688Z 
2025-04-15T08:07:18.2877815Z         percentageContainer.appendChild(percentageBar);
2025-04-15T08:07:18.2878038Z         percentageContainer.appendChild(percentageText); // Append the percentage text
2025-04-15T08:07:18.2878042Z 
2025-04-15T08:07:18.2878150Z         container.appendChild(percentageContainer);
2025-04-15T08:07:18.2878212Z       }
2025-04-15T08:07:18.2878275Z     }
2025-04-15T08:07:18.2878279Z 
2025-04-15T08:07:18.2878384Z     const units = ["", "K", "M", "B", "T", "P", "E"]
2025-04-15T08:07:18.2878388Z 
2025-04-15T08:07:18.2878480Z     const abbreviateNumber = number => {
2025-04-15T08:07:18.2878553Z       if (!number) return 0
2025-04-15T08:07:18.2878614Z     
2025-04-15T08:07:18.2878726Z       const tier = (Math.log10(Math.abs(number)) / 3) | 0
2025-04-15T08:07:18.2878786Z     
2025-04-15T08:07:18.2878865Z       if (!tier) return number
2025-04-15T08:07:18.2878924Z     
2025-04-15T08:07:18.2879001Z       const suffix = units[tier]
2025-04-15T08:07:18.2879095Z       const scale = Math.pow(10, tier * 3)
2025-04-15T08:07:18.2879173Z       const scaled = number / scale
2025-04-15T08:07:18.2879259Z       return scaled.toFixed(1) + suffix
2025-04-15T08:07:18.2879429Z     }
2025-04-15T08:07:18.2879434Z 
2025-04-15T08:07:18.2879517Z     const formatBytes = (bytes) => {
2025-04-15T08:07:18.2879599Z       if (bytes === 0) return "0 Bytes";
2025-04-15T08:07:18.2879669Z       const k = 1024,
2025-04-15T08:07:18.2879798Z         sizes = ["Bytes", "KB", "MB", "GB", "TB", "PB", "EB", "ZB", "YB"],
2025-04-15T08:07:18.2879900Z         i = Math.floor(Math.log(bytes) / Math.log(k));
2025-04-15T08:07:18.2879967Z       return (
2025-04-15T08:07:18.2880115Z         parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + " " + sizes[i]
2025-04-15T08:07:18.2880177Z       );
2025-04-15T08:07:18.2880239Z     }
2025-04-15T08:07:18.2880242Z 
2025-04-15T08:07:18.2880337Z     const formatLargeNumbers = (number) => {
2025-04-15T08:07:18.2880425Z       return number.toLocaleString();
2025-04-15T08:07:18.2880491Z     }
2025-04-15T08:07:18.2880495Z 
2025-04-15T08:07:18.2880593Z     const formatTimestamp = (timestamp) => {
2025-04-15T08:07:18.2880690Z       const date = new Date(timestamp * 1000);
2025-04-15T08:07:18.2880796Z       const months = [
2025-04-15T08:07:18.2880917Z         "Jan",
2025-04-15T08:07:18.2881025Z         "Feb",
2025-04-15T08:07:18.2881142Z         "Mar",
2025-04-15T08:07:18.2881245Z         "Apr",
2025-04-15T08:07:18.2881311Z         "May",
2025-04-15T08:07:18.2881445Z         "Jun",
2025-04-15T08:07:18.2881563Z         "Jul",
2025-04-15T08:07:18.2881641Z         "Aug",
2025-04-15T08:07:18.2881707Z         "Sep",
2025-04-15T08:07:18.2881770Z         "Oct",
2025-04-15T08:07:18.2881836Z         "Nov",
2025-04-15T08:07:18.2881896Z         "Dec",
2025-04-15T08:07:18.2881962Z       ];
2025-04-15T08:07:18.2882097Z       const days = ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"];
2025-04-15T08:07:18.2882190Z       const day = days[date.getUTCDay()];
2025-04-15T08:07:18.2882292Z       const month = months[date.getUTCMonth()];
2025-04-15T08:07:18.2882489Z       const year = date.getUTCFullYear();
2025-04-15T08:07:18.2882652Z       const hours = date.getUTCHours().toString().padStart(2, "0");
2025-04-15T08:07:18.2882811Z       const minutes = date.getUTCMinutes().toString().padStart(2, "0");
2025-04-15T08:07:18.2882966Z       const seconds = date.getUTCSeconds().toString().padStart(2, "0");
2025-04-15T08:07:18.2882970Z 
2025-04-15T08:07:18.2883147Z       return `${month} ${date.getUTCDate()}, ${year} ${hours}:${minutes}:${seconds}`;
2025-04-15T08:07:18.2883211Z     }
2025-04-15T08:07:18.2883219Z 
2025-04-15T08:07:18.2883342Z     const formatDuration = (seconds, short = false) => {
2025-04-15T08:07:18.2883430Z       if (seconds <= 0) return "0 seconds";
2025-04-15T08:07:18.2883539Z       const days = Math.floor(seconds / (24 * 3600));
2025-04-15T08:07:18.2883661Z       const hours = Math.floor((seconds % (24 * 3600)) / 3600);
2025-04-15T08:07:18.2883772Z       const minutes = Math.floor((seconds % 3600) / 60);
2025-04-15T08:07:18.2883872Z       const remainingSeconds = seconds % 60;
2025-04-15T08:07:18.2883876Z 
2025-04-15T08:07:18.2883944Z       if (short) {
2025-04-15T08:07:18.2884024Z         if (days > 3) {
2025-04-15T08:07:18.2884101Z           return days + " days";
2025-04-15T08:07:18.2884181Z         } else if (days > 0) {
2025-04-15T08:07:18.2884268Z           return days * 24 + hours + " hours";
2025-04-15T08:07:18.2884334Z         }
2025-04-15T08:07:18.2884396Z       }
2025-04-15T08:07:18.2884400Z 
2025-04-15T08:07:18.2884473Z       const parts = [];
2025-04-15T08:07:18.2884610Z       if (days > 0) parts.push(days + " day" + (days > 1 ? "s" : ""));
2025-04-15T08:07:18.2884749Z       if (hours > 0) parts.push(hours + " hour" + (hours > 1 ? "s" : ""));
2025-04-15T08:07:18.2884824Z       if (minutes > 0)
2025-04-15T08:07:18.2884959Z         parts.push(minutes + " minute" + (minutes > 1 ? "s" : ""));
2025-04-15T08:07:18.2885046Z       if (remainingSeconds > 0)
2025-04-15T08:07:18.2885116Z         parts.push(
2025-04-15T08:07:18.2885274Z           remainingSeconds + " second" + (remainingSeconds > 1 ? "s" : "")
2025-04-15T08:07:18.2885338Z         );
2025-04-15T08:07:18.2885576Z       return parts.join(" • ");
2025-04-15T08:07:18.2885644Z     }
2025-04-15T08:07:18.2885648Z 
2025-04-15T08:07:18.2885737Z     const createKeyValuePairs = (
2025-04-15T08:07:18.2885806Z       containerId,
2025-04-15T08:07:18.2885874Z       dataObject,
2025-04-15T08:07:18.2885939Z       keys = null,
2025-04-15T08:07:18.2886016Z       shortFormat = false,
2025-04-15T08:07:18.2886214Z       usePercentageBar = false
2025-04-15T08:07:18.2886277Z     ) => {
2025-04-15T08:07:18.2886418Z       const container = document.getElementById(containerId);
2025-04-15T08:07:18.2886492Z       if (!container) return;
2025-04-15T08:07:18.2886637Z       if (dataObject === null || typeof dataObject !== "object") return
2025-04-15T08:07:18.2886642Z 
2025-04-15T08:07:18.2886752Z       container.innerHTML = ""; // Clear the container
2025-04-15T08:07:18.2886764Z 
2025-04-15T08:07:18.2886880Z       const keysToUse = keys || Object.keys(dataObject);
2025-04-15T08:07:18.2886884Z 
2025-04-15T08:07:18.2886980Z       keysToUse.forEach(function (key) {
2025-04-15T08:07:18.2887082Z         if (dataObject.hasOwnProperty(key)) {
2025-04-15T08:07:18.2887176Z           let value = dataObject[key].toString();
2025-04-15T08:07:18.2887254Z           if (value === "false") return;
2025-04-15T08:07:18.2887258Z 
2025-04-15T08:07:18.2887342Z           if (key === "cpu_frequency") {
2025-04-15T08:07:18.2887458Z             value = (dataObject[key] / 1e9).toFixed(2) + " GHz";
2025-04-15T08:07:18.2887532Z           } else if (
2025-04-15T08:07:18.2887602Z             key === "ram" ||
2025-04-15T08:07:18.2887672Z             key === "disk" ||
2025-04-15T08:07:18.2887753Z             key === "disk_used" ||
2025-04-15T08:07:18.2887823Z             key === "disk_max"
2025-04-15T08:07:18.2887886Z           ) {
2025-04-15T08:07:18.2887979Z             value = formatBytes(dataObject[key]);
2025-04-15T08:07:18.2888179Z           } else if (
2025-04-15T08:07:18.2888254Z             key === "samples" ||
2025-04-15T08:07:18.2888348Z             key === "currently_collected_metrics"
2025-04-15T08:07:18.2888414Z           ) {
2025-04-15T08:07:18.2888521Z             value = formatLargeNumbers(dataObject[key]);
2025-04-15T08:07:18.2888622Z           } else if (key === "from" || key === "to") {
2025-04-15T08:07:18.2888724Z             value = formatTimestamp(dataObject[key]);
2025-04-15T08:07:18.2888790Z           } else if (
2025-04-15T08:07:18.2888869Z             key === "retention" ||
2025-04-15T08:07:18.2888954Z             key === "expected_retention" ||
2025-04-15T08:07:18.2889040Z             key === "requested_retention"
2025-04-15T08:07:18.2889103Z           ) {
2025-04-15T08:07:18.2889235Z             value = formatDuration(dataObject[key], shortFormat);
2025-04-15T08:07:18.2889323Z           } else if (key === "disk_percent") {
2025-04-15T08:07:18.2889525Z             const roundedValue = Math.round(dataObject[key]); // Round the percentage value
2025-04-15T08:07:18.2889617Z             if (usePercentageBar) {
2025-04-15T08:07:18.2889750Z               setPercentageBarWidth(containerId, roundedValue);
2025-04-15T08:07:18.2889901Z               return; // No need to create key-value pair for percentage bar
2025-04-15T08:07:18.2889968Z             } else {
2025-04-15T08:07:18.2890114Z               value = roundedValue + "%"; // Append "%" to the rounded value
2025-04-15T08:07:18.2890177Z             }
2025-04-15T08:07:18.2890239Z           }
2025-04-15T08:07:18.2890243Z 
2025-04-15T08:07:18.2890321Z           const div = getDOM({
2025-04-15T08:07:18.2890391Z             tag: "div",
2025-04-15T08:07:18.2890473Z             classList: "key-value",
2025-04-15T08:07:18.2890542Z             children: [
2025-04-15T08:07:18.2890603Z               {
2025-04-15T08:07:18.2890678Z                 tag: "span",
2025-04-15T08:07:18.2890855Z                 innerText: key.charAt(0).toUpperCase() + key.slice(1).replace(/_/g, " ")
2025-04-15T08:07:18.2890925Z               },
2025-04-15T08:07:18.2890987Z               {
2025-04-15T08:07:18.2891059Z                 tag: "span",
2025-04-15T08:07:18.2891249Z                 innerText: value,
2025-04-15T08:07:18.2891336Z                 condition: value !== "true"
2025-04-15T08:07:18.2891402Z               }
2025-04-15T08:07:18.2891465Z             ]
2025-04-15T08:07:18.2891531Z           });
2025-04-15T08:07:18.2891534Z 
2025-04-15T08:07:18.2891624Z           container.appendChild(div);
2025-04-15T08:07:18.2891686Z         }
2025-04-15T08:07:18.2891751Z       });
2025-04-15T08:07:18.2891811Z     }
2025-04-15T08:07:18.2891815Z 
2025-04-15T08:07:18.2891916Z     const setupCollectedMetrics = data => {
2025-04-15T08:07:18.2891999Z       const agent = data?.agents?.[0]
2025-04-15T08:07:18.2892187Z       const metricsFromDbSize = agent?.db_size?.[0]?.currently_collected_metrics
2025-04-15T08:07:18.2892473Z       const collectedMetrics = metricsFromDbSize !== undefined ? metricsFromDbSize : agent?.metrics?.collected;
2025-04-15T08:07:18.2892639Z       const container = document.getElementById("collectedMetrics");
2025-04-15T08:07:18.2892776Z       if (collectedMetrics === undefined || !container) return;
2025-04-15T08:07:18.2892781Z 
2025-04-15T08:07:18.2892854Z       const div = getDOM({
2025-04-15T08:07:18.2892924Z         tag: "div",
2025-04-15T08:07:18.2893001Z         classList: "key-value",
2025-04-15T08:07:18.2893068Z         children: [
2025-04-15T08:07:18.2893133Z           {
2025-04-15T08:07:18.2893204Z             tag: "span",
2025-04-15T08:07:18.2893308Z             innerText: "Currently Collected Metrics"
2025-04-15T08:07:18.2893369Z           },
2025-04-15T08:07:18.2893434Z           {
2025-04-15T08:07:18.2893503Z             tag: "span",
2025-04-15T08:07:18.2893820Z             innerText: collectedMetrics > 99999 ? abbreviateNumber(collectedMetrics) : formatLargeNumbers(collectedMetrics),
2025-04-15T08:07:18.2894067Z             // ...(collectedMetrics > 99999 ? { dataset: { tooltip: formatLargeNumbers(collectedMetrics) } } : {})
2025-04-15T08:07:18.2894217Z           }
2025-04-15T08:07:18.2894280Z         ]
2025-04-15T08:07:18.2894343Z       });
2025-04-15T08:07:18.2894347Z 
2025-04-15T08:07:18.2894432Z       container.appendChild(div);
2025-04-15T08:07:18.2894500Z     }
2025-04-15T08:07:18.2894503Z 
2025-04-15T08:07:18.2894574Z     const buildTier = ({
2025-04-15T08:07:18.2894651Z       tier: index,
2025-04-15T08:07:18.2894718Z       granularity,
2025-04-15T08:07:18.2894786Z       metrics,
2025-04-15T08:07:18.2894850Z       samples,
2025-04-15T08:07:18.2894919Z       retention_human,
2025-04-15T08:07:18.2895003Z       expected_retention_human,
2025-04-15T08:07:18.2895083Z       requested_retention_human,
2025-04-15T08:07:18.2895152Z       disk_used,
2025-04-15T08:07:18.2895219Z       disk_percent,
2025-04-15T08:07:18.2895285Z       disk_max,
2025-04-15T08:07:18.2895351Z       ...rest
2025-04-15T08:07:18.2895413Z     }) => {
2025-04-15T08:07:18.2895571Z       const disk_used_exists = disk_used !== null && !isNaN(disk_used)
2025-04-15T08:07:18.2895706Z       const disk_max_exists = disk_max !== null && !isNaN(disk_max)
2025-04-15T08:07:18.2895715Z 
2025-04-15T08:07:18.2895802Z       const contentsStructure = {
2025-04-15T08:07:18.2895868Z         tag: "tr",
2025-04-15T08:07:18.2895935Z         children: [
2025-04-15T08:07:18.2896002Z           {
2025-04-15T08:07:18.2896164Z             tag: "td",
2025-04-15T08:07:18.2896247Z             classList: "cell-data",
2025-04-15T08:07:18.2896323Z             textContent: index
2025-04-15T08:07:18.2896385Z           },
2025-04-15T08:07:18.2896450Z           {
2025-04-15T08:07:18.2896516Z             tag: "td",
2025-04-15T08:07:18.2896594Z             classList: "cell-data",
2025-04-15T08:07:18.2896673Z             textContent: granularity
2025-04-15T08:07:18.2896734Z           },
2025-04-15T08:07:18.2896798Z           {
2025-04-15T08:07:18.2896863Z             tag: "td",
2025-04-15T08:07:18.2896966Z             classList: "cell-data section-start",
2025-04-15T08:07:18.2897040Z             children: [
2025-04-15T08:07:18.2897101Z               {
2025-04-15T08:07:18.2897176Z                 tag: "span",
2025-04-15T08:07:18.2897392Z                 textContent: abbreviateNumber(metrics),
2025-04-15T08:07:18.2897523Z                 // dataset: { tooltip: formatLargeNumbers(metrics) }
2025-04-15T08:07:18.2897585Z               }
2025-04-15T08:07:18.2897649Z             ]
2025-04-15T08:07:18.2897710Z           },
2025-04-15T08:07:18.2897771Z           {
2025-04-15T08:07:18.2897841Z             tag: "td",
2025-04-15T08:07:18.2897917Z             classList: "cell-data",
2025-04-15T08:07:18.2897985Z             children: [
2025-04-15T08:07:18.2898047Z               {
2025-04-15T08:07:18.2898115Z                 tag: "span",
2025-04-15T08:07:18.2898224Z                 textContent: abbreviateNumber(samples),
2025-04-15T08:07:18.2898341Z                 // dataset: { tooltip: formatLargeNumbers(samples) }
2025-04-15T08:07:18.2898418Z               }
2025-04-15T08:07:18.2898479Z             ]
2025-04-15T08:07:18.2898539Z           },
2025-04-15T08:07:18.2898606Z           {
2025-04-15T08:07:18.2898677Z             tag: "td",
2025-04-15T08:07:18.2898773Z             classList: "cell-data section-start",
2025-04-15T08:07:18.2898868Z             textContent: retention_human || "-"
2025-04-15T08:07:18.2898930Z           },
2025-04-15T08:07:18.2898994Z           {
2025-04-15T08:07:18.2899059Z             tag: "td",
2025-04-15T08:07:18.2899141Z             classList: "cell-data",
2025-04-15T08:07:18.2899249Z             textContent: expected_retention_human || "-"
2025-04-15T08:07:18.2899315Z           },
2025-04-15T08:07:18.2899376Z           {
2025-04-15T08:07:18.2899441Z             tag: "td",
2025-04-15T08:07:18.2899522Z             classList: "cell-data",
2025-04-15T08:07:18.2899630Z             textContent: requested_retention_human || "-"
2025-04-15T08:07:18.2899695Z           },
2025-04-15T08:07:18.2899754Z           {
2025-04-15T08:07:18.2899936Z             tag: "td",
2025-04-15T08:07:18.2900030Z             classList: "cell-data section-start",
2025-04-15T08:07:18.2900097Z             children: [
2025-04-15T08:07:18.2900167Z               {
2025-04-15T08:07:18.2900286Z                 className: "progress-indicator flex flex-col",
2025-04-15T08:07:18.2900358Z                 children: [
2025-04-15T08:07:18.2900424Z                   {
2025-04-15T08:07:18.2900497Z                     tag: "span",
2025-04-15T08:07:18.2900652Z                     textContent: disk_used_exists ? formatBytes(disk_used) : "-"
2025-04-15T08:07:18.2900717Z                   },
2025-04-15T08:07:18.2900803Z                   ...(disk_used_exists ? [{
2025-04-15T08:07:18.2900908Z                     className: "progress-bar-container",
2025-04-15T08:07:18.2900982Z                     children: [
2025-04-15T08:07:18.2901053Z                       {
2025-04-15T08:07:18.2901143Z                         className: "progress-bar",
2025-04-15T08:07:18.2901218Z                         dataset: {
2025-04-15T08:07:18.2901305Z                           fill: disk_percent
2025-04-15T08:07:18.2901375Z                         }
2025-04-15T08:07:18.2901447Z                       }
2025-04-15T08:07:18.2901511Z                     ]
2025-04-15T08:07:18.2901582Z                   }] : [])
2025-04-15T08:07:18.2901645Z                 ]
2025-04-15T08:07:18.2901708Z               }
2025-04-15T08:07:18.2901776Z             ]
2025-04-15T08:07:18.2901838Z           },
2025-04-15T08:07:18.2901903Z           {
2025-04-15T08:07:18.2901970Z             tag: "td",
2025-04-15T08:07:18.2902050Z             classList: "cell-data",
2025-04-15T08:07:18.2902195Z             textContent: disk_max_exists ? formatBytes(disk_max) : "-"
2025-04-15T08:07:18.2902258Z           }
2025-04-15T08:07:18.2902324Z         ]
2025-04-15T08:07:18.2902386Z       }
2025-04-15T08:07:18.2902390Z 
2025-04-15T08:07:18.2902481Z       return getDOM(contentsStructure);
2025-04-15T08:07:18.2902542Z     }
2025-04-15T08:07:18.2902552Z 
2025-04-15T08:07:18.2902629Z     const buildTiers = () => {
2025-04-15T08:07:18.2902728Z       const tiers = data.agents[0].db_size || [];
2025-04-15T08:07:18.2903030Z       const placeholder = document.getElementById("tiers-table-data-placeholder");
2025-04-15T08:07:18.2903132Z       if (placeholder && !!tiers.length) {
2025-04-15T08:07:18.2903221Z         const rows = tiers.map(buildTier)
2025-04-15T08:07:18.2903319Z         placeholder.replaceWith(...rows);
2025-04-15T08:07:18.2903382Z       }
2025-04-15T08:07:18.2903386Z 
2025-04-15T08:07:18.2903466Z       return Promise.resolve()
2025-04-15T08:07:18.2903533Z     }
2025-04-15T08:07:18.2903536Z 
2025-04-15T08:07:18.2903625Z     const setupProgressBars = () => {
2025-04-15T08:07:18.2903776Z       document.querySelectorAll(".progress-bar").forEach(el => {
2025-04-15T08:07:18.2903859Z         const fill = el.dataset.fill
2025-04-15T08:07:18.2903940Z         el.style.width = `${fill}%`
2025-04-15T08:07:18.2904005Z       })
2025-04-15T08:07:18.2904072Z     }
2025-04-15T08:07:18.2904075Z 
2025-04-15T08:07:18.2904248Z     createKeyValuePairs("kernel", data.agents[0].application.os, [
2025-04-15T08:07:18.2904321Z       "kernel",
2025-04-15T08:07:18.2904400Z     ]);
2025-04-15T08:07:18.2904584Z     createKeyValuePairs("kernelVersion", data.agents[0].application.os, [
2025-04-15T08:07:18.2904655Z       "kernel_version",
2025-04-15T08:07:18.2904721Z     ]);
2025-04-15T08:07:18.2904884Z     createKeyValuePairs("id", data.agents[0].application.os, ["id"]);
2025-04-15T08:07:18.2905045Z     createKeyValuePairs("os", data.agents[0].application.os, ["os"]);
2025-04-15T08:07:18.2905049Z 
2025-04-15T08:07:18.2905230Z     createKeyValuePairs("package", data.agents[0].application.package, [
2025-04-15T08:07:18.2905300Z       "version",
2025-04-15T08:07:18.2905359Z     ]);
2025-04-15T08:07:18.2905438Z     createKeyValuePairs(
2025-04-15T08:07:18.2905510Z       "directories",
2025-04-15T08:07:18.2905604Z       data.agents[0].application.directories
2025-04-15T08:07:18.2905773Z     );
2025-04-15T08:07:18.2905902Z     createKeyValuePairs("server", data.agents[0], ["nm"]);
2025-04-15T08:07:18.2906164Z     createKeyValuePairs("cpuCores", data.agents[0].application.hw, [
2025-04-15T08:07:18.2906238Z       "cpu_cores",
2025-04-15T08:07:18.2906299Z     ]);
2025-04-15T08:07:18.2906475Z     createKeyValuePairs("cpuFrequency", data.agents[0].application.hw, [
2025-04-15T08:07:18.2906545Z       "cpu_frequency",
2025-04-15T08:07:18.2906608Z     ]);
2025-04-15T08:07:18.2906778Z     createKeyValuePairs("ram", data.agents[0].application.hw, ["ram"]);
2025-04-15T08:07:18.2906950Z     createKeyValuePairs("disk", data.agents[0].application.hw, ["disk"]);
2025-04-15T08:07:18.2907140Z     createKeyValuePairs("cpuArchitecture", data.agents[0].application.hw, [
2025-04-15T08:07:18.2907215Z       "cpu_architecture",
2025-04-15T08:07:18.2907277Z     ]);
2025-04-15T08:07:18.2907457Z     createKeyValuePairs("virtualization", data.agents[0].application.hw, [
2025-04-15T08:07:18.2907528Z       "virtualization",
2025-04-15T08:07:18.2907595Z     ]);
2025-04-15T08:07:18.2907764Z     createKeyValuePairs("cloud_status", data.agents[0].cloud, ["status"]);
2025-04-15T08:07:18.2907920Z     createKeyValuePairs("nodes_streaming", data.agents[0].nodes);
2025-04-15T08:07:18.2908093Z     createKeyValuePairs("plugins", data.agents[0].application.plugins);
2025-04-15T08:07:18.2908247Z     createKeyValuePairs("libs", data.agents[0].application.libs);
2025-04-15T08:07:18.2908428Z     createKeyValuePairs("exporters", data.agents[0].application.exporters);
2025-04-15T08:07:18.2908514Z     setupCollectedMetrics(data);
2025-04-15T08:07:18.2908518Z 
2025-04-15T08:07:18.2908622Z     buildTiers().then(() => setupProgressBars())
2025-04-15T08:07:18.2908627Z 
2025-04-15T08:07:18.2908707Z     return Promise.resolve();
2025-04-15T08:07:18.2908773Z   }
2025-04-15T08:07:18.2908776Z 
2025-04-15T08:07:18.2908854Z   const initTooltips = () => {
2025-04-15T08:07:18.2908981Z     const tooltip = document.getElementById("tooltip");
2025-04-15T08:07:18.2909057Z     if (!tooltip) return;
2025-04-15T08:07:18.2909061Z 
2025-04-15T08:07:18.2909216Z     document.querySelectorAll("[data-tooltip]").forEach(elem => {
2025-04-15T08:07:18.2909429Z       elem.addEventListener("mouseenter", () => {
2025-04-15T08:07:18.2909529Z         const content = elem.dataset.tooltip;
2025-04-15T08:07:18.2909638Z         const rect = elem.getBoundingClientRect();
2025-04-15T08:07:18.2909720Z         const top = rect.bottom + 10;
2025-04-15T08:07:18.2909798Z         const left = rect.x;
2025-04-15T08:07:18.2909885Z         tooltip.textContent = content;
2025-04-15T08:07:18.2909972Z         tooltip.style.top = `${top}px`;
2025-04-15T08:07:18.2910065Z         tooltip.style.left = `${left}px`;
2025-04-15T08:07:18.2910153Z         tooltip.style.display = "block";
2025-04-15T08:07:18.2910220Z       });
2025-04-15T08:07:18.2910223Z 
2025-04-15T08:07:18.2910322Z       elem.addEventListener("mouseleave", () => {
2025-04-15T08:07:18.2910407Z         tooltip.textContent = "";
2025-04-15T08:07:18.2910496Z         tooltip.style.display = "none";
2025-04-15T08:07:18.2910558Z       })
2025-04-15T08:07:18.2910622Z     })
2025-04-15T08:07:18.2910681Z   }
2025-04-15T08:07:18.2910690Z 
2025-04-15T08:07:18.2910753Z   /**
2025-04-15T08:07:18.2910848Z    * Get agent info and initialize splash screen
2025-04-15T08:07:18.2910908Z    */
2025-04-15T08:07:18.2911000Z   const initSplashScreen = async () => {
2025-04-15T08:07:18.2911136Z     const msgSignIn = document.getElementById("msgSignIn");
2025-04-15T08:07:18.2911268Z     const btnSignIn = document.getElementById("btnSignIn");
2025-04-15T08:07:18.2911364Z     msgSignIn.textContent = "Please wait..."
2025-04-15T08:07:18.2911458Z     btnSignIn.style.display = "none"
2025-04-15T08:07:18.2911461Z 
2025-04-15T08:07:18.2911550Z     const agentInfo = await getAgentInfo()
2025-04-15T08:07:18.2911554Z 
2025-04-15T08:07:18.2911910Z     if (!agentInfo || !Array.isArray(agentInfo.agents) || !agentInfo.agents[0]) return Promise.reject({ message: "No agent data available." })
2025-04-15T08:07:18.2912030Z 
2025-04-15T08:07:18.2912145Z     const agent = (agentInfo?.agents || [])[0] || {}
2025-04-15T08:07:18.2912260Z     const status = agent.cloud && agent.cloud.status
2025-04-15T08:07:18.2912380Z     const claimId = agent.cloud && agent.cloud.claim_id
2025-04-15T08:07:18.2912484Z     const cloudUrl = agent.cloud && agent.cloud.url
2025-04-15T08:07:18.2912488Z 
2025-04-15T08:07:18.2912583Z     window.localNetdataRegistry = {
2025-04-15T08:07:18.2912657Z       hostname: agent.nm,
2025-04-15T08:07:18.2912723Z       mg: agent.mg,
2025-04-15T08:07:18.2912792Z       nd: agent.nd,
2025-04-15T08:07:18.2912862Z       claimId: claimId,
2025-04-15T08:07:18.2912945Z       xNetdataAuthHeader: true
2025-04-15T08:07:18.2913005Z     }
2025-04-15T08:07:18.2913008Z 
2025-04-15T08:07:18.2913198Z     window.envSettings.cloudUrl = cloudUrl || window.envSettings.cloudUrl
2025-04-15T08:07:18.2913368Z     window.envSettings.apiUrl = cloudUrl || window.envSettings.apiUrl
2025-04-15T08:07:18.2913376Z 
2025-04-15T08:07:18.2913532Z     const isCloudSignedIn = !!localStorage.getItem(CLOUD_TOKEN_KEY)
2025-04-15T08:07:18.2913540Z 
2025-04-15T08:07:18.2913617Z     if (!isCloudSignedIn) {
2025-04-15T08:07:18.2913712Z       msgSignIn.style.display = "inline"
2025-04-15T08:07:18.2913841Z       msgSignIn.textContent = "Please sign-in to continue"
2025-04-15T08:07:18.2913929Z       btnSignIn.style.display = "block"
2025-04-15T08:07:18.2913993Z     }
2025-04-15T08:07:18.2913997Z 
2025-04-15T08:07:18.2914071Z     initMetrics(agentInfo)
2025-04-15T08:07:18.2914074Z 
2025-04-15T08:07:18.2914233Z     if (!claimId && isCloudSignedIn && !window.envSettings.isLocal) {
2025-04-15T08:07:18.2914318Z       setShouldClaimStatus(true);
2025-04-15T08:07:18.2914399Z       prepareClaiming(agent)
2025-04-15T08:07:18.2914506Z       return Promise.resolve({ stopLoading: true })
2025-04-15T08:07:18.2914570Z     }
2025-04-15T08:07:18.2914573Z 
2025-04-15T08:07:18.2914657Z     let me = await checkMe(agent.mg)
2025-04-15T08:07:18.2914666Z 
2025-04-15T08:07:18.2914843Z     if (isCloudSignedIn && agent.nd && (me.auth === "none" || me.auth === "god")) {
2025-04-15T08:07:18.2915144Z       await getAgentToken({ mg: agent.mg, nd: agent.nd, claimId: agent.cloud.claim_id }, agent)
2025-04-15T08:07:18.2915229Z       me = await checkMe(agent.mg)
2025-04-15T08:07:18.2915291Z     }
2025-04-15T08:07:18.2915294Z 
2025-04-15T08:07:18.2915460Z     const claimStatusesToProceed = ["online", "indirect", "offline"]
2025-04-15T08:07:18.2915464Z 
2025-04-15T08:07:18.2915653Z     if ((me.auth === "bearer" || me.auth === "god") && claimStatusesToProceed.includes(status)) {
2025-04-15T08:07:18.2915755Z       await fetchUserAccess(agent.mg, agent.nd)
2025-04-15T08:07:18.2915831Z       return loadDashboard()
2025-04-15T08:07:18.2915929Z     } else if (window.envSettings.isLocal) {
2025-04-15T08:07:18.2916006Z       return loadDashboard()
2025-04-15T08:07:18.2916163Z     } else {
2025-04-15T08:07:18.2916268Z       await fetchUserAccess(agent.mg, agent.nd)
2025-04-15T08:07:18.2916335Z     }
2025-04-15T08:07:18.2916338Z 
2025-04-15T08:07:18.2916418Z     if (!isCloudSignedIn) {
2025-04-15T08:07:18.2916504Z       setupOptOutMessage(agent)
2025-04-15T08:07:18.2916615Z       return Promise.resolve({ stopLoading: true })
2025-04-15T08:07:18.2916680Z     }
2025-04-15T08:07:18.2916683Z 
2025-04-15T08:07:18.2916764Z     return Promise.resolve()
2025-04-15T08:07:18.2916828Z   }
2025-04-15T08:07:18.2916832Z 
2025-04-15T08:07:18.2916912Z   // =============================================== //
2025-04-15T08:07:18.2916916Z 
2025-04-15T08:07:18.2917047Z   document.addEventListener("DOMContentLoaded", () => {
2025-04-15T08:07:18.2917114Z     initGrid();
2025-04-15T08:07:18.2917199Z     initPrimaryButtonHover();
2025-04-15T08:07:18.2917269Z     toggleTab(1);
2025-04-15T08:07:18.2917336Z     initTabs();
2025-04-15T08:07:18.2917340Z 
2025-04-15T08:07:18.2917490Z     fetchRegistryInfo().then(initSplashScreen).then(data => {
2025-04-15T08:07:18.2917568Z       if (data?.stopLoading) {
2025-04-15T08:07:18.2917762Z         stopLoading()
2025-04-15T08:07:18.2917826Z       }
2025-04-15T08:07:18.2917896Z       initTooltips()
2025-04-15T08:07:18.2917968Z     }).catch(err => {
2025-04-15T08:07:18.2918057Z       showErrorMessage(err?.message)
2025-04-15T08:07:18.2918122Z     })
2025-04-15T08:07:18.2918192Z   });</script></html>
2025-04-15T08:07:18.2988209Z Post job cleanup.
2025-04-15T08:07:18.5359160Z ##[group]Generating build summary
2025-04-15T08:07:18.6130594Z exporting build record to /home/runner/work/_temp/docker-actions-toolkit-gwxBwd/export
2025-04-15T08:07:21.6197226Z [command]/usr/bin/mkfifo /home/runner/work/_temp/docker-actions-toolkit-gwxBwd/buildx-in-vPvmFM.fifo
2025-04-15T08:07:21.6478639Z [command]/usr/bin/mkfifo /home/runner/work/_temp/docker-actions-toolkit-gwxBwd/buildx-out-iHQi4A.fifo
2025-04-15T08:07:21.6519736Z [command]docker buildx --builder builder-181a0a2c-6979-4ac2-af91-062ff9d1030d dial-stdio
2025-04-15T08:07:21.6549805Z [command]docker run --rm -i -v /home/runner/.docker/buildx/refs:/buildx-refs -v /home/runner/work/_temp/docker-actions-toolkit-gwxBwd/export:/out docker.io/dockereng/export-build:latest --ref-state-dir=/buildx-refs --node=builder-181a0a2c-6979-4ac2-af91-062ff9d1030d/builder-181a0a2c-6979-4ac2-af91-062ff9d1030d0 --ref=cf5d53plvdduhlm458naprdba --uid=1001 --gid=128
2025-04-15T08:07:21.6685894Z Unable to find image 'dockereng/export-build:latest' locally
2025-04-15T08:07:22.0419389Z latest: Pulling from dockereng/export-build
2025-04-15T08:07:22.1436898Z 5f398fcfd265: Pulling fs layer
2025-04-15T08:07:22.1437368Z 152e015ae384: Pulling fs layer
2025-04-15T08:07:22.2463881Z 152e015ae384: Download complete
2025-04-15T08:07:22.2875817Z 5f398fcfd265: Verifying Checksum
2025-04-15T08:07:22.2876424Z 5f398fcfd265: Download complete
2025-04-15T08:07:22.3837117Z 5f398fcfd265: Pull complete
2025-04-15T08:07:22.4202608Z 152e015ae384: Pull complete
2025-04-15T08:07:22.4268747Z Digest: sha256:8a8d92fc2d7cc8a8855400970bb971436fc117bd39366595f55f7e1283a1e961
2025-04-15T08:07:22.4286463Z Status: Downloaded newer image for dockereng/export-build:latest
2025-04-15T08:07:22.9136851Z Process "docker run" exited with code 0
2025-04-15T08:07:22.9142040Z Parsing /home/runner/work/_temp/docker-actions-toolkit-gwxBwd/export/summary.json
2025-04-15T08:07:22.9145779Z Build record written to /home/runner/work/_temp/docker-actions-toolkit-gwxBwd/export/netdata~netdata~CF5D53.dockerbuild (88.5 KB)
2025-04-15T08:07:22.9162426Z Uploading netdata~netdata~CF5D53.dockerbuild to blob storage
2025-04-15T08:07:22.9517327Z ERROR: read unix @->/run/docker.sock: use of closed network connection
2025-04-15T08:07:22.9518216Z Process "buildx dial-stdio" was killed with signal SIGKILL
2025-04-15T08:07:23.0588828Z Beginning upload of artifact content to blob storage
2025-04-15T08:07:23.0678450Z Uploaded bytes 65536
2025-04-15T08:07:23.0680256Z Uploaded bytes 90626
2025-04-15T08:07:23.2087382Z Finished uploading artifact content to blob storage!
2025-04-15T08:07:23.2092525Z SHA256 hash of uploaded artifact is c3a15f3b9bf225e3eccfa883a59fc801b5a6a69d789470c633b8a35cb2f76a20
2025-04-15T08:07:23.2094308Z Finalizing artifact upload
2025-04-15T08:07:23.3381567Z Artifact successfully finalized (2946035168)
2025-04-15T08:07:23.3382793Z Artifact download URL: https://github.com/netdata/netdata/actions/runs/14464279186/artifacts/2946035168
2025-04-15T08:07:23.3406938Z Writing summary
2025-04-15T08:07:23.3418069Z ##[endgroup]
2025-04-15T08:07:23.3418639Z ##[group]Removing temp folder /home/runner/work/_temp/docker-actions-toolkit-NmcbQY
2025-04-15T08:07:23.3429118Z ##[endgroup]
2025-04-15T08:07:23.3429702Z ##[group]Post cache
2025-04-15T08:07:23.3430995Z State not set
2025-04-15T08:07:23.3431726Z ##[endgroup]
2025-04-15T08:07:23.3563618Z Post job cleanup.
2025-04-15T08:07:23.5947222Z ##[group]Removing builder
2025-04-15T08:07:23.6792812Z [command]/usr/bin/docker buildx rm builder-181a0a2c-6979-4ac2-af91-062ff9d1030d
2025-04-15T08:07:28.1674464Z builder-181a0a2c-6979-4ac2-af91-062ff9d1030d removed
2025-04-15T08:07:28.1710653Z ##[endgroup]
2025-04-15T08:07:28.1712080Z ##[group]Cleaning up certificates
2025-04-15T08:07:28.1719032Z ##[endgroup]
2025-04-15T08:07:28.1719586Z ##[group]Post cache
2025-04-15T08:07:28.1721809Z State not set
2025-04-15T08:07:28.1722734Z ##[endgroup]
2025-04-15T08:07:28.1844070Z Post job cleanup.
2025-04-15T08:07:28.2771946Z [command]/usr/bin/git version
2025-04-15T08:07:28.2806659Z git version 2.49.0
2025-04-15T08:07:28.2859987Z Temporarily overriding HOME='/home/runner/work/_temp/443ff855-4b32-480c-bf57-eb1e78470edf' before making global git config changes
2025-04-15T08:07:28.2861221Z Adding repository directory to the temporary git global config as a safe directory
2025-04-15T08:07:28.2866535Z [command]/usr/bin/git config --global --add safe.directory /home/runner/work/netdata/netdata
2025-04-15T08:07:28.2902261Z [command]/usr/bin/git config --local --name-only --get-regexp core\.sshCommand
2025-04-15T08:07:28.2938377Z [command]/usr/bin/git submodule foreach --recursive sh -c "git config --local --name-only --get-regexp 'core\.sshCommand' && git config --local --unset-all 'core.sshCommand' || :"
2025-04-15T08:07:28.3173380Z Entering 'src/aclk/aclk-schemas'
2025-04-15T08:07:28.3216368Z Entering 'src/collectors/debugfs.plugin/libsensors/vendored'
2025-04-15T08:07:28.3259918Z Entering 'src/web/server/h2o/libh2o'
2025-04-15T08:07:28.3310773Z Entering 'src/web/server/h2o/libh2o/misc/cache-digest.js'
2025-04-15T08:07:28.3355360Z Entering 'src/web/server/h2o/libh2o/misc/oktavia'
2025-04-15T08:07:28.3399428Z Entering 'src/web/server/h2o/libh2o/misc/p5-Server-Starter'
2025-04-15T08:07:28.3442903Z Entering 'src/web/server/h2o/libh2o/misc/picotemplate'
2025-04-15T08:07:28.3504849Z [command]/usr/bin/git config --local --name-only --get-regexp http\.https\:\/\/github\.com\/\.extraheader
2025-04-15T08:07:28.3525882Z http.https://github.com/.extraheader
2025-04-15T08:07:28.3538168Z [command]/usr/bin/git config --local --unset-all http.https://github.com/.extraheader
2025-04-15T08:07:28.3573163Z [command]/usr/bin/git submodule foreach --recursive sh -c "git config --local --name-only --get-regexp 'http\.https\:\/\/github\.com\/\.extraheader' && git config --local --unset-all 'http.https://github.com/.extraheader' || :"
2025-04-15T08:07:28.3789546Z Entering 'src/aclk/aclk-schemas'
2025-04-15T08:07:28.3813131Z http.https://github.com/.extraheader
2025-04-15T08:07:28.3846718Z Entering 'src/collectors/debugfs.plugin/libsensors/vendored'
2025-04-15T08:07:28.3871965Z http.https://github.com/.extraheader
2025-04-15T08:07:28.3905687Z Entering 'src/web/server/h2o/libh2o'
2025-04-15T08:07:28.3930396Z http.https://github.com/.extraheader
2025-04-15T08:07:28.3969146Z Entering 'src/web/server/h2o/libh2o/misc/cache-digest.js'
2025-04-15T08:07:28.3993145Z http.https://github.com/.extraheader
2025-04-15T08:07:28.4027032Z Entering 'src/web/server/h2o/libh2o/misc/oktavia'
2025-04-15T08:07:28.4050906Z http.https://github.com/.extraheader
2025-04-15T08:07:28.4085240Z Entering 'src/web/server/h2o/libh2o/misc/p5-Server-Starter'
2025-04-15T08:07:28.4110346Z http.https://github.com/.extraheader
2025-04-15T08:07:28.4144075Z Entering 'src/web/server/h2o/libh2o/misc/picotemplate'
2025-04-15T08:07:28.4169187Z http.https://github.com/.extraheader
2025-04-15T08:07:28.4329475Z Cleaning up orphan processes
