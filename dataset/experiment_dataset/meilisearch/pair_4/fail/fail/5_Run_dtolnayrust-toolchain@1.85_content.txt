dtolnay/rust-toolchain@1.85


CARGO_TERM_COLOR: always
RUST_BACKTRACE: 1
RUSTFLAGS: -D warnings
##[endgroup]
##[group]Run : parse toolchain version
[36;1m: parse toolchain version[0m
[36;1mif [[ $toolchain =~ ^stable' '[0-9]+' '(year|month|week|day)s?' 'ago$ ]]; then[0m
[36;1m  if [[ Linux == macOS ]]; then[0m
[36;1m    echo "toolchain=1.$((($(date -v-$(sed 's/stable \([0-9]*\) \(.\).*/\1\2/' <<< $toolchain) +%s)/60/60/24-16569)/7/6))" >> $GITHUB_OUTPUT[0m
[36;1m  else[0m
[36;1m    echo "toolchain=1.$((($(date --date "${toolchain#stable }" +%s)/60/60/24-16569)/7/6))" >> $GITHUB_OUTPUT[0m
[36;1m  fi[0m
[36;1melif [[ $toolchain =~ ^stable' 'minus' '[0-9]+' 'releases?$ ]]; then[0m
[36;1m  echo "toolchain=1.$((($(date +%s)/60/60/24-16569)/7/6-${toolchain//[^0-9]/}))" >> $GITHUB_OUTPUT[0m
[36;1melif [[ $toolchain =~ ^1\.[0-9]+$ ]]; then[0m
[36;1m  echo "toolchain=1.$((i=${toolchain#1.}, c=($(date +%s)/60/60/24-16569)/7/6, i+9*i*(10*i<=c)+90*i*(100*i<=c)))" >> $GITHUB_OUTPUT[0m
36
[36;1m  echo "toolchain=$toolchain" >> $GITHUB_OUTPUT[0m
36
shell: bash --noprofile --norc -e -o pipefail {0}

CARGO_TERM_COLOR: always
RUST_BACKTRACE: 1
RUSTFLAGS: -D warnings
toolchain: 1.85.1
##[endgroup]
##[group]Run : construct rustup command line
[36;1m: construct rustup command line[0m
[36;1mecho "targets=$(for t in ${targets//,/ }; do echo -n ' --target' $t; done)" >> $GITHUB_OUTPUT[0m
[36;1mecho "components=$(for c in ${components//,/ }; do echo -n ' --component' $c; done)" >> $GITHUB_OUTPUT[0m
[36;1mecho "downgrade=" >> $GITHUB_OUTPUT[0m
shell: bash --noprofile --norc -e -o pipefail {0}

CARGO_TERM_COLOR: always
RUST_BACKTRACE: 1
RUSTFLAGS: -D warnings
targets:
components:
##[endgroup]
##[group]Run : set $CARGO_HOME
[36;1m: set $CARGO_HOME[0m
[36;1mecho CARGO_HOME=${CARGO_HOME:-$HOME/.cargo} >> $GITHUB_ENV[0m
shell: bash --noprofile --norc -e -o pipefail {0}

CARGO_TERM_COLOR: always
RUST_BACKTRACE: 1
RUSTFLAGS: -D warnings
##[endgroup]
##[group]Run : install rustup if needed
[36;1m: install rustup if needed[0m
[36;1mif ! command -v rustup &>/dev/null; then[0m
[36;1m  curl --proto '=https' --tlsv1.2 --retry 10 --retry-connrefused --location --silent --show-error --fail "https://sh.rustup.rs" | sh -s -- --default-toolchain none -y[0m
[36;1m  echo "$CARGO_HOME/bin" >> $GITHUB_PATH[0m
36
shell: bash --noprofile --norc -e -o pipefail {0}

CARGO_TERM_COLOR: always
RUST_BACKTRACE: 1
RUSTFLAGS: -D warnings
CARGO_HOME: /github/home/.cargo
##[endgroup]
info: downloading installer
error: $HOME differs from euid-obtained home directory: you may be using sudo
error: $HOME directory: /github/home
error: euid-obtained home directory: /root
info: profile set to 'default'
info: default host triple is x86_64-unknown-linux-gnu
info: skipping toolchain installation
2025-04-14T23:18:40.8235596Z
2025-04-14T23:18:40.8235603Z
Rust is installed now. Great!
2025-04-14T23:18:40.8235852Z
To get started you may need to restart your current shell.
This would reload your PATH environment variable to include
Cargo's bin directory ($HOME/.cargo/bin).
2025-04-14T23:18:40.8236881Z
To configure your current shell, you need to source
the corresponding env file under $HOME/.cargo.
2025-04-14T23:18:40.8237489Z
This is usually done by running one of the following (note the leading DOT):
. "$HOME/.cargo/env"            # For sh/bash/zsh/ash/dash/pdksh
source "$HOME/.cargo/env.fish"  # For fish
source "$HOME/.cargo/env.nu"    # For nushell
##[group]Run rustup toolchain install 1.85.1 --profile minimal --no-self-update
[36;1mrustup toolchain install 1.85.1 --profile minimal --no-self-update[0m
shell: bash --noprofile --norc -e -o pipefail {0}

CARGO_TERM_COLOR: always
RUST_BACKTRACE: 1
RUSTFLAGS: -D warnings
CARGO_HOME: /github/home/.cargo
##[endgroup]
info: syncing channel updates for '1.85.1-x86_64-unknown-linux-gnu'
info: latest update on 2025-03-18, rust version 1.85.1 (4eb161250 2025-03-15)
info: downloading component 'cargo'
info: downloading component 'rust-std'
info: downloading component 'rustc'
info: installing component 'cargo'
info: installing component 'rust-std'
info: installing component 'rustc'
2025-04-14T23:18:48.3844191Z
1.85.1-x86_64-unknown-linux-gnu installed - rustc 1.85.1 (4eb161250 2025-03-15)
2025-04-14T23:18:48.3946408Z
info: default toolchain set to '1.85.1-x86_64-unknown-linux-gnu'
##[group]Run rustup default 1.85.1
[36;1mrustup default 1.85.1[0m
shell: bash --noprofile --norc -e -o pipefail {0}

CARGO_TERM_COLOR: always
RUST_BACKTRACE: 1
RUSTFLAGS: -D warnings
CARGO_HOME: /github/home/.cargo
##[endgroup]
info: using existing install for '1.85.1-x86_64-unknown-linux-gnu'
info: default toolchain set to '1.85.1-x86_64-unknown-linux-gnu'
2025-04-14T23:18:48.4997011Z
1.85.1-x86_64-unknown-linux-gnu unchanged - rustc 1.85.1 (4eb161250 2025-03-15)
2025-04-14T23:18:48.5089934Z
info: syncing channel updates for '1.85.1-x86_64-unknown-linux-gnu'
info: latest update on 2025-03-18, rust version 1.85.1 (4eb161250 2025-03-15)
info: downloading component 'clippy'
info: installing component 'clippy'
info: note that the toolchain '1.85.1-x86_64-unknown-linux-gnu' is currently in use (overridden by '/__w/meilisearch/meilisearch/rust-toolchain.toml')
##[group]Run : create cachekey
[36;1m: create cachekey[0m
[36;1mDATE=$(rustc +1.85.1 --version --verbose | sed -ne 's/^commit-date: \(20[0-9][0-9]\)-\([01][0-9]\)-\([0-3][0-9]\)$/\1\2\3/p')[0m
[36;1mHASH=$(rustc +1.85.1 --version --verbose | sed -ne 's/^commit-hash: //p')[0m
[36;1mecho "cachekey=$(echo $DATE$HASH | head -c12)" >> $GITHUB_OUTPUT[0m
shell: bash --noprofile --norc -e -o pipefail {0}

CARGO_TERM_COLOR: always
RUST_BACKTRACE: 1
RUSTFLAGS: -D warnings
CARGO_HOME: /github/home/.cargo
##[endgroup]
##[group]Run : disable incremental compilation
[36;1m: disable incremental compilation[0m
[36;1mif [ -z "${CARGO_INCREMENTAL+set}" ]; then[0m
[36;1m  echo CARGO_INCREMENTAL=0 >> $GITHUB_ENV[0m
36
shell: bash --noprofile --norc -e -o pipefail {0}

CARGO_TERM_COLOR: always
RUST_BACKTRACE: 1
RUSTFLAGS: -D warnings
CARGO_HOME: /github/home/.cargo
##[endgroup]
##[group]Run : enable colors in Cargo output
[36;1m: enable colors in Cargo output[0m
[36;1mif [ -z "${CARGO_TERM_COLOR+set}" ]; then[0m
[36;1m  echo CARGO_TERM_COLOR=always >> $GITHUB_ENV[0m
36
shell: bash --noprofile --norc -e -o pipefail {0}

CARGO_TERM_COLOR: always
RUST_BACKTRACE: 1
RUSTFLAGS: -D warnings
CARGO_HOME: /github/home/.cargo
CARGO_INCREMENTAL: 0
##[endgroup]
##[group]Run : enable Cargo sparse registry
[36;1m: enable Cargo sparse registry[0m
[36;1m# implemented in 1.66, stabilized in 1.68, made default in 1.70[0m
[36;1mif [ -z "${CARGO_REGISTRIES_CRATES_IO_PROTOCOL+set}" -o -f "/home/runner/work/_temp"/.implicit_cargo_registries_crates_io_protocol ]; then[0m
[36;1m  if rustc +1.85.1 --version --verbose | grep -q '^release: 1\.6[89]\.'; then[0m
[36;1m    touch "/home/runner/work/_temp"/.implicit_cargo_registries_crates_io_protocol || true[0m
[36;1m    echo CARGO_REGISTRIES_CRATES_IO_PROTOCOL=sparse >> $GITHUB_ENV[0m
[36;1m  elif rustc +1.85.1 --version --verbose | grep -q '^release: 1\.6[67]\.'; then[0m
[36;1m    touch "/home/runner/work/_temp"/.implicit_cargo_registries_crates_io_protocol || true[0m
[36;1m    echo CARGO_REGISTRIES_CRATES_IO_PROTOCOL=git >> $GITHUB_ENV[0m
[36;1m  fi[0m
36
shell: bash --noprofile --norc -e -o pipefail {0}

CARGO_TERM_COLOR: always
RUST_BACKTRACE: 1
RUSTFLAGS: -D warnings
CARGO_HOME: /github/home/.cargo
CARGO_INCREMENTAL: 0
##[endgroup]
##[group]Run : work around spurious network errors in curl 8.0
[36;1m: work around spurious network errors in curl 8.0[0m
[36;1m# https://rust-lang.zulipchat.com/#narrow/stream/246057-t-cargo/topic/timeout.20investigation[0m
[36;1mif rustc +1.85.1 --version --verbose | grep -q '^release: 1\.7[01]\.'; then[0m
[36;1m  echo CARGO_HTTP_MULTIPLEXING=false >> $GITHUB_ENV[0m
36
shell: bash --noprofile --norc -e -o pipefail {0}

CARGO_TERM_COLOR: always
RUST_BACKTRACE: 1
RUSTFLAGS: -D warnings
CARGO_HOME: /github/home/.cargo
CARGO_INCREMENTAL: 0
##[endgroup]
##[group]Run rustc +1.85.1 --version --verbose
[36;1mrustc +1.85.1 --version --verbose[0m
shell: bash --noprofile --norc -e -o pipefail {0}

CARGO_TERM_COLOR: always
RUST_BACKTRACE: 1
RUSTFLAGS: -D warnings
CARGO_HOME: /github/home/.cargo
CARGO_INCREMENTAL: 0
##[endgroup]
rustc 1.85.1 (4eb161250 2025-03-15)
binary: rustc
commit-hash: 4eb161250e340c8f48f66e2b929ef4a5bed7c181
commit-date: 2025-03-15
host: x86_64-unknown-linux-gnu
release: 1.85.1
LLVM version: 19.1.7
