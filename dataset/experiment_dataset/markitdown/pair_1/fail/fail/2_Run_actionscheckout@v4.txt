2025-04-13T16:12:13.5260973Z ##[group]Run actions/checkout@v4
2025-04-13T16:12:13.5261942Z with:
2025-04-13T16:12:13.5262453Z   repository: microsoft/markitdown
2025-04-13T16:12:13.5263213Z   token: ***
2025-04-13T16:12:13.5263646Z   ssh-strict: true
2025-04-13T16:12:13.5264089Z   ssh-user: git
2025-04-13T16:12:13.5264545Z   persist-credentials: true
2025-04-13T16:12:13.5265052Z   clean: true
2025-04-13T16:12:13.5265530Z   sparse-checkout-cone-mode: true
2025-04-13T16:12:13.5266071Z   fetch-depth: 1
2025-04-13T16:12:13.5266505Z   fetch-tags: false
2025-04-13T16:12:13.5266964Z   show-progress: true
2025-04-13T16:12:13.5267426Z   lfs: false
2025-04-13T16:12:13.5267852Z   submodules: false
2025-04-13T16:12:13.5268308Z   set-safe-directory: true
2025-04-13T16:12:13.5269031Z ##[endgroup]
2025-04-13T16:12:13.7039362Z Syncing repository: microsoft/markitdown
2025-04-13T16:12:13.7041532Z ##[group]Getting Git version info
2025-04-13T16:12:13.7042333Z Working directory is '/home/runner/work/markitdown/markitdown'
2025-04-13T16:12:13.7043654Z [command]/usr/bin/git version
2025-04-13T16:12:13.7091806Z git version 2.49.0
2025-04-13T16:12:13.7118645Z ##[endgroup]
2025-04-13T16:12:13.7132702Z Temporarily overriding HOME='/home/runner/work/_temp/2f4019c8-cebf-4cc2-8026-e42d9225f8ab' before making global git config changes
2025-04-13T16:12:13.7134185Z Adding repository directory to the temporary git global config as a safe directory
2025-04-13T16:12:13.7138331Z [command]/usr/bin/git config --global --add safe.directory /home/runner/work/markitdown/markitdown
2025-04-13T16:12:13.7179061Z Deleting the contents of '/home/runner/work/markitdown/markitdown'
2025-04-13T16:12:13.7183773Z ##[group]Initializing the repository
2025-04-13T16:12:13.7189290Z [command]/usr/bin/git init /home/runner/work/markitdown/markitdown
2025-04-13T16:12:13.7275090Z hint: Using 'master' as the name for the initial branch. This default branch name
2025-04-13T16:12:13.7276613Z hint: is subject to change. To configure the initial branch name to use in all
2025-04-13T16:12:13.7277945Z hint: of your new repositories, which will suppress this warning, call:
2025-04-13T16:12:13.7278703Z hint:
2025-04-13T16:12:13.7279249Z hint: 	git config --global init.defaultBranch <name>
2025-04-13T16:12:13.7280116Z hint:
2025-04-13T16:12:13.7281522Z hint: Names commonly chosen instead of 'master' are 'main', 'trunk' and
2025-04-13T16:12:13.7283336Z hint: 'development'. The just-created branch can be renamed via this command:
2025-04-13T16:12:13.7284929Z hint:
2025-04-13T16:12:13.7285786Z hint: 	git branch -m <name>
2025-04-13T16:12:13.7287365Z Initialized empty Git repository in /home/runner/work/markitdown/markitdown/.git/
2025-04-13T16:12:13.7296034Z [command]/usr/bin/git remote add origin https://github.com/microsoft/markitdown
2025-04-13T16:12:13.7347931Z ##[endgroup]
2025-04-13T16:12:13.7348763Z ##[group]Disabling automatic garbage collection
2025-04-13T16:12:13.7354196Z [command]/usr/bin/git config --local gc.auto 0
2025-04-13T16:12:13.7388223Z ##[endgroup]
2025-04-13T16:12:13.7389012Z ##[group]Setting up auth
2025-04-13T16:12:13.7398358Z [command]/usr/bin/git config --local --name-only --get-regexp core\.sshCommand
2025-04-13T16:12:13.7433400Z [command]/usr/bin/git submodule foreach --recursive sh -c "git config --local --name-only --get-regexp 'core\.sshCommand' && git config --local --unset-all 'core.sshCommand' || :"
2025-04-13T16:12:13.7743240Z [command]/usr/bin/git config --local --name-only --get-regexp http\.https\:\/\/github\.com\/\.extraheader
2025-04-13T16:12:13.7776995Z [command]/usr/bin/git submodule foreach --recursive sh -c "git config --local --name-only --get-regexp 'http\.https\:\/\/github\.com\/\.extraheader' && git config --local --unset-all 'http.https://github.com/.extraheader' || :"
2025-04-13T16:12:13.8009266Z [command]/usr/bin/git config --local http.https://github.com/.extraheader AUTHORIZATION: basic ***
2025-04-13T16:12:13.8055452Z ##[endgroup]
2025-04-13T16:12:13.8056841Z ##[group]Fetching the repository
2025-04-13T16:12:13.8064409Z [command]/usr/bin/git -c protocol.version=2 fetch --no-tags --prune --no-recurse-submodules --depth=1 origin +521d33b41a2163b2857085a9cd21f84edbd5eb4b:refs/remotes/pull/1176/merge
2025-04-13T16:12:14.4531500Z From https://github.com/microsoft/markitdown
2025-04-13T16:12:14.4534755Z  * [new ref]         521d33b41a2163b2857085a9cd21f84edbd5eb4b -> pull/1176/merge
2025-04-13T16:12:14.4556514Z ##[endgroup]
2025-04-13T16:12:14.4558467Z ##[group]Determining the checkout info
2025-04-13T16:12:14.4560578Z ##[endgroup]
2025-04-13T16:12:14.4564835Z [command]/usr/bin/git sparse-checkout disable
2025-04-13T16:12:14.4608067Z [command]/usr/bin/git config --local --unset-all extensions.worktreeConfig
2025-04-13T16:12:14.4637247Z ##[group]Checking out the ref
2025-04-13T16:12:14.4640784Z [command]/usr/bin/git checkout --progress --force refs/remotes/pull/1176/merge
2025-04-13T16:12:14.4884678Z Note: switching to 'refs/remotes/pull/1176/merge'.
2025-04-13T16:12:14.4885998Z 
2025-04-13T16:12:14.4887038Z You are in 'detached HEAD' state. You can look around, make experimental
2025-04-13T16:12:14.4889470Z changes and commit them, and you can discard any commits you make in this
2025-04-13T16:12:14.4891683Z state without impacting any branches by switching back to a branch.
2025-04-13T16:12:14.4892674Z 
2025-04-13T16:12:14.4893656Z If you want to create a new branch to retain commits you create, you may
2025-04-13T16:12:14.4895236Z do so (now or later) by using -c with the switch command. Example:
2025-04-13T16:12:14.4896083Z 
2025-04-13T16:12:14.4896458Z   git switch -c <new-branch-name>
2025-04-13T16:12:14.4897060Z 
2025-04-13T16:12:14.4897404Z Or undo this operation with:
2025-04-13T16:12:14.4897952Z 
2025-04-13T16:12:14.4898258Z   git switch -
2025-04-13T16:12:14.4898693Z 
2025-04-13T16:12:14.4899420Z Turn off this advice by setting config variable advice.detachedHead to false
2025-04-13T16:12:14.4900635Z 
2025-04-13T16:12:14.4902258Z HEAD is now at 521d33b Merge 81f8a69a753568b71eab022731c9658e54775ffe into 3fcd48cdfc651cbf508071c8d2fb7d82aeb075de
2025-04-13T16:12:14.4907061Z ##[endgroup]
2025-04-13T16:12:14.4932318Z [command]/usr/bin/git log -1 --format=%H
2025-04-13T16:12:14.4955103Z 521d33b41a2163b2857085a9cd21f84edbd5eb4b
