##[group]Run <:*:>
with:
ref: eeebfd82f2900b309c7e5a5a317b35edfcaacfb9
persist-credentials: <:*:>
repository: <:*:>
token: ***
ssh-strict: true
ssh-user: git
clean: true
sparse-checkout-cone-mode: true
fetch-depth: <:NUM:>
fetch-tags: false
show-progress: true
lfs: false
submodules: <:*:>
set-safe-directory: true
env:
GITHUB_PR_REF_NAME: markjhoy/default_token_pruning_sparse_vector
##[endgroup]
Syncing repository: <:*:>
##[group]Getting Git version info
Working directory is <:*:>
[command]/usr/bin/git version
git version <:NUM:>.<:NUM:>.<:NUM:>
##[endgroup]
Temporarily overriding HOME='/home/runner/work/_temp/84068ea2-1687-4d77-bbb9-3cdb03cf3cb4' before making global git config changes
Adding repository directory to the temporary git global config as a safe directory
[command]/usr/bin/git config --global --add safe.directory /home/runner/work/elasticsearch/elasticsearch
Deleting the contents of <:*:>
##[group]Initializing the repository
[command]/usr/bin/git init <:*:>
hint: Using 'master' as the name for the initial branch. This default branch name
hint: is subject to change. To configure the initial branch name to use in all
hint: of your new repositories, which will suppress this warning, call:
hint:
hint: git config --global init.defaultBranch <name>
hint:
hint: Names commonly chosen instead of 'master' are 'main', 'trunk' and
hint: 'development'. The just-created branch can be renamed via this command:
hint:
hint: git branch -m <name>
Initialized empty Git repository in <:*:>
[command]/usr/bin/git remote add origin <:*:>
##[endgroup]
##[group]Disabling automatic garbage collection
[command]/usr/bin/git config --local gc.auto 0
##[endgroup]
##[group]Setting up auth
[command]/usr/bin/git config --local --name-only --get-regexp <:*:>
[command]/usr/bin/git submodule foreach --recursive sh -c "git config --local --name-only --get-regexp <:*:> && git config --local --unset-all <:*:> || :"
[command]/usr/bin/git config --local --name-only --get-regexp <:*:>
[command]/usr/bin/git submodule foreach --recursive sh -c "git config --local --name-only --get-regexp <:*:> && git config --local --unset-all <:*:> || :"
[command]/usr/bin/git config <:*:> http.https://github.com/.extraheader AUTHORIZATION: basic ***
##[endgroup]
##[group]Fetching the repository
[command]/usr/bin/git -c protocol.version=<:NUM:> fetch <:*:> <:*:> <:*:> <:*:> <:*:> <:*:>
From <:*:>
* branch <:SEQ:>-> FETCH HEAD
##[endgroup]
##[group]Determining the checkout info
##[endgroup]
[command]/usr/bin/git sparse-checkout disable
[command]/usr/bin/git config --local --unset-all extensions.worktreeConfig
##[group]Checking out the ref
[command]/usr/bin/git checkout --progress --force eeebfd82f2900b309c7e5a5a317b35edfcaacfb9
Updating files:  44% (14165/31932)
Updating files:  45% (14370/31932)
Updating files:  46% (14689/31932)
Updating files:  47% (15009/31932)
Updating files:  48% (15328/31932)
Updating files:  49% (15647/31932)
Updating files:  50% (15966/31932)
Updating files:  51% (16286/31932)
Updating files:  52% (16605/31932)
Updating files:  53% (16924/31932)
Updating files:  54% (17244/31932)
Updating files:  55% (17563/31932)
Updating files:  56% (17882/31932)
Updating files:  57% (18202/31932)
Updating files:  58% (18521/31932)
Updating files:  59% (18840/31932)
Updating files:  60% (19160/31932)
Updating files:  61% (19479/31932)
Updating files:  62% (19798/31932)
Updating files:  63% (20118/31932)
Updating files:  64% (20437/31932)
Updating files:  65% (20756/31932)
Updating files:  66% (21076/31932)
Updating files:  67% (21395/31932)
Updating files:  68% (21714/31932)
Updating files:  69% (22034/31932)
Updating files:  70% (22353/31932)
Updating files:  71% (22672/31932)
Updating files:  72% (22992/31932)
Updating files:  73% (23311/31932)
Updating files:  74% (23630/31932)
Updating files:  75% (23949/31932)
Updating files:  76% (24269/31932)
Updating files:  77% (24588/31932)
Updating files:  78% (24907/31932)
Updating files:  79% (25227/31932)
Updating files:  80% (25546/31932)
Updating files:  81% (25865/31932)
Updating files:  82% (26185/31932)
Updating files:  83% (26504/31932)
Updating files:  84% (26823/31932)
Updating files:  85% (27143/31932)
Updating files:  86% (27462/31932)
Updating files:  87% (27781/31932)
Updating files:  87% (27825/31932)
Updating files:  88% (28101/31932)
Updating files:  89% (28420/31932)
Updating files:  90% (28739/31932)
Updating files:  91% (29059/31932)
Updating files:  92% (29378/31932)
Updating files:  93% (29697/31932)
Updating files:  94% (30017/31932)
Updating files:  95% (30336/31932)
Updating files:  96% (30655/31932)
Updating files:  97% (30975/31932)
Updating files:  98% (31294/31932)
Updating files:  99% (31613/31932)
Updating files: 100% (31932/31932)
Updating files: 100% (31932/31932), done.
Note: switching to 'eeebfd82f2900b309c7e5a5a317b35edfcaacfb9'.
2025-04-15T00:56:31.2954907Z
You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by switching back to a branch.
2025-04-15T00:56:31.2956778Z
If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -c with the switch command. Example:
2025-04-15T00:56:31.2957758Z
git switch -c <new-branch-name>
2025-04-15T00:56:31.2958083Z
Or undo this operation with:
2025-04-15T00:56:31.2958382Z
git switch -
2025-04-15T00:56:31.2958633Z
Turn off this advice by setting config variable advice.detachedHead to false
2025-04-15T00:56:31.2959210Z
HEAD is now at eeebfd82 Merge branch 'main' into markjhoy/default_token_pruning_sparse_vector
##[endgroup]
[command]/usr/bin/git log <:NUM:> <:*:>
<:SEQ:>
##[group]Removing auth
[command]/usr/bin/git config --local --name-only --get-regexp <:*:>
[command]/usr/bin/git submodule foreach --recursive sh -c "git config --local --name-only --get-regexp <:*:> && git config --local --unset-all <:*:> || :"
[command]/usr/bin/git config --local --name-only --get-regexp <:*:>
http.https://github.com/.extraheader
[command]/usr/bin/git config --local --unset-all http.https://github.com/.extraheader
[command]/usr/bin/git submodule foreach --recursive sh -c "git config --local --name-only --get-regexp <:*:> && git config --local --unset-all <:*:> || :"
##[endgroup]
