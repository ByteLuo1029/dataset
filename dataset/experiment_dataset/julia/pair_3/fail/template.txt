Requested labels: ubuntu-latest
Job defined at: JuliaLang/julia/.github/workflows/Typos.yml@refs/pull/49675/merge
Waiting for a runner to pick up this job...
Job is waiting for a hosted runner to come online.
Job is about to start running on the hosted runner: GitHub Actions 23 (hosted)
Current runner version: '2.323.0'
##[group]Operating System
Ubuntu
24.04.2
LTS
##[endgroup]
##[group]Runner Image
Image: ubuntu-24.04
Version: 20250406.1.0
Included Software: https://github.com/actions/runner-images/blob/ubuntu24/20250406.1/images/ubuntu/Ubuntu2404-Readme.md
Image Release: https://github.com/actions/runner-images/releases/tag/ubuntu24%2F20250406.1
##[endgroup]
##[group]Runner Image Provisioner
2.0.422.1
##[endgroup]
##[group]GITHUB_TOKEN Permissions
Metadata: read
##[endgroup]
Secret source: <:*:>
Prepare workflow directory
Prepare all required actions
Getting action download info
Download action repository <:*:> (SHA:<:SEQ:>)
Complete job name: Check for new typos
##[group]Run <:*:>
with:
persist-credentials: <:*:>
repository: <:*:>
token: ***
ssh-strict: true
ssh-user: git
clean: true
sparse-checkout-cone-mode: true
fetch-depth: <:NUM:>
fetch-tags: false
show-progress: true
lfs: false
submodules: <:*:>
set-safe-directory: true
##[endgroup]
Syncing repository: <:*:>
##[group]Getting Git version info
Working directory is <:*:>
[command]/usr/bin/git version
git version <:NUM:>.<:NUM:>.<:NUM:>
##[endgroup]
Temporarily overriding HOME='/home/runner/work/_temp/cf479f71-dfc5-41be-8645-3628b7ca3749' before making global git config changes
Adding repository directory to the temporary git global config as a safe directory
[command]/usr/bin/git config --global --add safe.directory /home/runner/work/julia/julia
Deleting the contents of <:*:>
##[group]Initializing the repository
[command]/usr/bin/git init <:*:>
hint: Using 'master' as the name for the initial branch. This default branch name
hint: is subject to change. To configure the initial branch name to use in all
hint: of your new repositories, which will suppress this warning, call:
hint:
hint: git config --global init.defaultBranch <name>
hint:
hint: Names commonly chosen instead of 'master' are 'main', 'trunk' and
hint: 'development'. The just-created branch can be renamed via this command:
hint:
hint: git branch -m <name>
Initialized empty Git repository in <:*:>
[command]/usr/bin/git remote add origin <:*:>
##[endgroup]
##[group]Disabling automatic garbage collection
[command]/usr/bin/git config --local gc.auto 0
##[endgroup]
##[group]Setting up auth
[command]/usr/bin/git config --local --name-only --get-regexp <:*:>
[command]/usr/bin/git submodule foreach --recursive sh -c "git config --local --name-only --get-regexp <:*:> && git config --local --unset-all <:*:> || :"
[command]/usr/bin/git config --local --name-only --get-regexp <:*:>
[command]/usr/bin/git submodule foreach --recursive sh -c "git config --local --name-only --get-regexp <:*:> && git config --local --unset-all <:*:> || :"
[command]/usr/bin/git config <:*:> http.https://github.com/.extraheader AUTHORIZATION: basic ***
##[endgroup]
##[group]Fetching the repository
[command]/usr/bin/git -c protocol.version=<:NUM:> fetch <:*:> <:*:> <:*:> <:*:> <:*:> <:*:>
From <:*:>
* [new ref] <:SEQ:>-> <:*:>
##[endgroup]
##[group]Determining the checkout info
##[endgroup]
[command]/usr/bin/git sparse-checkout disable
[command]/usr/bin/git config --local --unset-all extensions.worktreeConfig
##[group]Checking out the ref
[command]/usr/bin/git checkout --progress --force refs/remotes/pull/<:NUM:>/merge
Note: switching to 'refs/remotes/pull/<:NUM:>/merge'.
2025-04-14T13:17:52.1911123Z
You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by switching back to a branch.
2025-04-14T13:17:52.1914296Z
If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -c with the switch command. Example:
2025-04-14T13:17:52.1916031Z
git switch -c <new-branch-name>
2025-04-14T13:17:52.1916594Z
Or undo this operation with:
2025-04-14T13:17:52.1917191Z
git switch -
2025-04-14T13:17:52.1917676Z
Turn off this advice by setting config variable advice.detachedHead to false
2025-04-14T13:17:52.1918682Z
HEAD is now at <:*:> Merge <:SEQ:> into <:SEQ:>
##[endgroup]
[command]/usr/bin/git log <:NUM:> <:*:>
'<:SEQ:>'
##[group]Removing auth
[command]/usr/bin/git config --local --name-only --get-regexp <:*:>
[command]/usr/bin/git submodule foreach --recursive sh -c "git config --local --name-only --get-regexp <:*:> && git config --local --unset-all <:*:> || :"
[command]/usr/bin/git config --local --name-only --get-regexp <:*:>
http.https://github.com/.extraheader
[command]/usr/bin/git config --local --unset-all http.https://github.com/.extraheader
[command]/usr/bin/git submodule foreach --recursive sh -c "git config --local --name-only --get-regexp <:*:> && git config --local --unset-all <:*:> || :"
##[endgroup]
##[group]Run git fetch --depth=1 origin master
[36;1mgit fetch --depth=1 origin master[0m
[36;1mOLD_FILES=$(git diff-index --name-only --diff-filter=ad FETCH_HEAD)[0m
[36;1mNEW_FILES=$(git diff-index --name-only --diff-filter=d FETCH_HEAD)[0m
[36;1m[0m
[36;1m# This is necessary because the typos command interprets the[0m
[36;1m# empty string as "check all files" rather than "check no files".[0m
[36;1mif [ -z "$NEW_FILES" ]; then[0m
[36;1m  echo "All edited files were deleted. Skipping typos check."[0m
[<:NUM:>;1m exit <:NUM:>[0m
[<:NUM:>;1mfi[0m
[36;1m[0m
[36;1mmkdir -p "/home/runner/work/_temp/typos"[0m
[36;1mRELEASE_ASSET_URL="$([0m
[36;1m  gh api /repos/crate-ci/typos/releases/latest \[0m
[36;1m  --jq '."assets"[] | select(."name" | test("^typos-.+-x86_64-unknown-linux-musl\\.tar\\.gz$")) | ."browser_download_url"'[0m
[36;1m)"[0m
[36;1mwget --secure-protocol=TLSv1_3 --max-redirect=1 --retry-on-host-error --retry-connrefused --tries=3 \[0m
[36;1m  --quiet --output-document=- "${RELEASE_ASSET_URL}" \[0m
[36;1m  | tar -xz -C "/home/runner/work/_temp/typos" ./typos[0m
[36;1m"/home/runner/work/_temp/typos/typos" --version[0m
[36;1m[0m
[36;1mecho -n $NEW_FILES | xargs "/home/runner/work/_temp/typos/typos" --format json >> /home/runner/work/_temp/new_typos.jsonl || true[0m
[36;1mgit checkout FETCH_HEAD -- $OLD_FILES[0m
[36;1mif [ -z "$OLD_FILES" ]; then[0m
[36;1m  touch "/home/runner/work/_temp/old_typos.jsonl" # No old files, so no old typos.[0m
[<:NUM:>;1melse[0m
[36;1m  echo -n $OLD_FILES | xargs "/home/runner/work/_temp/typos/typos" --format json >> /home/runner/work/_temp/old_typos.jsonl || true[0m
[<:NUM:>;1mfi[0m
[36;1m[0m
[36;1m[0m
[36;1mpython -c '[0m
[36;1mimport sys, json[0m
[36;1mold = set()[0m
[36;1mwith open(sys.argv[1]) as old_file:[0m
[36;1m  for line in old_file:[0m
[36;1m    j = json.loads(line)[0m
[36;1m    if j["type"] == "typo":[0m
[36;1m      old.add(j["typo"])[0m
[36;1mclean = True[0m
[36;1mwith open(sys.argv[2]) as new_file:[0m
[36;1m  for line in new_file:[0m
[36;1m    new = json.loads(line)[0m
[36;1m    if new["type"] == "typo" and new["typo"] not in old:[0m
[36;1m      if len(new["typo"]) > 6: # Short typos might be false positives. Long are probably real.[0m
[36;1m        clean = False[0m
[36;1m      print("::warning file={},line={},col={}::perhaps \"{}\" should be \"{}\".".format([0m
[36;1m        new["path"], new["line_num"], new["byte_offset"],[0m
[36;1m        new["typo"], " or ".join(new["corrections"])))[0m
[36;1msys.exit(1 if not clean else 0)' "/home/runner/work/_temp/old_typos.jsonl" "/home/runner/work/_temp/new_typos.jsonl"[0m
shell: /usr/bin/bash -e {<:NUM:>}
env:
GH TOKEN: ***
##[endgroup]
From <:*:>
* branch            master     -> FETCH_HEAD
* [new <:*:> <:*:> -> <:*:>
typos-cli 1.31.1
##[warning]perhaps "ERRONOUS" should be "ERRONEOUS".
##[warning]perhaps "ERRONOUS" should be "ERRONEOUS".
##[warning]perhaps "ERRONOUS" should be "ERRONEOUS".
##[warning]perhaps "ERRONOUS" should be "ERRONEOUS".
##[warning]perhaps "ERRONOUS" should be "ERRONEOUS".
##[warning]perhaps "ERRONOUS" should be "ERRONEOUS".
##[error]Process completed with exit code 1.
Post job cleanup.
[command]/usr/bin/git version
git version <:NUM:>.<:NUM:>.<:NUM:>
Temporarily overriding HOME='/home/runner/work/_temp/b5c364a1-e428-4cc7-b242-97382c9db702' before making global git config changes
Adding repository directory to the temporary git global config as a safe directory
[command]/usr/bin/git config --global --add safe.directory /home/runner/work/julia/julia
[command]/usr/bin/git config --local --name-only --get-regexp <:*:>
[command]/usr/bin/git submodule foreach --recursive sh -c "git config --local --name-only --get-regexp <:*:> && git config --local --unset-all <:*:> || :"
[command]/usr/bin/git config --local --name-only --get-regexp <:*:>
[command]/usr/bin/git submodule foreach --recursive sh -c "git config --local --name-only --get-regexp <:*:> && git config --local --unset-all <:*:> || :"
Cleaning up orphan processes
