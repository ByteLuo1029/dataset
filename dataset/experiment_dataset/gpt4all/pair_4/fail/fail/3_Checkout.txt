2025-01-15T19:47:45.0643618Z ##[group]Run actions/checkout@v4
2025-01-15T19:47:45.0644213Z with:
2025-01-15T19:47:45.0644435Z   repository: nomic-ai/gpt4all
2025-01-15T19:47:45.0644855Z   token: ***
2025-01-15T19:47:45.0645047Z   ssh-strict: true
2025-01-15T19:47:45.0645239Z   ssh-user: git
2025-01-15T19:47:45.0645470Z   persist-credentials: true
2025-01-15T19:47:45.0645695Z   clean: true
2025-01-15T19:47:45.0645890Z   sparse-checkout-cone-mode: true
2025-01-15T19:47:45.0646134Z   fetch-depth: 1
2025-01-15T19:47:45.0646543Z   fetch-tags: false
2025-01-15T19:47:45.0646737Z   show-progress: true
2025-01-15T19:47:45.0646934Z   lfs: false
2025-01-15T19:47:45.0647112Z   submodules: false
2025-01-15T19:47:45.0647305Z   set-safe-directory: true
2025-01-15T19:47:45.0647748Z ##[endgroup]
2025-01-15T19:47:45.3325289Z Syncing repository: nomic-ai/gpt4all
2025-01-15T19:47:45.3327397Z ##[group]Getting Git version info
2025-01-15T19:47:45.3327957Z Working directory is '/home/runner/work/gpt4all/gpt4all'
2025-01-15T19:47:45.3328672Z [command]/usr/bin/git version
2025-01-15T19:47:45.3351047Z git version 2.47.1
2025-01-15T19:47:45.3383773Z ##[endgroup]
2025-01-15T19:47:45.3398097Z Temporarily overriding HOME='/home/runner/work/_temp/31443583-f19f-41b9-ab1c-c28a6f1f1bcd' before making global git config changes
2025-01-15T19:47:45.3399336Z Adding repository directory to the temporary git global config as a safe directory
2025-01-15T19:47:45.3403847Z [command]/usr/bin/git config --global --add safe.directory /home/runner/work/gpt4all/gpt4all
2025-01-15T19:47:45.3442115Z Deleting the contents of '/home/runner/work/gpt4all/gpt4all'
2025-01-15T19:47:45.3446077Z ##[group]Initializing the repository
2025-01-15T19:47:45.3449855Z [command]/usr/bin/git init /home/runner/work/gpt4all/gpt4all
2025-01-15T19:47:45.3532128Z hint: Using 'master' as the name for the initial branch. This default branch name
2025-01-15T19:47:45.3532919Z hint: is subject to change. To configure the initial branch name to use in all
2025-01-15T19:47:45.3533439Z hint: of your new repositories, which will suppress this warning, call:
2025-01-15T19:47:45.3533826Z hint:
2025-01-15T19:47:45.3534085Z hint: 	git config --global init.defaultBranch <name>
2025-01-15T19:47:45.3534394Z hint:
2025-01-15T19:47:45.3534671Z hint: Names commonly chosen instead of 'master' are 'main', 'trunk' and
2025-01-15T19:47:45.3535153Z hint: 'development'. The just-created branch can be renamed via this command:
2025-01-15T19:47:45.3535533Z hint:
2025-01-15T19:47:45.3535718Z hint: 	git branch -m <name>
2025-01-15T19:47:45.3542577Z Initialized empty Git repository in /home/runner/work/gpt4all/gpt4all/.git/
2025-01-15T19:47:45.3553943Z [command]/usr/bin/git remote add origin https://github.com/nomic-ai/gpt4all
2025-01-15T19:47:45.3586366Z ##[endgroup]
2025-01-15T19:47:45.3586845Z ##[group]Disabling automatic garbage collection
2025-01-15T19:47:45.3590659Z [command]/usr/bin/git config --local gc.auto 0
2025-01-15T19:47:45.3618976Z ##[endgroup]
2025-01-15T19:47:45.3619497Z ##[group]Setting up auth
2025-01-15T19:47:45.3627036Z [command]/usr/bin/git config --local --name-only --get-regexp core\.sshCommand
2025-01-15T19:47:45.3655994Z [command]/usr/bin/git submodule foreach --recursive sh -c "git config --local --name-only --get-regexp 'core\.sshCommand' && git config --local --unset-all 'core.sshCommand' || :"
2025-01-15T19:47:45.3990841Z [command]/usr/bin/git config --local --name-only --get-regexp http\.https\:\/\/github\.com\/\.extraheader
2025-01-15T19:47:45.4022894Z [command]/usr/bin/git submodule foreach --recursive sh -c "git config --local --name-only --get-regexp 'http\.https\:\/\/github\.com\/\.extraheader' && git config --local --unset-all 'http.https://github.com/.extraheader' || :"
2025-01-15T19:47:45.4263251Z [command]/usr/bin/git config --local http.https://github.com/.extraheader AUTHORIZATION: basic ***
2025-01-15T19:47:45.4300671Z ##[endgroup]
2025-01-15T19:47:45.4301376Z ##[group]Fetching the repository
2025-01-15T19:47:45.4310779Z [command]/usr/bin/git -c protocol.version=2 fetch --no-tags --prune --no-recurse-submodules --depth=1 origin +a3af0ea71baa8439f33b46a3b278bbef1a14837c:refs/remotes/pull/3385/merge
2025-01-15T19:47:46.2356992Z From https://github.com/nomic-ai/gpt4all
2025-01-15T19:47:46.2357872Z  * [new ref]         a3af0ea71baa8439f33b46a3b278bbef1a14837c -> pull/3385/merge
2025-01-15T19:47:46.2384464Z ##[endgroup]
2025-01-15T19:47:46.2384849Z ##[group]Determining the checkout info
2025-01-15T19:47:46.2386755Z ##[endgroup]
2025-01-15T19:47:46.2391685Z [command]/usr/bin/git sparse-checkout disable
2025-01-15T19:47:46.2432909Z [command]/usr/bin/git config --local --unset-all extensions.worktreeConfig
2025-01-15T19:47:46.2462990Z ##[group]Checking out the ref
2025-01-15T19:47:46.2463647Z [command]/usr/bin/git checkout --progress --force refs/remotes/pull/3385/merge
2025-01-15T19:47:46.3868657Z Note: switching to 'refs/remotes/pull/3385/merge'.
2025-01-15T19:47:46.3869235Z 
2025-01-15T19:47:46.3869662Z You are in 'detached HEAD' state. You can look around, make experimental
2025-01-15T19:47:46.3870675Z changes and commit them, and you can discard any commits you make in this
2025-01-15T19:47:46.3871693Z state without impacting any branches by switching back to a branch.
2025-01-15T19:47:46.3872168Z 
2025-01-15T19:47:46.3872432Z If you want to create a new branch to retain commits you create, you may
2025-01-15T19:47:46.3873119Z do so (now or later) by using -c with the switch command. Example:
2025-01-15T19:47:46.3873400Z 
2025-01-15T19:47:46.3873512Z   git switch -c <new-branch-name>
2025-01-15T19:47:46.3873724Z 
2025-01-15T19:47:46.3873830Z Or undo this operation with:
2025-01-15T19:47:46.3874008Z 
2025-01-15T19:47:46.3874105Z   git switch -
2025-01-15T19:47:46.3874336Z 
2025-01-15T19:47:46.3874648Z Turn off this advice by setting config variable advice.detachedHead to false
2025-01-15T19:47:46.3875081Z 
2025-01-15T19:47:46.3875628Z HEAD is now at a3af0ea Merge 68693ea5a84a223fca848e6ef8074727352b85df into cc5ed4737fd7532a7d1b58b4e44aa7865ea775cb
2025-01-15T19:47:46.3890507Z ##[endgroup]
2025-01-15T19:47:46.3935976Z [command]/usr/bin/git log -1 --format=%H
2025-01-15T19:47:46.3959217Z a3af0ea71baa8439f33b46a3b278bbef1a14837c
