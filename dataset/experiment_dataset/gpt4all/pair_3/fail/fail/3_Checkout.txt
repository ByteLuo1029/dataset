2025-01-15T20:11:46.0589898Z ##[group]Run actions/checkout@v4
2025-01-15T20:11:46.0590442Z with:
2025-01-15T20:11:46.0590642Z   repository: nomic-ai/gpt4all
2025-01-15T20:11:46.0591000Z   token: ***
2025-01-15T20:11:46.0591411Z   ssh-strict: true
2025-01-15T20:11:46.0591596Z   ssh-user: git
2025-01-15T20:11:46.0591798Z   persist-credentials: true
2025-01-15T20:11:46.0592007Z   clean: true
2025-01-15T20:11:46.0592203Z   sparse-checkout-cone-mode: true
2025-01-15T20:11:46.0592442Z   fetch-depth: 1
2025-01-15T20:11:46.0592617Z   fetch-tags: false
2025-01-15T20:11:46.0592832Z   show-progress: true
2025-01-15T20:11:46.0593022Z   lfs: false
2025-01-15T20:11:46.0593186Z   submodules: false
2025-01-15T20:11:46.0593374Z   set-safe-directory: true
2025-01-15T20:11:46.0593810Z ##[endgroup]
2025-01-15T20:11:46.2215090Z Syncing repository: nomic-ai/gpt4all
2025-01-15T20:11:46.2216717Z ##[group]Getting Git version info
2025-01-15T20:11:46.2217096Z Working directory is '/home/runner/work/gpt4all/gpt4all'
2025-01-15T20:11:46.2217623Z [command]/usr/bin/git version
2025-01-15T20:11:46.2233350Z git version 2.47.1
2025-01-15T20:11:46.2260949Z ##[endgroup]
2025-01-15T20:11:46.2276843Z Temporarily overriding HOME='/home/runner/work/_temp/4b4daedb-19b4-41a3-83ca-f3962c6ef4c4' before making global git config changes
2025-01-15T20:11:46.2277791Z Adding repository directory to the temporary git global config as a safe directory
2025-01-15T20:11:46.2281835Z [command]/usr/bin/git config --global --add safe.directory /home/runner/work/gpt4all/gpt4all
2025-01-15T20:11:46.2315323Z Deleting the contents of '/home/runner/work/gpt4all/gpt4all'
2025-01-15T20:11:46.2319027Z ##[group]Initializing the repository
2025-01-15T20:11:46.2322815Z [command]/usr/bin/git init /home/runner/work/gpt4all/gpt4all
2025-01-15T20:11:46.2383167Z hint: Using 'master' as the name for the initial branch. This default branch name
2025-01-15T20:11:46.2384096Z hint: is subject to change. To configure the initial branch name to use in all
2025-01-15T20:11:46.2384933Z hint: of your new repositories, which will suppress this warning, call:
2025-01-15T20:11:46.2385669Z hint:
2025-01-15T20:11:46.2385993Z hint: 	git config --global init.defaultBranch <name>
2025-01-15T20:11:46.2386523Z hint:
2025-01-15T20:11:46.2387029Z hint: Names commonly chosen instead of 'master' are 'main', 'trunk' and
2025-01-15T20:11:46.2387852Z hint: 'development'. The just-created branch can be renamed via this command:
2025-01-15T20:11:46.2388508Z hint:
2025-01-15T20:11:46.2388808Z hint: 	git branch -m <name>
2025-01-15T20:11:46.2389640Z Initialized empty Git repository in /home/runner/work/gpt4all/gpt4all/.git/
2025-01-15T20:11:46.2401382Z [command]/usr/bin/git remote add origin https://github.com/nomic-ai/gpt4all
2025-01-15T20:11:46.2433360Z ##[endgroup]
2025-01-15T20:11:46.2434000Z ##[group]Disabling automatic garbage collection
2025-01-15T20:11:46.2438413Z [command]/usr/bin/git config --local gc.auto 0
2025-01-15T20:11:46.2466382Z ##[endgroup]
2025-01-15T20:11:46.2467019Z ##[group]Setting up auth
2025-01-15T20:11:46.2473695Z [command]/usr/bin/git config --local --name-only --get-regexp core\.sshCommand
2025-01-15T20:11:46.2503104Z [command]/usr/bin/git submodule foreach --recursive sh -c "git config --local --name-only --get-regexp 'core\.sshCommand' && git config --local --unset-all 'core.sshCommand' || :"
2025-01-15T20:11:46.2769305Z [command]/usr/bin/git config --local --name-only --get-regexp http\.https\:\/\/github\.com\/\.extraheader
2025-01-15T20:11:46.2796361Z [command]/usr/bin/git submodule foreach --recursive sh -c "git config --local --name-only --get-regexp 'http\.https\:\/\/github\.com\/\.extraheader' && git config --local --unset-all 'http.https://github.com/.extraheader' || :"
2025-01-15T20:11:46.3021864Z [command]/usr/bin/git config --local http.https://github.com/.extraheader AUTHORIZATION: basic ***
2025-01-15T20:11:46.3055282Z ##[endgroup]
2025-01-15T20:11:46.3055872Z ##[group]Fetching the repository
2025-01-15T20:11:46.3063363Z [command]/usr/bin/git -c protocol.version=2 fetch --no-tags --prune --no-recurse-submodules --depth=1 origin +60d51ac682a1c4e427f60f668d2a46d436a701e2:refs/remotes/pull/3385/merge
2025-01-15T20:11:47.6462896Z From https://github.com/nomic-ai/gpt4all
2025-01-15T20:11:47.6464070Z  * [new ref]         60d51ac682a1c4e427f60f668d2a46d436a701e2 -> pull/3385/merge
2025-01-15T20:11:47.6496238Z ##[endgroup]
2025-01-15T20:11:47.6496924Z ##[group]Determining the checkout info
2025-01-15T20:11:47.6497827Z ##[endgroup]
2025-01-15T20:11:47.6502849Z [command]/usr/bin/git sparse-checkout disable
2025-01-15T20:11:47.6542366Z [command]/usr/bin/git config --local --unset-all extensions.worktreeConfig
2025-01-15T20:11:47.6568436Z ##[group]Checking out the ref
2025-01-15T20:11:47.6572128Z [command]/usr/bin/git checkout --progress --force refs/remotes/pull/3385/merge
2025-01-15T20:11:47.7968298Z Note: switching to 'refs/remotes/pull/3385/merge'.
2025-01-15T20:11:47.7968740Z 
2025-01-15T20:11:47.7969052Z You are in 'detached HEAD' state. You can look around, make experimental
2025-01-15T20:11:47.7969821Z changes and commit them, and you can discard any commits you make in this
2025-01-15T20:11:47.7970594Z state without impacting any branches by switching back to a branch.
2025-01-15T20:11:47.7971042Z 
2025-01-15T20:11:47.7971312Z If you want to create a new branch to retain commits you create, you may
2025-01-15T20:11:47.7971948Z do so (now or later) by using -c with the switch command. Example:
2025-01-15T20:11:47.7972307Z 
2025-01-15T20:11:47.7972468Z   git switch -c <new-branch-name>
2025-01-15T20:11:47.7972717Z 
2025-01-15T20:11:47.7972863Z Or undo this operation with:
2025-01-15T20:11:47.7973097Z 
2025-01-15T20:11:47.7989577Z   git switch -
2025-01-15T20:11:47.7989810Z 
2025-01-15T20:11:47.7990152Z Turn off this advice by setting config variable advice.detachedHead to false
2025-01-15T20:11:47.7990562Z 
2025-01-15T20:11:47.7990911Z HEAD is now at 60d51ac Merge 686c6983eda7882bc56c0a69a06f32fb82b8d5be into cc5ed4737fd7532a7d1b58b4e44aa7865ea775cb
2025-01-15T20:11:47.7992061Z ##[endgroup]
2025-01-15T20:11:47.8030079Z [command]/usr/bin/git log -1 --format=%H
2025-01-15T20:11:47.8051118Z 60d51ac682a1c4e427f60f668d2a46d436a701e2
