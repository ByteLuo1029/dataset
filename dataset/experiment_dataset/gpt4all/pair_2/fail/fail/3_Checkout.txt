2025-03-19T16:06:09.0613459Z ##[group]Run actions/checkout@v4
2025-03-19T16:06:09.0614037Z with:
2025-03-19T16:06:09.0614253Z   repository: nomic-ai/gpt4all
2025-03-19T16:06:09.0614641Z   token: ***
2025-03-19T16:06:09.0614855Z   ssh-strict: true
2025-03-19T16:06:09.0615052Z   ssh-user: git
2025-03-19T16:06:09.0615481Z   persist-credentials: true
2025-03-19T16:06:09.0615708Z   clean: true
2025-03-19T16:06:09.0615909Z   sparse-checkout-cone-mode: true
2025-03-19T16:06:09.0616144Z   fetch-depth: 1
2025-03-19T16:06:09.0616333Z   fetch-tags: false
2025-03-19T16:06:09.0616527Z   show-progress: true
2025-03-19T16:06:09.0616981Z   lfs: false
2025-03-19T16:06:09.0617157Z   submodules: false
2025-03-19T16:06:09.0617349Z   set-safe-directory: true
2025-03-19T16:06:09.0617831Z ##[endgroup]
2025-03-19T16:06:09.3179594Z Syncing repository: nomic-ai/gpt4all
2025-03-19T16:06:09.3180871Z ##[group]Getting Git version info
2025-03-19T16:06:09.3181258Z Working directory is '/home/runner/work/gpt4all/gpt4all'
2025-03-19T16:06:09.3181807Z [command]/usr/bin/git version
2025-03-19T16:06:09.3194168Z git version 2.48.1
2025-03-19T16:06:09.3223062Z ##[endgroup]
2025-03-19T16:06:09.3236210Z Temporarily overriding HOME='/home/runner/work/_temp/cb0dfc80-a87c-4ae3-aa14-9908e6a7279c' before making global git config changes
2025-03-19T16:06:09.3237043Z Adding repository directory to the temporary git global config as a safe directory
2025-03-19T16:06:09.3240971Z [command]/usr/bin/git config --global --add safe.directory /home/runner/work/gpt4all/gpt4all
2025-03-19T16:06:09.3277513Z Deleting the contents of '/home/runner/work/gpt4all/gpt4all'
2025-03-19T16:06:09.3281190Z ##[group]Initializing the repository
2025-03-19T16:06:09.3285316Z [command]/usr/bin/git init /home/runner/work/gpt4all/gpt4all
2025-03-19T16:06:09.3362493Z hint: Using 'master' as the name for the initial branch. This default branch name
2025-03-19T16:06:09.3363403Z hint: is subject to change. To configure the initial branch name to use in all
2025-03-19T16:06:09.3364010Z hint: of your new repositories, which will suppress this warning, call:
2025-03-19T16:06:09.3364474Z hint:
2025-03-19T16:06:09.3364793Z hint: 	git config --global init.defaultBranch <name>
2025-03-19T16:06:09.3365625Z hint:
2025-03-19T16:06:09.3366181Z hint: Names commonly chosen instead of 'master' are 'main', 'trunk' and
2025-03-19T16:06:09.3367001Z hint: 'development'. The just-created branch can be renamed via this command:
2025-03-19T16:06:09.3367520Z hint:
2025-03-19T16:06:09.3367766Z hint: 	git branch -m <name>
2025-03-19T16:06:09.3376032Z Initialized empty Git repository in /home/runner/work/gpt4all/gpt4all/.git/
2025-03-19T16:06:09.3386738Z [command]/usr/bin/git remote add origin https://github.com/nomic-ai/gpt4all
2025-03-19T16:06:09.3419753Z ##[endgroup]
2025-03-19T16:06:09.3420181Z ##[group]Disabling automatic garbage collection
2025-03-19T16:06:09.3423915Z [command]/usr/bin/git config --local gc.auto 0
2025-03-19T16:06:09.3451404Z ##[endgroup]
2025-03-19T16:06:09.3451961Z ##[group]Setting up auth
2025-03-19T16:06:09.3458437Z [command]/usr/bin/git config --local --name-only --get-regexp core\.sshCommand
2025-03-19T16:06:09.3487286Z [command]/usr/bin/git submodule foreach --recursive sh -c "git config --local --name-only --get-regexp 'core\.sshCommand' && git config --local --unset-all 'core.sshCommand' || :"
2025-03-19T16:06:09.3824300Z [command]/usr/bin/git config --local --name-only --get-regexp http\.https\:\/\/github\.com\/\.extraheader
2025-03-19T16:06:09.3852452Z [command]/usr/bin/git submodule foreach --recursive sh -c "git config --local --name-only --get-regexp 'http\.https\:\/\/github\.com\/\.extraheader' && git config --local --unset-all 'http.https://github.com/.extraheader' || :"
2025-03-19T16:06:09.4078741Z [command]/usr/bin/git config --local http.https://github.com/.extraheader AUTHORIZATION: basic ***
2025-03-19T16:06:09.4114977Z ##[endgroup]
2025-03-19T16:06:09.4115854Z ##[group]Fetching the repository
2025-03-19T16:06:09.4223689Z [command]/usr/bin/git -c protocol.version=2 fetch --no-tags --prune --no-recurse-submodules --depth=1 origin +06e0a6398d7502a96b49c364dcbbc61a9cf22e50:refs/remotes/pull/3542/merge
2025-03-19T16:06:10.3055832Z From https://github.com/nomic-ai/gpt4all
2025-03-19T16:06:10.3057062Z  * [new ref]         06e0a6398d7502a96b49c364dcbbc61a9cf22e50 -> pull/3542/merge
2025-03-19T16:06:10.3084611Z ##[endgroup]
2025-03-19T16:06:10.3088804Z ##[group]Determining the checkout info
2025-03-19T16:06:10.3089575Z ##[endgroup]
2025-03-19T16:06:10.3094511Z [command]/usr/bin/git sparse-checkout disable
2025-03-19T16:06:10.3137537Z [command]/usr/bin/git config --local --unset-all extensions.worktreeConfig
2025-03-19T16:06:10.3164969Z ##[group]Checking out the ref
2025-03-19T16:06:10.3170027Z [command]/usr/bin/git checkout --progress --force refs/remotes/pull/3542/merge
2025-03-19T16:06:10.4577585Z Note: switching to 'refs/remotes/pull/3542/merge'.
2025-03-19T16:06:10.4578129Z 
2025-03-19T16:06:10.4578481Z You are in 'detached HEAD' state. You can look around, make experimental
2025-03-19T16:06:10.4579150Z changes and commit them, and you can discard any commits you make in this
2025-03-19T16:06:10.4579942Z state without impacting any branches by switching back to a branch.
2025-03-19T16:06:10.4580342Z 
2025-03-19T16:06:10.4580587Z If you want to create a new branch to retain commits you create, you may
2025-03-19T16:06:10.4581174Z do so (now or later) by using -c with the switch command. Example:
2025-03-19T16:06:10.4581522Z 
2025-03-19T16:06:10.4581658Z   git switch -c <new-branch-name>
2025-03-19T16:06:10.4581892Z 
2025-03-19T16:06:10.4582024Z Or undo this operation with:
2025-03-19T16:06:10.4582251Z 
2025-03-19T16:06:10.4582364Z   git switch -
2025-03-19T16:06:10.4582614Z 
2025-03-19T16:06:10.4583052Z Turn off this advice by setting config variable advice.detachedHead to false
2025-03-19T16:06:10.4583787Z 
2025-03-19T16:06:10.4584676Z HEAD is now at 06e0a63 Merge 9772027e5edc3187c9d1ffd817f3c218f3fe2535 into cd70db29edaf0f02a567f5eea94f5e52240be3e9
2025-03-19T16:06:10.4598574Z ##[endgroup]
2025-03-19T16:06:10.4640223Z [command]/usr/bin/git log -1 --format=%H
2025-03-19T16:06:10.4662952Z 06e0a6398d7502a96b49c364dcbbc61a9cf22e50
