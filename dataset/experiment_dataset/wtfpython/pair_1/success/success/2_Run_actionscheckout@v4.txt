2025-02-28T06:05:43.1829904Z ##[group]Run actions/checkout@v4
2025-02-28T06:05:43.1830796Z with:
2025-02-28T06:05:43.1831245Z   repository: satwikkansal/wtfpython
2025-02-28T06:05:43.1831970Z   token: ***
2025-02-28T06:05:43.1832373Z   ssh-strict: true
2025-02-28T06:05:43.1832796Z   ssh-user: git
2025-02-28T06:05:43.1833222Z   persist-credentials: true
2025-02-28T06:05:43.1833723Z   clean: true
2025-02-28T06:05:43.1834142Z   sparse-checkout-cone-mode: true
2025-02-28T06:05:43.1834918Z   fetch-depth: 1
2025-02-28T06:05:43.1835346Z   fetch-tags: false
2025-02-28T06:05:43.1835770Z   show-progress: true
2025-02-28T06:05:43.1836202Z   lfs: false
2025-02-28T06:05:43.1836584Z   submodules: false
2025-02-28T06:05:43.1837012Z   set-safe-directory: true
2025-02-28T06:05:43.1837820Z ##[endgroup]
2025-02-28T06:05:43.3710504Z Syncing repository: satwikkansal/wtfpython
2025-02-28T06:05:43.3712390Z ##[group]Getting Git version info
2025-02-28T06:05:43.3713142Z Working directory is '/home/runner/work/wtfpython/wtfpython'
2025-02-28T06:05:43.3714129Z [command]/usr/bin/git version
2025-02-28T06:05:43.3765867Z git version 2.48.1
2025-02-28T06:05:43.3793626Z ##[endgroup]
2025-02-28T06:05:43.3809943Z Temporarily overriding HOME='/home/runner/work/_temp/432c66cb-f836-4004-af5f-84696c8be7a4' before making global git config changes
2025-02-28T06:05:43.3812445Z Adding repository directory to the temporary git global config as a safe directory
2025-02-28T06:05:43.3816843Z [command]/usr/bin/git config --global --add safe.directory /home/runner/work/wtfpython/wtfpython
2025-02-28T06:05:43.3852194Z Deleting the contents of '/home/runner/work/wtfpython/wtfpython'
2025-02-28T06:05:43.3856176Z ##[group]Initializing the repository
2025-02-28T06:05:43.3861065Z [command]/usr/bin/git init /home/runner/work/wtfpython/wtfpython
2025-02-28T06:05:43.3922671Z hint: Using 'master' as the name for the initial branch. This default branch name
2025-02-28T06:05:43.3924295Z hint: is subject to change. To configure the initial branch name to use in all
2025-02-28T06:05:43.3925435Z hint: of your new repositories, which will suppress this warning, call:
2025-02-28T06:05:43.3926280Z hint:
2025-02-28T06:05:43.3927199Z hint: 	git config --global init.defaultBranch <name>
2025-02-28T06:05:43.3927918Z hint:
2025-02-28T06:05:43.3928656Z hint: Names commonly chosen instead of 'master' are 'main', 'trunk' and
2025-02-28T06:05:43.3930354Z hint: 'development'. The just-created branch can be renamed via this command:
2025-02-28T06:05:43.3932150Z hint:
2025-02-28T06:05:43.3932954Z hint: 	git branch -m <name>
2025-02-28T06:05:43.3934387Z Initialized empty Git repository in /home/runner/work/wtfpython/wtfpython/.git/
2025-02-28T06:05:43.3941182Z [command]/usr/bin/git remote add origin https://github.com/satwikkansal/wtfpython
2025-02-28T06:05:43.3972954Z ##[endgroup]
2025-02-28T06:05:43.3974275Z ##[group]Disabling automatic garbage collection
2025-02-28T06:05:43.3978164Z [command]/usr/bin/git config --local gc.auto 0
2025-02-28T06:05:43.4006934Z ##[endgroup]
2025-02-28T06:05:43.4008268Z ##[group]Setting up auth
2025-02-28T06:05:43.4014753Z [command]/usr/bin/git config --local --name-only --get-regexp core\.sshCommand
2025-02-28T06:05:43.4045981Z [command]/usr/bin/git submodule foreach --recursive sh -c "git config --local --name-only --get-regexp 'core\.sshCommand' && git config --local --unset-all 'core.sshCommand' || :"
2025-02-28T06:05:43.4317685Z [command]/usr/bin/git config --local --name-only --get-regexp http\.https\:\/\/github\.com\/\.extraheader
2025-02-28T06:05:43.4347857Z [command]/usr/bin/git submodule foreach --recursive sh -c "git config --local --name-only --get-regexp 'http\.https\:\/\/github\.com\/\.extraheader' && git config --local --unset-all 'http.https://github.com/.extraheader' || :"
2025-02-28T06:05:43.4573247Z [command]/usr/bin/git config --local http.https://github.com/.extraheader AUTHORIZATION: basic ***
2025-02-28T06:05:43.4610294Z ##[endgroup]
2025-02-28T06:05:43.4611695Z ##[group]Fetching the repository
2025-02-28T06:05:43.4620798Z [command]/usr/bin/git -c protocol.version=2 fetch --no-tags --prune --no-recurse-submodules --depth=1 origin +66fa20b65b718c4c7afdd2adf8bdc0cf97b5d80a:refs/remotes/pull/372/merge
2025-02-28T06:05:43.7219500Z From https://github.com/satwikkansal/wtfpython
2025-02-28T06:05:43.7221285Z  * [new ref]         66fa20b65b718c4c7afdd2adf8bdc0cf97b5d80a -> pull/372/merge
2025-02-28T06:05:43.7245161Z ##[endgroup]
2025-02-28T06:05:43.7245985Z ##[group]Determining the checkout info
2025-02-28T06:05:43.7247421Z ##[endgroup]
2025-02-28T06:05:43.7252336Z [command]/usr/bin/git sparse-checkout disable
2025-02-28T06:05:43.7289601Z [command]/usr/bin/git config --local --unset-all extensions.worktreeConfig
2025-02-28T06:05:43.7316533Z ##[group]Checking out the ref
2025-02-28T06:05:43.7319481Z [command]/usr/bin/git checkout --progress --force refs/remotes/pull/372/merge
2025-02-28T06:05:43.7417367Z Note: switching to 'refs/remotes/pull/372/merge'.
2025-02-28T06:05:43.7418435Z 
2025-02-28T06:05:43.7419170Z You are in 'detached HEAD' state. You can look around, make experimental
2025-02-28T06:05:43.7421002Z changes and commit them, and you can discard any commits you make in this
2025-02-28T06:05:43.7422968Z state without impacting any branches by switching back to a branch.
2025-02-28T06:05:43.7424178Z 
2025-02-28T06:05:43.7425101Z If you want to create a new branch to retain commits you create, you may
2025-02-28T06:05:43.7427068Z do so (now or later) by using -c with the switch command. Example:
2025-02-28T06:05:43.7428266Z 
2025-02-28T06:05:43.7428793Z   git switch -c <new-branch-name>
2025-02-28T06:05:43.7429585Z 
2025-02-28T06:05:43.7430012Z Or undo this operation with:
2025-02-28T06:05:43.7430696Z 
2025-02-28T06:05:43.7431116Z   git switch -
2025-02-28T06:05:43.7431633Z 
2025-02-28T06:05:43.7432332Z Turn off this advice by setting config variable advice.detachedHead to false
2025-02-28T06:05:43.7433365Z 
2025-02-28T06:05:43.7434688Z HEAD is now at 66fa20b Merge e374a889e2005b7e4fff90172f5be5bed0114f3d into c909ede23523da9e9c5b1aae19f76dd6bb91188d
2025-02-28T06:05:43.7437840Z ##[endgroup]
2025-02-28T06:05:43.7464314Z [command]/usr/bin/git log -1 --format=%H
2025-02-28T06:05:43.7486635Z 66fa20b65b718c4c7afdd2adf8bdc0cf97b5d80a
