2025-02-27T14:47:10.1447447Z ##[group]Run actions/checkout@v4
2025-02-27T14:47:10.1448869Z with:
2025-02-27T14:47:10.1449737Z   repository: satwikkansal/wtfpython
2025-02-27T14:47:10.1451107Z   token: ***
2025-02-27T14:47:10.1451941Z   ssh-strict: true
2025-02-27T14:47:10.1452810Z   ssh-user: git
2025-02-27T14:47:10.1453706Z   persist-credentials: true
2025-02-27T14:47:10.1454709Z   clean: true
2025-02-27T14:47:10.1455579Z   sparse-checkout-cone-mode: true
2025-02-27T14:47:10.1456904Z   fetch-depth: 1
2025-02-27T14:47:10.1457770Z   fetch-tags: false
2025-02-27T14:47:10.1458639Z   show-progress: true
2025-02-27T14:47:10.1459514Z   lfs: false
2025-02-27T14:47:10.1460313Z   submodules: false
2025-02-27T14:47:10.1461206Z   set-safe-directory: true
2025-02-27T14:47:10.1462420Z ##[endgroup]
2025-02-27T14:47:10.3278594Z Syncing repository: satwikkansal/wtfpython
2025-02-27T14:47:10.3281274Z ##[group]Getting Git version info
2025-02-27T14:47:10.3282679Z Working directory is '/home/runner/work/wtfpython/wtfpython'
2025-02-27T14:47:10.3284656Z [command]/usr/bin/git version
2025-02-27T14:47:10.3327798Z git version 2.48.1
2025-02-27T14:47:10.3356471Z ##[endgroup]
2025-02-27T14:47:10.3372614Z Temporarily overriding HOME='/home/runner/work/_temp/2504c104-cf49-475c-af97-0bc6a53e1e5e' before making global git config changes
2025-02-27T14:47:10.3377846Z Adding repository directory to the temporary git global config as a safe directory
2025-02-27T14:47:10.3381834Z [command]/usr/bin/git config --global --add safe.directory /home/runner/work/wtfpython/wtfpython
2025-02-27T14:47:10.3413563Z Deleting the contents of '/home/runner/work/wtfpython/wtfpython'
2025-02-27T14:47:10.3417690Z ##[group]Initializing the repository
2025-02-27T14:47:10.3422667Z [command]/usr/bin/git init /home/runner/work/wtfpython/wtfpython
2025-02-27T14:47:10.3490071Z hint: Using 'master' as the name for the initial branch. This default branch name
2025-02-27T14:47:10.3492277Z hint: is subject to change. To configure the initial branch name to use in all
2025-02-27T14:47:10.3494947Z hint: of your new repositories, which will suppress this warning, call:
2025-02-27T14:47:10.3497631Z hint:
2025-02-27T14:47:10.3499316Z hint: 	git config --global init.defaultBranch <name>
2025-02-27T14:47:10.3501587Z hint:
2025-02-27T14:47:10.3503514Z hint: Names commonly chosen instead of 'master' are 'main', 'trunk' and
2025-02-27T14:47:10.3506996Z hint: 'development'. The just-created branch can be renamed via this command:
2025-02-27T14:47:10.3510003Z hint:
2025-02-27T14:47:10.3511328Z hint: 	git branch -m <name>
2025-02-27T14:47:10.3513758Z Initialized empty Git repository in /home/runner/work/wtfpython/wtfpython/.git/
2025-02-27T14:47:10.3517357Z [command]/usr/bin/git remote add origin https://github.com/satwikkansal/wtfpython
2025-02-27T14:47:10.3542664Z ##[endgroup]
2025-02-27T14:47:10.3545254Z ##[group]Disabling automatic garbage collection
2025-02-27T14:47:10.3547731Z [command]/usr/bin/git config --local gc.auto 0
2025-02-27T14:47:10.3577196Z ##[endgroup]
2025-02-27T14:47:10.3579570Z ##[group]Setting up auth
2025-02-27T14:47:10.3584614Z [command]/usr/bin/git config --local --name-only --get-regexp core\.sshCommand
2025-02-27T14:47:10.3617465Z [command]/usr/bin/git submodule foreach --recursive sh -c "git config --local --name-only --get-regexp 'core\.sshCommand' && git config --local --unset-all 'core.sshCommand' || :"
2025-02-27T14:47:10.3925373Z [command]/usr/bin/git config --local --name-only --get-regexp http\.https\:\/\/github\.com\/\.extraheader
2025-02-27T14:47:10.3959175Z [command]/usr/bin/git submodule foreach --recursive sh -c "git config --local --name-only --get-regexp 'http\.https\:\/\/github\.com\/\.extraheader' && git config --local --unset-all 'http.https://github.com/.extraheader' || :"
2025-02-27T14:47:10.4210588Z [command]/usr/bin/git config --local http.https://github.com/.extraheader AUTHORIZATION: basic ***
2025-02-27T14:47:10.4250331Z ##[endgroup]
2025-02-27T14:47:10.4252400Z ##[group]Fetching the repository
2025-02-27T14:47:10.4264011Z [command]/usr/bin/git -c protocol.version=2 fetch --no-tags --prune --no-recurse-submodules --depth=1 origin +cb40fb13e0d220fa1c9c9c08acbd4ecc5474814c:refs/remotes/pull/373/merge
2025-02-27T14:47:10.6940227Z From https://github.com/satwikkansal/wtfpython
2025-02-27T14:47:10.6943150Z  * [new ref]         cb40fb13e0d220fa1c9c9c08acbd4ecc5474814c -> pull/373/merge
2025-02-27T14:47:10.6968644Z ##[endgroup]
2025-02-27T14:47:10.6970512Z ##[group]Determining the checkout info
2025-02-27T14:47:10.6972102Z ##[endgroup]
2025-02-27T14:47:10.6975276Z [command]/usr/bin/git sparse-checkout disable
2025-02-27T14:47:10.7013786Z [command]/usr/bin/git config --local --unset-all extensions.worktreeConfig
2025-02-27T14:47:10.7041264Z ##[group]Checking out the ref
2025-02-27T14:47:10.7044044Z [command]/usr/bin/git checkout --progress --force refs/remotes/pull/373/merge
2025-02-27T14:47:10.7142287Z Note: switching to 'refs/remotes/pull/373/merge'.
2025-02-27T14:47:10.7143776Z 
2025-02-27T14:47:10.7144942Z You are in 'detached HEAD' state. You can look around, make experimental
2025-02-27T14:47:10.7147836Z changes and commit them, and you can discard any commits you make in this
2025-02-27T14:47:10.7149681Z state without impacting any branches by switching back to a branch.
2025-02-27T14:47:10.7151186Z 
2025-02-27T14:47:10.7151882Z If you want to create a new branch to retain commits you create, you may
2025-02-27T14:47:10.7153539Z do so (now or later) by using -c with the switch command. Example:
2025-02-27T14:47:10.7154647Z 
2025-02-27T14:47:10.7155056Z   git switch -c <new-branch-name>
2025-02-27T14:47:10.7155743Z 
2025-02-27T14:47:10.7156301Z Or undo this operation with:
2025-02-27T14:47:10.7156933Z 
2025-02-27T14:47:10.7157281Z   git switch -
2025-02-27T14:47:10.7157748Z 
2025-02-27T14:47:10.7158518Z Turn off this advice by setting config variable advice.detachedHead to false
2025-02-27T14:47:10.7159620Z 
2025-02-27T14:47:10.7160877Z HEAD is now at cb40fb1 Merge fd1c1d4ac9e2b72b9ff45f651cf4891f7b42997b into c909ede23523da9e9c5b1aae19f76dd6bb91188d
2025-02-27T14:47:10.7164435Z ##[endgroup]
2025-02-27T14:47:10.7186259Z [command]/usr/bin/git log -1 --format=%H
2025-02-27T14:47:10.7207770Z cb40fb13e0d220fa1c9c9c08acbd4ecc5474814c
