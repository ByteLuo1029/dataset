2025-04-15T07:58:57.8243818Z Requested labels: ubuntu-latest
2025-04-15T07:58:57.8244117Z Job defined at: django/django/.github/workflows/linters.yml@refs/pull/19063/merge
2025-04-15T07:58:57.8244195Z Waiting for a runner to pick up this job...
2025-04-15T07:58:58.3961529Z Job is waiting for a hosted runner to come online.
2025-04-15T07:59:00.6886724Z Job is about to start running on the hosted runner: GitHub Actions 8 (hosted)
2025-04-15T07:59:02.1718330Z Current runner version: '2.323.0'
2025-04-15T07:59:02.1744666Z ##[group]Operating System
2025-04-15T07:59:02.1745414Z Ubuntu
2025-04-15T07:59:02.1745998Z 24.04.2
2025-04-15T07:59:02.1746466Z LTS
2025-04-15T07:59:02.1746931Z ##[endgroup]
2025-04-15T07:59:02.1747521Z ##[group]Runner Image
2025-04-15T07:59:02.1748066Z Image: ubuntu-24.04
2025-04-15T07:59:02.1748577Z Version: 20250406.1.0
2025-04-15T07:59:02.1749954Z Included Software: https://github.com/actions/runner-images/blob/ubuntu24/20250406.1/images/ubuntu/Ubuntu2404-Readme.md
2025-04-15T07:59:02.1751344Z Image Release: https://github.com/actions/runner-images/releases/tag/ubuntu24%2F20250406.1
2025-04-15T07:59:02.1752285Z ##[endgroup]
2025-04-15T07:59:02.1752843Z ##[group]Runner Image Provisioner
2025-04-15T07:59:02.1753401Z 2.0.422.1
2025-04-15T07:59:02.1753910Z ##[endgroup]
2025-04-15T07:59:02.1754915Z ##[group]GITHUB_TOKEN Permissions
2025-04-15T07:59:02.1756645Z Contents: read
2025-04-15T07:59:02.1757333Z Metadata: read
2025-04-15T07:59:02.1758007Z ##[endgroup]
2025-04-15T07:59:02.1761330Z Secret source: None
2025-04-15T07:59:02.1762085Z Prepare workflow directory
2025-04-15T07:59:02.2075154Z Prepare all required actions
2025-04-15T07:59:02.2115055Z Getting action download info
2025-04-15T07:59:02.4868105Z ##[group]Download immutable action package 'actions/checkout@v4'
2025-04-15T07:59:02.4869166Z Version: 4.2.2
2025-04-15T07:59:02.4870415Z Digest: sha256:ccb2698953eaebd21c7bf6268a94f9c26518a7e38e27e0b83c1fe1ad049819b1
2025-04-15T07:59:02.4871631Z Source commit SHA: 11bd71901bbe5b1630ceea73d27597364c9af683
2025-04-15T07:59:02.4872331Z ##[endgroup]
2025-04-15T07:59:02.5867109Z Download action repository 'psf/black@stable' (SHA:8a737e727ac5ab2f1d4cf5876720ed276dc8dc4b)
2025-04-15T07:59:02.9257228Z Complete job name: black
2025-04-15T07:59:02.9981330Z ##[group]Run actions/checkout@v4
2025-04-15T07:59:02.9982258Z with:
2025-04-15T07:59:02.9982695Z   repository: django/django
2025-04-15T07:59:02.9983406Z   token: ***
2025-04-15T07:59:02.9983836Z   ssh-strict: true
2025-04-15T07:59:02.9984318Z   ssh-user: git
2025-04-15T07:59:02.9984786Z   persist-credentials: true
2025-04-15T07:59:02.9985293Z   clean: true
2025-04-15T07:59:02.9985745Z   sparse-checkout-cone-mode: true
2025-04-15T07:59:02.9986282Z   fetch-depth: 1
2025-04-15T07:59:02.9986720Z   fetch-tags: false
2025-04-15T07:59:02.9987176Z   show-progress: true
2025-04-15T07:59:02.9987625Z   lfs: false
2025-04-15T07:59:02.9988042Z   submodules: false
2025-04-15T07:59:02.9988510Z   set-safe-directory: true
2025-04-15T07:59:02.9989455Z ##[endgroup]
2025-04-15T07:59:03.2600199Z Syncing repository: django/django
2025-04-15T07:59:03.2602564Z ##[group]Getting Git version info
2025-04-15T07:59:03.2603724Z Working directory is '/home/runner/work/django/django'
2025-04-15T07:59:03.2605649Z [command]/usr/bin/git version
2025-04-15T07:59:03.2675741Z git version 2.49.0
2025-04-15T07:59:03.2709455Z ##[endgroup]
2025-04-15T07:59:03.2727205Z Temporarily overriding HOME='/home/runner/work/_temp/fc977f5e-df7c-4a1e-9bff-769c834a29fb' before making global git config changes
2025-04-15T07:59:03.2728992Z Adding repository directory to the temporary git global config as a safe directory
2025-04-15T07:59:03.2733417Z [command]/usr/bin/git config --global --add safe.directory /home/runner/work/django/django
2025-04-15T07:59:03.2774350Z Deleting the contents of '/home/runner/work/django/django'
2025-04-15T07:59:03.2778714Z ##[group]Initializing the repository
2025-04-15T07:59:03.2783878Z [command]/usr/bin/git init /home/runner/work/django/django
2025-04-15T07:59:03.2863372Z hint: Using 'master' as the name for the initial branch. This default branch name
2025-04-15T07:59:03.2864939Z hint: is subject to change. To configure the initial branch name to use in all
2025-04-15T07:59:03.2865973Z hint: of your new repositories, which will suppress this warning, call:
2025-04-15T07:59:03.2866799Z hint:
2025-04-15T07:59:03.2867360Z hint: 	git config --global init.defaultBranch <name>
2025-04-15T07:59:03.2867971Z hint:
2025-04-15T07:59:03.2868664Z hint: Names commonly chosen instead of 'master' are 'main', 'trunk' and
2025-04-15T07:59:03.2870236Z hint: 'development'. The just-created branch can be renamed via this command:
2025-04-15T07:59:03.2871395Z hint:
2025-04-15T07:59:03.2872165Z hint: 	git branch -m <name>
2025-04-15T07:59:03.2872999Z Initialized empty Git repository in /home/runner/work/django/django/.git/
2025-04-15T07:59:03.2884857Z [command]/usr/bin/git remote add origin https://github.com/django/django
2025-04-15T07:59:03.2920457Z ##[endgroup]
2025-04-15T07:59:03.2921249Z ##[group]Disabling automatic garbage collection
2025-04-15T07:59:03.2924608Z [command]/usr/bin/git config --local gc.auto 0
2025-04-15T07:59:03.2958847Z ##[endgroup]
2025-04-15T07:59:03.2959937Z ##[group]Setting up auth
2025-04-15T07:59:03.2966042Z [command]/usr/bin/git config --local --name-only --get-regexp core\.sshCommand
2025-04-15T07:59:03.2999935Z [command]/usr/bin/git submodule foreach --recursive sh -c "git config --local --name-only --get-regexp 'core\.sshCommand' && git config --local --unset-all 'core.sshCommand' || :"
2025-04-15T07:59:03.3346742Z [command]/usr/bin/git config --local --name-only --get-regexp http\.https\:\/\/github\.com\/\.extraheader
2025-04-15T07:59:03.3380107Z [command]/usr/bin/git submodule foreach --recursive sh -c "git config --local --name-only --get-regexp 'http\.https\:\/\/github\.com\/\.extraheader' && git config --local --unset-all 'http.https://github.com/.extraheader' || :"
2025-04-15T07:59:03.3610463Z [command]/usr/bin/git config --local http.https://github.com/.extraheader AUTHORIZATION: basic ***
2025-04-15T07:59:03.3652909Z ##[endgroup]
2025-04-15T07:59:03.3654595Z ##[group]Fetching the repository
2025-04-15T07:59:03.3664903Z [command]/usr/bin/git -c protocol.version=2 fetch --no-tags --prune --no-recurse-submodules --depth=1 origin +bbf3da1cb2ab2c153b11b5a2a86dc7ccba74bd55:refs/remotes/pull/19063/merge
2025-04-15T07:59:05.1102186Z From https://github.com/django/django
2025-04-15T07:59:05.1104047Z  * [new ref]         bbf3da1cb2ab2c153b11b5a2a86dc7ccba74bd55 -> pull/19063/merge
2025-04-15T07:59:05.1168848Z ##[endgroup]
2025-04-15T07:59:05.1170572Z ##[group]Determining the checkout info
2025-04-15T07:59:05.1171939Z ##[endgroup]
2025-04-15T07:59:05.1176152Z [command]/usr/bin/git sparse-checkout disable
2025-04-15T07:59:05.1218562Z [command]/usr/bin/git config --local --unset-all extensions.worktreeConfig
2025-04-15T07:59:05.1246030Z ##[group]Checking out the ref
2025-04-15T07:59:05.1249628Z [command]/usr/bin/git checkout --progress --force refs/remotes/pull/19063/merge
2025-04-15T07:59:05.6209177Z Note: switching to 'refs/remotes/pull/19063/merge'.
2025-04-15T07:59:05.6212452Z 
2025-04-15T07:59:05.6213011Z You are in 'detached HEAD' state. You can look around, make experimental
2025-04-15T07:59:05.6215954Z changes and commit them, and you can discard any commits you make in this
2025-04-15T07:59:05.6217481Z state without impacting any branches by switching back to a branch.
2025-04-15T07:59:05.6218195Z 
2025-04-15T07:59:05.6218650Z If you want to create a new branch to retain commits you create, you may
2025-04-15T07:59:05.6219925Z do so (now or later) by using -c with the switch command. Example:
2025-04-15T07:59:05.6220512Z 
2025-04-15T07:59:05.6220769Z   git switch -c <new-branch-name>
2025-04-15T07:59:05.6221188Z 
2025-04-15T07:59:05.6221468Z Or undo this operation with:
2025-04-15T07:59:05.6221860Z 
2025-04-15T07:59:05.6222097Z   git switch -
2025-04-15T07:59:05.6222443Z 
2025-04-15T07:59:05.6222942Z Turn off this advice by setting config variable advice.detachedHead to false
2025-04-15T07:59:05.6223616Z 
2025-04-15T07:59:05.6224424Z HEAD is now at bbf3da1 Merge a2532c7904e11c77acaf81f88b4056f9f320b79f into ab1b9cc1b38e8735979c817f42e8f54a5795c4f7
2025-04-15T07:59:05.6229973Z ##[endgroup]
2025-04-15T07:59:05.6273633Z [command]/usr/bin/git log -1 --format=%H
2025-04-15T07:59:05.6299987Z bbf3da1cb2ab2c153b11b5a2a86dc7ccba74bd55
2025-04-15T07:59:05.6622526Z ##[group]Run psf/black@stable
2025-04-15T07:59:05.6622825Z with:
2025-04-15T07:59:05.6623245Z   options: --check --diff
2025-04-15T07:59:05.6623484Z   src: .
2025-04-15T07:59:05.6623666Z   jupyter: false
2025-04-15T07:59:05.6623871Z   use_pyproject: false
2025-04-15T07:59:05.6624077Z   summary: true
2025-04-15T07:59:05.6624304Z ##[endgroup]
2025-04-15T07:59:05.6752151Z ##[group]Run # Even when black fails, do not close the shell
2025-04-15T07:59:05.6752642Z [36;1m# Even when black fails, do not close the shell[0m
2025-04-15T07:59:05.6752942Z [36;1mset +e[0m
2025-04-15T07:59:05.6753143Z [36;1m[0m
2025-04-15T07:59:05.6753351Z [36;1mif [ "$RUNNER_OS" == "Windows" ]; then[0m
2025-04-15T07:59:05.6753642Z [36;1m  runner="python"[0m
2025-04-15T07:59:05.6753870Z [36;1melse[0m
2025-04-15T07:59:05.6754069Z [36;1m  runner="python3"[0m
2025-04-15T07:59:05.6754299Z [36;1mfi[0m
2025-04-15T07:59:05.6754485Z [36;1m[0m
2025-04-15T07:59:05.6754783Z [36;1mout=$(${runner} $GITHUB_ACTION_PATH/action/main.py)[0m
2025-04-15T07:59:05.6755104Z [36;1mexit_code=$?[0m
2025-04-15T07:59:05.6755313Z [36;1m[0m
2025-04-15T07:59:05.6755539Z [36;1m# Display the raw output in the step[0m
2025-04-15T07:59:05.6755814Z [36;1mecho "${out}"[0m
2025-04-15T07:59:05.6756008Z [36;1m[0m
2025-04-15T07:59:05.6756197Z [36;1mif [ "true" == "true" ]; then[0m
2025-04-15T07:59:05.6756497Z [36;1m  # Display the Markdown output in the job summary[0m
2025-04-15T07:59:05.6756828Z [36;1m  echo "\`\`\`python" >> $GITHUB_STEP_SUMMARY[0m
2025-04-15T07:59:05.6757129Z [36;1m  echo "${out}" >> $GITHUB_STEP_SUMMARY[0m
2025-04-15T07:59:05.6757421Z [36;1m  echo "\`\`\`" >> $GITHUB_STEP_SUMMARY[0m
2025-04-15T07:59:05.6757667Z [36;1mfi[0m
2025-04-15T07:59:05.6757841Z [36;1m[0m
2025-04-15T07:59:05.6758060Z [36;1m# Exit with the exit-code returned by Black[0m
2025-04-15T07:59:05.6758342Z [36;1mexit ${exit_code}[0m
2025-04-15T07:59:05.6812183Z shell: /usr/bin/bash --noprofile --norc -e -o pipefail {0}
2025-04-15T07:59:05.6812565Z env:
2025-04-15T07:59:05.6812771Z   INPUT_OPTIONS: --check --diff
2025-04-15T07:59:05.6813043Z   INPUT_SRC: .
2025-04-15T07:59:05.6813237Z   INPUT_JUPYTER: false
2025-04-15T07:59:05.6813463Z   INPUT_BLACK_ARGS: 
2025-04-15T07:59:05.6813670Z   INPUT_VERSION: 
2025-04-15T07:59:05.6813883Z   INPUT_USE_PYPROJECT: false
2025-04-15T07:59:05.6814116Z   pythonioencoding: utf-8
2025-04-15T07:59:05.6814340Z ##[endgroup]
2025-04-15T07:59:48.0976635Z Installing black[colorama]==25.1.0...
2025-04-15T07:59:48.0977752Z --- /home/runner/work/django/django/tests/auth_tests/test_forms.py	2025-04-15 07:59:05.493516+00:00
2025-04-15T07:59:48.0979095Z +++ /home/runner/work/django/django/tests/auth_tests/test_forms.py	2025-04-15 07:59:28.788445+00:00
2025-04-15T07:59:48.0980126Z @@ -1453,11 +1453,11 @@
2025-04-15T07:59:48.0980617Z          hashed_html = "<p><strong>No password set.</p>"
2025-04-15T07:59:48.0981287Z          self.assertHTMLEqual(render_password_as_hash(None), hashed_html)
2025-04-15T07:59:48.0981980Z          self.assertHTMLEqual(
2025-04-15T07:59:48.0982437Z              widget.render("name", None, {}),
2025-04-15T07:59:48.0983180Z              f'<div>{hashed_html}<p><a role="button" class="button" href="../password/">'
2025-04-15T07:59:48.0983859Z -            'Set password</a></p></div>',
2025-04-15T07:59:48.0984319Z +            "Set password</a></p></div>",
2025-04-15T07:59:48.0984714Z          )
2025-04-15T07:59:48.0985029Z  
2025-04-15T07:59:48.0985335Z      @override_settings(
2025-04-15T07:59:48.0985834Z          PASSWORD_HASHERS=["django.contrib.auth.hashers.PBKDF2PasswordHasher"]
2025-04-15T07:59:48.0986272Z      )
2025-04-15T07:59:48.0986443Z @@ -1470,11 +1470,11 @@
2025-04-15T07:59:48.0986656Z          )
2025-04-15T07:59:48.0986937Z          self.assertHTMLEqual(render_password_as_hash(value), hashed_html)
2025-04-15T07:59:48.0987285Z          self.assertHTMLEqual(
2025-04-15T07:59:48.0987539Z              widget.render("name", value, {}),
2025-04-15T07:59:48.0988157Z              f'<div>{hashed_html}<p><a role="button" class="button" href="../password/">'
2025-04-15T07:59:48.0988571Z -            'Reset password</a></p></div>',
2025-04-15T07:59:48.0989053Z +            "Reset password</a></p></div>",
2025-04-15T07:59:48.0989486Z          )
2025-04-15T07:59:48.0989710Z  
2025-04-15T07:59:48.0989912Z      def test_readonly_field_has_changed(self):
2025-04-15T07:59:48.0990216Z          field = ReadOnlyPasswordHashField()
2025-04-15T07:59:48.0990499Z          self.assertIs(field.disabled, True)
2025-04-15T07:59:48.0990904Z would reformat /home/runner/work/django/django/tests/auth_tests/test_forms.py
2025-04-15T07:59:48.0991482Z --- /home/runner/work/django/django/tests/auth_tests/test_views.py	2025-04-15 07:59:05.494516+00:00
2025-04-15T07:59:48.0992108Z +++ /home/runner/work/django/django/tests/auth_tests/test_views.py	2025-04-15 07:59:29.649205+00:00
2025-04-15T07:59:48.0992532Z @@ -1715,11 +1715,12 @@
2025-04-15T07:59:48.0992740Z                  hash_string[:6],
2025-04-15T07:59:48.0992968Z              ),
2025-04-15T07:59:48.0993142Z              html=True,
2025-04-15T07:59:48.0993331Z          )
2025-04-15T07:59:48.0993532Z          self.assertNotContains(
2025-04-15T07:59:48.0993905Z -            response, '<a role="button" class="button" href="../password/">Reset password</a>'
2025-04-15T07:59:48.0994282Z +            response,
2025-04-15T07:59:48.0994578Z +            '<a role="button" class="button" href="../password/">Reset password</a>',
2025-04-15T07:59:48.0994908Z          )
2025-04-15T07:59:48.0995103Z          # Value in POST data is ignored.
2025-04-15T07:59:48.0995372Z          data = self.get_user_data(u)
2025-04-15T07:59:48.0995641Z          data["password"] = "shouldnotchange"
2025-04-15T07:59:48.0995987Z          change_url = reverse("auth_test_admin:auth_user_change", args=(u.pk,))
2025-04-15T07:59:48.0996452Z would reformat /home/runner/work/django/django/tests/auth_tests/test_views.py
2025-04-15T07:59:48.0996750Z 
2025-04-15T07:59:48.0997074Z Oh no! 💥 💔 💥
2025-04-15T07:59:48.0997367Z 2 files would be reformatted, 2830 files would be left unchanged.
2025-04-15T07:59:48.1009924Z ##[error]Process completed with exit code 1.
2025-04-15T07:59:48.1117659Z Post job cleanup.
2025-04-15T07:59:48.2059607Z [command]/usr/bin/git version
2025-04-15T07:59:48.2095889Z git version 2.49.0
2025-04-15T07:59:48.2138118Z Temporarily overriding HOME='/home/runner/work/_temp/ee9adab5-ee57-430c-a276-4646f0a57577' before making global git config changes
2025-04-15T07:59:48.2139151Z Adding repository directory to the temporary git global config as a safe directory
2025-04-15T07:59:48.2151201Z [command]/usr/bin/git config --global --add safe.directory /home/runner/work/django/django
2025-04-15T07:59:48.2186575Z [command]/usr/bin/git config --local --name-only --get-regexp core\.sshCommand
2025-04-15T07:59:48.2220065Z [command]/usr/bin/git submodule foreach --recursive sh -c "git config --local --name-only --get-regexp 'core\.sshCommand' && git config --local --unset-all 'core.sshCommand' || :"
2025-04-15T07:59:48.2466928Z [command]/usr/bin/git config --local --name-only --get-regexp http\.https\:\/\/github\.com\/\.extraheader
2025-04-15T07:59:48.2488414Z http.https://github.com/.extraheader
2025-04-15T07:59:48.2501966Z [command]/usr/bin/git config --local --unset-all http.https://github.com/.extraheader
2025-04-15T07:59:48.2532835Z [command]/usr/bin/git submodule foreach --recursive sh -c "git config --local --name-only --get-regexp 'http\.https\:\/\/github\.com\/\.extraheader' && git config --local --unset-all 'http.https://github.com/.extraheader' || :"
2025-04-15T07:59:48.2884243Z Cleaning up orphan processes
