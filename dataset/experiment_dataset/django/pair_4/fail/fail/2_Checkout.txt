2025-04-14T21:51:48.5505055Z ##[group]Run actions/checkout@v4
2025-04-14T21:51:48.5505893Z with:
2025-04-14T21:51:48.5506299Z   repository: django/django
2025-04-14T21:51:48.5506913Z   token: ***
2025-04-14T21:51:48.5507301Z   ssh-strict: true
2025-04-14T21:51:48.5507698Z   ssh-user: git
2025-04-14T21:51:48.5508103Z   persist-credentials: true
2025-04-14T21:51:48.5508543Z   clean: true
2025-04-14T21:51:48.5508947Z   sparse-checkout-cone-mode: true
2025-04-14T21:51:48.5509429Z   fetch-depth: 1
2025-04-14T21:51:48.5509829Z   fetch-tags: false
2025-04-14T21:51:48.5510234Z   show-progress: true
2025-04-14T21:51:48.5510640Z   lfs: false
2025-04-14T21:51:48.5511022Z   submodules: false
2025-04-14T21:51:48.5511432Z   set-safe-directory: true
2025-04-14T21:51:48.5512062Z ##[endgroup]
2025-04-14T21:51:48.7164843Z Syncing repository: django/django
2025-04-14T21:51:48.7166521Z ##[group]Getting Git version info
2025-04-14T21:51:48.7167198Z Working directory is '/home/runner/work/django/django'
2025-04-14T21:51:48.7168128Z [command]/usr/bin/git version
2025-04-14T21:51:48.7217270Z git version 2.49.0
2025-04-14T21:51:48.7244350Z ##[endgroup]
2025-04-14T21:51:48.7257639Z Temporarily overriding HOME='/home/runner/work/_temp/34369ee0-bf12-46bb-a935-4a993155601e' before making global git config changes
2025-04-14T21:51:48.7259022Z Adding repository directory to the temporary git global config as a safe directory
2025-04-14T21:51:48.7262666Z [command]/usr/bin/git config --global --add safe.directory /home/runner/work/django/django
2025-04-14T21:51:48.7295413Z Deleting the contents of '/home/runner/work/django/django'
2025-04-14T21:51:48.7299213Z ##[group]Initializing the repository
2025-04-14T21:51:48.7302970Z [command]/usr/bin/git init /home/runner/work/django/django
2025-04-14T21:51:48.7370805Z hint: Using 'master' as the name for the initial branch. This default branch name
2025-04-14T21:51:48.7371827Z hint: is subject to change. To configure the initial branch name to use in all
2025-04-14T21:51:48.7373079Z hint: of your new repositories, which will suppress this warning, call:
2025-04-14T21:51:48.7374154Z hint:
2025-04-14T21:51:48.7374652Z hint: 	git config --global init.defaultBranch <name>
2025-04-14T21:51:48.7375620Z hint:
2025-04-14T21:51:48.7376471Z hint: Names commonly chosen instead of 'master' are 'main', 'trunk' and
2025-04-14T21:51:48.7377390Z hint: 'development'. The just-created branch can be renamed via this command:
2025-04-14T21:51:48.7378108Z hint:
2025-04-14T21:51:48.7378488Z hint: 	git branch -m <name>
2025-04-14T21:51:48.7379151Z Initialized empty Git repository in /home/runner/work/django/django/.git/
2025-04-14T21:51:48.7386607Z [command]/usr/bin/git remote add origin https://github.com/django/django
2025-04-14T21:51:48.7421913Z ##[endgroup]
2025-04-14T21:51:48.7422646Z ##[group]Disabling automatic garbage collection
2025-04-14T21:51:48.7426233Z [command]/usr/bin/git config --local gc.auto 0
2025-04-14T21:51:48.7461134Z ##[endgroup]
2025-04-14T21:51:48.7463909Z ##[group]Setting up auth
2025-04-14T21:51:48.7467598Z [command]/usr/bin/git config --local --name-only --get-regexp core\.sshCommand
2025-04-14T21:51:48.7502247Z [command]/usr/bin/git submodule foreach --recursive sh -c "git config --local --name-only --get-regexp 'core\.sshCommand' && git config --local --unset-all 'core.sshCommand' || :"
2025-04-14T21:51:48.7787665Z [command]/usr/bin/git config --local --name-only --get-regexp http\.https\:\/\/github\.com\/\.extraheader
2025-04-14T21:51:48.7815685Z [command]/usr/bin/git submodule foreach --recursive sh -c "git config --local --name-only --get-regexp 'http\.https\:\/\/github\.com\/\.extraheader' && git config --local --unset-all 'http.https://github.com/.extraheader' || :"
2025-04-14T21:51:48.8037634Z [command]/usr/bin/git config --local http.https://github.com/.extraheader AUTHORIZATION: basic ***
2025-04-14T21:51:48.8074503Z ##[endgroup]
2025-04-14T21:51:48.8075816Z ##[group]Fetching the repository
2025-04-14T21:51:48.8084898Z [command]/usr/bin/git -c protocol.version=2 fetch --no-tags --prune --no-recurse-submodules --depth=1 origin +92d9393c44583d3d03598af8d5c368615eaeb328:refs/remotes/pull/17554/merge
2025-04-14T21:51:50.8879523Z From https://github.com/django/django
2025-04-14T21:51:50.8883077Z  * [new ref]         92d9393c44583d3d03598af8d5c368615eaeb328 -> pull/17554/merge
2025-04-14T21:51:50.8947397Z ##[endgroup]
2025-04-14T21:51:50.8948709Z ##[group]Determining the checkout info
2025-04-14T21:51:50.8950409Z ##[endgroup]
2025-04-14T21:51:50.8956015Z [command]/usr/bin/git sparse-checkout disable
2025-04-14T21:51:50.8995789Z [command]/usr/bin/git config --local --unset-all extensions.worktreeConfig
2025-04-14T21:51:50.9026003Z ##[group]Checking out the ref
2025-04-14T21:51:50.9030160Z [command]/usr/bin/git checkout --progress --force refs/remotes/pull/17554/merge
2025-04-14T21:51:51.3950686Z Note: switching to 'refs/remotes/pull/17554/merge'.
2025-04-14T21:51:51.3952487Z 
2025-04-14T21:51:51.3953496Z You are in 'detached HEAD' state. You can look around, make experimental
2025-04-14T21:51:51.3956103Z changes and commit them, and you can discard any commits you make in this
2025-04-14T21:51:51.3957674Z state without impacting any branches by switching back to a branch.
2025-04-14T21:51:51.3958479Z 
2025-04-14T21:51:51.3959025Z If you want to create a new branch to retain commits you create, you may
2025-04-14T21:51:51.3960401Z do so (now or later) by using -c with the switch command. Example:
2025-04-14T21:51:51.3961617Z 
2025-04-14T21:51:51.3962212Z   git switch -c <new-branch-name>
2025-04-14T21:51:51.3963123Z 
2025-04-14T21:51:51.3963903Z Or undo this operation with:
2025-04-14T21:51:51.3964761Z 
2025-04-14T21:51:51.3965202Z   git switch -
2025-04-14T21:51:51.3965849Z 
2025-04-14T21:51:51.3966856Z Turn off this advice by setting config variable advice.detachedHead to false
2025-04-14T21:51:51.3968404Z 
2025-04-14T21:51:51.3970049Z HEAD is now at 92d9393 Merge 61aa0fcd51c8fcf0c62bb00de34e3983677d3fbe into ab1b9cc1b38e8735979c817f42e8f54a5795c4f7
2025-04-14T21:51:51.3975464Z ##[endgroup]
2025-04-14T21:51:51.4008080Z [command]/usr/bin/git log -1 --format=%H
2025-04-14T21:51:51.4030281Z 92d9393c44583d3d03598af8d5c368615eaeb328
