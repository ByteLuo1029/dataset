2025-04-14T19:03:44.2267869Z ##[group]Run actions/checkout@v4
2025-04-14T19:03:44.2268788Z with:
2025-04-14T19:03:44.2269253Z   repository: django/django
2025-04-14T19:03:44.2269953Z   token: ***
2025-04-14T19:03:44.2270380Z   ssh-strict: true
2025-04-14T19:03:44.2270974Z   ssh-user: git
2025-04-14T19:03:44.2271442Z   persist-credentials: true
2025-04-14T19:03:44.2271944Z   clean: true
2025-04-14T19:03:44.2272377Z   sparse-checkout-cone-mode: true
2025-04-14T19:03:44.2272918Z   fetch-depth: 1
2025-04-14T19:03:44.2273366Z   fetch-tags: false
2025-04-14T19:03:44.2273809Z   show-progress: true
2025-04-14T19:03:44.2274267Z   lfs: false
2025-04-14T19:03:44.2274683Z   submodules: false
2025-04-14T19:03:44.2275141Z   set-safe-directory: true
2025-04-14T19:03:44.2275862Z ##[endgroup]
2025-04-14T19:03:44.4218249Z Syncing repository: django/django
2025-04-14T19:03:44.4220052Z ##[group]Getting Git version info
2025-04-14T19:03:44.4221317Z Working directory is '/home/runner/work/django/django'
2025-04-14T19:03:44.4222436Z [command]/usr/bin/git version
2025-04-14T19:03:44.4316248Z git version 2.49.0
2025-04-14T19:03:44.4344706Z ##[endgroup]
2025-04-14T19:03:44.4360506Z Temporarily overriding HOME='/home/runner/work/_temp/161ed4b1-c570-47de-9abd-d14e003c3c58' before making global git config changes
2025-04-14T19:03:44.4362923Z Adding repository directory to the temporary git global config as a safe directory
2025-04-14T19:03:44.4367156Z [command]/usr/bin/git config --global --add safe.directory /home/runner/work/django/django
2025-04-14T19:03:44.4406108Z Deleting the contents of '/home/runner/work/django/django'
2025-04-14T19:03:44.4410239Z ##[group]Initializing the repository
2025-04-14T19:03:44.4416557Z [command]/usr/bin/git init /home/runner/work/django/django
2025-04-14T19:03:44.4484686Z hint: Using 'master' as the name for the initial branch. This default branch name
2025-04-14T19:03:44.4486189Z hint: is subject to change. To configure the initial branch name to use in all
2025-04-14T19:03:44.4487475Z hint: of your new repositories, which will suppress this warning, call:
2025-04-14T19:03:44.4488212Z hint:
2025-04-14T19:03:44.4488726Z hint: 	git config --global init.defaultBranch <name>
2025-04-14T19:03:44.4489780Z hint:
2025-04-14T19:03:44.4491108Z hint: Names commonly chosen instead of 'master' are 'main', 'trunk' and
2025-04-14T19:03:44.4492925Z hint: 'development'. The just-created branch can be renamed via this command:
2025-04-14T19:03:44.4494443Z hint:
2025-04-14T19:03:44.4495294Z hint: 	git branch -m <name>
2025-04-14T19:03:44.4496757Z Initialized empty Git repository in /home/runner/work/django/django/.git/
2025-04-14T19:03:44.4505839Z [command]/usr/bin/git remote add origin https://github.com/django/django
2025-04-14T19:03:44.4539995Z ##[endgroup]
2025-04-14T19:03:44.4541607Z ##[group]Disabling automatic garbage collection
2025-04-14T19:03:44.4544599Z [command]/usr/bin/git config --local gc.auto 0
2025-04-14T19:03:44.4576215Z ##[endgroup]
2025-04-14T19:03:44.4577700Z ##[group]Setting up auth
2025-04-14T19:03:44.4583030Z [command]/usr/bin/git config --local --name-only --get-regexp core\.sshCommand
2025-04-14T19:03:44.4614846Z [command]/usr/bin/git submodule foreach --recursive sh -c "git config --local --name-only --get-regexp 'core\.sshCommand' && git config --local --unset-all 'core.sshCommand' || :"
2025-04-14T19:03:44.4921247Z [command]/usr/bin/git config --local --name-only --get-regexp http\.https\:\/\/github\.com\/\.extraheader
2025-04-14T19:03:44.4959407Z [command]/usr/bin/git submodule foreach --recursive sh -c "git config --local --name-only --get-regexp 'http\.https\:\/\/github\.com\/\.extraheader' && git config --local --unset-all 'http.https://github.com/.extraheader' || :"
2025-04-14T19:03:44.5190272Z [command]/usr/bin/git config --local http.https://github.com/.extraheader AUTHORIZATION: basic ***
2025-04-14T19:03:44.5229253Z ##[endgroup]
2025-04-14T19:03:44.5230051Z ##[group]Fetching the repository
2025-04-14T19:03:44.5239515Z [command]/usr/bin/git -c protocol.version=2 fetch --no-tags --prune --no-recurse-submodules --depth=1 origin +65f01d275eaf3acc71b172dbfbf5a67b441353ec:refs/remotes/pull/19380/merge
2025-04-14T19:03:46.6612404Z From https://github.com/django/django
2025-04-14T19:03:46.6615145Z  * [new ref]         65f01d275eaf3acc71b172dbfbf5a67b441353ec -> pull/19380/merge
2025-04-14T19:03:46.6671194Z ##[endgroup]
2025-04-14T19:03:46.6672460Z ##[group]Determining the checkout info
2025-04-14T19:03:46.6674247Z ##[endgroup]
2025-04-14T19:03:46.6678534Z [command]/usr/bin/git sparse-checkout disable
2025-04-14T19:03:46.6781386Z [command]/usr/bin/git config --local --unset-all extensions.worktreeConfig
2025-04-14T19:03:46.6811625Z ##[group]Checking out the ref
2025-04-14T19:03:46.6812862Z [command]/usr/bin/git checkout --progress --force refs/remotes/pull/19380/merge
2025-04-14T19:03:47.1914169Z Note: switching to 'refs/remotes/pull/19380/merge'.
2025-04-14T19:03:47.1914911Z 
2025-04-14T19:03:47.1915438Z You are in 'detached HEAD' state. You can look around, make experimental
2025-04-14T19:03:47.1916656Z changes and commit them, and you can discard any commits you make in this
2025-04-14T19:03:47.1917816Z state without impacting any branches by switching back to a branch.
2025-04-14T19:03:47.1918477Z 
2025-04-14T19:03:47.1918919Z If you want to create a new branch to retain commits you create, you may
2025-04-14T19:03:47.1919767Z do so (now or later) by using -c with the switch command. Example:
2025-04-14T19:03:47.1920255Z 
2025-04-14T19:03:47.1920481Z   git switch -c <new-branch-name>
2025-04-14T19:03:47.1921078Z 
2025-04-14T19:03:47.1921305Z Or undo this operation with:
2025-04-14T19:03:47.1921679Z 
2025-04-14T19:03:47.1921884Z   git switch -
2025-04-14T19:03:47.1922156Z 
2025-04-14T19:03:47.1922530Z Turn off this advice by setting config variable advice.detachedHead to false
2025-04-14T19:03:47.1923244Z 
2025-04-14T19:03:47.1923961Z HEAD is now at 65f01d2 Merge 33bb929f166848cc1ca000b5cd85ffa439eb185a into ab1b9cc1b38e8735979c817f42e8f54a5795c4f7
2025-04-14T19:03:47.1934368Z ##[endgroup]
2025-04-14T19:03:47.1976674Z [command]/usr/bin/git log -1 --format=%H
2025-04-14T19:03:47.1999663Z 65f01d275eaf3acc71b172dbfbf5a67b441353ec
