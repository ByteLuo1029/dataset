##[group]Run <:*:>
with:
repository: <:*:>
path: <:*:>
token: ***
ssh-strict: true
persist-credentials: <:*:>
clean: true
fetch-depth: <:NUM:>
lfs: false
submodules: <:*:>
set-safe-directory: true
##[endgroup]
##[command]/usr/bin/docker exec  920416532ddad0112e30de68b3d3249d8793b2fa61e8416f9de3eb685dff9f0f sh -c "cat /etc/*release | grep ^ID"
Syncing repository: <:*:>
##[group]Getting Git version info
Working directory is '/__w/ColossalAI/ColossalAI/TensorNVMe'
[command]/usr/bin/git version
git version <:NUM:>.<:NUM:>.<:NUM:>
##[endgroup]
Temporarily overriding HOME='/__w/_temp/fbfe2622-2566-432d-b025-a8650df70e60' before making global git config changes
Adding repository directory to the temporary git global config as a safe directory
[command]/usr/bin/git config --global --add safe.directory /__w/ColossalAI/ColossalAI/TensorNVMe
##[group]Initializing the repository
[command]/usr/bin/git init /__w/ColossalAI/ColossalAI/TensorNVMe
Initialized empty Git repository in /__w/ColossalAI/ColossalAI/TensorNVMe/.git/
[command]/usr/bin/git remote add origin <:*:>
##[endgroup]
##[group]Disabling automatic garbage collection
[command]/usr/bin/git config --local gc.auto 0
##[endgroup]
##[group]Setting up auth
[command]/usr/bin/git config --local --name-only --get-regexp <:*:>
[command]/usr/bin/git submodule foreach --recursive sh -c "git config --local --name-only --get-regexp <:*:> && git config --local --unset-all <:*:> || :"
[command]/usr/bin/git config --local --name-only --get-regexp <:*:>
[command]/usr/bin/git submodule foreach --recursive sh -c "git config --local --name-only --get-regexp <:*:> && git config --local --unset-all <:*:> || :"
[command]/usr/bin/git config <:*:> http.https://github.com/.extraheader AUTHORIZATION: basic ***
##[endgroup]
##[group]Determining the default branch
Retrieving the default branch name
Default branch 'main'
##[endgroup]
##[group]Fetching the repository
[command]/usr/bin/git -c protocol.version=2 fetch --no-tags --prune --progress --no-recurse-submodules --depth=1 origin +refs/heads/main:refs/remotes/origin/main
remote: <:*:> objects: <:*:> <:*:>
remote: <:*:> objects: <:*:> <:*:>
remote: <:*:> objects: <:*:> <:*:>
remote: <:*:> objects: <:*:> <:*:>
remote: <:*:> objects: <:*:> <:*:>
remote: <:*:> objects: <:*:> <:*:>
remote: <:*:> objects: <:*:> <:*:>
remote: <:*:> objects: <:*:> <:*:>
remote: <:*:> objects: <:*:> <:*:>
remote: <:*:> objects: <:*:> <:*:>
remote: <:*:> objects: <:*:> <:*:>
remote: <:*:> objects: <:*:> <:*:>
remote: <:*:> objects: <:*:> <:*:>
remote: <:*:> objects: <:*:> <:*:>
remote: <:*:> objects: <:*:> <:*:>
remote: <:*:> objects: <:*:> <:*:>
remote: <:*:> objects: <:*:> <:*:>
remote: <:*:> objects: <:*:> <:*:>
remote: <:*:> objects: <:*:> <:*:>
remote: <:*:> objects: <:*:> <:*:>
remote: <:*:> objects: <:*:> <:*:>
remote: <:*:> objects: <:*:> <:*:>
remote: <:*:> objects: <:*:> <:*:>
remote: <:*:> objects: <:*:> <:*:>
remote: <:*:> objects: <:*:> <:*:>
remote: <:*:> objects: <:*:> <:*:>
remote: <:*:> objects: <:*:> <:*:>
remote: <:*:> objects: <:*:> <:*:>
remote: <:*:> objects: <:*:> <:*:>
remote: <:*:> objects: <:*:> <:*:>
remote: <:*:> objects: <:*:> <:*:>
remote: <:*:> objects: <:*:> <:*:>
remote: <:*:> objects: <:*:> <:*:>
remote: <:*:> objects: <:*:> <:*:>
remote: <:*:> objects: <:*:> <:*:>
remote: <:*:> objects: <:*:> <:*:>
remote: <:*:> objects: <:*:> <:*:>
remote: <:*:> objects: <:*:> <:*:>
remote: <:*:> objects: <:*:> <:*:>
remote: <:*:> objects: <:*:> <:*:>
remote: <:*:> objects: <:*:> <:*:>
remote: <:*:> objects: <:*:> <:*:>
remote: <:*:> objects: <:*:> <:*:>
remote: <:*:> objects: <:*:> <:*:>
remote: <:*:> objects: <:*:> <:*:>
remote: <:*:> objects: <:*:> <:*:>
remote: <:*:> objects: <:*:> <:*:>
remote: <:*:> objects: <:*:> <:*:>
remote: <:*:> objects: <:*:> <:*:>
remote: <:*:> objects: <:*:> <:*:>
remote: <:*:> objects: <:*:> <:*:>
remote: <:*:> objects: <:*:> <:*:>
remote: <:*:> objects: <:*:> <:*:>
remote: <:*:> objects: <:*:> <:*:>
remote: <:*:> objects: <:*:> <:*:>
remote: <:*:> objects: <:*:> <:*:>
remote: <:*:> objects: <:*:> <:*:>
remote: <:*:> objects: <:*:> <:*:>
remote: <:*:> objects: <:*:> <:*:>
remote: <:*:> objects: <:*:> <:*:>
remote: <:*:> objects: <:*:> <:*:>
remote: <:*:> objects: <:NUM:>% (<:NUM:>/<:NUM:>), done.
remote: <:*:> objects: <:*:> <:*:>
remote: <:*:> objects: <:*:> <:*:>
remote: <:*:> objects: <:*:> <:*:>
remote: <:*:> objects: <:*:> <:*:>
remote: <:*:> objects: <:*:> <:*:>
remote: <:*:> objects: <:*:> <:*:>
remote: <:*:> objects: <:*:> <:*:>
remote: <:*:> objects: <:*:> <:*:>
remote: <:*:> objects: <:*:> <:*:>
remote: <:*:> objects: <:*:> <:*:>
remote: <:*:> objects: <:*:> <:*:>
remote: <:*:> objects: <:*:> <:*:>
remote: <:*:> objects: <:*:> <:*:>
remote: <:*:> objects: <:*:> <:*:>
remote: <:*:> objects: <:*:> <:*:>
remote: <:*:> objects: <:*:> <:*:>
remote: <:*:> objects: <:*:> <:*:>
remote: <:*:> objects: <:*:> <:*:>
remote: <:*:> objects: <:*:> <:*:>
remote: <:*:> objects: <:*:> <:*:>
remote: <:*:> objects: <:*:> <:*:>
remote: <:*:> objects: <:*:> <:*:>
remote: <:*:> objects: <:*:> <:*:>
remote: <:*:> objects: <:*:> <:*:>
remote: <:*:> objects: <:*:> <:*:>
remote: <:*:> objects: <:*:> <:*:>
remote: <:*:> objects: <:*:> <:*:>
remote: <:*:> objects: <:*:> <:*:>
remote: <:*:> objects: <:*:> <:*:>
remote: <:*:> objects: <:*:> <:*:>
remote: <:*:> objects: <:*:> <:*:>
remote: <:*:> objects: <:*:> <:*:>
remote: <:*:> objects: <:*:> <:*:>
remote: <:*:> objects: <:*:> <:*:>
remote: <:*:> objects: <:*:> <:*:>
remote: <:*:> objects: <:*:> <:*:>
remote: <:*:> objects: <:*:> <:*:>
remote: <:*:> objects: <:*:> <:*:>
remote: <:*:> objects: <:*:> <:*:>
remote: <:*:> objects: <:*:> <:*:>
remote: <:*:> objects: <:*:> <:*:>
remote: <:*:> objects: <:*:> <:*:>
remote: <:*:> objects: <:*:> <:*:>
remote: <:*:> objects: <:*:> <:*:>
remote: <:*:> objects: <:*:> <:*:>
remote: <:*:> objects: <:*:> <:*:>
remote: <:*:> objects: <:*:> <:*:>
remote: <:*:> objects: <:*:> <:*:>
remote: <:*:> objects: <:*:> <:*:>
remote: <:*:> objects: <:*:> <:*:>
remote: <:*:> objects: <:*:> <:*:>
remote: <:*:> objects: <:NUM:>% (<:NUM:>/<:NUM:>), done.
remote: Total <:NUM:> (delta <:NUM:>), reused <:NUM:> (delta <:NUM:>), pack-reused <:NUM:> (from <:NUM:>)
From <:*:>
* [new <:*:> <:*:> -> <:*:>
##[endgroup]
##[group]Determining the checkout info
##[endgroup]
##[group]Checking out the ref
[command]/usr/bin/git checkout --progress --force -B <:*:> <:*:>
Switched to a new branch 'main'
Branch 'main' set up to track remote branch 'main' from 'origin'.
##[endgroup]
[command]/usr/bin/git log <:NUM:> <:*:>
'<:SEQ:>'
