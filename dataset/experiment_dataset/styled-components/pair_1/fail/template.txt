Requested labels: ubuntu-latest
Job defined at: styled-components/styled-components/.github/workflows/test.yml@refs/pull/5555/merge
Waiting for a runner to pick up this job...
Job is waiting for a hosted runner to come online.
Job is about to start running on the hosted runner: GitHub Actions 6 (hosted)
Current runner version: '2.322.0'
##[group]Operating System
Ubuntu
24.04.1
LTS
##[endgroup]
##[group]Runner Image
Image: ubuntu-24.04
Version: 20250202.1.0
Included Software: https://github.com/actions/runner-images/blob/ubuntu24/20250202.1/images/ubuntu/Ubuntu2404-Readme.md
Image Release: https://github.com/actions/runner-images/releases/tag/ubuntu24%2F20250202.1
##[endgroup]
##[group]Runner Image Provisioner
2.0.422.1
##[endgroup]
##[group]GITHUB_TOKEN Permissions
Contents: <:*:>
Metadata: read
##[endgroup]
Secret source: <:*:>
Prepare workflow directory
Prepare all required actions
Getting action download info
##[group]Download immutable action package <:*:>
Version: 4.2.2
Digest: sha256:<:SEQ:>
Source commit SHA: <:SEQ:>
##[endgroup]
##[group]Download immutable action package <:*:>
Version: 4.2.0
Digest: sha256:<:SEQ:>
Source commit SHA: <:SEQ:>
##[endgroup]
Complete job name: <:*:>
##[group]Run <:*:>
with:
repository: <:*:>
token: ***
ssh-strict: true
ssh-user: git
persist-credentials: <:*:>
clean: true
sparse-checkout-cone-mode: true
fetch-depth: <:NUM:>
fetch-tags: false
show-progress: true
lfs: false
submodules: <:*:>
set-safe-directory: true
env:
YARN_ENABLE_HARDENED_MODE: 1
##[endgroup]
Syncing repository: <:*:>
##[group]Getting Git version info
Working directory is <:*:>
[command]/usr/bin/git version
git version <:NUM:>.<:NUM:>.<:NUM:>
##[endgroup]
Temporarily overriding HOME='/home/runner/work/_temp/ff6ac14c-8b47-456b-b3ca-a77e930b4351' before making global git config changes
Adding repository directory to the temporary git global config as a safe directory
[command]/usr/bin/git config --global --add safe.directory /home/runner/work/styled-components/styled-components
Deleting the contents of <:*:>
##[group]Initializing the repository
[command]/usr/bin/git init <:*:>
hint: Using 'master' as the name for the initial branch. This default branch name
hint: is subject to change. To configure the initial branch name to use in all
hint: of your new repositories, which will suppress this warning, call:
hint:
hint: git config --global init.defaultBranch <name>
hint:
hint: Names commonly chosen instead of 'master' are 'main', 'trunk' and
hint: 'development'. The just-created branch can be renamed via this command:
hint:
hint: git branch -m <name>
Initialized empty Git repository in <:*:>
[command]/usr/bin/git remote add origin <:*:>
##[endgroup]
##[group]Disabling automatic garbage collection
[command]/usr/bin/git config --local gc.auto 0
##[endgroup]
##[group]Setting up auth
[command]/usr/bin/git config --local --name-only --get-regexp <:*:>
[command]/usr/bin/git submodule foreach --recursive sh -c "git config --local --name-only --get-regexp <:*:> && git config --local --unset-all <:*:> || :"
[command]/usr/bin/git config --local --name-only --get-regexp <:*:>
[command]/usr/bin/git submodule foreach --recursive sh -c "git config --local --name-only --get-regexp <:*:> && git config --local --unset-all <:*:> || :"
[command]/usr/bin/git config <:*:> http.https://github.com/.extraheader AUTHORIZATION: basic ***
##[endgroup]
##[group]Fetching the repository
[command]/usr/bin/git -c protocol.version=<:NUM:> fetch <:*:> <:*:> <:*:> <:*:> <:*:> <:*:>
From <:*:>
* [new ref] <:SEQ:>-> <:*:>
##[endgroup]
##[group]Determining the checkout info
##[endgroup]
[command]/usr/bin/git sparse-checkout disable
[command]/usr/bin/git config --local --unset-all extensions.worktreeConfig
##[group]Checking out the ref
[command]/usr/bin/git checkout --progress --force refs/remotes/pull/<:NUM:>/merge
Note: switching to 'refs/remotes/pull/<:NUM:>/merge'.
2025-02-10T16:03:35.5923847Z
You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by switching back to a branch.
2025-02-10T16:03:35.5928586Z
If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -c with the switch command. Example:
2025-02-10T16:03:35.5931037Z
git switch -c <new-branch-name>
2025-02-10T16:03:35.5931891Z
Or undo this operation with:
2025-02-10T16:03:35.5932501Z
git switch -
2025-02-10T16:03:35.5933090Z
Turn off this advice by setting config variable advice.detachedHead to false
2025-02-10T16:03:35.5934976Z
HEAD is now at <:*:> Merge <:SEQ:> into <:SEQ:>
##[endgroup]
[command]/usr/bin/git log <:NUM:> <:*:>
<:SEQ:>
##[group]Run <:*:>
with:
cache: yarn
node-version-file: .nvmrc
always-auth: false
check-latest: false
token: ***
env:
YARN_ENABLE_HARDENED_MODE: 1
##[endgroup]
Node version file is not JSON file
Resolved .nvmrc as 20
Found in cache @ /opt/hostedtoolcache/node/20.18.2/x64
##[group]Environment details
node: v20.18.2
npm: 10.8.2
yarn: 4.0.2
##[endgroup]
[command]/usr/local/bin/yarn --version
4.0.2
[command]/usr/local/bin/yarn config get cacheFolder
/home/runner/.yarn/berry/cache
[command]/usr/local/bin/yarn config get enableGlobalCache
[33mtrue[39m
##[warning]Cache not found for keys: node-cache-Linux-x64-yarn-8c8b246bb61239e56cbae3ffbebf4b87203f4b310aadc1e5a35204cd5221f5f9
yarn cache is not found
##[group]Run yarn install --immutable
[36;1myarn install --immutable[0m
shell: /usr/bin/bash -e {<:NUM:>}
env:
YARN_ENABLE_HARDENED_MODE: 1
##[endgroup]
[94mâž¤[39m YN0000: Â· Yarn 4.0.2
[94mâž¤[39m [90mYN0000[39m: â”Œ Resolution step
##[group]Resolution step
##[endgroup]
[94mâž¤[39m [90mYN0000[39m: â”” Completed in 5s 758ms
[94mâž¤[39m [90mYN0000[39m: â”Œ Post-resolution validation
##[group]Post-resolution validation
[93mâž¤[39m YN0060: â”‚ [38;5;173mreact[39m is listed by your project with version [38;5;111m17.0.2[39m, which doesn't satisfy what [38;5;173mstyled-components[39m ([38;5;111mp99ba3[39m) and other dependencies request ([91mbut they have non-overlapping ranges![39m).
[93mâž¤[39m YN0060: â”‚ [38;5;173mrollup[39m is listed by your project with version [38;5;111m3.29.4[39m, which doesn't satisfy what [38;5;173mrollup-plugin-sourcemaps[39m ([38;5;111mp5e5e5[39m) and other dependencies request ([38;5;37m^2.0.0[39m).
[93mâž¤[39m YN0002: â”‚ [38;5;166m@styled-components/[39m[38;5;173mbenchmarks[39m[38;5;111m@[39m[38;5;111mworkspace:packages/benchmarks[39m doesn't provide [38;5;173mcsstype[39m ([38;5;111mpd52a5[39m), requested by [38;5;173mgoober[39m.
[93mâž¤[39m YN0086: â”‚ Some peer dependencies are incorrectly met; run [38;5;111myarn explain peer-requirements <hash>[39m for details, where [38;5;111m<hash>[39m is the six-letter p-prefixed code.
##[endgroup]
[94mâž¤[39m [90mYN0000[39m: â”” Completed
[94mâž¤[39m [90mYN0000[39m: â”Œ Fetch step
##[group]Fetch step
[93mâž¤[39m YN0066: â”‚ [38;5;173mtypescript[39m[38;5;111m@[39m[38;5;111mpatch:typescript@npm%3A5.4.5#optional!builtin<compat/typescript>::version=5.4.5&hash=e012d7[39m: Cannot apply hunk #8
[94mâž¤[39m YN0013: â”‚ [38;5;220m1125[39m packages were added to the project ([38;5;160m+ 428.87 MiB[39m).
##[endgroup]
[94mâž¤[39m [90mYN0000[39m: â”” Completed in 6s 200ms
[94mâž¤[39m [90mYN0000[39m: â”Œ Link step
##[group]Link step
[94mâž¤[39m YN0007: â”‚ [38;5;173mstyled-components-project[39m[38;5;111m@[39m[38;5;111mworkspace:.[39m must be built because it never has been before or the last one failed
##[endgroup]
[94mâž¤[39m [90mYN0000[39m: â”” Completed in 5s 442ms
[93mâž¤[39m YN0000: Â· Done with warnings in 17s 594ms
##[group]Run yarn run prettier
[36;1myarn run prettier[0m
shell: /usr/bin/bash -e {<:NUM:>}
env:
YARN_ENABLE_HARDENED_MODE: 1
##[endgroup]
Checking formatting...
[warn] src/types.ts
[warn] Code style issues found in the above file. Run Prettier to fix.
##[error]Process completed with exit code 1.
Post job cleanup.
[command]/usr/bin/git version
git version <:NUM:>.<:NUM:>.<:NUM:>
Temporarily overriding HOME='/home/runner/work/_temp/087e2301-8640-46fa-a0bc-2ab3334fa48f' before making global git config changes
Adding repository directory to the temporary git global config as a safe directory
[command]/usr/bin/git config --global --add safe.directory /home/runner/work/styled-components/styled-components
[command]/usr/bin/git config --local --name-only --get-regexp <:*:>
[command]/usr/bin/git submodule foreach --recursive sh -c "git config --local --name-only --get-regexp <:*:> && git config --local --unset-all <:*:> || :"
[command]/usr/bin/git config --local --name-only --get-regexp <:*:>
http.https://github.com/.extraheader
[command]/usr/bin/git config --local --unset-all http.https://github.com/.extraheader
[command]/usr/bin/git submodule foreach --recursive sh -c "git config --local --name-only --get-regexp <:*:> && git config --local --unset-all <:*:> || :"
Cleaning up orphan processes
