2025-01-29T14:23:27.6095241Z Requested labels: ubuntu-22.04
2025-01-29T14:23:27.6095499Z Job defined at: bigskysoftware/htmx/.github/workflows/ci.yml@refs/heads/master
2025-01-29T14:23:27.6095613Z Waiting for a runner to pick up this job...
2025-01-29T14:23:28.6486566Z Job is waiting for a hosted runner to come online.
2025-01-29T14:23:32.6639063Z Job is about to start running on the hosted runner: GitHub Actions 16 (hosted)
2025-01-29T14:23:34.5530276Z Current runner version: '2.321.0'
2025-01-29T14:23:34.5560750Z ##[group]Operating System
2025-01-29T14:23:34.5561493Z Ubuntu
2025-01-29T14:23:34.5562101Z 22.04.5
2025-01-29T14:23:34.5562568Z LTS
2025-01-29T14:23:34.5563033Z ##[endgroup]
2025-01-29T14:23:34.5563651Z ##[group]Runner Image
2025-01-29T14:23:34.5564165Z Image: ubuntu-22.04
2025-01-29T14:23:34.5564672Z Version: 20250126.1.0
2025-01-29T14:23:34.5565775Z Included Software: https://github.com/actions/runner-images/blob/ubuntu22/20250126.1/images/ubuntu/Ubuntu2204-Readme.md
2025-01-29T14:23:34.5567115Z Image Release: https://github.com/actions/runner-images/releases/tag/ubuntu22%2F20250126.1
2025-01-29T14:23:34.5567989Z ##[endgroup]
2025-01-29T14:23:34.5568608Z ##[group]Runner Image Provisioner
2025-01-29T14:23:34.5569184Z 2.0.417.1
2025-01-29T14:23:34.5569591Z ##[endgroup]
2025-01-29T14:23:34.5571804Z ##[group]GITHUB_TOKEN Permissions
2025-01-29T14:23:34.5574316Z Actions: write
2025-01-29T14:23:34.5575173Z Attestations: write
2025-01-29T14:23:34.5576218Z Checks: write
2025-01-29T14:23:34.5576848Z Contents: write
2025-01-29T14:23:34.5577369Z Deployments: write
2025-01-29T14:23:34.5577827Z Discussions: write
2025-01-29T14:23:34.5578405Z Issues: write
2025-01-29T14:23:34.5578895Z Metadata: read
2025-01-29T14:23:34.5579333Z Packages: write
2025-01-29T14:23:34.5579903Z Pages: write
2025-01-29T14:23:34.5580408Z PullRequests: write
2025-01-29T14:23:34.5580887Z RepositoryProjects: write
2025-01-29T14:23:34.5581536Z SecurityEvents: write
2025-01-29T14:23:34.5582086Z Statuses: write
2025-01-29T14:23:34.5582523Z ##[endgroup]
2025-01-29T14:23:34.5585999Z Secret source: Actions
2025-01-29T14:23:34.5587066Z Prepare workflow directory
2025-01-29T14:23:34.5905507Z Prepare all required actions
2025-01-29T14:23:34.5944139Z Getting action download info
2025-01-29T14:23:34.7520073Z Download action repository 'actions/checkout@v4' (SHA:11bd71901bbe5b1630ceea73d27597364c9af683)
2025-01-29T14:23:34.8755320Z Download action repository 'actions/setup-node@v4' (SHA:1d0ff469b7ec7b3cb9d8673fde0c81c44821de2a)
2025-01-29T14:23:35.2191967Z Complete job name: test_suite
2025-01-29T14:23:35.2923184Z ##[group]Run actions/checkout@v4
2025-01-29T14:23:35.2924319Z with:
2025-01-29T14:23:35.2924816Z   repository: bigskysoftware/htmx
2025-01-29T14:23:35.2925553Z   token: ***
2025-01-29T14:23:35.2926159Z   ssh-strict: true
2025-01-29T14:23:35.2926629Z   ssh-user: git
2025-01-29T14:23:35.2927111Z   persist-credentials: true
2025-01-29T14:23:35.2927743Z   clean: true
2025-01-29T14:23:35.2928190Z   sparse-checkout-cone-mode: true
2025-01-29T14:23:35.2928743Z   fetch-depth: 1
2025-01-29T14:23:35.2929311Z   fetch-tags: false
2025-01-29T14:23:35.2929760Z   show-progress: true
2025-01-29T14:23:35.2930236Z   lfs: false
2025-01-29T14:23:35.2930793Z   submodules: false
2025-01-29T14:23:35.2931255Z   set-safe-directory: true
2025-01-29T14:23:35.2932036Z ##[endgroup]
2025-01-29T14:23:35.5599407Z Syncing repository: bigskysoftware/htmx
2025-01-29T14:23:35.5603065Z ##[group]Getting Git version info
2025-01-29T14:23:35.5604461Z Working directory is '/home/runner/work/htmx/htmx'
2025-01-29T14:23:35.5606477Z [command]/usr/bin/git version
2025-01-29T14:23:35.5702675Z git version 2.48.1
2025-01-29T14:23:35.5732256Z ##[endgroup]
2025-01-29T14:23:35.5753437Z Temporarily overriding HOME='/home/runner/work/_temp/dd8084c7-dbdd-471d-9bef-9dad5128b480' before making global git config changes
2025-01-29T14:23:35.5755104Z Adding repository directory to the temporary git global config as a safe directory
2025-01-29T14:23:35.5758648Z [command]/usr/bin/git config --global --add safe.directory /home/runner/work/htmx/htmx
2025-01-29T14:23:35.5797042Z Deleting the contents of '/home/runner/work/htmx/htmx'
2025-01-29T14:23:35.5801047Z ##[group]Initializing the repository
2025-01-29T14:23:35.5804490Z [command]/usr/bin/git init /home/runner/work/htmx/htmx
2025-01-29T14:23:35.5913810Z hint: Using 'master' as the name for the initial branch. This default branch name
2025-01-29T14:23:35.5916010Z hint: is subject to change. To configure the initial branch name to use in all
2025-01-29T14:23:35.5918397Z hint: of your new repositories, which will suppress this warning, call:
2025-01-29T14:23:35.5920189Z hint:
2025-01-29T14:23:35.5921339Z hint: 	git config --global init.defaultBranch <name>
2025-01-29T14:23:35.5922607Z hint:
2025-01-29T14:23:35.5924028Z hint: Names commonly chosen instead of 'master' are 'main', 'trunk' and
2025-01-29T14:23:35.5925920Z hint: 'development'. The just-created branch can be renamed via this command:
2025-01-29T14:23:35.5927496Z hint:
2025-01-29T14:23:35.5928484Z hint: 	git branch -m <name>
2025-01-29T14:23:35.5929942Z Initialized empty Git repository in /home/runner/work/htmx/htmx/.git/
2025-01-29T14:23:35.5933655Z [command]/usr/bin/git remote add origin https://github.com/bigskysoftware/htmx
2025-01-29T14:23:35.5973996Z ##[endgroup]
2025-01-29T14:23:35.5977454Z ##[group]Disabling automatic garbage collection
2025-01-29T14:23:35.5979245Z [command]/usr/bin/git config --local gc.auto 0
2025-01-29T14:23:35.6012777Z ##[endgroup]
2025-01-29T14:23:35.6014762Z ##[group]Setting up auth
2025-01-29T14:23:35.6019849Z [command]/usr/bin/git config --local --name-only --get-regexp core\.sshCommand
2025-01-29T14:23:35.6055030Z [command]/usr/bin/git submodule foreach --recursive sh -c "git config --local --name-only --get-regexp 'core\.sshCommand' && git config --local --unset-all 'core.sshCommand' || :"
2025-01-29T14:23:35.6457788Z [command]/usr/bin/git config --local --name-only --get-regexp http\.https\:\/\/github\.com\/\.extraheader
2025-01-29T14:23:35.6492581Z [command]/usr/bin/git submodule foreach --recursive sh -c "git config --local --name-only --get-regexp 'http\.https\:\/\/github\.com\/\.extraheader' && git config --local --unset-all 'http.https://github.com/.extraheader' || :"
2025-01-29T14:23:35.6746378Z [command]/usr/bin/git config --local http.https://github.com/.extraheader AUTHORIZATION: basic ***
2025-01-29T14:23:35.6802624Z ##[endgroup]
2025-01-29T14:23:35.6803758Z ##[group]Fetching the repository
2025-01-29T14:23:35.6816264Z [command]/usr/bin/git -c protocol.version=2 fetch --no-tags --prune --no-recurse-submodules --depth=1 origin +d941a204fca2492e623787e8b05ddc4d2db34dbe:refs/remotes/origin/master
2025-01-29T14:23:37.2598310Z From https://github.com/bigskysoftware/htmx
2025-01-29T14:23:37.2601517Z  * [new ref]         d941a204fca2492e623787e8b05ddc4d2db34dbe -> origin/master
2025-01-29T14:23:37.2629519Z ##[endgroup]
2025-01-29T14:23:37.2630814Z ##[group]Determining the checkout info
2025-01-29T14:23:37.2632682Z ##[endgroup]
2025-01-29T14:23:37.2633831Z [command]/usr/bin/git sparse-checkout disable
2025-01-29T14:23:37.2676321Z [command]/usr/bin/git config --local --unset-all extensions.worktreeConfig
2025-01-29T14:23:37.2704933Z ##[group]Checking out the ref
2025-01-29T14:23:37.2708033Z [command]/usr/bin/git checkout --progress --force -B master refs/remotes/origin/master
2025-01-29T14:23:37.5443417Z Reset branch 'master'
2025-01-29T14:23:37.5444566Z branch 'master' set up to track 'origin/master'.
2025-01-29T14:23:37.5485245Z ##[endgroup]
2025-01-29T14:23:37.5532041Z [command]/usr/bin/git log -1 --format=%H
2025-01-29T14:23:37.5562472Z d941a204fca2492e623787e8b05ddc4d2db34dbe
2025-01-29T14:23:37.5815155Z ##[group]Run actions/setup-node@v4
2025-01-29T14:23:37.5815893Z with:
2025-01-29T14:23:37.5816343Z   node-version: 20.x
2025-01-29T14:23:37.5816630Z   always-auth: false
2025-01-29T14:23:37.5816946Z   check-latest: false
2025-01-29T14:23:37.5817510Z   token: ***
2025-01-29T14:23:37.5817771Z ##[endgroup]
2025-01-29T14:23:37.7641716Z Found in cache @ /opt/hostedtoolcache/node/20.18.2/x64
2025-01-29T14:23:37.7648414Z ##[group]Environment details
2025-01-29T14:23:43.5294152Z node: v20.18.2
2025-01-29T14:23:43.5294831Z npm: 10.8.2
2025-01-29T14:23:43.5295937Z yarn: 1.22.22
2025-01-29T14:23:43.5297844Z ##[endgroup]
2025-01-29T14:23:43.5412519Z ##[group]Run npm ci
2025-01-29T14:23:43.5412912Z [36;1mnpm ci[0m
2025-01-29T14:23:43.5496252Z shell: /usr/bin/bash -e {0}
2025-01-29T14:23:43.5496652Z ##[endgroup]
2025-01-29T14:23:47.1910900Z npm warn skipping integrity check for git dependency ssh://git@github.com/Telroshan/mocha-chrome.git
2025-01-29T14:23:48.3096849Z npm warn deprecated rimraf@3.0.2: Rimraf versions prior to v4 are no longer supported
2025-01-29T14:23:48.7564379Z npm warn deprecated inflight@1.0.6: This module is not supported, and leaks memory. Do not use it. Check out lru-cache if you want a good and tested way to coalesce async requests by a key value, which is much more comprehensive and powerful.
2025-01-29T14:23:48.8697902Z npm warn deprecated glob@7.2.3: Glob versions prior to v9 are no longer supported
2025-01-29T14:23:49.0736604Z npm warn deprecated deep-assign@3.0.0: Check out `lodash.merge` or `merge-options` instead.
2025-01-29T14:23:49.3209325Z npm warn deprecated @humanwhocodes/object-schema@2.0.3: Use @eslint/object-schema instead
2025-01-29T14:23:49.3211865Z npm warn deprecated @humanwhocodes/config-array@0.11.14: Use @eslint/config-array instead
2025-01-29T14:23:49.4195427Z npm warn deprecated glob@7.2.0: Glob versions prior to v9 are no longer supported
2025-01-29T14:23:49.4365662Z npm warn deprecated glob@8.1.0: Glob versions prior to v9 are no longer supported
2025-01-29T14:23:50.0353368Z npm warn deprecated sinon@9.2.4: 16.1.1
2025-01-29T14:23:50.5552158Z 
2025-01-29T14:23:50.5553144Z added 406 packages, and audited 407 packages in 7s
2025-01-29T14:23:50.5553776Z 
2025-01-29T14:23:50.5554207Z 133 packages are looking for funding
2025-01-29T14:23:50.5554806Z   run `npm fund` for details
2025-01-29T14:23:50.5614565Z 
2025-01-29T14:23:50.5615114Z 4 vulnerabilities (2 moderate, 2 high)
2025-01-29T14:23:50.5616053Z 
2025-01-29T14:23:50.5616508Z To address issues that do not require attention, run:
2025-01-29T14:23:50.5617230Z   npm audit fix
2025-01-29T14:23:50.5617499Z 
2025-01-29T14:23:50.5617812Z To address all issues, run:
2025-01-29T14:23:50.5618603Z   npm audit fix --force
2025-01-29T14:23:50.5618955Z 
2025-01-29T14:23:50.5619246Z Run `npm audit` for details.
2025-01-29T14:23:50.5851451Z ##[group]Run npm test
2025-01-29T14:23:50.5851833Z [36;1mnpm test[0m
2025-01-29T14:23:50.5891080Z shell: /usr/bin/bash -e {0}
2025-01-29T14:23:50.5891389Z ##[endgroup]
2025-01-29T14:23:50.7036836Z 
2025-01-29T14:23:50.7037464Z > htmx.org@2.0.4 test
2025-01-29T14:23:50.7038431Z > npm run lint && npm run types-check && mocha-chrome test/index.html
2025-01-29T14:23:50.7038968Z 
2025-01-29T14:23:50.8301063Z 
2025-01-29T14:23:50.8301954Z > htmx.org@2.0.4 lint
2025-01-29T14:23:50.8302971Z > eslint src/htmx.js test/attributes/ test/core/ test/util/
2025-01-29T14:23:50.8303518Z 
2025-01-29T14:23:53.2814876Z 
2025-01-29T14:23:53.2816174Z > htmx.org@2.0.4 types-check
2025-01-29T14:23:53.2817275Z > tsc src/htmx.js --noEmit --checkJs --target es6 --lib dom,dom.iterable
2025-01-29T14:23:53.2817939Z 
2025-01-29T14:24:23.3019718Z [chrome-exception] {
2025-01-29T14:24:23.3020298Z   timestamp: 1738160663298.806,
2025-01-29T14:24:23.3020985Z   exceptionDetails: {
2025-01-29T14:24:23.3021635Z     exceptionId: 2,
2025-01-29T14:24:23.3022128Z     text: 'Uncaught',
2025-01-29T14:24:23.3022620Z     lineNumber: 0,
2025-01-29T14:24:23.3024607Z     columnNumber: 0,
2025-01-29T14:24:23.3025074Z     scriptId: '12',
2025-01-29T14:24:23.3025584Z     url: 'file:///home/runner/work/htmx/htmx/node_modules/mocha-webdriver/dist/index.js',
2025-01-29T14:24:23.3026094Z     exception: {
2025-01-29T14:24:23.3026473Z       type: 'object',
2025-01-29T14:24:23.3026732Z       subtype: 'error',
2025-01-29T14:24:23.3027072Z       className: 'SyntaxError',
2025-01-29T14:24:23.3027651Z       description: "SyntaxError: Identifier 'chrome' has already been declared",
2025-01-29T14:24:23.3028131Z       objectId: '31848436580029363.2.3',
2025-01-29T14:24:23.3028487Z       preview: [Object]
2025-01-29T14:24:23.3028841Z     },
2025-01-29T14:24:23.3029078Z     executionContextId: 2
2025-01-29T14:24:23.3029396Z   }
2025-01-29T14:24:23.3029747Z }
2025-01-29T14:24:23.6161450Z 
2025-01-29T14:24:23.6170290Z 
2025-01-29T14:24:23.6177841Z   Core htmx internals Tests
2025-01-29T14:24:23.6821377Z     ✅ makeFragment works with janky stuff (60ms)
2025-01-29T14:24:23.6831643Z     ✅ makeFragment works with template wrapping
2025-01-29T14:24:23.6839088Z     ✅ makeFragment works with template wrapping and funky combos
2025-01-29T14:24:23.6848673Z     ✅ set header works with non-ASCII values
2025-01-29T14:24:23.6865467Z     ✅ handles parseInterval correctly
2025-01-29T14:24:23.6875106Z     ✅ tokenizes correctly
2025-01-29T14:24:23.7528567Z     ✅ tags respond correctly to shouldCancel (64ms)
2025-01-29T14:24:23.8337598Z     ✅ unset properly unsets a given attribute
2025-01-29T14:24:23.8340791Z     ✅ unset properly unsets a given attribute on a parent
2025-01-29T14:24:23.8348320Z     ✅ unset does not unset a value below it in the hierarchy
2025-01-29T14:24:23.8515815Z     ✅ encoding values respects enctype on forms
2025-01-29T14:24:23.8517551Z 
2025-01-29T14:24:23.8520968Z   Core htmx API test
2025-01-29T14:24:23.8528009Z     ✅ should find properly
2025-01-29T14:24:23.8534846Z     ✅ should find properly from elt
2025-01-29T14:24:23.8541254Z     ✅ should find all properly
2025-01-29T14:24:23.8546163Z     ✅ should find all properly from elt
2025-01-29T14:24:23.8551615Z     ✅ should find closest element properly
2025-01-29T14:24:23.8556941Z     ✅ should remove element properly
2025-01-29T14:24:23.8563697Z     ✅ should remove element properly w/ selector
2025-01-29T14:24:23.8568986Z     ✅ should add class properly
2025-01-29T14:24:23.8573728Z     ✅ should add class properly w/ selector
2025-01-29T14:24:23.8784703Z     ✅ should add class properly after delay
2025-01-29T14:24:23.8797410Z     ✅ should remove class properly
2025-01-29T14:24:23.8802222Z     ✅ should remove class properly w/ selector
2025-01-29T14:24:23.9011207Z     ✅ should add class properly after delay
2025-01-29T14:24:23.9060118Z     ✅ should toggle class properly
2025-01-29T14:24:23.9065306Z     ✅ should toggle class properly w/ selector
2025-01-29T14:24:23.9072622Z     ✅ should take class properly
2025-01-29T14:24:23.9080253Z     ✅ should take class properly w/ selector
2025-01-29T14:24:23.9087538Z htmx:evalDisallowedError
2025-01-29T14:24:23.9091949Z     ✅ eval can be suppressed
2025-01-29T14:24:24.0078311Z     ✅ ajax api works (98ms)
2025-01-29T14:24:24.0136276Z     ✅ ajax api works by ID
2025-01-29T14:24:24.0145311Z htmx:targetError
2025-01-29T14:24:24.0154895Z     ✅ ajax api does not fall back to body when target invalid
2025-01-29T14:24:24.0156517Z htmx:targetError
2025-01-29T14:24:24.0158200Z     ✅ ajax api fails when target invalid
2025-01-29T14:24:24.0177065Z [chrome-exception] {
2025-01-29T14:24:24.0177545Z   timestamp: 1738160664015.984,
2025-01-29T14:24:24.0178121Z   exceptionDetails: {
2025-01-29T14:24:24.0178458Z     exceptionId: 3,
2025-01-29T14:24:24.0178725Z     text: 'Uncaught (in promise)',
2025-01-29T14:24:24.0179157Z     lineNumber: 631,
2025-01-29T14:24:24.0179433Z     columnNumber: 6,
2025-01-29T14:24:24.0179653Z     scriptId: '15',
2025-01-29T14:24:24.0180169Z     url: 'file:///home/runner/work/htmx/htmx/src/htmx.js',
2025-01-29T14:24:24.0180605Z     stackTrace: { callFrames: [Array] },
2025-01-29T14:24:24.0180915Z     exception: { type: 'undefined' },
2025-01-29T14:24:24.0181347Z     executionContextId: 2
2025-01-29T14:24:24.0181633Z   }
2025-01-29T14:24:24.0181845Z }
2025-01-29T14:24:24.0206816Z htmx:targetError
2025-01-29T14:24:24.0208299Z     ✅ ajax api fails when target invalid even if source set
2025-01-29T14:24:24.0256068Z htmx:targetError
2025-01-29T14:24:24.0259788Z     ✅ ajax api fails when source invalid and no target set
2025-01-29T14:24:24.0316546Z     ✅ ajax api falls back to targeting source if target not set
2025-01-29T14:24:24.0333036Z     ✅ ajax api works with swapSpec
2025-01-29T14:24:24.0349055Z     ✅ ajax api works with select
2025-01-29T14:24:24.0367575Z     ✅ ajax api works with Hx-Select overrides select
2025-01-29T14:24:24.0382297Z     ✅ ajax returns a promise
2025-01-29T14:24:24.1081569Z     ✅ ajax api can pass parameters (65ms)
2025-01-29T14:24:24.1093512Z     ✅ ajax api Content-Type header is application/x-www-form-urlencoded
2025-01-29T14:24:24.1105249Z     ✅ ajax api Content-Type header override to application/json
2025-01-29T14:24:24.1132124Z     ✅ can re-init with new attributes
2025-01-29T14:24:24.1149494Z     ✅ does not trigger load on re-init of an existing element
2025-01-29T14:24:24.1166290Z     ✅ onLoad is called... onLoad
2025-01-29T14:24:24.1171301Z     ✅ triggers properly
2025-01-29T14:24:24.1176655Z     ✅ triggers properly w/ selector
2025-01-29T14:24:24.1181796Z     ✅ triggers with no details properly
2025-01-29T14:24:24.1188413Z     ✅ swaps content properly (basic)
2025-01-29T14:24:24.1195480Z     ✅ swaps content properly (with select)
2025-01-29T14:24:24.1206429Z     ✅ swaps content properly (with oob)
2025-01-29T14:24:24.1213877Z     ✅ swaps content properly (with select oob)
2025-01-29T14:24:24.1224972Z     ✅ swap delete works when parent is removed
2025-01-29T14:24:24.1235809Z     ✅ swap outerHTML works when parent is removed
2025-01-29T14:24:24.1240678Z 
2025-01-29T14:24:24.1241084Z   Core htmx AJAX Tests
2025-01-29T14:24:24.1254374Z     ✅ issues a GET request on click and swaps content
2025-01-29T14:24:24.1286430Z     ✅ processes inner content properly
2025-01-29T14:24:24.1303543Z     ✅ handles swap outerHTML properly
2025-01-29T14:24:24.1335486Z     ✅ handles beforebegin properly
2025-01-29T14:24:24.1355201Z     ✅ handles afterbegin properly
2025-01-29T14:24:24.1374270Z     ✅ handles afterbegin properly with no initial content
2025-01-29T14:24:24.1403012Z     ✅ handles afterend properly
2025-01-29T14:24:24.1422182Z     ✅ handles beforeend properly
2025-01-29T14:24:24.1485281Z     ✅ handles beforeend properly with no initial content
2025-01-29T14:24:24.1498817Z     ✅ handles hx-target properly
2025-01-29T14:24:24.1507194Z     ✅ handles 204 NO CONTENT responses properly
2025-01-29T14:24:24.1542232Z     ✅ handles 304 NOT MODIFIED responses properly
2025-01-29T14:24:24.1555211Z     ✅ handles hx-trigger with non-default value
2025-01-29T14:24:24.1566036Z     ✅ handles hx-trigger with load event
2025-01-29T14:24:24.1589192Z     ✅ sets the content type of the request properly
2025-01-29T14:24:24.1603320Z     ✅ issues two requests when clicked twice before response
2025-01-29T14:24:24.1617057Z     ✅ issues two requests when clicked three times before response
2025-01-29T14:24:24.1627796Z     ✅ properly handles hx-select for basic situation
2025-01-29T14:24:24.1638351Z     ✅ properly handles hx-select for full html document situation
2025-01-29T14:24:24.1852713Z     ✅ properly settles attributes on interior elements
2025-01-29T14:24:24.2109413Z     ✅ properly settles attributes elements with single quotes in id
2025-01-29T14:24:24.2364385Z     ✅ properly settles attributes elements with double quotes in id
2025-01-29T14:24:24.3075232Z     ✅ properly handles multiple select input (66ms)
2025-01-29T14:24:24.3094720Z     ✅ properly handles multiple select input when "multiple" attribute is empty string
2025-01-29T14:24:24.3113672Z     ✅ properly handles two multiple select inputs w/ same name
2025-01-29T14:24:24.3193687Z     ✅ properly handles multiple email input
2025-01-29T14:24:24.3241171Z     ✅ properly handles checkbox inputs
2025-01-29T14:24:24.3254763Z     ✅ properly handles radio inputs
2025-01-29T14:24:24.3270812Z     ✅ text nodes dont screw up settling via variable capture
2025-01-29T14:24:24.3419387Z     ✅ script nodes evaluate
2025-01-29T14:24:24.3782514Z     ✅ stand alone script nodes evaluate
2025-01-29T14:24:24.3791518Z     ✅ script nodes can define global functions
2025-01-29T14:24:24.3802053Z     ✅ child script nodes evaluate when children
2025-01-29T14:24:24.3815032Z     ✅ child script nodes evaluate when first child
2025-01-29T14:24:24.3826284Z     ✅ child script nodes evaluate when not explicitly marked javascript
2025-01-29T14:24:24.3836997Z     ✅ script nodes do not evaluate when explicitly marked as something other than javascript
2025-01-29T14:24:24.3854328Z Here...
2025-01-29T14:24:24.3859371Z     ✅ script nodes evaluate after swap
2025-01-29T14:24:24.3864352Z     - script node exceptions do not break rendering
2025-01-29T14:24:24.3875567Z Response Status Error Code 404 from file:///home/runner/work/htmx/htmx/test/index.html
2025-01-29T14:24:24.3876904Z     ✅ allows empty verb values
2025-01-29T14:24:24.3886107Z Response Status Error Code 404 from file:///home/runner/work/htmx/htmx/test/index.html
2025-01-29T14:24:24.3887383Z     ✅ allows blank verb values
2025-01-29T14:24:24.3899511Z     ✅ input values are not settle swapped (causes flicker)
2025-01-29T14:24:24.4963415Z     ✅ autofocus attribute works properly
2025-01-29T14:24:24.4965016Z     ✅ autofocus attribute works properly w/ child
2025-01-29T14:24:24.4966544Z     ✅ autofocus attribute works properly w/ true value
2025-01-29T14:24:24.4968994Z     ✅ multipart/form-data encoding works
2025-01-29T14:24:24.4970109Z     ✅ removed elements do not issue requests
2025-01-29T14:24:24.4970982Z     ✅ title tags update title
2025-01-29T14:24:24.4971634Z     ✅ svg title tags do not update title
2025-01-29T14:24:24.4972510Z     ✅ first title tag outside svg title tags updates title
2025-01-29T14:24:24.4980810Z Response Status Error Code 400 from /test
2025-01-29T14:24:24.4981541Z Response Status Error Code 400 from /test
2025-01-29T14:24:24.4982256Z     ✅ title update does not URL escape
2025-01-29T14:24:24.4983100Z     ✅ by default 400 content is not swapped
2025-01-29T14:24:24.4986356Z Response Status Error Code 400 from /test
2025-01-29T14:24:24.4987138Z Response Status Error Code 400 from /test2
2025-01-29T14:24:24.4987944Z Response Status Error Code 400 from /test
2025-01-29T14:24:24.4988555Z     ✅ 400 content can be swapped if configured to do so
2025-01-29T14:24:24.4989087Z     ✅ 400 content can be retargeted if configured to do so
2025-01-29T14:24:24.4989611Z     ✅ errors are triggered only on 400+
2025-01-29T14:24:24.4990047Z     ✅ content can be modified if configured to do so
2025-01-29T14:24:24.4999710Z     ✅ scripts w/ src attribute are properly loaded (53ms)
2025-01-29T14:24:24.5017353Z     ✅ should load tags with colon in their names
2025-01-29T14:24:24.5271252Z     ✅ properly handles clicked submit button with a value inside a htmx form
2025-01-29T14:24:24.5285937Z     ✅ properly handles clicked submit input with a value inside a htmx form
2025-01-29T14:24:24.5296968Z     ✅ properly handles clicked submit button with a value inside a non-htmx form
2025-01-29T14:24:24.5307512Z     ✅ properly handles clicked submit input with a value inside a non-htmx form
2025-01-29T14:24:24.5321597Z     ✅ properly handles clicked submit button with a value outside a htmx form
2025-01-29T14:24:24.5336007Z     ✅ properly handles clicked submit input with a value outside a htmx form
2025-01-29T14:24:24.5358397Z     ✅ properly handles clicked submit button with a value stacking with regular input
2025-01-29T14:24:24.5392357Z     ✅ properly handles clicked submit input with a value stacking with regular input
2025-01-29T14:24:24.5410141Z     ✅ properly handles clicked submit button with a value inside a form, referencing another form
2025-01-29T14:24:24.5425375Z     ✅ properly handles clicked submit input with a value inside a form, referencing another form
2025-01-29T14:24:24.5443324Z     ✅ properly handles inputs external to form
2025-01-29T14:24:24.5460271Z     ✅ handles form post with button formmethod dialog properly
2025-01-29T14:24:24.5473110Z     ✅ handles form get with button formmethod dialog properly
2025-01-29T14:24:24.5508161Z     ✅ can associate submit buttons from outside a form with the current version of the form after swap
2025-01-29T14:24:24.5511422Z 
2025-01-29T14:24:24.5511998Z   htmx config test
2025-01-29T14:24:24.5533436Z Response Status Error Code 400 from /test
2025-01-29T14:24:24.5540746Z Response Status Error Code 500 from /test
2025-01-29T14:24:24.5543311Z     ✅ swaps normally with no config update
2025-01-29T14:24:24.5571287Z     ✅ swap all config should swap everything
2025-01-29T14:24:24.5581778Z     ✅ can change the target of a given response code
2025-01-29T14:24:24.5591719Z     ✅ can change the swap type of a given response code
2025-01-29T14:24:24.5602480Z     ✅ can change the select of a given response code
2025-01-29T14:24:24.5611495Z     ✅ can change if the title is ignored for a given response code
2025-01-29T14:24:24.5620745Z     ✅ can change if error for a given response code
2025-01-29T14:24:24.5630659Z     ✅ can trigger an event for a given response code
2025-01-29T14:24:24.5631926Z 
2025-01-29T14:24:24.5633917Z   Core htmx AJAX Verbs
2025-01-29T14:24:24.5643492Z     ✅ handles basic posts properly
2025-01-29T14:24:24.5653522Z     ✅ handles basic put properly
2025-01-29T14:24:24.5664189Z     ✅ handles basic patch properly
2025-01-29T14:24:24.5674685Z     ✅ handles basic delete properly
2025-01-29T14:24:24.5678110Z 
2025-01-29T14:24:24.5678602Z   Core htmx Parameter Handling
2025-01-29T14:24:24.5683751Z     ✅ Input includes value
2025-01-29T14:24:24.5688893Z     ✅ Input includes value on get
2025-01-29T14:24:24.5696080Z     ✅ Input includes form
2025-01-29T14:24:24.5702552Z     ✅ Input doesnt include form on get
2025-01-29T14:24:24.5708539Z     ✅ non-input includes form
2025-01-29T14:24:24.5714321Z     ✅ non-input doesnt include form on get
2025-01-29T14:24:24.5720709Z     ✅ Basic form works on get
2025-01-29T14:24:24.5726913Z     ✅ Basic form works on non-get
2025-01-29T14:24:24.5735167Z     ✅ Double values are included as array
2025-01-29T14:24:24.5742003Z     ✅ Double values are included as array in correct order
2025-01-29T14:24:24.5749069Z     ✅ Double empty values are included as array in correct order
2025-01-29T14:24:24.5756682Z     ✅ hx-include works with form
2025-01-29T14:24:24.5763526Z     ✅ hx-include works with input
2025-01-29T14:24:24.5772250Z     ✅ hx-include works with two inputs
2025-01-29T14:24:24.5779725Z     ✅ hx-include works with two inputs, plus form
2025-01-29T14:24:24.5788441Z     ✅ correctly URL escapes values
2025-01-29T14:24:24.5797976Z     ✅ form includes last focused button
2025-01-29T14:24:24.5810101Z     ✅ form includes last focused submit
2025-01-29T14:24:24.5822061Z     ✅ form does not include button when focus is lost
2025-01-29T14:24:24.5834604Z     ✅ form does not include button when focus is lost outside of form
2025-01-29T14:24:24.5846627Z     ✅ form includes button name and value if button has nested elements when clicked
2025-01-29T14:24:24.5872579Z     ✅ it puts GET params in the URL by default
2025-01-29T14:24:24.5884028Z     ✅ it puts GET params in the body if methodsThatUseUrlParams is empty
2025-01-29T14:24:24.5894686Z     ✅ it puts DELETE params in the body by default
2025-01-29T14:24:24.5906679Z     ✅ it puts DELETE params in the URL if methodsThatUseUrlParams contains "delete"
2025-01-29T14:24:24.5914366Z     ✅ Input within disabled fieldset is excluded
2025-01-29T14:24:24.5992543Z     ✅ formdata works along web components
2025-01-29T14:24:24.6000688Z     ✅ formdata works with null values
2025-01-29T14:24:24.6016415Z     ✅ formdata can be used to construct a URLSearchParams instance
2025-01-29T14:24:24.6037962Z     ✅ order of parameters follows order of input elements
2025-01-29T14:24:24.6057644Z     ✅ order of parameters follows order of input elements with POST
2025-01-29T14:24:24.6548700Z     ✅ file is correctly uploaded with file input (48ms)
2025-01-29T14:24:24.6557401Z     ✅ file is correctly uploaded with htmx.ajax
2025-01-29T14:24:24.6560112Z 
2025-01-29T14:24:24.6562067Z   Core htmx AJAX headers
2025-01-29T14:24:24.6570228Z     ✅ should include the HX-Request header
2025-01-29T14:24:24.6583804Z     ✅ should include the HX-Trigger header
2025-01-29T14:24:24.6591830Z Response Status Error Code 404 from /test
2025-01-29T14:24:24.6592794Z     ✅ should include the HX-Trigger-Name header
2025-01-29T14:24:24.6598323Z     ✅ should include the HX-Target header
2025-01-29T14:24:24.6609321Z     ✅ should handle simple string HX-Trigger response header properly
2025-01-29T14:24:24.6619440Z     ✅ should handle dot path HX-Trigger response header properly
2025-01-29T14:24:24.6630202Z     ✅ should handle simple string HX-Trigger response header in different case properly
2025-01-29T14:24:24.6640243Z     ✅ should handle a namespaced HX-Trigger response header properly
2025-01-29T14:24:24.6650231Z     ✅ should handle basic JSON HX-Trigger response header properly
2025-01-29T14:24:24.6661423Z     ✅ should handle JSON with array arg HX-Trigger response header properly
2025-01-29T14:24:24.6671177Z     ✅ should handle JSON with array arg HX-Trigger response header properly
2025-01-29T14:24:24.6681846Z     ✅ should handle JSON with target array arg HX-Trigger response header properly
2025-01-29T14:24:24.6691488Z {}
2025-01-29T14:24:24.6695811Z     ✅ should survive malformed JSON in HX-Trigger response header
2025-01-29T14:24:24.6706071Z     ✅ should handle simple string HX-Trigger response header properly w/ outerHTML swap
2025-01-29T14:24:24.6715241Z     ✅ should handle simple comma separated list HX-Trigger response header properly
2025-01-29T14:24:24.6724683Z     ✅ should handle simple comma separated list without space HX-Trigger response header properly
2025-01-29T14:24:24.6734124Z     ✅ should handle dot path in comma separated list HX-Trigger response header properly
2025-01-29T14:24:24.6744040Z     ✅ should handle a namespaced comma separated list HX-Trigger response header properly
2025-01-29T14:24:24.6756441Z     ✅ should handle HX-Retarget
2025-01-29T14:24:24.6766116Z     ✅ should handle HX-Reswap
2025-01-29T14:24:24.6775859Z     ✅ should handle HX-Reselect
2025-01-29T14:24:24.6786120Z     ✅ should handle simple string HX-Trigger-After-Swap response header properly w/ outerHTML swap
2025-01-29T14:24:24.6795202Z     ✅ should handle simple comma separated list HX-Trigger-After-Swap response header properly w/ outerHTML swap
2025-01-29T14:24:24.6815808Z     ✅ should handle simple string HX-Trigger-After-Settle response header properly w/ outerHTML swap
2025-01-29T14:24:24.6827779Z     ✅ should handle simple comma separated list HX-Trigger-After-Settle response header properly w/ outerHTML swap
2025-01-29T14:24:24.7003240Z     ✅ should change body content on HX-Location
2025-01-29T14:24:24.7010479Z     ✅ request to restore history should include the HX-Request header
2025-01-29T14:24:24.7027491Z     ✅ request to restore history should include the HX-History-Restore-Request header
2025-01-29T14:24:24.7035311Z     ✅ request to restore history should include the HX-Current-URL header
2025-01-29T14:24:24.7038504Z 
2025-01-29T14:24:24.7038888Z   Core htmx Regression Tests
2025-01-29T14:24:24.7045066Z     ✅ SVGs process properly in IE11
2025-01-29T14:24:24.7062265Z     ✅ Handles https://github.com/bigskysoftware/htmx/issues/4 properly
2025-01-29T14:24:24.7075356Z     ✅ Handles https://github.com/bigskysoftware/htmx/issues/33 "empty values" properly
2025-01-29T14:24:24.7092984Z     ✅ name=id doesnt cause an error
2025-01-29T14:24:24.7104898Z     ✅ empty id doesnt cause an error
2025-01-29T14:24:24.7116611Z     ✅ id with dot in value doesnt cause an error
2025-01-29T14:24:24.7127206Z     ✅ @ symbol in attributes does not break requests
2025-01-29T14:24:24.7138012Z     ✅ @ symbol in attributes does not break attribute settling requests
2025-01-29T14:24:24.7153541Z     ✅ selected element with ID does not cause NPE when it disappears
2025-01-29T14:24:24.7160584Z     ✅ does not submit with a false condition on a form
2025-01-29T14:24:24.7174896Z     ✅ two elements can listen for the same event on another element
2025-01-29T14:24:24.7218146Z     ✅ a form can reset based on the htmx:afterRequest event
2025-01-29T14:24:24.7231884Z     ✅ supports image maps
2025-01-29T14:24:24.7244322Z     ✅ supports unset on hx-select
2025-01-29T14:24:24.7581456Z     ✅ can trigger swaps from fields that don't support setSelectionRange
2025-01-29T14:24:24.7593077Z console.trace
2025-01-29T14:24:24.8098752Z     ✅ script tags only execute once (52ms)
2025-01-29T14:24:24.8154409Z console.trace
2025-01-29T14:24:24.8660165Z     ✅ script tags only execute once when nested (52ms)
2025-01-29T14:24:24.9217887Z     ✅ htmx.config.allowScriptTags properly disables script tags (51ms)
2025-01-29T14:24:24.9774646Z     ✅ htmx.config.allowScriptTags properly disables script tags when nested (51ms)
2025-01-29T14:24:24.9818168Z 
2025-01-29T14:24:24.9818450Z   security options
2025-01-29T14:24:24.9823405Z     ✅ can disable a single elt
2025-01-29T14:24:24.9828208Z     ✅ can disable a parent elt
2025-01-29T14:24:24.9838867Z     ✅ can disable a single elt dynamically
2025-01-29T14:24:24.9853949Z     ✅ can disable a single elt dynamically & enable it back
2025-01-29T14:24:24.9864661Z     ✅ can disable a single parent elt dynamically
2025-01-29T14:24:24.9880474Z     ✅ can disable a single parent elt dynamically & enable it back
2025-01-29T14:24:25.4732790Z htmx:afterRequest
2025-01-29T14:24:25.4734155Z htmx:sendError
2025-01-29T14:24:25.4740958Z     ✅ can make egress cross site requests when htmx.config.selfRequestsOnly is disabled (485ms)
2025-01-29T14:24:25.4742739Z Resource Failed to Load: {
2025-01-29T14:24:25.4743175Z   url: 'https://hypermedia.systems/www/test',
2025-01-29T14:24:25.4743650Z   method: 'GET',
2025-01-29T14:24:25.4744062Z   reason: 'net::ERR_FAILED'
2025-01-29T14:24:25.4744355Z }
2025-01-29T14:24:25.5244968Z     ✅ can disable hx-on on a single elt
2025-01-29T14:24:25.5248175Z     ✅ can disable hx-on on a parent elt
2025-01-29T14:24:25.5257535Z     ✅ can disable hx-on on a single elt dynamically
2025-01-29T14:24:25.5262759Z     ✅ can disable hx-on on a parent elt dynamically
2025-01-29T14:24:25.5269348Z htmx:invalidPath
2025-01-29T14:24:25.5273585Z     ✅ can't make egress cross site requests when htmx.config.selfRequestsOnly is true
2025-01-29T14:24:25.5278584Z htmx:invalidPath
2025-01-29T14:24:25.5282612Z     ✅ can cancel egress request based on htmx:validateUrl event
2025-01-29T14:24:25.5286792Z htmx:invalidPath
2025-01-29T14:24:25.5290767Z     ✅ can cancel egress request based on htmx:validateUrl event, sameHost is false
2025-01-29T14:24:25.5297067Z htmx:invalidPath
2025-01-29T14:24:25.5299314Z     ✅ can disable script tag support with htmx.config.allowScriptTags
2025-01-29T14:24:25.5302100Z 
2025-01-29T14:24:25.5303966Z   Core htmx Shadow DOM Tests
2025-01-29T14:24:25.5312509Z     ✅ properly retrieves shadow root for extended selector
2025-01-29T14:24:25.5317283Z     ✅ properly escapes shadow root for extended selector
2025-01-29T14:24:25.5321278Z     ✅ properly retrives shadow root host for extended selector
2025-01-29T14:24:25.5331801Z     ✅ issues a GET request on click and swaps content
2025-01-29T14:24:25.5350006Z     ✅ processes inner content properly
2025-01-29T14:24:25.5363526Z     ✅ handles swap outerHTML properly
2025-01-29T14:24:25.5389455Z     ✅ handles beforebegin properly
2025-01-29T14:24:25.5407476Z     ✅ handles afterbegin properly
2025-01-29T14:24:25.5424271Z     ✅ handles afterbegin properly with no initial content
2025-01-29T14:24:25.5449855Z     ✅ handles afterend properly
2025-01-29T14:24:25.5466528Z     ✅ handles beforeend properly
2025-01-29T14:24:25.5482277Z     ✅ handles beforeend properly with no initial content
2025-01-29T14:24:25.5493734Z     ✅ handles hx-target properly
2025-01-29T14:24:25.5502500Z     ✅ handles 204 NO CONTENT responses properly
2025-01-29T14:24:25.5523193Z     ✅ handles 304 NOT MODIFIED responses properly
2025-01-29T14:24:25.5533470Z     ✅ handles hx-trigger with non-default value
2025-01-29T14:24:25.5542808Z     ✅ handles hx-trigger with load event
2025-01-29T14:24:25.5552190Z     ✅ sets the content type of the request properly
2025-01-29T14:24:25.5563083Z     ✅ issues two requests when clicked twice before response
2025-01-29T14:24:25.5573840Z     ✅ issues two requests when clicked three times before response
2025-01-29T14:24:25.5584334Z     ✅ properly handles hx-select for basic situation
2025-01-29T14:24:25.5594514Z     ✅ properly handles hx-select for full html document situation
2025-01-29T14:24:25.5861994Z     ✅ properly settles attributes on interior elements
2025-01-29T14:24:25.6078623Z     ✅ properly settles attributes elements with single quotes in id
2025-01-29T14:24:25.6331438Z     ✅ properly settles attributes elements with double quotes in id
2025-01-29T14:24:25.6392583Z     ✅ properly handles multiple select input
2025-01-29T14:24:25.6408189Z     ✅ properly handles multiple select input when "multiple" attribute is empty string
2025-01-29T14:24:25.6425303Z     ✅ properly handles two multiple select inputs w/ same name
2025-01-29T14:24:25.6440813Z     ✅ properly handles multiple email input
2025-01-29T14:24:25.6474146Z     ✅ properly handles checkbox inputs
2025-01-29T14:24:25.6488592Z     ✅ text nodes dont screw up settling via variable capture
2025-01-29T14:24:25.6499715Z     ✅ script nodes evaluate
2025-01-29T14:24:25.6509823Z     ✅ stand alone script nodes evaluate
2025-01-29T14:24:25.6519956Z     ✅ script nodes can define global functions
2025-01-29T14:24:25.6529412Z     ✅ child script nodes evaluate when children
2025-01-29T14:24:25.6539144Z     ✅ child script nodes evaluate when first child
2025-01-29T14:24:25.6548427Z     ✅ child script nodes evaluate when not explicitly marked javascript
2025-01-29T14:24:25.6558065Z     ✅ script nodes do not evaluate when explicitly marked as something other than javascript
2025-01-29T14:24:25.6567837Z Here...
2025-01-29T14:24:25.6572332Z     ✅ script nodes evaluate after swap
2025-01-29T14:24:25.6577141Z     - script node exceptions do not break rendering
2025-01-29T14:24:25.6585557Z Response Status Error Code 404 from file:///home/runner/work/htmx/htmx/test/index.html
2025-01-29T14:24:25.6586627Z     ✅ allows empty verb values
2025-01-29T14:24:25.6596026Z Response Status Error Code 404 from file:///home/runner/work/htmx/htmx/test/index.html
2025-01-29T14:24:25.6596963Z     ✅ allows blank verb values
2025-01-29T14:24:25.6610246Z     ✅ input values are not settle swapped (causes flicker)
2025-01-29T14:24:25.6625107Z     ✅ autofocus attribute works properly
2025-01-29T14:24:25.6639605Z     ✅ autofocus attribute works properly w/ child
2025-01-29T14:24:25.6654481Z     ✅ autofocus attribute works properly w/ true value
2025-01-29T14:24:25.6666707Z     ✅ multipart/form-data encoding works
2025-01-29T14:24:25.6672496Z     ✅ removed elements do not issue requests
2025-01-29T14:24:25.6683745Z     ✅ title tags update title
2025-01-29T14:24:25.6693042Z     ✅ svg title tags do not update title
2025-01-29T14:24:25.6704653Z     ✅ first title tag outside svg title tags updates title
2025-01-29T14:24:25.6714100Z     ✅ title update does not URL escape
2025-01-29T14:24:25.6722476Z Response Status Error Code 400 from /test
2025-01-29T14:24:25.6723977Z     ✅ by default 400 content is not swapped
2025-01-29T14:24:25.6752085Z Response Status Error Code 400 from /test
2025-01-29T14:24:25.6755963Z     ✅ 400 content can be swapped if configured to do so
2025-01-29T14:24:25.6766333Z Response Status Error Code 400 from /test
2025-01-29T14:24:25.6768991Z     ✅ 400 content can be retargeted if configured to do so
2025-01-29T14:24:25.6780324Z Response Status Error Code 400 from /test2
2025-01-29T14:24:25.6782474Z     ✅ errors are triggered only on 400+
2025-01-29T14:24:25.6794435Z Response Status Error Code 400 from /test
2025-01-29T14:24:25.6795466Z     ✅ content can be modified if configured to do so
2025-01-29T14:24:25.6800410Z     - scripts w/ src attribute are properly loaded
2025-01-29T14:24:25.6811802Z     ✅ should load tags with colon in their names
2025-01-29T14:24:25.6826514Z     ✅ properly handles clicked submit button with a value inside a htmx form
2025-01-29T14:24:25.6843224Z     ✅ properly handles clicked submit input with a value inside a htmx form
2025-01-29T14:24:25.6852832Z     ✅ properly handles clicked submit button with a value inside a non-htmx form
2025-01-29T14:24:25.6862792Z     ✅ properly handles clicked submit input with a value inside a non-htmx form
2025-01-29T14:24:25.6875125Z     ✅ properly handles clicked submit button with a value outside a htmx form
2025-01-29T14:24:25.6888151Z     ✅ properly handles clicked submit input with a value outside a htmx form
2025-01-29T14:24:25.6907693Z     ✅ properly handles clicked submit button with a value stacking with regular input
2025-01-29T14:24:25.6924222Z     ✅ properly handles clicked submit input with a value stacking with regular input
2025-01-29T14:24:25.6938826Z     ✅ properly handles clicked submit button with a value inside a form, referencing another form
2025-01-29T14:24:25.6952793Z     ✅ properly handles clicked submit input with a value inside a form, referencing another form
2025-01-29T14:24:25.6967485Z     ✅ properly handles inputs external to form
2025-01-29T14:24:25.6979280Z     ✅ handles form post with button formmethod dialog properly
2025-01-29T14:24:25.6989056Z     ✅ handles form get with button formmethod dialog properly
2025-01-29T14:24:25.7016628Z     ✅ can associate submit buttons from outside a form with the current version of the form after swap
2025-01-29T14:24:25.7022322Z     ✅ can handle basic events w/ no other attributes
2025-01-29T14:24:25.7027624Z     ✅ can handle basic events w/ no other attributes in child
2025-01-29T14:24:25.7037170Z     ✅ can target shadow DOM Host and place content below web component
2025-01-29T14:24:25.7046253Z     ✅ can target global id outside shadow DOM and place content
2025-01-29T14:24:25.7056862Z     ✅ can target shadow DOM Host with outerHTML swap and replace it
2025-01-29T14:24:25.7061446Z 
2025-01-29T14:24:25.7062507Z   Core htmx perf Tests
2025-01-29T14:24:25.7314623Z     ✅ history implementation should be fast
2025-01-29T14:24:25.7404040Z     ✅ history snapshot cleaning should be fast
2025-01-29T14:24:25.8278022Z 
2025-01-29T14:24:25.8279777Z   Core htmx client side validation tests
2025-01-29T14:24:25.8295247Z     ✅ HTML5 required validation error prevents request
2025-01-29T14:24:25.8306864Z     ✅ Novalidate skips form validation
2025-01-29T14:24:25.8320155Z     ✅ Validation skipped for indirect form submission
2025-01-29T14:24:25.8536522Z     ✅ Formnovalidate skips form validation
2025-01-29T14:24:25.8555781Z     ✅ HTML5 pattern validation error prevents request
2025-01-29T14:24:25.8629558Z     ✅ Custom validation error prevents request
2025-01-29T14:24:25.8641571Z     ✅ Custom validation error prevents request for unticked checkboxes
2025-01-29T14:24:25.8652662Z     ✅ Custom validation error prevents request for unselected radiogroups
2025-01-29T14:24:25.8678324Z     ✅ hyperscript validation error prevents request
2025-01-29T14:24:25.8686051Z     ✅ calls htmx:validation:failed on failure
2025-01-29T14:24:25.8691976Z     ✅ calls htmx:validation:halted on failure
2025-01-29T14:24:25.8710774Z     ✅ hx-validate can prevent a single input from submitting
2025-01-29T14:24:25.8712887Z 
2025-01-29T14:24:25.8713296Z   Core htmx tokenizer tests
2025-01-29T14:24:25.8719263Z     ✅ tokenizes properly
2025-01-29T14:24:25.8726141Z     ✅ generates conditionals property
2025-01-29T14:24:25.8726534Z 
2025-01-29T14:24:25.8727006Z   Core htmx extension tests
2025-01-29T14:24:25.8734772Z     ✅ should support event cancellation by returning false
2025-01-29T14:24:25.8745896Z     ✅ should support event cancellation with preventDefault
2025-01-29T14:24:25.8746447Z 
2025-01-29T14:24:25.8746646Z   default extensions behavior
2025-01-29T14:24:25.8758729Z     ✅ handleSwap: afterSwap and afterSettle triggered if extension defined on parent
2025-01-29T14:24:25.8777942Z     ✅ handleSwap: new content is handled by htmx
2025-01-29T14:24:25.8778365Z 
2025-01-29T14:24:25.8781480Z   hx-boost attribute
2025-01-29T14:24:25.8798728Z     ✅ handles basic anchor properly
2025-01-29T14:24:25.8817058Z     ✅ handles basic form post properly
2025-01-29T14:24:25.8833074Z     ✅ handles basic form post with button formaction properly
2025-01-29T14:24:25.8848809Z     ✅ handles basic form post with button formmethod properly
2025-01-29T14:24:25.8864309Z     ✅ handles basic form post properly w/ explicit action
2025-01-29T14:24:25.8882044Z     ✅ handles basic form get properly
2025-01-29T14:24:25.8898422Z     ✅ handles basic form with no explicit method property
2025-01-29T14:24:25.8903284Z     ✅ does not boost forms with method="dialog"
2025-01-29T14:24:25.8917410Z     ✅ handles basic anchor properly w/ data-* prefix
2025-01-29T14:24:25.8931776Z     ✅ overriding default swap style does not effect boosting
2025-01-29T14:24:25.8936741Z     ✅ anchors w/ explicit targets are not boosted
2025-01-29T14:24:25.8949341Z     ✅ includes an HX-Boosted Header
2025-01-29T14:24:25.8971846Z     ✅ form get w/ search params in action property excludes search params
2025-01-29T14:24:25.8992870Z     ✅ form post w/ query params in action property uses full url
2025-01-29T14:24:25.9008596Z     ✅ form get with an unset action properly submits
2025-01-29T14:24:25.9320447Z     ✅ form get with no action properly clears existing parameters on submit
2025-01-29T14:24:25.9987723Z     ✅ form get with an empty action properly clears existing parameters on submit
2025-01-29T14:24:25.9991572Z 
2025-01-29T14:24:25.9992366Z   hx-confirm attribute
2025-01-29T14:24:26.0006923Z     ✅ prompts using window.confirm when hx-confirm is set
2025-01-29T14:24:26.0015873Z     ✅ stops the request if confirm is cancelled
2025-01-29T14:24:26.0025732Z     ✅ uses the value of hx-confirm as the prompt
2025-01-29T14:24:26.0036014Z     ✅ should prompt when htmx:confirm handler calls issueRequest
2025-01-29T14:24:26.0047911Z     ✅ should include the question in htmx:confirm event
2025-01-29T14:24:26.0061275Z     ✅ should allow skipping built-in window.confirm when using issueRequest
2025-01-29T14:24:26.0074217Z     ✅ should allow skipping built-in window.confirm when using issueRequest
2025-01-29T14:24:26.0094047Z     ✅ should allow htmx:confirm even when no hx-confirm is set
2025-01-29T14:24:26.0101116Z 
2025-01-29T14:24:26.0101747Z   hx-delete attribute
2025-01-29T14:24:26.0106127Z     ✅ issues a DELETE request
2025-01-29T14:24:26.0113854Z     ✅ issues a DELETE request w/ data-* prefix
2025-01-29T14:24:26.0116581Z 
2025-01-29T14:24:26.0118773Z   hx-ext attribute
2025-01-29T14:24:26.0128442Z     ✅ A simple extension is invoked properly
2025-01-29T14:24:26.0146409Z     ✅ Extensions are merged properly
2025-01-29T14:24:26.0161156Z     ✅ supports comma separated lists
2025-01-29T14:24:26.0175878Z     ✅ A simple extension is invoked properly  w/ data-* prefix
2025-01-29T14:24:26.0189505Z     ✅ A simple extension is invoked properly when an HX-Trigger event w/ a namespace fires
2025-01-29T14:24:26.0196907Z     ✅ A simple extension is invoked properly for elements it specified in getSelectors
2025-01-29T14:24:26.0223451Z     ✅ Extensions are ignored properly
2025-01-29T14:24:26.0227344Z 
2025-01-29T14:24:26.0228368Z   hx-get attribute
2025-01-29T14:24:26.0239097Z     ✅ issues a GET request on click and swaps content
2025-01-29T14:24:26.0253569Z     ✅ GET does not include surrounding data by default
2025-01-29T14:24:26.0268564Z     ✅ GET on form includes its own data by default
2025-01-29T14:24:26.0283310Z     ✅ GET on form with existing parameters works properly
2025-01-29T14:24:26.0298943Z     ✅ GET on form with anchor works properly
2025-01-29T14:24:26.0312677Z     ✅ issues a GET request on click and swaps content w/ data-* prefix
2025-01-29T14:24:26.0325704Z     ✅ does not include a cache-busting parameter when not enabled
2025-01-29T14:24:26.0338015Z     ✅ includes a cache-busting parameter when enabled w/ value "true" if no id on target
2025-01-29T14:24:26.0346709Z     ✅ includes a cache-busting parameter when enabled w/ the id of the target if there is one
2025-01-29T14:24:26.0351247Z 
2025-01-29T14:24:26.0352651Z   hx-headers attribute
2025-01-29T14:24:26.0360224Z     ✅ basic hx-headers works
2025-01-29T14:24:26.0370728Z     ✅ basic hx-headers works with braces
2025-01-29T14:24:26.0381567Z     ✅ multiple hx-headers works
2025-01-29T14:24:26.0392838Z     ✅ hx-headers can be on parents
2025-01-29T14:24:26.0402619Z     ✅ hx-headers can override parents
2025-01-29T14:24:26.0413495Z     ✅ hx-headers overrides inputs
2025-01-29T14:24:26.0423936Z     ✅ basic hx-headers javascript: works
2025-01-29T14:24:26.0433507Z     ✅ hx-headers works with braces
2025-01-29T14:24:26.0459437Z     ✅ multiple hx-headers works
2025-01-29T14:24:26.0469184Z     ✅ hx-headers can be on parents
2025-01-29T14:24:26.0480321Z     ✅ hx-headers can override parents
2025-01-29T14:24:26.0492229Z     ✅ hx-headers overrides inputs
2025-01-29T14:24:26.0495386Z 
2025-01-29T14:24:26.0496751Z   hx-history attribute
2025-01-29T14:24:26.1090641Z     ✅ history cache should not contain embargoed content (59ms)
2025-01-29T14:24:26.1138932Z 
2025-01-29T14:24:26.1139751Z   hx-include attribute
2025-01-29T14:24:26.1151850Z     ✅ By default an input includes itself
2025-01-29T14:24:26.1168112Z     ✅ non-GET includes closest form
2025-01-29T14:24:26.1189781Z     ✅ non-GET includes closest form and overrides values included that exist outside the form
2025-01-29T14:24:26.1201004Z     ✅ GET does not include closest form by default
2025-01-29T14:24:26.1211169Z     ✅ Single input not included twice when in form
2025-01-29T14:24:26.1224256Z     ✅ Two inputs are included twice when they have the same name
2025-01-29T14:24:26.1235163Z     ✅ Two inputs are included twice when in form when they have the same name
2025-01-29T14:24:26.1245533Z     ✅ Input not included twice when it explicitly refers to parent form
2025-01-29T14:24:26.1254426Z     ✅ Input can be referred to externally
2025-01-29T14:24:26.1264630Z     ✅ Two inputs can be referred to externally
2025-01-29T14:24:26.1273920Z     ✅ A form can be referred to externally
2025-01-29T14:24:26.1283434Z     ✅ By default an input includes itself w/ data-* prefix
2025-01-29T14:24:26.1292960Z     ✅ If the element is not includeable, its descendant inputs are included
2025-01-29T14:24:26.1303332Z     ✅ The `closest` modifier can be used in the hx-include selector
2025-01-29T14:24:26.1313272Z     ✅ The `this` modifier can be used in the hx-include selector
2025-01-29T14:24:26.1325082Z     ✅ Multiple extended selectors can be used in hx-include
2025-01-29T14:24:26.1335812Z     ✅ hx-include processes extended selector in between standard selectors
2025-01-29T14:24:26.1347390Z     ✅ hx-include processes nested standard selectors correctly
2025-01-29T14:24:26.1358883Z     ✅ hx-include processes wrapped next/previous selectors correctly
2025-01-29T14:24:26.1371431Z     ✅ hx-include processes wrapped closest selector correctly
2025-01-29T14:24:26.1372051Z 
2025-01-29T14:24:26.1374325Z   hx-indicator attribute
2025-01-29T14:24:26.1384410Z     ✅ Indicator classes are properly put on element with no explicit indicator
2025-01-29T14:24:26.1395173Z     ✅ Indicator classes are properly put on element with explicit indicator
2025-01-29T14:24:26.1405071Z     ✅ Indicator classes are properly put on element with relative indicator
2025-01-29T14:24:26.1415790Z     ✅ Indicator classes are properly put on element with explicit indicator w/ data-* prefix
2025-01-29T14:24:26.1425432Z     ✅ allows closest syntax in hx-indicator
2025-01-29T14:24:26.1436780Z     ✅ is removed when initiating element is removed from the DOM
2025-01-29T14:24:26.1448521Z     ✅ allows this syntax in hx-indicator
2025-01-29T14:24:26.1469172Z     ✅ multiple requests with same indicator are handled properly
2025-01-29T14:24:26.1471259Z 
2025-01-29T14:24:26.1473945Z   hx-disabled-elt attribute
2025-01-29T14:24:26.1485665Z     ✅ single element can be disabled w/ hx-disabled elts
2025-01-29T14:24:26.1500005Z     ✅ single element can be disabled w/ data-hx-disabled elts
2025-01-29T14:24:26.1512554Z     ✅ single element can be disabled w/ closest syntax
2025-01-29T14:24:26.1528017Z     ✅ multiple requests with same disabled elt are handled properly
2025-01-29T14:24:26.1540285Z     ✅ multiple elts can be disabled
2025-01-29T14:24:26.1553821Z     ✅ load trigger does not prevent disabled element working
2025-01-29T14:24:26.1572361Z     ✅ hx-disabled-elt supports multiple extended selectors
2025-01-29T14:24:26.1581823Z The selector "closest input" on hx-disabled-elt returned no matches!
2025-01-29T14:24:26.1589853Z The selector "find input" on hx-disabled-elt returned no matches!
2025-01-29T14:24:26.1597140Z The selector "next input" on hx-disabled-elt returned no matches!
2025-01-29T14:24:26.1605303Z The selector "previous input" on hx-disabled-elt returned no matches!
2025-01-29T14:24:26.1613143Z     ✅ closest/find/next/previous handle nothing to find without exception
2025-01-29T14:24:26.1614407Z 
2025-01-29T14:24:26.1618042Z   hx-inherit attribute
2025-01-29T14:24:26.1628418Z     ✅ can disable inheritance
2025-01-29T14:24:26.1641287Z     ✅ can enable inheritance for all
2025-01-29T14:24:26.1653340Z     ✅ can enable inheritance by name
2025-01-29T14:24:26.1664889Z     ✅ can enable inheritance by name (bad name, no inheritance)
2025-01-29T14:24:26.1675988Z     ✅ can enable inheritance by name with multiple attributes
2025-01-29T14:24:26.1680316Z 
2025-01-29T14:24:26.1681029Z   hx-disinherit attribute
2025-01-29T14:24:26.1692195Z     ✅ basic inheritance sanity-check
2025-01-29T14:24:26.1705071Z     ✅ disinherit exclude single attribute
2025-01-29T14:24:26.1716608Z <span id="cta" class=""><div id="unique"><div id="snowflake">Hello world</div></div></span>
2025-01-29T14:24:26.1718121Z <div id="unique"><div id="snowflake">Hello world</div></div>
2025-01-29T14:24:26.1723302Z     ✅ disinherit exclude multiple attributes
2025-01-29T14:24:26.1732066Z     ✅ disinherit exclude all attributes
2025-01-29T14:24:26.1745237Z     ✅ same-element inheritance disable
2025-01-29T14:24:26.1757547Z     ✅ same-element inheritance disable with child nodes
2025-01-29T14:24:26.1764974Z     ✅ boosted element hx-disinherit sanity check
2025-01-29T14:24:26.1770592Z     ✅ boosted element inheritance manual unset
2025-01-29T14:24:26.1779683Z     ✅ nested htmx-node with boosting parent
2025-01-29T14:24:26.1780574Z 
2025-01-29T14:24:26.1783656Z   hx-on:* attribute
2025-01-29T14:24:26.1789393Z     ✅ can handle basic events w/ no other attributes
2025-01-29T14:24:26.1794772Z     ✅ can use dashes rather than colons
2025-01-29T14:24:26.1809921Z     ✅ can modify a parameter via htmx:configRequest
2025-01-29T14:24:26.1824716Z     ✅ can modify a parameter via htmx:configRequest with dashes
2025-01-29T14:24:26.1838079Z     ✅ expands :: shorthand into htmx:
2025-01-29T14:24:26.1850633Z     ✅ expands -- shorthand into htmx:
2025-01-29T14:24:26.1858846Z     ✅ can cancel an event via preventDefault for htmx:config-request
2025-01-29T14:24:26.1892884Z     ✅ can respond to data-hx-on
2025-01-29T14:24:26.1904386Z     ✅ has the this symbol set to the element
2025-01-29T14:24:26.1916597Z     ✅ can handle multi-line JSON
2025-01-29T14:24:26.1927252Z     ✅ can handle multiple event handlers in the presence of multi-line JSON
2025-01-29T14:24:26.1944209Z     ✅ de-initializes hx-on-* content properly
2025-01-29T14:24:26.1949678Z htmx:evalDisallowedError
2025-01-29T14:24:26.1953303Z     ✅ is not evaluated when allowEval is false
2025-01-29T14:24:26.1963280Z     ✅ can handle being swapped using innerHTML
2025-01-29T14:24:26.1969862Z     ✅ cleans up all handlers when the DOM updates
2025-01-29T14:24:26.1972545Z 
2025-01-29T14:24:26.1974397Z   hx-params attribute
2025-01-29T14:24:26.1985199Z     ✅ none excludes all params
2025-01-29T14:24:26.1996431Z     ✅ "*" includes all params
2025-01-29T14:24:26.2006732Z     ✅ named includes works
2025-01-29T14:24:26.2017155Z     ✅ named exclude works
2025-01-29T14:24:26.2028131Z     ✅ named exclude works  w/ data-* prefix
2025-01-29T14:24:26.2029809Z 
2025-01-29T14:24:26.2032588Z   hx-patch attribute
2025-01-29T14:24:26.2039122Z     ✅ issues a PATCH request
2025-01-29T14:24:26.2048001Z     ✅ issues a PATCH request w/ data-* prefix
2025-01-29T14:24:26.2051593Z 
2025-01-29T14:24:26.2052526Z   hx-post attribute
2025-01-29T14:24:26.2060996Z     ✅ issues a POST request with proper headers
2025-01-29T14:24:26.2071281Z     ✅ issues a POST request with proper headers  w/ data-* prefix
2025-01-29T14:24:26.2073547Z 
2025-01-29T14:24:26.2076752Z   hx-preserve attribute
2025-01-29T14:24:26.2086639Z     ✅ handles basic response properly
2025-01-29T14:24:26.2098029Z     ✅ handles preserved element that might not be existing
2025-01-29T14:24:26.2108848Z     ✅ preserved element should not be swapped if it lies outside of hx-select
2025-01-29T14:24:26.2120193Z     ✅ preserved element should not be swapped if it is part of a oob swap
2025-01-29T14:24:26.2131866Z     ✅ preserved element should not be swapped if it is part of a hx-select-oob swap
2025-01-29T14:24:26.2189602Z     ✅ preserved element should relocated unchanged if it is part of a oob swap targeting a different loction
2025-01-29T14:24:26.2190694Z 
2025-01-29T14:24:26.2192589Z   hx-push-url attribute
2025-01-29T14:24:26.2210783Z     ✅ navigation should push an element into the cache when true
2025-01-29T14:24:26.2229550Z     ✅ navigation should push an element into the cache when string
2025-01-29T14:24:26.2255971Z     ✅ restore should return old value
2025-01-29T14:24:26.2281674Z     ✅ history restore should not have htmx support classes in content
2025-01-29T14:24:26.2425920Z     ✅ cache should only store 10 entries
2025-01-29T14:24:26.2453310Z     ✅ cache miss should issue another GET
2025-01-29T14:24:26.2466657Z     ✅ navigation should push an element into the cache  w/ data-* prefix
2025-01-29T14:24:26.2473355Z {}
2025-01-29T14:24:26.2476474Z     ✅ deals with malformed JSON in history cache when getting
2025-01-29T14:24:26.2483961Z {}
2025-01-29T14:24:26.2485600Z     ✅ deals with malformed JSON in history cache when saving
2025-01-29T14:24:26.2500134Z     ✅ does not blow out cache when saving a URL twice
2025-01-29T14:24:26.2517023Z     ✅ history cache is LRU
2025-01-29T14:24:26.2527769Z     ✅ htmx:afterSettle is called when replacing outerHTML
2025-01-29T14:24:26.2543145Z     ✅ should include parameters on a get
2025-01-29T14:24:26.7589607Z htmx:historyCacheError
2025-01-29T14:24:26.7590768Z     ✅ saveToHistoryCache should not throw (503ms)
2025-01-29T14:24:26.8270865Z 
2025-01-29T14:24:26.8275322Z   hx-put attribute
2025-01-29T14:24:26.8287688Z     ✅ issues a PUT request
2025-01-29T14:24:26.8300757Z     ✅ issues a PUT request w/ data-* prefix
2025-01-29T14:24:26.8301292Z 
2025-01-29T14:24:26.8301635Z   hx-request attribute
2025-01-29T14:24:27.2315015Z     ✅ basic hx-request timeout works (401ms)
2025-01-29T14:24:27.2371205Z     ✅ hx-request header works
2025-01-29T14:24:27.2371700Z 
2025-01-29T14:24:27.2373835Z   BOOTSTRAP - htmx AJAX Tests
2025-01-29T14:24:27.2380662Z     ✅ properly handles a partial of HTML
2025-01-29T14:24:27.2390690Z     ✅ properly handles a full HTML document
2025-01-29T14:24:27.2405465Z     ✅ properly handles a full HTML document  w/ data-* prefix
2025-01-29T14:24:27.2405992Z 
2025-01-29T14:24:27.2407144Z   hx-select-oob attribute
2025-01-29T14:24:27.2418560Z     ✅ basic hx-select-oob works
2025-01-29T14:24:27.2433801Z     ✅ multiple hx-select-oobs works
2025-01-29T14:24:27.2444366Z     ✅ basic hx-select-oob ignores bad selector
2025-01-29T14:24:27.2445299Z 
2025-01-29T14:24:27.2447637Z   hx-swap-oob attribute
2025-01-29T14:24:27.2458213Z     ✅ handles basic response properly with config {"allowNestedOobSwaps":true}
2025-01-29T14:24:27.2469004Z     ✅ handles basic response properly with config {"allowNestedOobSwaps":false}
2025-01-29T14:24:27.2480905Z     ✅ oob swap works when the response has a body tag with config {"allowNestedOobSwaps":true}
2025-01-29T14:24:27.2492223Z     ✅ oob swap works when the response has a body tag with config {"allowNestedOobSwaps":false}
2025-01-29T14:24:27.2504750Z     ✅ oob swap works when the response has html and body tags with config {"allowNestedOobSwaps":true}
2025-01-29T14:24:27.2516891Z     ✅ oob swap works when the response has html and body tags with config {"allowNestedOobSwaps":false}
2025-01-29T14:24:27.2529245Z     ✅ handles more than one oob swap properly with config {"allowNestedOobSwaps":true}
2025-01-29T14:24:27.2542394Z     ✅ handles more than one oob swap properly with config {"allowNestedOobSwaps":false}
2025-01-29T14:24:27.2553111Z     ✅ handles remvoing hx-swap-oob tag
2025-01-29T14:24:27.2567151Z     ✅ handles remvoing data-hx-swap-oob tag
2025-01-29T14:24:27.2582447Z     ✅ handles no id match properly
2025-01-29T14:24:27.2596952Z     ✅ handles basic response properly w/ data-* prefix
2025-01-29T14:24:27.2613179Z     ✅ handles outerHTML response properly
2025-01-29T14:24:27.2624845Z     ✅ handles innerHTML response properly
2025-01-29T14:24:27.2635877Z     ✅ oob swaps can be nested in content with config {"allowNestedOobSwaps": true}
2025-01-29T14:24:27.2645846Z     ✅ oob swaps in nested content are ignored and stripped with config {"allowNestedOobSwaps": false}
2025-01-29T14:24:27.2655811Z     ✅ oob swaps can use selectors to match up
2025-01-29T14:24:27.2668225Z     ✅ swaps into all targets that match the selector (innerHTML)
2025-01-29T14:24:27.2680658Z     ✅ swaps into all targets that match the selector (outerHTML)
2025-01-29T14:24:27.2692429Z     ✅ oob swap delete works properly
2025-01-29T14:24:27.2705357Z     ✅ oob swap removes templates used for oob encapsulation only properly
2025-01-29T14:24:27.2717449Z     ✅ oob swap keeps templates not used for oob swap encapsulation
2025-01-29T14:24:27.2738297Z     ✅ oob swap supports table row in fragment along other oob swap elements with config {"allowNestedOobSwaps":true}
2025-01-29T14:24:27.2755183Z     ✅ oob swap supports table row in fragment along other oob swap elements with config {"allowNestedOobSwaps":false}
2025-01-29T14:24:27.2768979Z     ✅ handles oob target in web components with both inside shadow root and config {"allowNestedOobSwaps":true}
2025-01-29T14:24:27.2779310Z     ✅ handles oob target in web components with both inside shadow root and config {"allowNestedOobSwaps":false}
2025-01-29T14:24:27.2791090Z     ✅ handles oob target in web components with main target outside web component config {"allowNestedOobSwaps":true}
2025-01-29T14:24:27.2802358Z     ✅ handles oob target in web components with main target outside web component config {"allowNestedOobSwaps":false}
2025-01-29T14:24:27.2814405Z     ✅ handles global oob target in web components with main target inside web component config {"allowNestedOobSwaps":true}
2025-01-29T14:24:27.2825678Z     ✅ handles global oob target in web components with main target inside web component config {"allowNestedOobSwaps":false}
2025-01-29T14:24:27.2826481Z 
2025-01-29T14:24:27.2830171Z   hx-swap attribute
2025-01-29T14:24:27.2845624Z     ✅ swap innerHTML properly
2025-01-29T14:24:27.2853909Z     ✅ swap textContent properly with HTML tags
2025-01-29T14:24:27.2863283Z     ✅ swap textContent properly with HTML tags and text
2025-01-29T14:24:27.2872176Z     ✅ swap textContent ignores OOB swaps
2025-01-29T14:24:27.2880518Z     ✅ swap textContent properly with text
2025-01-29T14:24:27.2895123Z     ✅ swap outerHTML properly
2025-01-29T14:24:27.2920937Z     ✅ swap beforebegin properly
2025-01-29T14:24:27.2936492Z     ✅ swap afterbegin properly
2025-01-29T14:24:27.2952097Z     ✅ swap afterbegin properly with no initial content
2025-01-29T14:24:27.2976198Z     ✅ swap afterend properly
2025-01-29T14:24:27.2991128Z     ✅ handles beforeend properly
2025-01-29T14:24:27.3007823Z     ✅ handles beforeend properly with no initial content
2025-01-29T14:24:27.3023471Z Unknown modifier in hx-swap: nonsense
2025-01-29T14:24:27.3026466Z Unknown modifier in hx-swap: nonsense
2025-01-29T14:24:27.3037871Z     ✅ properly parses various swap specifications
2025-01-29T14:24:27.3351637Z     ✅ works with a swap delay
2025-01-29T14:24:27.3406997Z     ✅ works immediately with no swap delay
2025-01-29T14:24:27.3722339Z     ✅ works with a settle delay
2025-01-29T14:24:27.4081564Z     ✅ works with no settle delay
2025-01-29T14:24:27.4140673Z     ✅ swap outerHTML properly  w/ data-* prefix
2025-01-29T14:24:27.4150826Z     ✅ swap none works properly
2025-01-29T14:24:27.4160136Z     ✅ swap outerHTML does not trigger htmx:afterSwap on original element
2025-01-29T14:24:27.4170562Z     ✅ swap delete works properly
2025-01-29T14:24:27.4180369Z     ✅ in presence of bad swap spec, it uses the default swap strategy
2025-01-29T14:24:27.4193036Z     ✅ hx-swap ignoreTitle works
2025-01-29T14:24:27.4196169Z 
2025-01-29T14:24:27.4197815Z   hx-sync attribute
2025-01-29T14:24:27.4207079Z     ✅ can use drop strategy
2025-01-29T14:24:27.4217870Z     ✅ defaults to the drop strategy
2025-01-29T14:24:27.4230450Z htmx:afterRequest
2025-01-29T14:24:27.4232661Z htmx:sendAbort
2025-01-29T14:24:27.4247332Z     ✅ can use replace strategy
2025-01-29T14:24:27.4274533Z     ✅ can use queue all strategy
2025-01-29T14:24:27.4290719Z     ✅ can use queue last strategy
2025-01-29T14:24:27.4306177Z     ✅ can use queue first strategy
2025-01-29T14:24:27.4315356Z htmx:afterRequest
2025-01-29T14:24:27.4320476Z htmx:sendAbort
2025-01-29T14:24:27.4325813Z     ✅ can use abort strategy to end existing abortable request
2025-01-29T14:24:27.4336042Z     ✅ can use abort strategy to drop abortable request when one is in flight
2025-01-29T14:24:27.4346863Z htmx:afterRequest
2025-01-29T14:24:27.4350780Z htmx:sendAbort
2025-01-29T14:24:27.4354586Z     ✅ can abort a request programmatically
2025-01-29T14:24:27.4357728Z 
2025-01-29T14:24:27.4359207Z   hx-target attribute
2025-01-29T14:24:27.4371622Z     ✅ targets an adjacent element properly
2025-01-29T14:24:27.4379232Z     ✅ targets a parent element properly
2025-01-29T14:24:27.4388814Z     ✅ targets a `this` element properly
2025-01-29T14:24:27.4399670Z     ✅ targets a `closest` element properly
2025-01-29T14:24:27.4410390Z     ✅ targets a `closest` element properly w/ hyperscript syntax
2025-01-29T14:24:27.4419014Z     ✅ targets a `find` element properly
2025-01-29T14:24:27.4427889Z     ✅ targets a `find` element properly w/ hyperscript syntax
2025-01-29T14:24:27.4436565Z     ✅ targets an inner element properly
2025-01-29T14:24:27.4445452Z     ✅ targets an inner element properly w/ hyperscript syntax
2025-01-29T14:24:27.4451861Z htmx:targetError
2025-01-29T14:24:27.4453284Z     ✅ handles bad target gracefully
2025-01-29T14:24:27.4462723Z     ✅ targets an adjacent element properly w/ data-* prefix
2025-01-29T14:24:27.4477166Z     ✅ targets a `next` element properly
2025-01-29T14:24:27.4486495Z     ✅ targets a `next` element properly w/ hyperscript syntax
2025-01-29T14:24:27.4496082Z     ✅ targets a `previous` element properly
2025-01-29T14:24:27.4505813Z     ✅ targets a `previous` element properly w/ hyperscript syntax
2025-01-29T14:24:27.4514717Z     ✅ targets a `next` element properly without selector
2025-01-29T14:24:27.4524807Z     ✅ targets a `previous` element properly without selector
2025-01-29T14:24:27.4527391Z 
2025-01-29T14:24:27.4530080Z   hx-trigger attribute
2025-01-29T14:24:27.4540076Z     ✅ non-default value works
2025-01-29T14:24:27.4551024Z     ✅ changed modifier works
2025-01-29T14:24:27.4560867Z     ✅ changed modifier works along from clause with single input
2025-01-29T14:24:27.4573875Z     ✅ changed modifier works along from clause with two inputs
2025-01-29T14:24:27.4593945Z     ✅ changed modifier counts each triggerspec separately
2025-01-29T14:24:27.4608314Z     ✅ separate changed modifier works along from clause with two inputs
2025-01-29T14:24:27.4616816Z     ✅ once modifier works
2025-01-29T14:24:27.4628939Z     ✅ once modifier works with multiple triggers
2025-01-29T14:24:27.5374818Z     ✅ polling works (74ms)
2025-01-29T14:24:27.5427217Z     ✅ non-default value works w/ data-* prefix
2025-01-29T14:24:27.5439118Z     ✅ works with multiple events
2025-01-29T14:24:27.5467807Z htmx:syntax:error
2025-01-29T14:24:27.5470344Z htmx:syntax:error
2025-01-29T14:24:27.5472389Z htmx:syntax:error
2025-01-29T14:24:27.5476180Z htmx:syntax:error
2025-01-29T14:24:27.5477373Z     ✅ parses spec strings
2025-01-29T14:24:27.5481966Z     ✅ sets default trigger for forms
2025-01-29T14:24:27.5486491Z     ✅ sets default trigger for form elements
2025-01-29T14:24:27.5492771Z     ✅ filters properly with false filter spec
2025-01-29T14:24:27.5505368Z     ✅ filters properly with true filter spec
2025-01-29T14:24:27.5514847Z     ✅ filters properly compound filter spec
2025-01-29T14:24:27.5523783Z     ✅ can refer to target element in condition
2025-01-29T14:24:27.5532763Z     ✅ can refer to target element in condition w/ equality
2025-01-29T14:24:27.5542147Z     ✅ negative condition
2025-01-29T14:24:27.5551724Z     ✅ global function call works
2025-01-29T14:24:27.5561217Z     ✅ global property event filter works
2025-01-29T14:24:27.5570391Z     ✅ global variable filter works
2025-01-29T14:24:27.6647462Z     ✅ can filter polling (107ms)
2025-01-29T14:24:27.6698470Z {}
2025-01-29T14:24:27.6699983Z  return (function(event){ return (((event.a) ? (event.a) : (window.a)).b)})
2025-01-29T14:24:27.6701075Z     ✅ bad condition issues error
2025-01-29T14:24:27.6710898Z     ✅ from clause works
2025-01-29T14:24:27.6719020Z     ✅ from clause works with body selector
2025-01-29T14:24:27.6727223Z     ✅ from clause works with document selector
2025-01-29T14:24:27.6735432Z     ✅ from clause works with window selector
2025-01-29T14:24:27.6744479Z     ✅ from clause works with closest clause
2025-01-29T14:24:27.6752964Z     ✅ from clause works with find clause
2025-01-29T14:24:27.6761389Z     ✅ from clause works with next
2025-01-29T14:24:27.6769816Z     ✅ from clause works with previous
2025-01-29T14:24:27.6785621Z     ✅ event listeners on other elements are removed when an element is swapped out
2025-01-29T14:24:27.6798283Z     ✅ multiple triggers with from clauses mixed in work
2025-01-29T14:24:27.6811754Z     ✅ from clause works with multiple extended selectors
2025-01-29T14:24:27.6823710Z     ✅ event listeners can filter on target
2025-01-29T14:24:27.6835056Z     ✅ consume prevents event propagation
2025-01-29T14:24:27.7359984Z     ✅ throttle prevents multiple requests from happening (52ms)
2025-01-29T14:24:27.7427075Z     ✅ A throttle of 0 does not prevent multiple requests from happening
2025-01-29T14:24:27.7939939Z     ✅ delay delays the request (51ms)
2025-01-29T14:24:27.8003111Z     ✅ A 0 delay does not delay the request
2025-01-29T14:24:27.8015495Z     ✅ requests are queued with last one winning by default
2025-01-29T14:24:27.8033770Z     ✅ queue:all queues all requests
2025-01-29T14:24:27.8045672Z     ✅ queue:first queues first request
2025-01-29T14:24:27.8055065Z     ✅ queue:none queues no requests
2025-01-29T14:24:27.8064810Z     ✅ load event works w/ positive filters
2025-01-29T14:24:27.8069679Z     ✅ load event works w/ negative filters
2025-01-29T14:24:27.8092369Z     ✅ reveal event works on two elements
2025-01-29T14:24:27.8103071Z     ✅ reveal event works when triggered by window
2025-01-29T14:24:27.8114877Z     ✅ revealed can be paired w/ other events
2025-01-29T14:24:27.8119444Z     ✅ revealed doesnt cause other events to trigger
2025-01-29T14:24:27.8126423Z     ✅ fires the htmx:trigger event when an AJAX attribute is specified
2025-01-29T14:24:27.8131658Z     ✅ fires the htmx:trigger event when no AJAX attribute is specified
2025-01-29T14:24:27.8642493Z     ✅ fires the htmx:trigger event for delayed triggers (50ms)
2025-01-29T14:24:27.9701467Z     ✅ fires the htmx:trigger event when the trigger is a load (101ms)
2025-01-29T14:24:27.9753985Z     ✅ filters support "this" reference to the current element
2025-01-29T14:24:27.9769115Z     ✅ correctly handles CSS descendant combinators
2025-01-29T14:24:27.9779082Z     ✅ correctly handles CSS descendant combinators in modifier target
2025-01-29T14:24:27.9784573Z     ✅ correctly handles CSS descendant combinators in modifier root
2025-01-29T14:24:27.9801750Z     ✅ uses trigger specs cache if defined
2025-01-29T14:24:27.9808042Z     ✅ correctly reuses trigger specs from the cache if defined
2025-01-29T14:24:27.9819269Z     ✅ handles spaces at the end of trigger specs
2025-01-29T14:24:27.9823242Z 
2025-01-29T14:24:27.9823660Z   hx-vals attribute
2025-01-29T14:24:27.9830819Z     ✅ basic hx-vals works
2025-01-29T14:24:27.9838520Z     ✅ basic hx-vals works with braces
2025-01-29T14:24:27.9846639Z     ✅ multiple hx-vals works
2025-01-29T14:24:27.9855104Z     ✅ Dynamic hx-vals using spread operator works
2025-01-29T14:24:27.9863449Z     ✅ hx-vals can be on parents
2025-01-29T14:24:27.9872121Z     ✅ hx-vals can override parents
2025-01-29T14:24:27.9881116Z     ✅ hx-vals overrides inputs
2025-01-29T14:24:27.9891475Z     ✅ hx-vals overrides hx-vars
2025-01-29T14:24:27.9902723Z     ✅ basic hx-vals javascript: works
2025-01-29T14:24:27.9913000Z     ✅ hx-vals works with braces
2025-01-29T14:24:27.9922569Z     ✅ multiple hx-vals works
2025-01-29T14:24:27.9933325Z     ✅ hx-vals can be on parents
2025-01-29T14:24:27.9944362Z     ✅ hx-vals can override parents
2025-01-29T14:24:27.9955381Z     ✅ hx-vals overrides inputs
2025-01-29T14:24:27.9964039Z     ✅ hx-vals treats objects as JSON
2025-01-29T14:24:27.9973852Z     ✅ basic hx-vals can be unset
2025-01-29T14:24:27.9982704Z     ✅ basic hx-vals with braces can be unset
2025-01-29T14:24:27.9991439Z     ✅ multiple hx-vals can be unset
2025-01-29T14:24:28.0001274Z     ✅ unsetting hx-vals maintains input values
2025-01-29T14:24:28.0008321Z htmx:evalDisallowedError
2025-01-29T14:24:28.0013486Z     ✅ javascript: is not evaluated when allowEval is false
2025-01-29T14:24:28.0018788Z htmx:evalDisallowedError
2025-01-29T14:24:28.0024780Z     ✅ js: is not evaluated when allowEval is false
2025-01-29T14:24:28.0033047Z     ✅ hx-vals works with null values
2025-01-29T14:24:28.0036547Z 
2025-01-29T14:24:28.0038281Z   hx-vars attribute
2025-01-29T14:24:28.0044712Z     ✅ basic hx-vars works
2025-01-29T14:24:28.0053786Z     ✅ hx-vars works with braces
2025-01-29T14:24:28.0063142Z     ✅ multiple hx-vars works
2025-01-29T14:24:28.0071252Z     ✅ hx-vars can be on parents
2025-01-29T14:24:28.0081265Z     ✅ hx-vars can override parents
2025-01-29T14:24:28.0091064Z     ✅ hx-vars overrides inputs
2025-01-29T14:24:28.0129331Z     ✅ basic hx-vars can be unset
2025-01-29T14:24:28.0138011Z     ✅ basic hx-vars with braces can be unset
2025-01-29T14:24:28.0147940Z     ✅ multiple hx-vars can be unset
2025-01-29T14:24:28.0158443Z     ✅ unsetting hx-vars maintains input values
2025-01-29T14:24:28.0164718Z htmx:evalDisallowedError
2025-01-29T14:24:28.0171881Z     ✅ is not evaluated when allowEval is false
2025-01-29T14:24:28.0172471Z 
2025-01-29T14:24:28.0176053Z   Core htmx Events
2025-01-29T14:24:28.0183912Z     ✅ htmx:load fires properly
2025-01-29T14:24:28.0192057Z     ✅ htmx:configRequest allows attribute addition
2025-01-29T14:24:28.0199846Z     ✅ htmx:configRequest is also dispatched in kebab-case
2025-01-29T14:24:28.0204613Z     ✅ events are only dispatched once if kebab and camel case match
2025-01-29T14:24:28.0209288Z     ✅ events accept an options argument and the result works as expected
2025-01-29T14:24:28.0219382Z     ✅ htmx:configRequest allows attribute removal
2025-01-29T14:24:28.0229232Z     ✅ htmx:configRequest allows header tweaking
2025-01-29T14:24:28.0247613Z     ✅ htmx:configRequest on form gives access to submit event
2025-01-29T14:24:28.0257029Z     ✅ htmx:afterSwap is called when replacing outerHTML
2025-01-29T14:24:28.0266034Z     ✅ htmx:afterSwap is called when replacing outerHTML, new line content
2025-01-29T14:24:28.0276646Z     ✅ htmx:oobBeforeSwap is called before swap
2025-01-29T14:24:28.0285862Z     ✅ htmx:oobBeforeSwap can abort a swap
2025-01-29T14:24:28.0295117Z     ✅ htmx:oobBeforeSwap is not called on an oob miss
2025-01-29T14:24:28.0307706Z     ✅ htmx:oobAfterSwap is called after swap
2025-01-29T14:24:28.0316115Z     ✅ htmx:oobAfterSwap is not called on an oob miss
2025-01-29T14:24:28.0324831Z     ✅ htmx:afterSettle is called once when replacing outerHTML
2025-01-29T14:24:28.0333621Z     ✅ htmx:afterSettle is called once when replacing outerHTML with whitespace
2025-01-29T14:24:28.0343156Z     ✅ htmx:afterSettle is called twice when replacing outerHTML with whitespace separated elements
2025-01-29T14:24:28.0355218Z     ✅ htmx:afterSettle is called multiple times when doing OOB outerHTML swaps
2025-01-29T14:24:28.0364432Z     ✅ htmx:afterRequest is called after a successful request
2025-01-29T14:24:28.0372338Z     ✅ htmx:afterOnLoad is called after a successful request
2025-01-29T14:24:28.0381468Z Response Status Error Code 500 from /test
2025-01-29T14:24:28.0384741Z     ✅ htmx:afterRequest is called after a failed request
2025-01-29T14:24:28.0402720Z htmx:afterRequest
2025-01-29T14:24:28.0405989Z htmx:sendError
2025-01-29T14:24:28.0412799Z Resource Failed to Load: { url: 'file://foo/', method: 'POST', reason: 'net::ERR_FAILED' }
2025-01-29T14:24:28.0699844Z     ✅ htmx:sendError is called after a failed request
2025-01-29T14:24:28.0753510Z     ✅ htmx:afterRequest is called when replacing outerHTML
2025-01-29T14:24:28.0762199Z     ✅ htmx:afterOnLoad is called when replacing outerHTML
2025-01-29T14:24:28.0770793Z     ✅ htmx:beforeProcessNode is called when replacing outerHTML
2025-01-29T14:24:28.0781059Z     ✅ htmx:beforeProcessNode allows htmx attribute tweaking
2025-01-29T14:24:28.0790602Z     ✅ htmx:afterProcessNode is called after replacing outerHTML
2025-01-29T14:24:28.0800728Z     ✅ htmx:afterRequest is called when targeting a parent div
2025-01-29T14:24:28.0806483Z     ✅ adding an error in htmx:configRequest stops the request
2025-01-29T14:24:28.0812409Z     ✅ preventDefault() in htmx:configRequest stops the request
2025-01-29T14:24:28.0819430Z     ✅ preventDefault() in the htmx:beforeRequest event cancels the request
2025-01-29T14:24:28.0828874Z     ✅ preventDefault() in the htmx:beforeOnLoad event cancels the swap
2025-01-29T14:24:28.0837812Z     ✅ htmx:afterRequest event contains 'successful' and 'failed' properties indicating success after successful request
2025-01-29T14:24:28.0848295Z Response Status Error Code 500 from /test
2025-01-29T14:24:28.0851846Z     ✅ htmx:afterRequest event contains 'successful' and 'failed' properties indicating failure after failed request
2025-01-29T14:24:28.0862193Z     ✅ htmx:confirm can cancel request
2025-01-29T14:24:28.0873767Z beforeSwap {"htmx-internal-data":{"initHash":3227304,"firstInitCompleted":true}} {"htmx-internal-data":{"initHash":3227305,"firstInitCompleted":true}}
2025-01-29T14:24:28.0881409Z afterSwap {"htmx-internal-data":{"initHash":3227305,"firstInitCompleted":true}} {"htmx-internal-data":{"initHash":3227305,"firstInitCompleted":true}}
2025-01-29T14:24:28.0883126Z     ✅ has updated target available when target set via htmx:beforeSwap
2025-01-29T14:24:28.0894647Z afterSwap look at me. i’m the innerHTML now.
2025-01-29T14:24:28.0898492Z     ✅ htmx:beforeSwap can override swap style using evt.detail.swapOverride and has final say on it
2025-01-29T14:24:28.0899206Z 
2025-01-29T14:24:28.0902531Z 
2025-01-29T14:24:28.0904410Z   702 passing (4s)
2025-01-29T14:24:28.0907570Z   3 pending
2025-01-29T14:24:28.0908021Z 
2025-01-29T14:24:28.1244470Z Post job cleanup.
2025-01-29T14:24:28.2953681Z Post job cleanup.
2025-01-29T14:24:28.3893274Z [command]/usr/bin/git version
2025-01-29T14:24:28.3943994Z git version 2.48.1
2025-01-29T14:24:28.4007145Z Temporarily overriding HOME='/home/runner/work/_temp/d6a3f1e3-5c33-48d0-88f2-7eb0acae6244' before making global git config changes
2025-01-29T14:24:28.4008772Z Adding repository directory to the temporary git global config as a safe directory
2025-01-29T14:24:28.4015390Z [command]/usr/bin/git config --global --add safe.directory /home/runner/work/htmx/htmx
2025-01-29T14:24:28.4062379Z [command]/usr/bin/git config --local --name-only --get-regexp core\.sshCommand
2025-01-29T14:24:28.4103537Z [command]/usr/bin/git submodule foreach --recursive sh -c "git config --local --name-only --get-regexp 'core\.sshCommand' && git config --local --unset-all 'core.sshCommand' || :"
2025-01-29T14:24:28.4375134Z [command]/usr/bin/git config --local --name-only --get-regexp http\.https\:\/\/github\.com\/\.extraheader
2025-01-29T14:24:28.4401836Z http.https://github.com/.extraheader
2025-01-29T14:24:28.4420436Z [command]/usr/bin/git config --local --unset-all http.https://github.com/.extraheader
2025-01-29T14:24:28.4459632Z [command]/usr/bin/git submodule foreach --recursive sh -c "git config --local --name-only --get-regexp 'http\.https\:\/\/github\.com\/\.extraheader' && git config --local --unset-all 'http.https://github.com/.extraheader' || :"
2025-01-29T14:24:28.4837327Z Cleaning up orphan processes
