2025-01-29T14:23:50.5851440Z ##[group]Run npm test
2025-01-29T14:23:50.5851830Z [36;1mnpm test[0m
2025-01-29T14:23:50.5891072Z shell: /usr/bin/bash -e {0}
2025-01-29T14:23:50.5891386Z ##[endgroup]
2025-01-29T14:23:50.7036788Z 
2025-01-29T14:23:50.7037455Z > htmx.org@2.0.4 test
2025-01-29T14:23:50.7038420Z > npm run lint && npm run types-check && mocha-chrome test/index.html
2025-01-29T14:23:50.7038960Z 
2025-01-29T14:23:50.8301017Z 
2025-01-29T14:23:50.8301947Z > htmx.org@2.0.4 lint
2025-01-29T14:23:50.8302965Z > eslint src/htmx.js test/attributes/ test/core/ test/util/
2025-01-29T14:23:50.8303514Z 
2025-01-29T14:23:53.2814834Z 
2025-01-29T14:23:53.2816162Z > htmx.org@2.0.4 types-check
2025-01-29T14:23:53.2817262Z > tsc src/htmx.js --noEmit --checkJs --target es6 --lib dom,dom.iterable
2025-01-29T14:23:53.2817928Z 
2025-01-29T14:24:23.3019674Z [chrome-exception] {
2025-01-29T14:24:23.3020294Z   timestamp: 1738160663298.806,
2025-01-29T14:24:23.3020981Z   exceptionDetails: {
2025-01-29T14:24:23.3021447Z     exceptionId: 2,
2025-01-29T14:24:23.3022124Z     text: 'Uncaught',
2025-01-29T14:24:23.3022616Z     lineNumber: 0,
2025-01-29T14:24:23.3024596Z     columnNumber: 0,
2025-01-29T14:24:23.3025072Z     scriptId: '12',
2025-01-29T14:24:23.3025581Z     url: 'file:///home/runner/work/htmx/htmx/node_modules/mocha-webdriver/dist/index.js',
2025-01-29T14:24:23.3026092Z     exception: {
2025-01-29T14:24:23.3026471Z       type: 'object',
2025-01-29T14:24:23.3026730Z       subtype: 'error',
2025-01-29T14:24:23.3027069Z       className: 'SyntaxError',
2025-01-29T14:24:23.3027648Z       description: "SyntaxError: Identifier 'chrome' has already been declared",
2025-01-29T14:24:23.3028129Z       objectId: '31848436580029363.2.3',
2025-01-29T14:24:23.3028485Z       preview: [Object]
2025-01-29T14:24:23.3028838Z     },
2025-01-29T14:24:23.3029076Z     executionContextId: 2
2025-01-29T14:24:23.3029394Z   }
2025-01-29T14:24:23.3029744Z }
2025-01-29T14:24:23.6161394Z 
2025-01-29T14:24:23.6170262Z 
2025-01-29T14:24:23.6177790Z   Core htmx internals Tests
2025-01-29T14:24:23.6821336Z     âœ… makeFragment works with janky stuff (60ms)
2025-01-29T14:24:23.6831622Z     âœ… makeFragment works with template wrapping
2025-01-29T14:24:23.6839069Z     âœ… makeFragment works with template wrapping and funky combos
2025-01-29T14:24:23.6848657Z     âœ… set header works with non-ASCII values
2025-01-29T14:24:23.6865445Z     âœ… handles parseInterval correctly
2025-01-29T14:24:23.6875083Z     âœ… tokenizes correctly
2025-01-29T14:24:23.7528523Z     âœ… tags respond correctly to shouldCancel (64ms)
2025-01-29T14:24:23.8337551Z     âœ… unset properly unsets a given attribute
2025-01-29T14:24:23.8340776Z     âœ… unset properly unsets a given attribute on a parent
2025-01-29T14:24:23.8348305Z     âœ… unset does not unset a value below it in the hierarchy
2025-01-29T14:24:23.8515771Z     âœ… encoding values respects enctype on forms
2025-01-29T14:24:23.8517540Z 
2025-01-29T14:24:23.8520956Z   Core htmx API test
2025-01-29T14:24:23.8527994Z     âœ… should find properly
2025-01-29T14:24:23.8534795Z     âœ… should find properly from elt
2025-01-29T14:24:23.8541241Z     âœ… should find all properly
2025-01-29T14:24:23.8546149Z     âœ… should find all properly from elt
2025-01-29T14:24:23.8551602Z     âœ… should find closest element properly
2025-01-29T14:24:23.8556929Z     âœ… should remove element properly
2025-01-29T14:24:23.8563683Z     âœ… should remove element properly w/ selector
2025-01-29T14:24:23.8568972Z     âœ… should add class properly
2025-01-29T14:24:23.8573713Z     âœ… should add class properly w/ selector
2025-01-29T14:24:23.8784663Z     âœ… should add class properly after delay
2025-01-29T14:24:23.8797328Z     âœ… should remove class properly
2025-01-29T14:24:23.8802210Z     âœ… should remove class properly w/ selector
2025-01-29T14:24:23.9011169Z     âœ… should add class properly after delay
2025-01-29T14:24:23.9060099Z     âœ… should toggle class properly
2025-01-29T14:24:23.9065292Z     âœ… should toggle class properly w/ selector
2025-01-29T14:24:23.9072606Z     âœ… should take class properly
2025-01-29T14:24:23.9079699Z     âœ… should take class properly w/ selector
2025-01-29T14:24:23.9087523Z htmx:evalDisallowedError
2025-01-29T14:24:23.9091936Z     âœ… eval can be suppressed
2025-01-29T14:24:24.0078266Z     âœ… ajax api works (98ms)
2025-01-29T14:24:24.0136239Z     âœ… ajax api works by ID
2025-01-29T14:24:24.0145290Z htmx:targetError
2025-01-29T14:24:24.0154879Z     âœ… ajax api does not fall back to body when target invalid
2025-01-29T14:24:24.0156506Z htmx:targetError
2025-01-29T14:24:24.0158184Z     âœ… ajax api fails when target invalid
2025-01-29T14:24:24.0177051Z [chrome-exception] {
2025-01-29T14:24:24.0177540Z   timestamp: 1738160664015.984,
2025-01-29T14:24:24.0178117Z   exceptionDetails: {
2025-01-29T14:24:24.0178455Z     exceptionId: 3,
2025-01-29T14:24:24.0178722Z     text: 'Uncaught (in promise)',
2025-01-29T14:24:24.0179154Z     lineNumber: 631,
2025-01-29T14:24:24.0179431Z     columnNumber: 6,
2025-01-29T14:24:24.0179650Z     scriptId: '15',
2025-01-29T14:24:24.0180137Z     url: 'file:///home/runner/work/htmx/htmx/src/htmx.js',
2025-01-29T14:24:24.0180601Z     stackTrace: { callFrames: [Array] },
2025-01-29T14:24:24.0180912Z     exception: { type: 'undefined' },
2025-01-29T14:24:24.0181343Z     executionContextId: 2
2025-01-29T14:24:24.0181630Z   }
2025-01-29T14:24:24.0181843Z }
2025-01-29T14:24:24.0206800Z htmx:targetError
2025-01-29T14:24:24.0208294Z     âœ… ajax api fails when target invalid even if source set
2025-01-29T14:24:24.0256049Z htmx:targetError
2025-01-29T14:24:24.0259771Z     âœ… ajax api fails when source invalid and no target set
2025-01-29T14:24:24.0316529Z     âœ… ajax api falls back to targeting source if target not set
2025-01-29T14:24:24.0333020Z     âœ… ajax api works with swapSpec
2025-01-29T14:24:24.0349041Z     âœ… ajax api works with select
2025-01-29T14:24:24.0367559Z     âœ… ajax api works with Hx-Select overrides select
2025-01-29T14:24:24.0382281Z     âœ… ajax returns a promise
2025-01-29T14:24:24.1081526Z     âœ… ajax api can pass parameters (65ms)
2025-01-29T14:24:24.1093455Z     âœ… ajax api Content-Type header is application/x-www-form-urlencoded
2025-01-29T14:24:24.1105232Z     âœ… ajax api Content-Type header override to application/json
2025-01-29T14:24:24.1132108Z     âœ… can re-init with new attributes
2025-01-29T14:24:24.1149481Z     âœ… does not trigger load on re-init of an existing element
2025-01-29T14:24:24.1166278Z     âœ… onLoad is called... onLoad
2025-01-29T14:24:24.1171239Z     âœ… triggers properly
2025-01-29T14:24:24.1176642Z     âœ… triggers properly w/ selector
2025-01-29T14:24:24.1181781Z     âœ… triggers with no details properly
2025-01-29T14:24:24.1188399Z     âœ… swaps content properly (basic)
2025-01-29T14:24:24.1195465Z     âœ… swaps content properly (with select)
2025-01-29T14:24:24.1206414Z     âœ… swaps content properly (with oob)
2025-01-29T14:24:24.1213862Z     âœ… swaps content properly (with select oob)
2025-01-29T14:24:24.1224958Z     âœ… swap delete works when parent is removed
2025-01-29T14:24:24.1235793Z     âœ… swap outerHTML works when parent is removed
2025-01-29T14:24:24.1240625Z 
2025-01-29T14:24:24.1241072Z   Core htmx AJAX Tests
2025-01-29T14:24:24.1254360Z     âœ… issues a GET request on click and swaps content
2025-01-29T14:24:24.1286415Z     âœ… processes inner content properly
2025-01-29T14:24:24.1303526Z     âœ… handles swap outerHTML properly
2025-01-29T14:24:24.1335471Z     âœ… handles beforebegin properly
2025-01-29T14:24:24.1355185Z     âœ… handles afterbegin properly
2025-01-29T14:24:24.1374254Z     âœ… handles afterbegin properly with no initial content
2025-01-29T14:24:24.1402997Z     âœ… handles afterend properly
2025-01-29T14:24:24.1422167Z     âœ… handles beforeend properly
2025-01-29T14:24:24.1485216Z     âœ… handles beforeend properly with no initial content
2025-01-29T14:24:24.1498799Z     âœ… handles hx-target properly
2025-01-29T14:24:24.1507178Z     âœ… handles 204 NO CONTENT responses properly
2025-01-29T14:24:24.1542213Z     âœ… handles 304 NOT MODIFIED responses properly
2025-01-29T14:24:24.1555194Z     âœ… handles hx-trigger with non-default value
2025-01-29T14:24:24.1565492Z     âœ… handles hx-trigger with load event
2025-01-29T14:24:24.1589176Z     âœ… sets the content type of the request properly
2025-01-29T14:24:24.1603307Z     âœ… issues two requests when clicked twice before response
2025-01-29T14:24:24.1617043Z     âœ… issues two requests when clicked three times before response
2025-01-29T14:24:24.1627779Z     âœ… properly handles hx-select for basic situation
2025-01-29T14:24:24.1638334Z     âœ… properly handles hx-select for full html document situation
2025-01-29T14:24:24.1852692Z     âœ… properly settles attributes on interior elements
2025-01-29T14:24:24.2109387Z     âœ… properly settles attributes elements with single quotes in id
2025-01-29T14:24:24.2364361Z     âœ… properly settles attributes elements with double quotes in id
2025-01-29T14:24:24.3075208Z     âœ… properly handles multiple select input (66ms)
2025-01-29T14:24:24.3094704Z     âœ… properly handles multiple select input when "multiple" attribute is empty string
2025-01-29T14:24:24.3113625Z     âœ… properly handles two multiple select inputs w/ same name
2025-01-29T14:24:24.3193674Z     âœ… properly handles multiple email input
2025-01-29T14:24:24.3241156Z     âœ… properly handles checkbox inputs
2025-01-29T14:24:24.3254748Z     âœ… properly handles radio inputs
2025-01-29T14:24:24.3270799Z     âœ… text nodes dont screw up settling via variable capture
2025-01-29T14:24:24.3419368Z     âœ… script nodes evaluate
2025-01-29T14:24:24.3782475Z     âœ… stand alone script nodes evaluate
2025-01-29T14:24:24.3791505Z     âœ… script nodes can define global functions
2025-01-29T14:24:24.3802040Z     âœ… child script nodes evaluate when children
2025-01-29T14:24:24.3815019Z     âœ… child script nodes evaluate when first child
2025-01-29T14:24:24.3826271Z     âœ… child script nodes evaluate when not explicitly marked javascript
2025-01-29T14:24:24.3836984Z     âœ… script nodes do not evaluate when explicitly marked as something other than javascript
2025-01-29T14:24:24.3854311Z Here...
2025-01-29T14:24:24.3859357Z     âœ… script nodes evaluate after swap
2025-01-29T14:24:24.3864295Z     - script node exceptions do not break rendering
2025-01-29T14:24:24.3875546Z Response Status Error Code 404 from file:///home/runner/work/htmx/htmx/test/index.html
2025-01-29T14:24:24.3876892Z     âœ… allows empty verb values
2025-01-29T14:24:24.3886093Z Response Status Error Code 404 from file:///home/runner/work/htmx/htmx/test/index.html
2025-01-29T14:24:24.3887371Z     âœ… allows blank verb values
2025-01-29T14:24:24.3899497Z     âœ… input values are not settle swapped (causes flicker)
2025-01-29T14:24:24.4963355Z     âœ… autofocus attribute works properly
2025-01-29T14:24:24.4965003Z     âœ… autofocus attribute works properly w/ child
2025-01-29T14:24:24.4966530Z     âœ… autofocus attribute works properly w/ true value
2025-01-29T14:24:24.4968977Z     âœ… multipart/form-data encoding works
2025-01-29T14:24:24.4970099Z     âœ… removed elements do not issue requests
2025-01-29T14:24:24.4970973Z     âœ… title tags update title
2025-01-29T14:24:24.4971627Z     âœ… svg title tags do not update title
2025-01-29T14:24:24.4972460Z     âœ… first title tag outside svg title tags updates title
2025-01-29T14:24:24.4980797Z Response Status Error Code 400 from /test
2025-01-29T14:24:24.4981534Z Response Status Error Code 400 from /test
2025-01-29T14:24:24.4982247Z     âœ… title update does not URL escape
2025-01-29T14:24:24.4983091Z     âœ… by default 400 content is not swapped
2025-01-29T14:24:24.4986342Z Response Status Error Code 400 from /test
2025-01-29T14:24:24.4987131Z Response Status Error Code 400 from /test2
2025-01-29T14:24:24.4987938Z Response Status Error Code 400 from /test
2025-01-29T14:24:24.4988551Z     âœ… 400 content can be swapped if configured to do so
2025-01-29T14:24:24.4989083Z     âœ… 400 content can be retargeted if configured to do so
2025-01-29T14:24:24.4989608Z     âœ… errors are triggered only on 400+
2025-01-29T14:24:24.4990044Z     âœ… content can be modified if configured to do so
2025-01-29T14:24:24.4999695Z     âœ… scripts w/ src attribute are properly loaded (53ms)
2025-01-29T14:24:24.5017024Z     âœ… should load tags with colon in their names
2025-01-29T14:24:24.5271225Z     âœ… properly handles clicked submit button with a value inside a htmx form
2025-01-29T14:24:24.5285878Z     âœ… properly handles clicked submit input with a value inside a htmx form
2025-01-29T14:24:24.5296953Z     âœ… properly handles clicked submit button with a value inside a non-htmx form
2025-01-29T14:24:24.5307500Z     âœ… properly handles clicked submit input with a value inside a non-htmx form
2025-01-29T14:24:24.5321583Z     âœ… properly handles clicked submit button with a value outside a htmx form
2025-01-29T14:24:24.5335992Z     âœ… properly handles clicked submit input with a value outside a htmx form
2025-01-29T14:24:24.5358380Z     âœ… properly handles clicked submit button with a value stacking with regular input
2025-01-29T14:24:24.5392338Z     âœ… properly handles clicked submit input with a value stacking with regular input
2025-01-29T14:24:24.5410076Z     âœ… properly handles clicked submit button with a value inside a form, referencing another form
2025-01-29T14:24:24.5425358Z     âœ… properly handles clicked submit input with a value inside a form, referencing another form
2025-01-29T14:24:24.5443301Z     âœ… properly handles inputs external to form
2025-01-29T14:24:24.5460255Z     âœ… handles form post with button formmethod dialog properly
2025-01-29T14:24:24.5473095Z     âœ… handles form get with button formmethod dialog properly
2025-01-29T14:24:24.5508137Z     âœ… can associate submit buttons from outside a form with the current version of the form after swap
2025-01-29T14:24:24.5511407Z 
2025-01-29T14:24:24.5511984Z   htmx config test
2025-01-29T14:24:24.5533420Z Response Status Error Code 400 from /test
2025-01-29T14:24:24.5540732Z Response Status Error Code 500 from /test
2025-01-29T14:24:24.5543302Z     âœ… swaps normally with no config update
2025-01-29T14:24:24.5571270Z     âœ… swap all config should swap everything
2025-01-29T14:24:24.5581693Z     âœ… can change the target of a given response code
2025-01-29T14:24:24.5591664Z     âœ… can change the swap type of a given response code
2025-01-29T14:24:24.5602467Z     âœ… can change the select of a given response code
2025-01-29T14:24:24.5611480Z     âœ… can change if the title is ignored for a given response code
2025-01-29T14:24:24.5620728Z     âœ… can change if error for a given response code
2025-01-29T14:24:24.5630644Z     âœ… can trigger an event for a given response code
2025-01-29T14:24:24.5631913Z 
2025-01-29T14:24:24.5633899Z   Core htmx AJAX Verbs
2025-01-29T14:24:24.5643479Z     âœ… handles basic posts properly
2025-01-29T14:24:24.5653504Z     âœ… handles basic put properly
2025-01-29T14:24:24.5664174Z     âœ… handles basic patch properly
2025-01-29T14:24:24.5674539Z     âœ… handles basic delete properly
2025-01-29T14:24:24.5678009Z 
2025-01-29T14:24:24.5678593Z   Core htmx Parameter Handling
2025-01-29T14:24:24.5683735Z     âœ… Input includes value
2025-01-29T14:24:24.5688878Z     âœ… Input includes value on get
2025-01-29T14:24:24.5696065Z     âœ… Input includes form
2025-01-29T14:24:24.5702499Z     âœ… Input doesnt include form on get
2025-01-29T14:24:24.5708523Z     âœ… non-input includes form
2025-01-29T14:24:24.5714307Z     âœ… non-input doesnt include form on get
2025-01-29T14:24:24.5720696Z     âœ… Basic form works on get
2025-01-29T14:24:24.5726901Z     âœ… Basic form works on non-get
2025-01-29T14:24:24.5735154Z     âœ… Double values are included as array
2025-01-29T14:24:24.5741989Z     âœ… Double values are included as array in correct order
2025-01-29T14:24:24.5749056Z     âœ… Double empty values are included as array in correct order
2025-01-29T14:24:24.5756671Z     âœ… hx-include works with form
2025-01-29T14:24:24.5763514Z     âœ… hx-include works with input
2025-01-29T14:24:24.5772235Z     âœ… hx-include works with two inputs
2025-01-29T14:24:24.5779712Z     âœ… hx-include works with two inputs, plus form
2025-01-29T14:24:24.5788425Z     âœ… correctly URL escapes values
2025-01-29T14:24:24.5797962Z     âœ… form includes last focused button
2025-01-29T14:24:24.5810085Z     âœ… form includes last focused submit
2025-01-29T14:24:24.5821679Z     âœ… form does not include button when focus is lost
2025-01-29T14:24:24.5834590Z     âœ… form does not include button when focus is lost outside of form
2025-01-29T14:24:24.5846610Z     âœ… form includes button name and value if button has nested elements when clicked
2025-01-29T14:24:24.5872565Z     âœ… it puts GET params in the URL by default
2025-01-29T14:24:24.5884016Z     âœ… it puts GET params in the body if methodsThatUseUrlParams is empty
2025-01-29T14:24:24.5894674Z     âœ… it puts DELETE params in the body by default
2025-01-29T14:24:24.5906668Z     âœ… it puts DELETE params in the URL if methodsThatUseUrlParams contains "delete"
2025-01-29T14:24:24.5914354Z     âœ… Input within disabled fieldset is excluded
2025-01-29T14:24:24.5992525Z     âœ… formdata works along web components
2025-01-29T14:24:24.6000626Z     âœ… formdata works with null values
2025-01-29T14:24:24.6016399Z     âœ… formdata can be used to construct a URLSearchParams instance
2025-01-29T14:24:24.6037899Z     âœ… order of parameters follows order of input elements
2025-01-29T14:24:24.6057623Z     âœ… order of parameters follows order of input elements with POST
2025-01-29T14:24:24.6548659Z     âœ… file is correctly uploaded with file input (48ms)
2025-01-29T14:24:24.6557384Z     âœ… file is correctly uploaded with htmx.ajax
2025-01-29T14:24:24.6560099Z 
2025-01-29T14:24:24.6562055Z   Core htmx AJAX headers
2025-01-29T14:24:24.6570215Z     âœ… should include the HX-Request header
2025-01-29T14:24:24.6583790Z     âœ… should include the HX-Trigger header
2025-01-29T14:24:24.6591817Z Response Status Error Code 404 from /test
2025-01-29T14:24:24.6592786Z     âœ… should include the HX-Trigger-Name header
2025-01-29T14:24:24.6598309Z     âœ… should include the HX-Target header
2025-01-29T14:24:24.6609309Z     âœ… should handle simple string HX-Trigger response header properly
2025-01-29T14:24:24.6619426Z     âœ… should handle dot path HX-Trigger response header properly
2025-01-29T14:24:24.6630154Z     âœ… should handle simple string HX-Trigger response header in different case properly
2025-01-29T14:24:24.6640228Z     âœ… should handle a namespaced HX-Trigger response header properly
2025-01-29T14:24:24.6650218Z     âœ… should handle basic JSON HX-Trigger response header properly
2025-01-29T14:24:24.6661410Z     âœ… should handle JSON with array arg HX-Trigger response header properly
2025-01-29T14:24:24.6671164Z     âœ… should handle JSON with array arg HX-Trigger response header properly
2025-01-29T14:24:24.6681833Z     âœ… should handle JSON with target array arg HX-Trigger response header properly
2025-01-29T14:24:24.6691472Z {}
2025-01-29T14:24:24.6695796Z     âœ… should survive malformed JSON in HX-Trigger response header
2025-01-29T14:24:24.6706058Z     âœ… should handle simple string HX-Trigger response header properly w/ outerHTML swap
2025-01-29T14:24:24.6715227Z     âœ… should handle simple comma separated list HX-Trigger response header properly
2025-01-29T14:24:24.6724628Z     âœ… should handle simple comma separated list without space HX-Trigger response header properly
2025-01-29T14:24:24.6734107Z     âœ… should handle dot path in comma separated list HX-Trigger response header properly
2025-01-29T14:24:24.6744026Z     âœ… should handle a namespaced comma separated list HX-Trigger response header properly
2025-01-29T14:24:24.6756425Z     âœ… should handle HX-Retarget
2025-01-29T14:24:24.6766101Z     âœ… should handle HX-Reswap
2025-01-29T14:24:24.6775845Z     âœ… should handle HX-Reselect
2025-01-29T14:24:24.6786105Z     âœ… should handle simple string HX-Trigger-After-Swap response header properly w/ outerHTML swap
2025-01-29T14:24:24.6795188Z     âœ… should handle simple comma separated list HX-Trigger-After-Swap response header properly w/ outerHTML swap
2025-01-29T14:24:24.6815791Z     âœ… should handle simple string HX-Trigger-After-Settle response header properly w/ outerHTML swap
2025-01-29T14:24:24.6827658Z     âœ… should handle simple comma separated list HX-Trigger-After-Settle response header properly w/ outerHTML swap
2025-01-29T14:24:24.7002807Z     âœ… should change body content on HX-Location
2025-01-29T14:24:24.7010465Z     âœ… request to restore history should include the HX-Request header
2025-01-29T14:24:24.7027472Z     âœ… request to restore history should include the HX-History-Restore-Request header
2025-01-29T14:24:24.7035217Z     âœ… request to restore history should include the HX-Current-URL header
2025-01-29T14:24:24.7038490Z 
2025-01-29T14:24:24.7038882Z   Core htmx Regression Tests
2025-01-29T14:24:24.7045049Z     âœ… SVGs process properly in IE11
2025-01-29T14:24:24.7062249Z     âœ… Handles https://github.com/bigskysoftware/htmx/issues/4 properly
2025-01-29T14:24:24.7075316Z     âœ… Handles https://github.com/bigskysoftware/htmx/issues/33 "empty values" properly
2025-01-29T14:24:24.7092969Z     âœ… name=id doesnt cause an error
2025-01-29T14:24:24.7104885Z     âœ… empty id doesnt cause an error
2025-01-29T14:24:24.7116598Z     âœ… id with dot in value doesnt cause an error
2025-01-29T14:24:24.7127194Z     âœ… @ symbol in attributes does not break requests
2025-01-29T14:24:24.7137961Z     âœ… @ symbol in attributes does not break attribute settling requests
2025-01-29T14:24:24.7153525Z     âœ… selected element with ID does not cause NPE when it disappears
2025-01-29T14:24:24.7160568Z     âœ… does not submit with a false condition on a form
2025-01-29T14:24:24.7174882Z     âœ… two elements can listen for the same event on another element
2025-01-29T14:24:24.7218119Z     âœ… a form can reset based on the htmx:afterRequest event
2025-01-29T14:24:24.7231867Z     âœ… supports image maps
2025-01-29T14:24:24.7244309Z     âœ… supports unset on hx-select
2025-01-29T14:24:24.7581419Z     âœ… can trigger swaps from fields that don't support setSelectionRange
2025-01-29T14:24:24.7593060Z console.trace
2025-01-29T14:24:24.8098711Z     âœ… script tags only execute once (52ms)
2025-01-29T14:24:24.8154388Z console.trace
2025-01-29T14:24:24.8660125Z     âœ… script tags only execute once when nested (52ms)
2025-01-29T14:24:24.9217848Z     âœ… htmx.config.allowScriptTags properly disables script tags (51ms)
2025-01-29T14:24:24.9774581Z     âœ… htmx.config.allowScriptTags properly disables script tags when nested (51ms)
2025-01-29T14:24:24.9818152Z 
2025-01-29T14:24:24.9818446Z   security options
2025-01-29T14:24:24.9823391Z     âœ… can disable a single elt
2025-01-29T14:24:24.9828196Z     âœ… can disable a parent elt
2025-01-29T14:24:24.9838853Z     âœ… can disable a single elt dynamically
2025-01-29T14:24:24.9853933Z     âœ… can disable a single elt dynamically & enable it back
2025-01-29T14:24:24.9864646Z     âœ… can disable a single parent elt dynamically
2025-01-29T14:24:24.9880459Z     âœ… can disable a single parent elt dynamically & enable it back
2025-01-29T14:24:25.4732744Z htmx:afterRequest
2025-01-29T14:24:25.4734146Z htmx:sendError
2025-01-29T14:24:25.4740941Z     âœ… can make egress cross site requests when htmx.config.selfRequestsOnly is disabled (485ms)
2025-01-29T14:24:25.4742732Z Resource Failed to Load: {
2025-01-29T14:24:25.4743172Z   url: 'https://hypermedia.systems/www/test',
2025-01-29T14:24:25.4743647Z   method: 'GET',
2025-01-29T14:24:25.4743979Z   reason: 'net::ERR_FAILED'
2025-01-29T14:24:25.4744352Z }
2025-01-29T14:24:25.5244924Z     âœ… can disable hx-on on a single elt
2025-01-29T14:24:25.5248161Z     âœ… can disable hx-on on a parent elt
2025-01-29T14:24:25.5257517Z     âœ… can disable hx-on on a single elt dynamically
2025-01-29T14:24:25.5262743Z     âœ… can disable hx-on on a parent elt dynamically
2025-01-29T14:24:25.5269330Z htmx:invalidPath
2025-01-29T14:24:25.5273570Z     âœ… can't make egress cross site requests when htmx.config.selfRequestsOnly is true
2025-01-29T14:24:25.5278570Z htmx:invalidPath
2025-01-29T14:24:25.5282597Z     âœ… can cancel egress request based on htmx:validateUrl event
2025-01-29T14:24:25.5286778Z htmx:invalidPath
2025-01-29T14:24:25.5290754Z     âœ… can cancel egress request based on htmx:validateUrl event, sameHost is false
2025-01-29T14:24:25.5297054Z htmx:invalidPath
2025-01-29T14:24:25.5299301Z     âœ… can disable script tag support with htmx.config.allowScriptTags
2025-01-29T14:24:25.5302089Z 
2025-01-29T14:24:25.5303600Z   Core htmx Shadow DOM Tests
2025-01-29T14:24:25.5312492Z     âœ… properly retrieves shadow root for extended selector
2025-01-29T14:24:25.5317268Z     âœ… properly escapes shadow root for extended selector
2025-01-29T14:24:25.5321263Z     âœ… properly retrives shadow root host for extended selector
2025-01-29T14:24:25.5331787Z     âœ… issues a GET request on click and swaps content
2025-01-29T14:24:25.5349989Z     âœ… processes inner content properly
2025-01-29T14:24:25.5363510Z     âœ… handles swap outerHTML properly
2025-01-29T14:24:25.5389440Z     âœ… handles beforebegin properly
2025-01-29T14:24:25.5407459Z     âœ… handles afterbegin properly
2025-01-29T14:24:25.5424257Z     âœ… handles afterbegin properly with no initial content
2025-01-29T14:24:25.5449838Z     âœ… handles afterend properly
2025-01-29T14:24:25.5466511Z     âœ… handles beforeend properly
2025-01-29T14:24:25.5482260Z     âœ… handles beforeend properly with no initial content
2025-01-29T14:24:25.5493720Z     âœ… handles hx-target properly
2025-01-29T14:24:25.5502448Z     âœ… handles 204 NO CONTENT responses properly
2025-01-29T14:24:25.5523177Z     âœ… handles 304 NOT MODIFIED responses properly
2025-01-29T14:24:25.5533459Z     âœ… handles hx-trigger with non-default value
2025-01-29T14:24:25.5542791Z     âœ… handles hx-trigger with load event
2025-01-29T14:24:25.5552173Z     âœ… sets the content type of the request properly
2025-01-29T14:24:25.5563066Z     âœ… issues two requests when clicked twice before response
2025-01-29T14:24:25.5573824Z     âœ… issues two requests when clicked three times before response
2025-01-29T14:24:25.5584317Z     âœ… properly handles hx-select for basic situation
2025-01-29T14:24:25.5594500Z     âœ… properly handles hx-select for full html document situation
2025-01-29T14:24:25.5861943Z     âœ… properly settles attributes on interior elements
2025-01-29T14:24:25.6078587Z     âœ… properly settles attributes elements with single quotes in id
2025-01-29T14:24:25.6331405Z     âœ… properly settles attributes elements with double quotes in id
2025-01-29T14:24:25.6392512Z     âœ… properly handles multiple select input
2025-01-29T14:24:25.6408169Z     âœ… properly handles multiple select input when "multiple" attribute is empty string
2025-01-29T14:24:25.6425286Z     âœ… properly handles two multiple select inputs w/ same name
2025-01-29T14:24:25.6440797Z     âœ… properly handles multiple email input
2025-01-29T14:24:25.6474129Z     âœ… properly handles checkbox inputs
2025-01-29T14:24:25.6488497Z     âœ… text nodes dont screw up settling via variable capture
2025-01-29T14:24:25.6499699Z     âœ… script nodes evaluate
2025-01-29T14:24:25.6509805Z     âœ… stand alone script nodes evaluate
2025-01-29T14:24:25.6519940Z     âœ… script nodes can define global functions
2025-01-29T14:24:25.6529396Z     âœ… child script nodes evaluate when children
2025-01-29T14:24:25.6539130Z     âœ… child script nodes evaluate when first child
2025-01-29T14:24:25.6548414Z     âœ… child script nodes evaluate when not explicitly marked javascript
2025-01-29T14:24:25.6558028Z     âœ… script nodes do not evaluate when explicitly marked as something other than javascript
2025-01-29T14:24:25.6567824Z Here...
2025-01-29T14:24:25.6572318Z     âœ… script nodes evaluate after swap
2025-01-29T14:24:25.6577127Z     - script node exceptions do not break rendering
2025-01-29T14:24:25.6585544Z Response Status Error Code 404 from file:///home/runner/work/htmx/htmx/test/index.html
2025-01-29T14:24:25.6586619Z     âœ… allows empty verb values
2025-01-29T14:24:25.6596010Z Response Status Error Code 404 from file:///home/runner/work/htmx/htmx/test/index.html
2025-01-29T14:24:25.6596955Z     âœ… allows blank verb values
2025-01-29T14:24:25.6610228Z     âœ… input values are not settle swapped (causes flicker)
2025-01-29T14:24:25.6625091Z     âœ… autofocus attribute works properly
2025-01-29T14:24:25.6639588Z     âœ… autofocus attribute works properly w/ child
2025-01-29T14:24:25.6654464Z     âœ… autofocus attribute works properly w/ true value
2025-01-29T14:24:25.6666688Z     âœ… multipart/form-data encoding works
2025-01-29T14:24:25.6671877Z     âœ… removed elements do not issue requests
2025-01-29T14:24:25.6683729Z     âœ… title tags update title
2025-01-29T14:24:25.6693025Z     âœ… svg title tags do not update title
2025-01-29T14:24:25.6704638Z     âœ… first title tag outside svg title tags updates title
2025-01-29T14:24:25.6714085Z     âœ… title update does not URL escape
2025-01-29T14:24:25.6722461Z Response Status Error Code 400 from /test
2025-01-29T14:24:25.6723966Z     âœ… by default 400 content is not swapped
2025-01-29T14:24:25.6752068Z Response Status Error Code 400 from /test
2025-01-29T14:24:25.6755950Z     âœ… 400 content can be swapped if configured to do so
2025-01-29T14:24:25.6766319Z Response Status Error Code 400 from /test
2025-01-29T14:24:25.6768980Z     âœ… 400 content can be retargeted if configured to do so
2025-01-29T14:24:25.6780311Z Response Status Error Code 400 from /test2
2025-01-29T14:24:25.6782464Z     âœ… errors are triggered only on 400+
2025-01-29T14:24:25.6794421Z Response Status Error Code 400 from /test
2025-01-29T14:24:25.6795432Z     âœ… content can be modified if configured to do so
2025-01-29T14:24:25.6800395Z     - scripts w/ src attribute are properly loaded
2025-01-29T14:24:25.6811788Z     âœ… should load tags with colon in their names
2025-01-29T14:24:25.6826500Z     âœ… properly handles clicked submit button with a value inside a htmx form
2025-01-29T14:24:25.6843205Z     âœ… properly handles clicked submit input with a value inside a htmx form
2025-01-29T14:24:25.6852819Z     âœ… properly handles clicked submit button with a value inside a non-htmx form
2025-01-29T14:24:25.6862779Z     âœ… properly handles clicked submit input with a value inside a non-htmx form
2025-01-29T14:24:25.6875112Z     âœ… properly handles clicked submit button with a value outside a htmx form
2025-01-29T14:24:25.6888136Z     âœ… properly handles clicked submit input with a value outside a htmx form
2025-01-29T14:24:25.6907676Z     âœ… properly handles clicked submit button with a value stacking with regular input
2025-01-29T14:24:25.6924177Z     âœ… properly handles clicked submit input with a value stacking with regular input
2025-01-29T14:24:25.6938810Z     âœ… properly handles clicked submit button with a value inside a form, referencing another form
2025-01-29T14:24:25.6952776Z     âœ… properly handles clicked submit input with a value inside a form, referencing another form
2025-01-29T14:24:25.6967469Z     âœ… properly handles inputs external to form
2025-01-29T14:24:25.6979266Z     âœ… handles form post with button formmethod dialog properly
2025-01-29T14:24:25.6989041Z     âœ… handles form get with button formmethod dialog properly
2025-01-29T14:24:25.7016612Z     âœ… can associate submit buttons from outside a form with the current version of the form after swap
2025-01-29T14:24:25.7022305Z     âœ… can handle basic events w/ no other attributes
2025-01-29T14:24:25.7027612Z     âœ… can handle basic events w/ no other attributes in child
2025-01-29T14:24:25.7037110Z     âœ… can target shadow DOM Host and place content below web component
2025-01-29T14:24:25.7046209Z     âœ… can target global id outside shadow DOM and place content
2025-01-29T14:24:25.7056851Z     âœ… can target shadow DOM Host with outerHTML swap and replace it
2025-01-29T14:24:25.7061433Z 
2025-01-29T14:24:25.7062500Z   Core htmx perf Tests
2025-01-29T14:24:25.7314540Z     âœ… history implementation should be fast
2025-01-29T14:24:25.7404011Z     âœ… history snapshot cleaning should be fast
2025-01-29T14:24:25.8277970Z 
2025-01-29T14:24:25.8279766Z   Core htmx client side validation tests
2025-01-29T14:24:25.8295230Z     âœ… HTML5 required validation error prevents request
2025-01-29T14:24:25.8306769Z     âœ… Novalidate skips form validation
2025-01-29T14:24:25.8320138Z     âœ… Validation skipped for indirect form submission
2025-01-29T14:24:25.8536471Z     âœ… Formnovalidate skips form validation
2025-01-29T14:24:25.8555761Z     âœ… HTML5 pattern validation error prevents request
2025-01-29T14:24:25.8629540Z     âœ… Custom validation error prevents request
2025-01-29T14:24:25.8640803Z     âœ… Custom validation error prevents request for unticked checkboxes
2025-01-29T14:24:25.8652646Z     âœ… Custom validation error prevents request for unselected radiogroups
2025-01-29T14:24:25.8678305Z     âœ… hyperscript validation error prevents request
2025-01-29T14:24:25.8686031Z     âœ… calls htmx:validation:failed on failure
2025-01-29T14:24:25.8691962Z     âœ… calls htmx:validation:halted on failure
2025-01-29T14:24:25.8710756Z     âœ… hx-validate can prevent a single input from submitting
2025-01-29T14:24:25.8712872Z 
2025-01-29T14:24:25.8713291Z   Core htmx tokenizer tests
2025-01-29T14:24:25.8719247Z     âœ… tokenizes properly
2025-01-29T14:24:25.8726125Z     âœ… generates conditionals property
2025-01-29T14:24:25.8726528Z 
2025-01-29T14:24:25.8726999Z   Core htmx extension tests
2025-01-29T14:24:25.8734756Z     âœ… should support event cancellation by returning false
2025-01-29T14:24:25.8745879Z     âœ… should support event cancellation with preventDefault
2025-01-29T14:24:25.8746440Z 
2025-01-29T14:24:25.8746638Z   default extensions behavior
2025-01-29T14:24:25.8758687Z     âœ… handleSwap: afterSwap and afterSettle triggered if extension defined on parent
2025-01-29T14:24:25.8777862Z     âœ… handleSwap: new content is handled by htmx
2025-01-29T14:24:25.8778359Z 
2025-01-29T14:24:25.8781464Z   hx-boost attribute
2025-01-29T14:24:25.8798712Z     âœ… handles basic anchor properly
2025-01-29T14:24:25.8817041Z     âœ… handles basic form post properly
2025-01-29T14:24:25.8833055Z     âœ… handles basic form post with button formaction properly
2025-01-29T14:24:25.8848793Z     âœ… handles basic form post with button formmethod properly
2025-01-29T14:24:25.8864293Z     âœ… handles basic form post properly w/ explicit action
2025-01-29T14:24:25.8882021Z     âœ… handles basic form get properly
2025-01-29T14:24:25.8898407Z     âœ… handles basic form with no explicit method property
2025-01-29T14:24:25.8903269Z     âœ… does not boost forms with method="dialog"
2025-01-29T14:24:25.8917394Z     âœ… handles basic anchor properly w/ data-* prefix
2025-01-29T14:24:25.8931728Z     âœ… overriding default swap style does not effect boosting
2025-01-29T14:24:25.8936726Z     âœ… anchors w/ explicit targets are not boosted
2025-01-29T14:24:25.8949328Z     âœ… includes an HX-Boosted Header
2025-01-29T14:24:25.8971831Z     âœ… form get w/ search params in action property excludes search params
2025-01-29T14:24:25.8992852Z     âœ… form post w/ query params in action property uses full url
2025-01-29T14:24:25.9008583Z     âœ… form get with an unset action properly submits
2025-01-29T14:24:25.9320406Z     âœ… form get with no action properly clears existing parameters on submit
2025-01-29T14:24:25.9987675Z     âœ… form get with an empty action properly clears existing parameters on submit
2025-01-29T14:24:25.9991557Z 
2025-01-29T14:24:25.9992356Z   hx-confirm attribute
2025-01-29T14:24:26.0006908Z     âœ… prompts using window.confirm when hx-confirm is set
2025-01-29T14:24:26.0015860Z     âœ… stops the request if confirm is cancelled
2025-01-29T14:24:26.0025717Z     âœ… uses the value of hx-confirm as the prompt
2025-01-29T14:24:26.0035959Z     âœ… should prompt when htmx:confirm handler calls issueRequest
2025-01-29T14:24:26.0047897Z     âœ… should include the question in htmx:confirm event
2025-01-29T14:24:26.0061260Z     âœ… should allow skipping built-in window.confirm when using issueRequest
2025-01-29T14:24:26.0074203Z     âœ… should allow skipping built-in window.confirm when using issueRequest
2025-01-29T14:24:26.0094031Z     âœ… should allow htmx:confirm even when no hx-confirm is set
2025-01-29T14:24:26.0101100Z 
2025-01-29T14:24:26.0101739Z   hx-delete attribute
2025-01-29T14:24:26.0106113Z     âœ… issues a DELETE request
2025-01-29T14:24:26.0113839Z     âœ… issues a DELETE request w/ data-* prefix
2025-01-29T14:24:26.0116567Z 
2025-01-29T14:24:26.0118760Z   hx-ext attribute
2025-01-29T14:24:26.0128429Z     âœ… A simple extension is invoked properly
2025-01-29T14:24:26.0146397Z     âœ… Extensions are merged properly
2025-01-29T14:24:26.0161142Z     âœ… supports comma separated lists
2025-01-29T14:24:26.0175252Z     âœ… A simple extension is invoked properly  w/ data-* prefix
2025-01-29T14:24:26.0189490Z     âœ… A simple extension is invoked properly when an HX-Trigger event w/ a namespace fires
2025-01-29T14:24:26.0196894Z     âœ… A simple extension is invoked properly for elements it specified in getSelectors
2025-01-29T14:24:26.0223432Z     âœ… Extensions are ignored properly
2025-01-29T14:24:26.0227329Z 
2025-01-29T14:24:26.0228321Z   hx-get attribute
2025-01-29T14:24:26.0239080Z     âœ… issues a GET request on click and swaps content
2025-01-29T14:24:26.0253552Z     âœ… GET does not include surrounding data by default
2025-01-29T14:24:26.0268546Z     âœ… GET on form includes its own data by default
2025-01-29T14:24:26.0283293Z     âœ… GET on form with existing parameters works properly
2025-01-29T14:24:26.0298928Z     âœ… GET on form with anchor works properly
2025-01-29T14:24:26.0312660Z     âœ… issues a GET request on click and swaps content w/ data-* prefix
2025-01-29T14:24:26.0325681Z     âœ… does not include a cache-busting parameter when not enabled
2025-01-29T14:24:26.0337965Z     âœ… includes a cache-busting parameter when enabled w/ value "true" if no id on target
2025-01-29T14:24:26.0346693Z     âœ… includes a cache-busting parameter when enabled w/ the id of the target if there is one
2025-01-29T14:24:26.0351233Z 
2025-01-29T14:24:26.0352640Z   hx-headers attribute
2025-01-29T14:24:26.0360209Z     âœ… basic hx-headers works
2025-01-29T14:24:26.0370711Z     âœ… basic hx-headers works with braces
2025-01-29T14:24:26.0381551Z     âœ… multiple hx-headers works
2025-01-29T14:24:26.0392813Z     âœ… hx-headers can be on parents
2025-01-29T14:24:26.0402601Z     âœ… hx-headers can override parents
2025-01-29T14:24:26.0413479Z     âœ… hx-headers overrides inputs
2025-01-29T14:24:26.0423919Z     âœ… basic hx-headers javascript: works
2025-01-29T14:24:26.0433488Z     âœ… hx-headers works with braces
2025-01-29T14:24:26.0459414Z     âœ… multiple hx-headers works
2025-01-29T14:24:26.0469168Z     âœ… hx-headers can be on parents
2025-01-29T14:24:26.0480304Z     âœ… hx-headers can override parents
2025-01-29T14:24:26.0492158Z     âœ… hx-headers overrides inputs
2025-01-29T14:24:26.0495373Z 
2025-01-29T14:24:26.0496735Z   hx-history attribute
2025-01-29T14:24:26.1090591Z     âœ… history cache should not contain embargoed content (59ms)
2025-01-29T14:24:26.1138882Z 
2025-01-29T14:24:26.1139735Z   hx-include attribute
2025-01-29T14:24:26.1151836Z     âœ… By default an input includes itself
2025-01-29T14:24:26.1168097Z     âœ… non-GET includes closest form
2025-01-29T14:24:26.1189763Z     âœ… non-GET includes closest form and overrides values included that exist outside the form
2025-01-29T14:24:26.1200985Z     âœ… GET does not include closest form by default
2025-01-29T14:24:26.1211153Z     âœ… Single input not included twice when in form
2025-01-29T14:24:26.1224239Z     âœ… Two inputs are included twice when they have the same name
2025-01-29T14:24:26.1235146Z     âœ… Two inputs are included twice when in form when they have the same name
2025-01-29T14:24:26.1245472Z     âœ… Input not included twice when it explicitly refers to parent form
2025-01-29T14:24:26.1254410Z     âœ… Input can be referred to externally
2025-01-29T14:24:26.1264614Z     âœ… Two inputs can be referred to externally
2025-01-29T14:24:26.1273904Z     âœ… A form can be referred to externally
2025-01-29T14:24:26.1283411Z     âœ… By default an input includes itself w/ data-* prefix
2025-01-29T14:24:26.1292942Z     âœ… If the element is not includeable, its descendant inputs are included
2025-01-29T14:24:26.1303315Z     âœ… The `closest` modifier can be used in the hx-include selector
2025-01-29T14:24:26.1313256Z     âœ… The `this` modifier can be used in the hx-include selector
2025-01-29T14:24:26.1325065Z     âœ… Multiple extended selectors can be used in hx-include
2025-01-29T14:24:26.1335796Z     âœ… hx-include processes extended selector in between standard selectors
2025-01-29T14:24:26.1347374Z     âœ… hx-include processes nested standard selectors correctly
2025-01-29T14:24:26.1358867Z     âœ… hx-include processes wrapped next/previous selectors correctly
2025-01-29T14:24:26.1370655Z     âœ… hx-include processes wrapped closest selector correctly
2025-01-29T14:24:26.1372042Z 
2025-01-29T14:24:26.1374315Z   hx-indicator attribute
2025-01-29T14:24:26.1384397Z     âœ… Indicator classes are properly put on element with no explicit indicator
2025-01-29T14:24:26.1395159Z     âœ… Indicator classes are properly put on element with explicit indicator
2025-01-29T14:24:26.1405056Z     âœ… Indicator classes are properly put on element with relative indicator
2025-01-29T14:24:26.1415775Z     âœ… Indicator classes are properly put on element with explicit indicator w/ data-* prefix
2025-01-29T14:24:26.1425419Z     âœ… allows closest syntax in hx-indicator
2025-01-29T14:24:26.1436767Z     âœ… is removed when initiating element is removed from the DOM
2025-01-29T14:24:26.1448506Z     âœ… allows this syntax in hx-indicator
2025-01-29T14:24:26.1469157Z     âœ… multiple requests with same indicator are handled properly
2025-01-29T14:24:26.1471245Z 
2025-01-29T14:24:26.1473932Z   hx-disabled-elt attribute
2025-01-29T14:24:26.1485625Z     âœ… single element can be disabled w/ hx-disabled elts
2025-01-29T14:24:26.1499989Z     âœ… single element can be disabled w/ data-hx-disabled elts
2025-01-29T14:24:26.1512536Z     âœ… single element can be disabled w/ closest syntax
2025-01-29T14:24:26.1528000Z     âœ… multiple requests with same disabled elt are handled properly
2025-01-29T14:24:26.1540268Z     âœ… multiple elts can be disabled
2025-01-29T14:24:26.1553802Z     âœ… load trigger does not prevent disabled element working
2025-01-29T14:24:26.1572333Z     âœ… hx-disabled-elt supports multiple extended selectors
2025-01-29T14:24:26.1581807Z The selector "closest input" on hx-disabled-elt returned no matches!
2025-01-29T14:24:26.1589838Z The selector "find input" on hx-disabled-elt returned no matches!
2025-01-29T14:24:26.1597125Z The selector "next input" on hx-disabled-elt returned no matches!
2025-01-29T14:24:26.1605286Z The selector "previous input" on hx-disabled-elt returned no matches!
2025-01-29T14:24:26.1613093Z     âœ… closest/find/next/previous handle nothing to find without exception
2025-01-29T14:24:26.1614394Z 
2025-01-29T14:24:26.1618028Z   hx-inherit attribute
2025-01-29T14:24:26.1628402Z     âœ… can disable inheritance
2025-01-29T14:24:26.1641270Z     âœ… can enable inheritance for all
2025-01-29T14:24:26.1653324Z     âœ… can enable inheritance by name
2025-01-29T14:24:26.1664874Z     âœ… can enable inheritance by name (bad name, no inheritance)
2025-01-29T14:24:26.1675974Z     âœ… can enable inheritance by name with multiple attributes
2025-01-29T14:24:26.1680302Z 
2025-01-29T14:24:26.1681019Z   hx-disinherit attribute
2025-01-29T14:24:26.1692181Z     âœ… basic inheritance sanity-check
2025-01-29T14:24:26.1705056Z     âœ… disinherit exclude single attribute
2025-01-29T14:24:26.1716592Z <span id="cta" class=""><div id="unique"><div id="snowflake">Hello world</div></div></span>
2025-01-29T14:24:26.1718111Z <div id="unique"><div id="snowflake">Hello world</div></div>
2025-01-29T14:24:26.1723286Z     âœ… disinherit exclude multiple attributes
2025-01-29T14:24:26.1732019Z     âœ… disinherit exclude all attributes
2025-01-29T14:24:26.1745218Z     âœ… same-element inheritance disable
2025-01-29T14:24:26.1757525Z     âœ… same-element inheritance disable with child nodes
2025-01-29T14:24:26.1764957Z     âœ… boosted element hx-disinherit sanity check
2025-01-29T14:24:26.1770576Z     âœ… boosted element inheritance manual unset
2025-01-29T14:24:26.1779665Z     âœ… nested htmx-node with boosting parent
2025-01-29T14:24:26.1780563Z 
2025-01-29T14:24:26.1783641Z   hx-on:* attribute
2025-01-29T14:24:26.1789376Z     âœ… can handle basic events w/ no other attributes
2025-01-29T14:24:26.1794759Z     âœ… can use dashes rather than colons
2025-01-29T14:24:26.1809896Z     âœ… can modify a parameter via htmx:configRequest
2025-01-29T14:24:26.1824695Z     âœ… can modify a parameter via htmx:configRequest with dashes
2025-01-29T14:24:26.1838063Z     âœ… expands :: shorthand into htmx:
2025-01-29T14:24:26.1850611Z     âœ… expands -- shorthand into htmx:
2025-01-29T14:24:26.1858458Z     âœ… can cancel an event via preventDefault for htmx:config-request
2025-01-29T14:24:26.1892862Z     âœ… can respond to data-hx-on
2025-01-29T14:24:26.1904370Z     âœ… has the this symbol set to the element
2025-01-29T14:24:26.1916577Z     âœ… can handle multi-line JSON
2025-01-29T14:24:26.1927234Z     âœ… can handle multiple event handlers in the presence of multi-line JSON
2025-01-29T14:24:26.1944156Z     âœ… de-initializes hx-on-* content properly
2025-01-29T14:24:26.1949664Z htmx:evalDisallowedError
2025-01-29T14:24:26.1953286Z     âœ… is not evaluated when allowEval is false
2025-01-29T14:24:26.1963263Z     âœ… can handle being swapped using innerHTML
2025-01-29T14:24:26.1969843Z     âœ… cleans up all handlers when the DOM updates
2025-01-29T14:24:26.1972436Z 
2025-01-29T14:24:26.1974384Z   hx-params attribute
2025-01-29T14:24:26.1985183Z     âœ… none excludes all params
2025-01-29T14:24:26.1996416Z     âœ… "*" includes all params
2025-01-29T14:24:26.2006715Z     âœ… named includes works
2025-01-29T14:24:26.2017138Z     âœ… named exclude works
2025-01-29T14:24:26.2028068Z     âœ… named exclude works  w/ data-* prefix
2025-01-29T14:24:26.2029796Z 
2025-01-29T14:24:26.2032575Z   hx-patch attribute
2025-01-29T14:24:26.2039105Z     âœ… issues a PATCH request
2025-01-29T14:24:26.2047986Z     âœ… issues a PATCH request w/ data-* prefix
2025-01-29T14:24:26.2051579Z 
2025-01-29T14:24:26.2052521Z   hx-post attribute
2025-01-29T14:24:26.2060979Z     âœ… issues a POST request with proper headers
2025-01-29T14:24:26.2071267Z     âœ… issues a POST request with proper headers  w/ data-* prefix
2025-01-29T14:24:26.2073536Z 
2025-01-29T14:24:26.2076742Z   hx-preserve attribute
2025-01-29T14:24:26.2086627Z     âœ… handles basic response properly
2025-01-29T14:24:26.2098014Z     âœ… handles preserved element that might not be existing
2025-01-29T14:24:26.2108834Z     âœ… preserved element should not be swapped if it lies outside of hx-select
2025-01-29T14:24:26.2120180Z     âœ… preserved element should not be swapped if it is part of a oob swap
2025-01-29T14:24:26.2131819Z     âœ… preserved element should not be swapped if it is part of a hx-select-oob swap
2025-01-29T14:24:26.2189579Z     âœ… preserved element should relocated unchanged if it is part of a oob swap targeting a different loction
2025-01-29T14:24:26.2190682Z 
2025-01-29T14:24:26.2192577Z   hx-push-url attribute
2025-01-29T14:24:26.2210767Z     âœ… navigation should push an element into the cache when true
2025-01-29T14:24:26.2229536Z     âœ… navigation should push an element into the cache when string
2025-01-29T14:24:26.2255956Z     âœ… restore should return old value
2025-01-29T14:24:26.2281657Z     âœ… history restore should not have htmx support classes in content
2025-01-29T14:24:26.2425888Z     âœ… cache should only store 10 entries
2025-01-29T14:24:26.2453292Z     âœ… cache miss should issue another GET
2025-01-29T14:24:26.2466638Z     âœ… navigation should push an element into the cache  w/ data-* prefix
2025-01-29T14:24:26.2473343Z {}
2025-01-29T14:24:26.2476415Z     âœ… deals with malformed JSON in history cache when getting
2025-01-29T14:24:26.2483900Z {}
2025-01-29T14:24:26.2485589Z     âœ… deals with malformed JSON in history cache when saving
2025-01-29T14:24:26.2500121Z     âœ… does not blow out cache when saving a URL twice
2025-01-29T14:24:26.2517010Z     âœ… history cache is LRU
2025-01-29T14:24:26.2527759Z     âœ… htmx:afterSettle is called when replacing outerHTML
2025-01-29T14:24:26.2543132Z     âœ… should include parameters on a get
2025-01-29T14:24:26.7589559Z htmx:historyCacheError
2025-01-29T14:24:26.7590757Z     âœ… saveToHistoryCache should not throw (503ms)
2025-01-29T14:24:26.8270816Z 
2025-01-29T14:24:26.8275306Z   hx-put attribute
2025-01-29T14:24:26.8287671Z     âœ… issues a PUT request
2025-01-29T14:24:26.8300742Z     âœ… issues a PUT request w/ data-* prefix
2025-01-29T14:24:26.8301286Z 
2025-01-29T14:24:26.8301631Z   hx-request attribute
2025-01-29T14:24:27.2314978Z     âœ… basic hx-request timeout works (401ms)
2025-01-29T14:24:27.2371173Z     âœ… hx-request header works
2025-01-29T14:24:27.2371693Z 
2025-01-29T14:24:27.2373361Z   BOOTSTRAP - htmx AJAX Tests
2025-01-29T14:24:27.2380603Z     âœ… properly handles a partial of HTML
2025-01-29T14:24:27.2390676Z     âœ… properly handles a full HTML document
2025-01-29T14:24:27.2405447Z     âœ… properly handles a full HTML document  w/ data-* prefix
2025-01-29T14:24:27.2405983Z 
2025-01-29T14:24:27.2407131Z   hx-select-oob attribute
2025-01-29T14:24:27.2418477Z     âœ… basic hx-select-oob works
2025-01-29T14:24:27.2433786Z     âœ… multiple hx-select-oobs works
2025-01-29T14:24:27.2444346Z     âœ… basic hx-select-oob ignores bad selector
2025-01-29T14:24:27.2445283Z 
2025-01-29T14:24:27.2447622Z   hx-swap-oob attribute
2025-01-29T14:24:27.2458199Z     âœ… handles basic response properly with config {"allowNestedOobSwaps":true}
2025-01-29T14:24:27.2468989Z     âœ… handles basic response properly with config {"allowNestedOobSwaps":false}
2025-01-29T14:24:27.2480890Z     âœ… oob swap works when the response has a body tag with config {"allowNestedOobSwaps":true}
2025-01-29T14:24:27.2492174Z     âœ… oob swap works when the response has a body tag with config {"allowNestedOobSwaps":false}
2025-01-29T14:24:27.2504559Z     âœ… oob swap works when the response has html and body tags with config {"allowNestedOobSwaps":true}
2025-01-29T14:24:27.2516877Z     âœ… oob swap works when the response has html and body tags with config {"allowNestedOobSwaps":false}
2025-01-29T14:24:27.2529228Z     âœ… handles more than one oob swap properly with config {"allowNestedOobSwaps":true}
2025-01-29T14:24:27.2542378Z     âœ… handles more than one oob swap properly with config {"allowNestedOobSwaps":false}
2025-01-29T14:24:27.2553035Z     âœ… handles remvoing hx-swap-oob tag
2025-01-29T14:24:27.2567136Z     âœ… handles remvoing data-hx-swap-oob tag
2025-01-29T14:24:27.2582431Z     âœ… handles no id match properly
2025-01-29T14:24:27.2596939Z     âœ… handles basic response properly w/ data-* prefix
2025-01-29T14:24:27.2613165Z     âœ… handles outerHTML response properly
2025-01-29T14:24:27.2624830Z     âœ… handles innerHTML response properly
2025-01-29T14:24:27.2635825Z     âœ… oob swaps can be nested in content with config {"allowNestedOobSwaps": true}
2025-01-29T14:24:27.2645832Z     âœ… oob swaps in nested content are ignored and stripped with config {"allowNestedOobSwaps": false}
2025-01-29T14:24:27.2655796Z     âœ… oob swaps can use selectors to match up
2025-01-29T14:24:27.2668207Z     âœ… swaps into all targets that match the selector (innerHTML)
2025-01-29T14:24:27.2680641Z     âœ… swaps into all targets that match the selector (outerHTML)
2025-01-29T14:24:27.2692412Z     âœ… oob swap delete works properly
2025-01-29T14:24:27.2705341Z     âœ… oob swap removes templates used for oob encapsulation only properly
2025-01-29T14:24:27.2717432Z     âœ… oob swap keeps templates not used for oob swap encapsulation
2025-01-29T14:24:27.2738283Z     âœ… oob swap supports table row in fragment along other oob swap elements with config {"allowNestedOobSwaps":true}
2025-01-29T14:24:27.2754845Z     âœ… oob swap supports table row in fragment along other oob swap elements with config {"allowNestedOobSwaps":false}
2025-01-29T14:24:27.2768965Z     âœ… handles oob target in web components with both inside shadow root and config {"allowNestedOobSwaps":true}
2025-01-29T14:24:27.2779297Z     âœ… handles oob target in web components with both inside shadow root and config {"allowNestedOobSwaps":false}
2025-01-29T14:24:27.2791077Z     âœ… handles oob target in web components with main target outside web component config {"allowNestedOobSwaps":true}
2025-01-29T14:24:27.2802344Z     âœ… handles oob target in web components with main target outside web component config {"allowNestedOobSwaps":false}
2025-01-29T14:24:27.2814386Z     âœ… handles global oob target in web components with main target inside web component config {"allowNestedOobSwaps":true}
2025-01-29T14:24:27.2825661Z     âœ… handles global oob target in web components with main target inside web component config {"allowNestedOobSwaps":false}
2025-01-29T14:24:27.2826474Z 
2025-01-29T14:24:27.2830156Z   hx-swap attribute
2025-01-29T14:24:27.2845581Z     âœ… swap innerHTML properly
2025-01-29T14:24:27.2853895Z     âœ… swap textContent properly with HTML tags
2025-01-29T14:24:27.2863269Z     âœ… swap textContent properly with HTML tags and text
2025-01-29T14:24:27.2872163Z     âœ… swap textContent ignores OOB swaps
2025-01-29T14:24:27.2880505Z     âœ… swap textContent properly with text
2025-01-29T14:24:27.2895108Z     âœ… swap outerHTML properly
2025-01-29T14:24:27.2920917Z     âœ… swap beforebegin properly
2025-01-29T14:24:27.2936479Z     âœ… swap afterbegin properly
2025-01-29T14:24:27.2952082Z     âœ… swap afterbegin properly with no initial content
2025-01-29T14:24:27.2976178Z     âœ… swap afterend properly
2025-01-29T14:24:27.2991112Z     âœ… handles beforeend properly
2025-01-29T14:24:27.3007808Z     âœ… handles beforeend properly with no initial content
2025-01-29T14:24:27.3023455Z Unknown modifier in hx-swap: nonsense
2025-01-29T14:24:27.3026451Z Unknown modifier in hx-swap: nonsense
2025-01-29T14:24:27.3037858Z     âœ… properly parses various swap specifications
2025-01-29T14:24:27.3351570Z     âœ… works with a swap delay
2025-01-29T14:24:27.3406964Z     âœ… works immediately with no swap delay
2025-01-29T14:24:27.3722300Z     âœ… works with a settle delay
2025-01-29T14:24:27.4081523Z     âœ… works with no settle delay
2025-01-29T14:24:27.4140641Z     âœ… swap outerHTML properly  w/ data-* prefix
2025-01-29T14:24:27.4150808Z     âœ… swap none works properly
2025-01-29T14:24:27.4160123Z     âœ… swap outerHTML does not trigger htmx:afterSwap on original element
2025-01-29T14:24:27.4170547Z     âœ… swap delete works properly
2025-01-29T14:24:27.4180353Z     âœ… in presence of bad swap spec, it uses the default swap strategy
2025-01-29T14:24:27.4193018Z     âœ… hx-swap ignoreTitle works
2025-01-29T14:24:27.4196156Z 
2025-01-29T14:24:27.4197806Z   hx-sync attribute
2025-01-29T14:24:27.4207061Z     âœ… can use drop strategy
2025-01-29T14:24:27.4217851Z     âœ… defaults to the drop strategy
2025-01-29T14:24:27.4230427Z htmx:afterRequest
2025-01-29T14:24:27.4232650Z htmx:sendAbort
2025-01-29T14:24:27.4247273Z     âœ… can use replace strategy
2025-01-29T14:24:27.4274510Z     âœ… can use queue all strategy
2025-01-29T14:24:27.4290696Z     âœ… can use queue last strategy
2025-01-29T14:24:27.4306155Z     âœ… can use queue first strategy
2025-01-29T14:24:27.4315342Z htmx:afterRequest
2025-01-29T14:24:27.4320459Z htmx:sendAbort
2025-01-29T14:24:27.4325797Z     âœ… can use abort strategy to end existing abortable request
2025-01-29T14:24:27.4336024Z     âœ… can use abort strategy to drop abortable request when one is in flight
2025-01-29T14:24:27.4346849Z htmx:afterRequest
2025-01-29T14:24:27.4350767Z htmx:sendAbort
2025-01-29T14:24:27.4354572Z     âœ… can abort a request programmatically
2025-01-29T14:24:27.4357714Z 
2025-01-29T14:24:27.4359198Z   hx-target attribute
2025-01-29T14:24:27.4371608Z     âœ… targets an adjacent element properly
2025-01-29T14:24:27.4379167Z     âœ… targets a parent element properly
2025-01-29T14:24:27.4388799Z     âœ… targets a `this` element properly
2025-01-29T14:24:27.4399654Z     âœ… targets a `closest` element properly
2025-01-29T14:24:27.4409890Z     âœ… targets a `closest` element properly w/ hyperscript syntax
2025-01-29T14:24:27.4418996Z     âœ… targets a `find` element properly
2025-01-29T14:24:27.4427873Z     âœ… targets a `find` element properly w/ hyperscript syntax
2025-01-29T14:24:27.4436548Z     âœ… targets an inner element properly
2025-01-29T14:24:27.4445434Z     âœ… targets an inner element properly w/ hyperscript syntax
2025-01-29T14:24:27.4451847Z htmx:targetError
2025-01-29T14:24:27.4453271Z     âœ… handles bad target gracefully
2025-01-29T14:24:27.4462706Z     âœ… targets an adjacent element properly w/ data-* prefix
2025-01-29T14:24:27.4477145Z     âœ… targets a `next` element properly
2025-01-29T14:24:27.4486480Z     âœ… targets a `next` element properly w/ hyperscript syntax
2025-01-29T14:24:27.4496018Z     âœ… targets a `previous` element properly
2025-01-29T14:24:27.4505799Z     âœ… targets a `previous` element properly w/ hyperscript syntax
2025-01-29T14:24:27.4514669Z     âœ… targets a `next` element properly without selector
2025-01-29T14:24:27.4524791Z     âœ… targets a `previous` element properly without selector
2025-01-29T14:24:27.4527378Z 
2025-01-29T14:24:27.4530065Z   hx-trigger attribute
2025-01-29T14:24:27.4540063Z     âœ… non-default value works
2025-01-29T14:24:27.4551009Z     âœ… changed modifier works
2025-01-29T14:24:27.4560852Z     âœ… changed modifier works along from clause with single input
2025-01-29T14:24:27.4573861Z     âœ… changed modifier works along from clause with two inputs
2025-01-29T14:24:27.4593927Z     âœ… changed modifier counts each triggerspec separately
2025-01-29T14:24:27.4608291Z     âœ… separate changed modifier works along from clause with two inputs
2025-01-29T14:24:27.4616799Z     âœ… once modifier works
2025-01-29T14:24:27.4628923Z     âœ… once modifier works with multiple triggers
2025-01-29T14:24:27.5374778Z     âœ… polling works (74ms)
2025-01-29T14:24:27.5427185Z     âœ… non-default value works w/ data-* prefix
2025-01-29T14:24:27.5438751Z     âœ… works with multiple events
2025-01-29T14:24:27.5467744Z htmx:syntax:error
2025-01-29T14:24:27.5470331Z htmx:syntax:error
2025-01-29T14:24:27.5472377Z htmx:syntax:error
2025-01-29T14:24:27.5476166Z htmx:syntax:error
2025-01-29T14:24:27.5477362Z     âœ… parses spec strings
2025-01-29T14:24:27.5481954Z     âœ… sets default trigger for forms
2025-01-29T14:24:27.5486479Z     âœ… sets default trigger for form elements
2025-01-29T14:24:27.5492756Z     âœ… filters properly with false filter spec
2025-01-29T14:24:27.5505349Z     âœ… filters properly with true filter spec
2025-01-29T14:24:27.5514833Z     âœ… filters properly compound filter spec
2025-01-29T14:24:27.5523769Z     âœ… can refer to target element in condition
2025-01-29T14:24:27.5532750Z     âœ… can refer to target element in condition w/ equality
2025-01-29T14:24:27.5542134Z     âœ… negative condition
2025-01-29T14:24:27.5551711Z     âœ… global function call works
2025-01-29T14:24:27.5561204Z     âœ… global property event filter works
2025-01-29T14:24:27.5570378Z     âœ… global variable filter works
2025-01-29T14:24:27.6647298Z     âœ… can filter polling (107ms)
2025-01-29T14:24:27.6698448Z {}
2025-01-29T14:24:27.6699969Z  return (function(event){ return (((event.a) ? (event.a) : (window.a)).b)})
2025-01-29T14:24:27.6701064Z     âœ… bad condition issues error
2025-01-29T14:24:27.6710882Z     âœ… from clause works
2025-01-29T14:24:27.6719004Z     âœ… from clause works with body selector
2025-01-29T14:24:27.6727207Z     âœ… from clause works with document selector
2025-01-29T14:24:27.6735416Z     âœ… from clause works with window selector
2025-01-29T14:24:27.6744463Z     âœ… from clause works with closest clause
2025-01-29T14:24:27.6752947Z     âœ… from clause works with find clause
2025-01-29T14:24:27.6761373Z     âœ… from clause works with next
2025-01-29T14:24:27.6769800Z     âœ… from clause works with previous
2025-01-29T14:24:27.6785604Z     âœ… event listeners on other elements are removed when an element is swapped out
2025-01-29T14:24:27.6798267Z     âœ… multiple triggers with from clauses mixed in work
2025-01-29T14:24:27.6811136Z     âœ… from clause works with multiple extended selectors
2025-01-29T14:24:27.6823693Z     âœ… event listeners can filter on target
2025-01-29T14:24:27.6835037Z     âœ… consume prevents event propagation
2025-01-29T14:24:27.7359940Z     âœ… throttle prevents multiple requests from happening (52ms)
2025-01-29T14:24:27.7427051Z     âœ… A throttle of 0 does not prevent multiple requests from happening
2025-01-29T14:24:27.7939907Z     âœ… delay delays the request (51ms)
2025-01-29T14:24:27.8003085Z     âœ… A 0 delay does not delay the request
2025-01-29T14:24:27.8015480Z     âœ… requests are queued with last one winning by default
2025-01-29T14:24:27.8033755Z     âœ… queue:all queues all requests
2025-01-29T14:24:27.8045660Z     âœ… queue:first queues first request
2025-01-29T14:24:27.8055053Z     âœ… queue:none queues no requests
2025-01-29T14:24:27.8064767Z     âœ… load event works w/ positive filters
2025-01-29T14:24:27.8069664Z     âœ… load event works w/ negative filters
2025-01-29T14:24:27.8092353Z     âœ… reveal event works on two elements
2025-01-29T14:24:27.8103016Z     âœ… reveal event works when triggered by window
2025-01-29T14:24:27.8114865Z     âœ… revealed can be paired w/ other events
2025-01-29T14:24:27.8119431Z     âœ… revealed doesnt cause other events to trigger
2025-01-29T14:24:27.8126410Z     âœ… fires the htmx:trigger event when an AJAX attribute is specified
2025-01-29T14:24:27.8131646Z     âœ… fires the htmx:trigger event when no AJAX attribute is specified
2025-01-29T14:24:27.8642452Z     âœ… fires the htmx:trigger event for delayed triggers (50ms)
2025-01-29T14:24:27.9701441Z     âœ… fires the htmx:trigger event when the trigger is a load (101ms)
2025-01-29T14:24:27.9753969Z     âœ… filters support "this" reference to the current element
2025-01-29T14:24:27.9769097Z     âœ… correctly handles CSS descendant combinators
2025-01-29T14:24:27.9779065Z     âœ… correctly handles CSS descendant combinators in modifier target
2025-01-29T14:24:27.9784556Z     âœ… correctly handles CSS descendant combinators in modifier root
2025-01-29T14:24:27.9801699Z     âœ… uses trigger specs cache if defined
2025-01-29T14:24:27.9808026Z     âœ… correctly reuses trigger specs from the cache if defined
2025-01-29T14:24:27.9819255Z     âœ… handles spaces at the end of trigger specs
2025-01-29T14:24:27.9823227Z 
2025-01-29T14:24:27.9823654Z   hx-vals attribute
2025-01-29T14:24:27.9830805Z     âœ… basic hx-vals works
2025-01-29T14:24:27.9838507Z     âœ… basic hx-vals works with braces
2025-01-29T14:24:27.9846626Z     âœ… multiple hx-vals works
2025-01-29T14:24:27.9855091Z     âœ… Dynamic hx-vals using spread operator works
2025-01-29T14:24:27.9863437Z     âœ… hx-vals can be on parents
2025-01-29T14:24:27.9872108Z     âœ… hx-vals can override parents
2025-01-29T14:24:27.9881104Z     âœ… hx-vals overrides inputs
2025-01-29T14:24:27.9891461Z     âœ… hx-vals overrides hx-vars
2025-01-29T14:24:27.9902710Z     âœ… basic hx-vals javascript: works
2025-01-29T14:24:27.9912989Z     âœ… hx-vals works with braces
2025-01-29T14:24:27.9922556Z     âœ… multiple hx-vals works
2025-01-29T14:24:27.9933312Z     âœ… hx-vals can be on parents
2025-01-29T14:24:27.9944324Z     âœ… hx-vals can override parents
2025-01-29T14:24:27.9955364Z     âœ… hx-vals overrides inputs
2025-01-29T14:24:27.9964023Z     âœ… hx-vals treats objects as JSON
2025-01-29T14:24:27.9973836Z     âœ… basic hx-vals can be unset
2025-01-29T14:24:27.9982688Z     âœ… basic hx-vals with braces can be unset
2025-01-29T14:24:27.9991423Z     âœ… multiple hx-vals can be unset
2025-01-29T14:24:28.0001257Z     âœ… unsetting hx-vals maintains input values
2025-01-29T14:24:28.0008307Z htmx:evalDisallowedError
2025-01-29T14:24:28.0013472Z     âœ… javascript: is not evaluated when allowEval is false
2025-01-29T14:24:28.0018775Z htmx:evalDisallowedError
2025-01-29T14:24:28.0024763Z     âœ… js: is not evaluated when allowEval is false
2025-01-29T14:24:28.0033033Z     âœ… hx-vals works with null values
2025-01-29T14:24:28.0036532Z 
2025-01-29T14:24:28.0038265Z   hx-vars attribute
2025-01-29T14:24:28.0044698Z     âœ… basic hx-vars works
2025-01-29T14:24:28.0053774Z     âœ… hx-vars works with braces
2025-01-29T14:24:28.0062752Z     âœ… multiple hx-vars works
2025-01-29T14:24:28.0071239Z     âœ… hx-vars can be on parents
2025-01-29T14:24:28.0081251Z     âœ… hx-vars can override parents
2025-01-29T14:24:28.0091052Z     âœ… hx-vars overrides inputs
2025-01-29T14:24:28.0129309Z     âœ… basic hx-vars can be unset
2025-01-29T14:24:28.0137995Z     âœ… basic hx-vars with braces can be unset
2025-01-29T14:24:28.0147923Z     âœ… multiple hx-vars can be unset
2025-01-29T14:24:28.0158426Z     âœ… unsetting hx-vars maintains input values
2025-01-29T14:24:28.0164701Z htmx:evalDisallowedError
2025-01-29T14:24:28.0171865Z     âœ… is not evaluated when allowEval is false
2025-01-29T14:24:28.0172465Z 
2025-01-29T14:24:28.0176040Z   Core htmx Events
2025-01-29T14:24:28.0183898Z     âœ… htmx:load fires properly
2025-01-29T14:24:28.0192042Z     âœ… htmx:configRequest allows attribute addition
2025-01-29T14:24:28.0199831Z     âœ… htmx:configRequest is also dispatched in kebab-case
2025-01-29T14:24:28.0204575Z     âœ… events are only dispatched once if kebab and camel case match
2025-01-29T14:24:28.0209273Z     âœ… events accept an options argument and the result works as expected
2025-01-29T14:24:28.0219366Z     âœ… htmx:configRequest allows attribute removal
2025-01-29T14:24:28.0229211Z     âœ… htmx:configRequest allows header tweaking
2025-01-29T14:24:28.0247598Z     âœ… htmx:configRequest on form gives access to submit event
2025-01-29T14:24:28.0257015Z     âœ… htmx:afterSwap is called when replacing outerHTML
2025-01-29T14:24:28.0266019Z     âœ… htmx:afterSwap is called when replacing outerHTML, new line content
2025-01-29T14:24:28.0276632Z     âœ… htmx:oobBeforeSwap is called before swap
2025-01-29T14:24:28.0285849Z     âœ… htmx:oobBeforeSwap can abort a swap
2025-01-29T14:24:28.0295103Z     âœ… htmx:oobBeforeSwap is not called on an oob miss
2025-01-29T14:24:28.0307688Z     âœ… htmx:oobAfterSwap is called after swap
2025-01-29T14:24:28.0316101Z     âœ… htmx:oobAfterSwap is not called on an oob miss
2025-01-29T14:24:28.0324817Z     âœ… htmx:afterSettle is called once when replacing outerHTML
2025-01-29T14:24:28.0333579Z     âœ… htmx:afterSettle is called once when replacing outerHTML with whitespace
2025-01-29T14:24:28.0343138Z     âœ… htmx:afterSettle is called twice when replacing outerHTML with whitespace separated elements
2025-01-29T14:24:28.0355204Z     âœ… htmx:afterSettle is called multiple times when doing OOB outerHTML swaps
2025-01-29T14:24:28.0364418Z     âœ… htmx:afterRequest is called after a successful request
2025-01-29T14:24:28.0372323Z     âœ… htmx:afterOnLoad is called after a successful request
2025-01-29T14:24:28.0381453Z Response Status Error Code 500 from /test
2025-01-29T14:24:28.0384724Z     âœ… htmx:afterRequest is called after a failed request
2025-01-29T14:24:28.0402702Z htmx:afterRequest
2025-01-29T14:24:28.0405975Z htmx:sendError
2025-01-29T14:24:28.0412783Z Resource Failed to Load: { url: 'file://foo/', method: 'POST', reason: 'net::ERR_FAILED' }
2025-01-29T14:24:28.0699810Z     âœ… htmx:sendError is called after a failed request
2025-01-29T14:24:28.0753432Z     âœ… htmx:afterRequest is called when replacing outerHTML
2025-01-29T14:24:28.0762182Z     âœ… htmx:afterOnLoad is called when replacing outerHTML
2025-01-29T14:24:28.0770777Z     âœ… htmx:beforeProcessNode is called when replacing outerHTML
2025-01-29T14:24:28.0781042Z     âœ… htmx:beforeProcessNode allows htmx attribute tweaking
2025-01-29T14:24:28.0790586Z     âœ… htmx:afterProcessNode is called after replacing outerHTML
2025-01-29T14:24:28.0800712Z     âœ… htmx:afterRequest is called when targeting a parent div
2025-01-29T14:24:28.0806468Z     âœ… adding an error in htmx:configRequest stops the request
2025-01-29T14:24:28.0812393Z     âœ… preventDefault() in htmx:configRequest stops the request
2025-01-29T14:24:28.0819413Z     âœ… preventDefault() in the htmx:beforeRequest event cancels the request
2025-01-29T14:24:28.0828784Z     âœ… preventDefault() in the htmx:beforeOnLoad event cancels the swap
2025-01-29T14:24:28.0837792Z     âœ… htmx:afterRequest event contains 'successful' and 'failed' properties indicating success after successful request
2025-01-29T14:24:28.0847806Z Response Status Error Code 500 from /test
2025-01-29T14:24:28.0851830Z     âœ… htmx:afterRequest event contains 'successful' and 'failed' properties indicating failure after failed request
2025-01-29T14:24:28.0862177Z     âœ… htmx:confirm can cancel request
2025-01-29T14:24:28.0873749Z beforeSwap {"htmx-internal-data":{"initHash":3227304,"firstInitCompleted":true}} {"htmx-internal-data":{"initHash":3227305,"firstInitCompleted":true}}
2025-01-29T14:24:28.0881392Z afterSwap {"htmx-internal-data":{"initHash":3227305,"firstInitCompleted":true}} {"htmx-internal-data":{"initHash":3227305,"firstInitCompleted":true}}
2025-01-29T14:24:28.0883113Z     âœ… has updated target available when target set via htmx:beforeSwap
2025-01-29T14:24:28.0894630Z afterSwap look at me. iâ€™m the innerHTML now.
2025-01-29T14:24:28.0898476Z     âœ… htmx:beforeSwap can override swap style using evt.detail.swapOverride and has final say on it
2025-01-29T14:24:28.0899198Z 
2025-01-29T14:24:28.0902518Z 
2025-01-29T14:24:28.0904359Z   702 passing (4s)
2025-01-29T14:24:28.0907555Z   3 pending
2025-01-29T14:24:28.0908015Z 
