##[group]Run <:*:>
with:
submodules: <:*:>
repository: <:*:>
token: ***
ssh-strict: true
ssh-user: git
persist-credentials: <:*:>
clean: true
sparse-checkout-cone-mode: true
fetch-depth: <:NUM:>
fetch-tags: false
show-progress: true
lfs: false
set-safe-directory: true
env:
CODECOV_TOKEN:
DISABLE_V8_COMPILE_CACHE: 1
##[endgroup]
Syncing repository: <:*:>
##[group]Getting Git version info
Working directory is <:*:>
[command]/usr/bin/git version
git version <:NUM:>.<:NUM:>.<:NUM:>
##[endgroup]
Temporarily overriding HOME='/home/runner/work/_temp/89ee8f40-8333-45e9-8887-22f17d4e60b7' before making global git config changes
Adding repository directory to the temporary git global config as a safe directory
[command]/usr/bin/git config --global --add safe.directory /home/runner/work/code-server/code-server
Deleting the contents of <:*:>
##[group]Initializing the repository
[command]/usr/bin/git init <:*:>
hint: Using 'master' as the name for the initial branch. This default branch name
hint: is subject to change. To configure the initial branch name to use in all
hint: of your new repositories, which will suppress this warning, call:
hint:
hint: git config --global init.defaultBranch <name>
hint:
hint: Names commonly chosen instead of 'master' are 'main', 'trunk' and
hint: 'development'. The just-created branch can be renamed via this command:
hint:
hint: git branch -m <name>
Initialized empty Git repository in <:*:>
[command]/usr/bin/git remote add origin <:*:>
##[endgroup]
##[group]Disabling automatic garbage collection
[command]/usr/bin/git config --local gc.auto 0
##[endgroup]
##[group]Setting up auth
[command]/usr/bin/git config --local --name-only --get-regexp <:*:>
[command]/usr/bin/git submodule foreach --recursive sh -c "git config --local --name-only --get-regexp <:*:> && git config --local --unset-all <:*:> || :"
[command]/usr/bin/git config --local --name-only --get-regexp <:*:>
[command]/usr/bin/git submodule foreach --recursive sh -c "git config --local --name-only --get-regexp <:*:> && git config --local --unset-all <:*:> || :"
[command]/usr/bin/git config <:*:> http.https://github.com/.extraheader AUTHORIZATION: basic ***
##[endgroup]
##[group]Fetching the repository
[command]/usr/bin/git -c protocol.version=<:NUM:> fetch <:*:> <:*:> <:*:> <:*:> <:*:> <:*:>
From <:*:>
* [new ref] <:SEQ:>-> <:*:>
##[endgroup]
##[group]Determining the checkout info
##[endgroup]
[command]/usr/bin/git sparse-checkout disable
[command]/usr/bin/git config --local --unset-all extensions.worktreeConfig
##[group]Checking out the ref
[command]/usr/bin/git checkout --progress --force refs/remotes/pull/<:NUM:>/merge
Updating files:  57% (145/251)
Updating files:  58% (146/251)
Updating files:  59% (149/251)
Updating files:  60% (151/251)
Updating files:  61% (154/251)
Updating files:  62% (156/251)
Updating files:  63% (159/251)
Updating files:  64% (161/251)
Updating files:  65% (164/251)
Updating files:  66% (166/251)
Updating files:  67% (169/251)
Updating files:  68% (171/251)
Updating files:  69% (174/251)
Updating files:  70% (176/251)
Updating files:  71% (179/251)
Updating files:  72% (181/251)
Updating files:  73% (184/251)
Updating files:  74% (186/251)
Updating files:  75% (189/251)
Updating files:  76% (191/251)
Updating files:  77% (194/251)
Updating files:  78% (196/251)
Updating files:  79% (199/251)
Updating files:  80% (201/251)
Updating files:  81% (204/251)
Updating files:  82% (206/251)
Updating files:  83% (209/251)
Updating files:  84% (211/251)
Updating files:  85% (214/251)
Updating files:  86% (216/251)
Updating files:  87% (219/251)
Updating files:  88% (221/251)
Updating files:  89% (224/251)
Updating files:  90% (226/251)
Updating files:  91% (229/251)
Updating files:  92% (231/251)
Updating files:  93% (234/251)
Updating files:  94% (236/251)
Updating files:  95% (239/251)
Updating files:  96% (241/251)
Updating files:  97% (244/251)
Updating files:  98% (246/251)
Updating files:  99% (249/251)
Updating files: 100% (251/251)
Updating files: 100% (251/251), done.
Note: switching to 'refs/remotes/pull/<:NUM:>/merge'.
2025-04-14T19:01:59.3855798Z
You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by switching back to a branch.
2025-04-14T19:01:59.3858448Z
If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -c with the switch command. Example:
2025-04-14T19:01:59.3859532Z
git switch -c <new-branch-name>
2025-04-14T19:01:59.3860057Z
Or undo this operation with:
2025-04-14T19:01:59.3860333Z
git switch -
2025-04-14T19:01:59.3860855Z
Turn off this advice by setting config variable advice.detachedHead to false
2025-04-14T19:01:59.3861445Z
HEAD is now at <:*:> Merge <:SEQ:> into <:SEQ:>
##[endgroup]
##[group]Setting up auth for fetching submodules
[command]/usr/bin/git config <:*:> http.https://github.com/.extraheader AUTHORIZATION: basic ***
[command]/usr/bin/git config --global --unset-all url.https://github.com/.insteadOf
[command]/usr/bin/git config --global --add url.https://github.com/.insteadOf git@github.com:
[command]/usr/bin/git config --global --add url.https://github.com/.insteadOf org-95932066@github.com:
##[endgroup]
##[group]Fetching submodules
[command]/usr/bin/git submodule sync
[command]/usr/bin/git -c protocol.version=2 submodule update --init --force --depth=1
Submodule <:*:> <:*:> registered for path <:*:>
Cloning into '/home/runner/work/code-server/code-server/lib/vscode'...
From <:*:>
* branch <:SEQ:>-> FETCH HEAD
Submodule path <:*:> checked out '<:SEQ:>'
[command]/usr/bin/git submodule foreach git config --local gc.auto 0
Entering <:*:>
##[endgroup]
##[group]Persisting credentials for submodules
[command]/usr/bin/git submodule foreach --recursive sh -c "git config --local --name-only --get-regexp <:*:> && git config --local --unset-all <:*:> || :"
Entering <:*:>
[command]/usr/bin/git submodule foreach sh -c "git config --local 'http.https://github.com/.extraheader' 'AUTHORIZATION: basic ***' && git config --local --show-origin --name-only --get-regexp remote.origin.url"
Entering <:*:>
<:*:> remote.origin.url
[command]/usr/bin/git submodule foreach git config --local --add 'url.https://github.com/.insteadOf' 'git@github.com:'
Entering <:*:>
[command]/usr/bin/git submodule foreach git config --local --add 'url.https://github.com/.insteadOf' 'org-95932066@github.com:'
Entering <:*:>
##[endgroup]
[command]/usr/bin/git log <:NUM:> <:*:>
<:SEQ:>
