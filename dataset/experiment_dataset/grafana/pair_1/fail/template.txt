Requested labels: ubuntu-latest
Job defined at: grafana/grafana/.github/workflows/go-lint.yml@refs/pull/103976/merge
Waiting for a runner to pick up this job...
Job is waiting for a hosted runner to come online.
Job is about to start running on the hosted runner: GitHub Actions 381 (hosted)
Current runner version: '2.323.0'
##[group]Operating System
Ubuntu
24.04.2
LTS
##[endgroup]
##[group]Runner Image
Image: ubuntu-24.04
Version: 20250406.1.0
Included Software: https://github.com/actions/runner-images/blob/ubuntu24/20250406.1/images/ubuntu/Ubuntu2404-Readme.md
Image Release: https://github.com/actions/runner-images/releases/tag/ubuntu24%2F20250406.1
##[endgroup]
##[group]Runner Image Provisioner
2.0.422.1
##[endgroup]
##[group]GITHUB_TOKEN Permissions
Contents: <:*:>
Metadata: read
##[endgroup]
Secret source: <:*:>
Prepare workflow directory
Prepare all required actions
Getting action download info
##[group]Download immutable action package <:*:>
Version: 4.2.2
Digest: sha256:<:SEQ:>
Source commit SHA: <:SEQ:>
##[endgroup]
##[group]Download immutable action package <:*:>
Version: 5.4.0
Digest: sha256:<:SEQ:>
Source commit SHA: <:SEQ:>
##[endgroup]
Download action repository <:*:> (SHA:<:SEQ:>)
Complete job name: <:*:>
##[group]Run <:*:>
with:
repository: <:*:>
token: ***
ssh-strict: true
ssh-user: git
persist-credentials: <:*:>
clean: true
sparse-checkout-cone-mode: true
fetch-depth: <:NUM:>
fetch-tags: false
show-progress: true
lfs: false
submodules: <:*:>
set-safe-directory: true
##[endgroup]
Syncing repository: <:*:>
##[group]Getting Git version info
Working directory is <:*:>
[command]/usr/bin/git version
git version <:NUM:>.<:NUM:>.<:NUM:>
##[endgroup]
Temporarily overriding HOME='/home/runner/work/_temp/f3619f07-c946-4427-9e51-bd70d2a9548e' before making global git config changes
Adding repository directory to the temporary git global config as a safe directory
[command]/usr/bin/git config --global --add safe.directory /home/runner/work/grafana/grafana
Deleting the contents of <:*:>
##[group]Initializing the repository
[command]/usr/bin/git init <:*:>
hint: Using 'master' as the name for the initial branch. This default branch name
hint: is subject to change. To configure the initial branch name to use in all
hint: of your new repositories, which will suppress this warning, call:
hint:
hint: git config --global init.defaultBranch <name>
hint:
hint: Names commonly chosen instead of 'master' are 'main', 'trunk' and
hint: 'development'. The just-created branch can be renamed via this command:
hint:
hint: git branch -m <name>
Initialized empty Git repository in <:*:>
[command]/usr/bin/git remote add origin <:*:>
##[endgroup]
##[group]Disabling automatic garbage collection
[command]/usr/bin/git config --local gc.auto 0
##[endgroup]
##[group]Setting up auth
[command]/usr/bin/git config --local --name-only --get-regexp <:*:>
[command]/usr/bin/git submodule foreach --recursive sh -c "git config --local --name-only --get-regexp <:*:> && git config --local --unset-all <:*:> || :"
[command]/usr/bin/git config --local --name-only --get-regexp <:*:>
[command]/usr/bin/git submodule foreach --recursive sh -c "git config --local --name-only --get-regexp <:*:> && git config --local --unset-all <:*:> || :"
[command]/usr/bin/git config <:*:> http.https://github.com/.extraheader AUTHORIZATION: basic ***
##[endgroup]
##[group]Fetching the repository
[command]/usr/bin/git -c protocol.version=<:NUM:> fetch <:*:> <:*:> <:*:> <:*:> <:*:> <:*:>
From <:*:>
* [new ref] <:SEQ:>-> <:*:>
##[endgroup]
##[group]Determining the checkout info
##[endgroup]
[command]/usr/bin/git sparse-checkout disable
[command]/usr/bin/git config --local --unset-all extensions.worktreeConfig
##[group]Checking out the ref
[command]/usr/bin/git checkout --progress --force refs/remotes/pull/<:NUM:>/merge
Updating files:  98% (16908/17159)
Updating files:  99% (16988/17159)
Updating files: 100% (17159/17159)
Updating files: 100% (17159/17159), done.
Note: switching to 'refs/remotes/pull/<:NUM:>/merge'.
2025-04-15T08:31:46.1703377Z
You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by switching back to a branch.
2025-04-15T08:31:46.1705606Z
If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -c with the switch command. Example:
2025-04-15T08:31:46.1706967Z
git switch -c <new-branch-name>
2025-04-15T08:31:46.1707490Z
Or undo this operation with:
2025-04-15T08:31:46.1708344Z
git switch -
2025-04-15T08:31:46.1708684Z
Turn off this advice by setting config variable advice.detachedHead to false
2025-04-15T08:31:46.1709529Z
HEAD is now at <:*:> Merge <:SEQ:> into <:SEQ:>
##[endgroup]
[command]/usr/bin/git log <:NUM:> <:*:>
<:SEQ:>
##[group]Run <:*:>
with:
go-version-file: ./go.mod
check-latest: false
token: ***
cache: true
##[endgroup]
Setup go version spec 1.24.2
Attempting to download 1.24.2...
matching 1.24.2...
Acquiring 1.24.2 from https://github.com/actions/go-versions/releases/download/1.24.2-14210955142/go-1.24.2-linux-x64.tar.gz
Extracting Go...
[command]/usr/bin/tar xz --warning=no-unknown-keyword --overwrite -C /home/runner/work/_temp/21f59ff8-e332-455c-94b4-046f431ae9ea -f /home/runner/work/_temp/f3bf56fd-4c79-4d85-9fc6-38a253043bbd
Successfully extracted go to /home/runner/work/_temp/21f59ff8-e332-455c-94b4-046f431ae9ea
Adding to the cache ...
Successfully cached go to /opt/hostedtoolcache/go/1.24.2/x64
Added go to the path
Successfully set up Go version 1.24.2
[command]/opt/hostedtoolcache/go/1.24.2/x64/bin/go env GOMODCACHE
[command]/opt/hostedtoolcache/go/1.24.2/x64/bin/go env GOCACHE
/home/runner/go/pkg/mod
/home/runner/.cache/go-build
Cache hit for: setup-go-Linux-x64-ubuntu24-go-1.24.2-4d63517195dacf30a5e924b0697e28c502f672c1f0f8eab897c99d9c09cd77cc
Received 16777216 of 1788493596 (0.9%), 16.0 MBs/sec
Received 134217728 of 1788493596 (7.5%), 63.8 MBs/sec
Received 268435456 of 1788493596 (15.0%), 85.0 MBs/sec
Received 402653184 of 1788493596 (22.5%), 94.6 MBs/sec
Received 520093696 of 1788493596 (29.1%), 98.0 MBs/sec
Received 641728512 of 1788493596 (35.9%), 101.0 MBs/sec
Received 742391808 of 1788493596 (41.5%), 100.2 MBs/sec
Received 851443712 of 1788493596 (47.6%), 100.6 MBs/sec
Received 939524096 of 1788493596 (52.5%), 98.8 MBs/sec
Received 1065353216 of 1788493596 (59.6%), 100.9 MBs/sec
Received 1145044992 of 1788493596 (64.0%), 98.7 MBs/sec
Received 1249902592 of 1788493596 (69.9%), 98.7 MBs/sec
Received 1354760192 of 1788493596 (75.7%), 98.8 MBs/sec
Received 1476395008 of 1788493596 (82.5%), 100.0 MBs/sec
Received 1610612736 of 1788493596 (90.1%), 101.5 MBs/sec
Received 1728053248 of 1788493596 (96.6%), 102.1 MBs/sec
Received 1788493596 of 1788493596 (100.0%), 101.9 MBs/sec
Cache Size: ~1706 MB (1788493596 B)
[command]/usr/bin/tar -xf /home/runner/work/_temp/34f2f266-7437-4f34-8543-2fcb564c5b04/cache.tzst -P -C /home/runner/work/grafana/grafana --use-compress-program unzstd
Cache restored successfully
Cache restored from key: setup-go-Linux-x64-ubuntu24-go-1.24.2-4d63517195dacf30a5e924b0697e28c502f672c1f0f8eab897c99d9c09cd77cc
go version go1.24.2 linux/amd64
2025-04-15T08:32:25.4434795Z
##[group]go env
AR='ar'
CC='gcc'
CGO_CFLAGS='-O2 -g'
CGO_CPPFLAGS=''
CGO_CXXFLAGS='-O2 -g'
CGO_ENABLED='1'
CGO_FFLAGS='-O2 -g'
CGO_LDFLAGS='-O2 -g'
CXX='g++'
GCCGO='gccgo'
GO111MODULE=''
GOAMD64='v1'
GOARCH='amd64'
GOAUTH='netrc'
GOBIN=''
GOCACHE='/home/runner/.cache/go-build'
GOCACHEPROG=''
GODEBUG=''
GOENV='/home/runner/.config/go/env'
GOEXE=''
GOEXPERIMENT=''
GOFIPS140='off'
GOFLAGS=''
GOGCCFLAGS='-fPIC -m64 -pthread -Wl,--no-gc-sections -fmessage-length=0 -ffile-prefix-map=/tmp/go-build1712694416=/tmp/go-build -gno-record-gcc-switches'
GOHOSTARCH='amd64'
GOHOSTOS='linux'
GOINSECURE=''
GOMOD='/home/runner/work/grafana/grafana/go.mod'
GOMODCACHE='/home/runner/go/pkg/mod'
GONOPROXY=''
GONOSUMDB=''
GOOS='linux'
GOPATH='/home/runner/go'
GOPRIVATE=''
GOPROXY='https://proxy.golang.org,direct'
GOROOT='/opt/hostedtoolcache/go/1.24.2/x64'
GOSUMDB='sum.golang.org'
GOTELEMETRY='local'
GOTELEMETRYDIR='/home/runner/.config/go/telemetry'
GOTMPDIR=''
GOTOOLCHAIN='auto'
GOTOOLDIR='/opt/hostedtoolcache/go/1.24.2/x64/pkg/tool/linux_amd64'
GOVCS=''
GOVERSION='go1.24.2'
GOWORK='/home/runner/work/grafana/grafana/go.work'
PKG_CONFIG='pkg-config'
2025-04-15T08:32:25.6835622Z
##[endgroup]
##[group]Run make gen-go
[36;1mmake gen-go[0m
shell: /usr/bin/bash -e {<:NUM:>}
##[endgroup]
generate go files
go run  ./pkg/build/wire/cmd/wire/main.go gen -tags "oss" ./pkg/server
wire: github.com/grafana/grafana/pkg/server: wrote /home/runner/work/grafana/grafana/pkg/server/wire_gen.go
##[group]Run <:*:>
with:
version: v2.0.2
args: --verbose $(go list -m -f '{{.Dir}}' | xargs -I{} sh -c 'test ! -f {}/.nolint && echo {}/...')
install-mode: binary
github-token: ***
<:*:> true
<:*:> false
<:*:> false
<:*:> false
<:*:> false
cache-invalidation-interval: 7
##[endgroup]
##[group]prepare environment
Checking for go.mod: go.mod
Cache hit for: golangci-lint.cache-Linux-2884-70ff253f8fa610b4e12e03d77837ed9a37aa2582
Received 7280543 of 11474847 (63.4%), 6.9 MBs/sec
Received 11474847 of 11474847 (100.0%), 9.7 MBs/sec
Cache Size: ~11 MB (11474847 B)
[command]/usr/bin/tar -xf /home/runner/work/_temp/22a3102b-d10c-4a74-bd76-3de76fce229a/cache.tzst -P -C /home/runner/work/grafana/grafana --use-compress-program unzstd
Cache restored successfully
Restored cache for golangci-lint from key 'golangci-lint.cache-Linux-2884-70ff253f8fa610b4e12e03d77837ed9a37aa2582' in 4429ms
Finding needed golangci-lint version...
Installation mode: binary
Installing golangci-lint binary v2.0.2...
Downloading binary https://github.com/golangci/golangci-lint/releases/download/v2.0.2/golangci-lint-2.0.2-linux-amd64.tar.gz ...
[command]/usr/bin/tar xz --overwrite --warning=no-unknown-keyword --overwrite -C /home/runner -f /home/runner/work/_temp/54a68747-b043-4ba1-8e3a-d631e2986d16
Installed golangci-lint into /home/runner/golangci-lint-2.0.2-linux-amd64/golangci-lint in 828ms
Prepared env in 5259ms
##[endgroup]
##[group]run golangci-lint
Running [/home/runner/golangci-lint-2.0.2-linux-amd64/golangci-lint config path] in [/home/runner/work/grafana/grafana] ...
Running [/home/runner/golangci-lint-2.0.2-linux-amd64/golangci-lint config verify] in [/home/runner/work/grafana/grafana] ...
Running [/home/runner/golangci-lint-2.0.2-linux-amd64/golangci-lint run  --verbose $(go list -m -f '{{.Dir}}' | xargs -I{} sh -c 'test ! -f {}/.nolint && echo {}/...')] in [/home/runner/work/grafana/grafana] ...
##[error]pkg/registry/apis/provisioning/jobs/migrate/legacy_test.go:357:19: Error return value is not checked (errcheck)
clone.BeforeFn()
^
##[error]pkg/registry/apis/provisioning/jobs/migrate/legacy_test.go:361:18: Error return value is not checked (errcheck)
push.BeforeFn()
^
##[error]pkg/registry/apis/provisioning/jobs/migrate/folders_test.go:159:3: unnecessary trailing newline (whitespace)
}).Return(&resource.BulkResponse{}, nil)
^
##[error]pkg/registry/apis/provisioning/jobs/migrate/folders_test.go:222:3: unnecessary trailing newline (whitespace)
}).Return(&resource.BulkResponse{}, nil)
^
4 issues:
* errcheck: 2
* whitespace: 2
2025-04-15T08:42:52.6546951Z
level=info msg="golangci-lint has version 2.0.2 built with go1.24.1 from 2b224c2c on 2025-03-25T21:36:18Z"
level=info msg="[config_reader] Config search paths: [./ /home/runner/work/grafana/grafana /home/runner/work/grafana /home/runner/work /home/runner /home /]"
level=info msg="[config_reader] Used config file .golangci.yml"
level=info msg="[goenv] Read go env for 3.022728ms: map[string]string{\"GOCACHE\":\"/home/runner/.cache/go-build\", \"GOROOT\":\"/opt/hostedtoolcache/go/1.24.2/x64\"}"
level=info msg="[lintersdb] Active 21 linters: [asciicheck bodyclose depguard dogsled errcheck errorlint exhaustive gocyclo goimports goprintffuncname gosec govet ineffassign misspell nakedret prealloc revive staticcheck unconvert unused whitespace]"
level=info msg="[loader] Go packages loading at mode 8767 (files|imports|name|compiled_files|deps|types_sizes|exports_file) took 6m36.706123296s"
level=info msg="[runner/filename_unadjuster] Pre-built 0 adjustments in 463.754414ms"
level=info msg="[linters_context/goanalysis] analyzers took 48m35.445243861s with top 10 stages: buildir: 25m14.717475577s, goimports: 4m45.98871378s, unconvert: 1m49.762447486s, the_only_name: 1m44.075823058s, nilness: 1m24.02449329s, gosec: 1m16.721714874s, exhaustive: 35.29311562s, S1038: 29.732097774s, fact_deprecated: 28.608511997s, buildssa: 28.372111656s"
level=info msg="[runner/exclusion_paths] Skipped 19 issues by pattern \"devenv\""
level=info msg="[runner/exclusion_paths] Skipped 19 issues by pattern \"scripts\""
level=info msg="[runner/exclusion_paths] Skipped 0 issues by pattern \"third_party$\""
level=info msg="[runner/exclusion_paths] Skipped 0 issues by pattern \"builtin$\""
level=info msg="[runner/exclusion_paths] Skipped 0 issues by pattern \"examples$\""
level=info msg="[runner/exclusion_rules] Skipped 0 issues by rules: [Path: \"builtin$\", Linters: \"goimports\"]"
level=info msg="[runner/exclusion_rules] Skipped 45 issues by rules: [Text: \"ST1001\", Linters: \"staticcheck\"]"
level=info msg="[runner/exclusion_rules] Skipped 1 issues by rules: [Text: \"G108\", Linters: \"gosec\"]"
level=info msg="[runner/exclusion_rules] Skipped 0 issues by rules: [Text: \"ST1020\", Linters: \"staticcheck\"]"
level=info msg="[runner/exclusion_rules] Skipped 0 issues by rules: [Path: \"devenv\", Linters: \"goimports\"]"
level=info msg="[runner/exclusion_rules] Skipped 0 issues by rules: [Path: \"third_party$\", Linters: \"goimports\"]"
level=info msg="[runner/exclusion_rules] Skipped 0 issues by rules: [Path: \"examples$\", Linters: \"goimports\"]"
level=info msg="[runner/exclusion_rules] Skipped 0 issues by rules: [Text: \"ST1003\", Linters: \"staticcheck\"]"
level=info msg="[runner/exclusion_rules] Skipped 2 issues by rules: [Text: \"G110\", Linters: \"gosec\"]"
level=info msg="[runner/exclusion_rules] Skipped 103 issues by rules: [Text: \"G115\", Linters: \"gosec\"]"
level=info msg="[runner/exclusion_rules] Skipped 0 issues by rules: [Text: \"G201\", Linters: \"gosec\"]"
level=info msg="[runner/exclusion_rules] Skipped 0 issues by rules: [Text: \"G202\", Linters: \"gosec\"]"
level=info msg="[runner/exclusion_rules] Skipped 24 issues by rules: [Text: \"G306\", Linters: \"gosec\"]"
level=info msg="[runner/exclusion_rules] Skipped 16 issues by rules: [Text: \"501\", Linters: \"gosec\"]"
level=info msg="[runner/exclusion_rules] Skipped 267 issues by rules: [Text: \"404\", Linters: \"gosec\"]"
level=info msg="[runner/exclusion_rules] Skipped 8 issues by rules: [Text: \"SA1019: strings.Title\", Linters: \"staticcheck\"]"
level=info msg="[runner/exclusion_rules] Skipped 2 issues by rules: [Text: \"SA1019: \\\"go.opentelemetry.io/otel/exporters/jaeger\\\"\", Linters: \"staticcheck\"]"
level=info msg="[runner/exclusion_rules] Skipped 54 issues by rules: [Text: \"use fake service and real access control evaluator instead\", Linters: \"staticcheck\"]"
level=info msg="[runner/exclusion_rules] Skipped 34 issues by rules: [Text: \"401\", Linters: \"gosec\"]"
level=info msg="[runner/exclusion_rules] Skipped 185 issues by rules: [Text: \"non-wrapping format verb for fmt.Errorf\", Linters: \"errorlint\"]"
level=info msg="[runner/exclusion_rules] Skipped 0 issues by rules: [Text: \"ST1000\", Linters: \"staticcheck\"]"
level=info msg="[runner/exclusion_rules] Skipped 0 issues by rules: [Text: \"ST1021\", Linters: \"staticcheck\"]"
level=info msg="[runner/exclusion_rules] Skipped 0 issues by rules: [Text: \"G601\", Path: \"(.+)_test\\\\.go\", Linters: \"gosec\"]"
level=info msg="[runner/exclusion_rules] Skipped 2 issues by rules: [Text: \"SA1019: http.CloseNotifier\", Linters: \"staticcheck\"]"
level=info msg="[runner/exclusion_rules] Skipped 23 issues by rules: [Text: \"402\", Linters: \"gosec\"]"
level=info msg="[runner/exclusion_rules] Skipped 0 issues by rules: [Path: \"scripts\", Linters: \"goimports\"]"
level=warning msg="[runner/nolint_filter] Found unknown linters in //nolint directives: deadcode"
level=info msg="[runner] Issues before processing: 2309, after processing: 4"
level=info msg="[runner] Processors filtering stat (in/out): cgo: 2309/2309, path_relativity: 2309/2309, exclusion_rules: 1507/741, uniq_by_line: 6/4, severity-rules: 4/4, path_prettifier: 4/4, invalid_issue: 2309/2309, exclusion_paths: 2309/2271, nolint_filter: 741/6, fixer: 6/6, max_same_issues: 4/4, sort_results: 4/4, path_absoluter: 2309/2309, filename_unadjuster: 2309/2309, generated_file_filter: 2271/1507, diff: 6/6, path_shortener: 4/4, max_per_file_from_linter: 4/4, max_from_linter: 4/4, source_code: 4/4"
level=info msg="[runner] processing took 173.303177ms with stages: nolint_filter: 155.455941ms, generated_file_filter: 12.627582ms, exclusion_rules: 2.654842ms, path_relativity: 1.288328ms, exclusion_paths: 708.303µs, invalid_issue: 178.002µs, cgo: 137.626µs, path_absoluter: 123.641µs, filename_unadjuster: 69.029µs, source_code: 47.489µs, uniq_by_line: 3.086µs, sort_results: 2.505µs, max_from_linter: 2.074µs, path_shortener: 1.302µs, max_per_file_from_linter: 1.112µs, max_same_issues: 943ns, diff: 601ns, fixer: 450ns, path_prettifier: 210ns, severity-rules: 111ns"
level=info msg="[runner] linters took 3m24.098090366s with stages: goanalysis_metalinter: 3m23.924642338s"
level=info msg="File cache stats: 2 entries of total size 24.4KiB"
level=info msg="Memory: 5210 samples, avg is 1543.3MB, max is 9775.0MB"
level=info msg="Execution took 10m1.277355757s"
2025-04-15T08:42:52.6598019Z
##[error]issues found
Ran golangci-lint in 601972ms
##[endgroup]
Post job cleanup.
Cache hit occurred on the primary key golangci-lint.cache-Linux-2884-70ff253f8fa610b4e12e03d77837ed9a37aa2582, not saving cache.
Post job cleanup.
[command]/usr/bin/git version
git version <:NUM:>.<:NUM:>.<:NUM:>
Temporarily overriding HOME='/home/runner/work/_temp/092b48f5-e9fc-4981-88e8-e428923ada3c' before making global git config changes
Adding repository directory to the temporary git global config as a safe directory
[command]/usr/bin/git config --global --add safe.directory /home/runner/work/grafana/grafana
[command]/usr/bin/git config --local --name-only --get-regexp <:*:>
[command]/usr/bin/git submodule foreach --recursive sh -c "git config --local --name-only --get-regexp <:*:> && git config --local --unset-all <:*:> || :"
[command]/usr/bin/git config --local --name-only --get-regexp <:*:>
http.https://github.com/.extraheader
[command]/usr/bin/git config --local --unset-all http.https://github.com/.extraheader
[command]/usr/bin/git submodule foreach --recursive sh -c "git config --local --name-only --get-regexp <:*:> && git config --local --unset-all <:*:> || :"
Cleaning up orphan processes
