##[group]Run yarn run test:ci
[36;1myarn run test:ci[0m
shell: /usr/bin/bash -e {<:NUM:>}
env:
TEST_MAX_WORKERS: 2
TEST_SHARD: 1
TEST_SHARD_TOTAL: 8
##[endgroup]
jest-haste-map: duplicate manual mock found: store.navIndex.mock
The following files share their name; please delete one of them:
* <rootDir>/public/app/features/connections/__mocks__/store.navIndex.mock.ts
* <rootDir>/public/app/features/datasources/__mocks__/store.navIndex.mock.ts
2025-04-15T08:32:28.7942642Z
jest-haste-map: duplicate manual mock found: index
The following files share their name; please delete one of them:
* <rootDir>/public/app/features/datasources/__mocks__/index.ts
* <rootDir>/public/app/features/plugins/admin/__mocks__/index.ts
2025-04-15T08:32:28.8049197Z
jest-haste-map: duplicate manual mock found: datasource
The following files share their name; please delete one of them:
* <rootDir>/public/app/plugins/datasource/azuremonitor/__mocks__/datasource.ts
* <rootDir>/public/app/plugins/datasource/influxdb/__mocks__/datasource.ts
2025-04-15T08:32:28.8059436Z
jest-haste-map: duplicate manual mock found: query
The following files share their name; please delete one of them:
* <rootDir>/public/app/plugins/datasource/azuremonitor/__mocks__/query.ts
* <rootDir>/public/app/plugins/datasource/influxdb/__mocks__/query.ts
2025-04-15T08:32:28.8063416Z
jest-haste-map: duplicate manual mock found: datasource
The following files share their name; please delete one of them:
* <rootDir>/public/app/plugins/datasource/influxdb/__mocks__/datasource.ts
* <rootDir>/public/app/plugins/datasource/loki/__mocks__/datasource.ts
2025-04-15T08:32:28.8066845Z
jest-haste-map: duplicate manual mock found: datasource
The following files share their name; please delete one of them:
* <rootDir>/public/app/plugins/datasource/loki/__mocks__/datasource.ts
* <rootDir>/packages/grafana-prometheus/src/test/__mocks__/datasource.ts
2025-04-15T08:32:28.8070219Z
FAIL public/app/features/variables/inspect/utils.test.ts
● Test suite failed to run
2025-04-15T08:32:45.4949561Z
Jest encountered an unexpected token
2025-04-15T08:32:45.4950196Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:32:45.4952477Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:32:45.4954058Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:32:45.4954869Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:32:45.4963785Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:32:45.4966655Z
Details:
2025-04-15T08:32:45.4967015Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:32:45.4968730Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:32:45.4969314Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:32:45.4977194Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:32:45.5003622Z
FAIL public/app/features/explore/state/query.test.ts
● Test suite failed to run
2025-04-15T08:32:45.5056054Z
Jest encountered an unexpected token
2025-04-15T08:32:45.5056614Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:32:45.5057995Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:32:45.5058865Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:32:45.5059302Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:32:45.5064147Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:32:45.5065711Z
Details:
2025-04-15T08:32:45.5065907Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:32:45.5066955Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:32:45.5067290Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:32:45.5071273Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:32:45.5085489Z
(node:2947) [DEP0040] DeprecationWarning: The `punycode` module is deprecated. Please use a userland alternative instead.
(Use `node --trace-deprecation ...` to show where the warning was created)
(node:2946) [DEP0040] DeprecationWarning: The `punycode` module is deprecated. Please use a userland alternative instead.
(Use `node --trace-deprecation ...` to show where the warning was created)
FAIL public/app/features/variables/query/actions.test.tsx
● Test suite failed to run
2025-04-15T08:32:46.5636392Z
Jest encountered an unexpected token
2025-04-15T08:32:46.5636822Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:32:46.5638290Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:32:46.5639340Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:32:46.5639878Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:32:46.5645677Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:32:46.5647240Z
Details:
2025-04-15T08:32:46.5647433Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:32:46.5648363Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:32:46.5648696Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:32:46.5652866Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:32:46.5666613Z
FAIL public/app/plugins/datasource/loki/modifyQuery.test.ts
● Test suite failed to run
2025-04-15T08:32:46.8116317Z
Jest encountered an unexpected token
2025-04-15T08:32:46.8116645Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:32:46.8117833Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:32:46.8118697Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:32:46.8119133Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:32:46.8123853Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:32:46.8125425Z
Details:
2025-04-15T08:32:46.8125617Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:32:46.8126538Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:32:46.8126855Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:32:46.8130730Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:32:46.8144595Z
FAIL public/app/core/specs/backend_srv.test.ts
● Test suite failed to run
2025-04-15T08:32:47.5604980Z
Jest encountered an unexpected token
2025-04-15T08:32:47.5605549Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:32:47.5607548Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:32:47.5609069Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:32:47.5609881Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:32:47.5617898Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:32:47.5620957Z
Details:
2025-04-15T08:32:47.5621772Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:32:47.5623461Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:32:47.5624028Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:32:47.5631332Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:32:47.5656503Z
FAIL public/app/features/dashboard-scene/serialization/sceneVariablesSetToVariables.test.ts
● Test suite failed to run
2025-04-15T08:32:47.5759089Z
Jest encountered an unexpected token
2025-04-15T08:32:47.5760001Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:32:47.5762379Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:32:47.5763911Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:32:47.5764727Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:32:47.5773389Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:32:47.5776291Z
Details:
2025-04-15T08:32:47.5776658Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:32:47.5778670Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:32:47.5779289Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:32:47.5786936Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:32:47.5812681Z
PASS packages/grafana-prometheus/src/querycache/QueryCache.test.ts
FAIL public/app/plugins/datasource/loki/LogContextProvider.test.ts
● Test suite failed to run
2025-04-15T08:32:48.4211008Z
Jest encountered an unexpected token
2025-04-15T08:32:48.4211428Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:32:48.4213315Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:32:48.4214356Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:32:48.4214902Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:32:48.4219940Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:32:48.4221654Z
Details:
2025-04-15T08:32:48.4221849Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:32:48.4222789Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:32:48.4223113Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:32:48.4227120Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:32:48.4241164Z
FAIL public/app/features/variables/state/sharedReducer.test.ts
● Test suite failed to run
2025-04-15T08:32:49.2557381Z
Jest encountered an unexpected token
2025-04-15T08:32:49.2557718Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:32:49.2558872Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:32:49.2559739Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:32:49.2560854Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:32:49.2565210Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:32:49.2566797Z
Details:
2025-04-15T08:32:49.2566989Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:32:49.2567913Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:32:49.2568229Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:32:49.2572342Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:32:49.2586769Z
PASS public/app/plugins/datasource/influxdb/influx_query_model.test.ts
FAIL public/app/features/plugins/admin/pages/Browse.test.tsx
● Test suite failed to run
2025-04-15T08:32:50.3452365Z
Jest encountered an unexpected token
2025-04-15T08:32:50.3452776Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:32:50.3454214Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:32:50.3455154Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:32:50.3455593Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:32:50.3460424Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:32:50.3461982Z
Details:
2025-04-15T08:32:50.3462179Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:32:50.3463089Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:32:50.3463410Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:32:50.3467308Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:32:50.3481183Z
FAIL public/app/features/dashboard/state/PanelModel.test.ts
● Test suite failed to run
2025-04-15T08:32:51.1150627Z
Jest encountered an unexpected token
2025-04-15T08:32:51.1151158Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:32:51.1152711Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:32:51.1153553Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:32:51.1153994Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:32:51.1158649Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:32:51.1160195Z
Details:
2025-04-15T08:32:51.1160683Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:32:51.1161617Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:32:51.1161940Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:32:51.1165896Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:32:51.1179651Z
FAIL public/app/features/alerting/unified/components/notification-policies/Policy.test.tsx
● Test suite failed to run
2025-04-15T08:32:51.8957195Z
Jest encountered an unexpected token
2025-04-15T08:32:51.8957605Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:32:51.8959246Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:32:51.8960515Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:32:51.8961068Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:32:51.8966225Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:32:51.8967762Z
Details:
2025-04-15T08:32:51.8967950Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:32:51.8968864Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:32:51.8969185Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:32:51.8973134Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:32:51.8987054Z
PASS public/app/features/alerting/unified/utils/notification-policies.test.ts
PASS public/app/plugins/datasource/cloudwatch/language/cloudwatch-logs-sql/completion/CompletionItemProvider.test.ts
FAIL public/app/features/query/state/DashboardQueryRunner/DashboardQueryRunner.test.ts
● Test suite failed to run
2025-04-15T08:32:54.4739742Z
Jest encountered an unexpected token
2025-04-15T08:32:54.4740073Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:32:54.4741454Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:32:54.4742315Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:32:54.4742750Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:32:54.4747016Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:32:54.4749136Z
Details:
2025-04-15T08:32:54.4749329Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:32:54.4750376Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:32:54.4750698Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:32:54.4754521Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:32:54.4769016Z
PASS packages/grafana-data/src/transformations/transformers/convertFieldType.test.ts
FAIL public/app/features/dashboard/components/ShareModal/SharePublicDashboard/SharePublicDashboard.test.tsx
● Test suite failed to run
2025-04-15T08:32:55.5113293Z
Jest encountered an unexpected token
2025-04-15T08:32:55.5113632Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:32:55.5114790Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:32:55.5115650Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:32:55.5116106Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:32:55.5121423Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:32:55.5124085Z
Details:
2025-04-15T08:32:55.5135359Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:32:55.5136423Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:32:55.5136763Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:32:55.5140899Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:32:55.5155008Z
FAIL public/app/features/datasources/state/actions.test.ts
● Test suite failed to run
2025-04-15T08:32:56.2699559Z
Jest encountered an unexpected token
2025-04-15T08:32:56.2699897Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:32:56.2701242Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:32:56.2702072Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:32:56.2702506Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:32:56.2706809Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:32:56.2708358Z
Details:
2025-04-15T08:32:56.2708550Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:32:56.2709817Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:32:56.2710136Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:32:56.2714075Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:32:56.2727826Z
PASS public/app/features/variables/query/queryRunners.test.ts
FAIL public/app/features/dashboard-scene/settings/variables/utils.test.ts
● Test suite failed to run
2025-04-15T08:32:57.5018660Z
Jest encountered an unexpected token
2025-04-15T08:32:57.5019001Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:32:57.5020696Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:32:57.5021542Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:32:57.5021981Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:32:57.5026317Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:32:57.5027872Z
Details:
2025-04-15T08:32:57.5028065Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:32:57.5029195Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:32:57.5029521Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:32:57.5033436Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:32:57.5047347Z
FAIL public/app/features/datasources/components/picker/DataSourcePicker.test.tsx
● Test suite failed to run
2025-04-15T08:32:58.1671874Z
Jest encountered an unexpected token
2025-04-15T08:32:58.1672210Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:32:58.1673699Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:32:58.1674565Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:32:58.1675001Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:32:58.1679286Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:32:58.1681056Z
Details:
2025-04-15T08:32:58.1681250Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:32:58.1682182Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:32:58.1682500Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:32:58.1686472Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:32:58.1700389Z
PASS packages/grafana-ui/src/components/Input/AutoSizeInput.test.tsx
FAIL public/app/features/dashboard/components/GenAI/GenAIButton.test.tsx
● Test suite failed to run
2025-04-15T08:32:59.5929326Z
Jest encountered an unexpected token
2025-04-15T08:32:59.5929663Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:32:59.5931056Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:32:59.5931920Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:32:59.5932362Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:32:59.5936967Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:32:59.5938534Z
Details:
2025-04-15T08:32:59.5938725Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:32:59.5939645Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:32:59.5939970Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:32:59.5944083Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:32:59.5957804Z
FAIL public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.test.tsx
● Test suite failed to run
2025-04-15T08:33:00.2730983Z
Jest encountered an unexpected token
2025-04-15T08:33:00.2731318Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:33:00.2732481Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:33:00.2733319Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:33:00.2733761Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:33:00.2738415Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:33:00.2739958Z
Details:
2025-04-15T08:33:00.2740162Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:33:00.2741309Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:33:00.2741632Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:33:00.2745432Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:33:00.2759421Z
PASS public/app/plugins/datasource/cloudwatch/query-runner/CloudWatchLogsQueryRunner.test.ts (12.627 s)
FAIL public/app/features/alerting/unified/components/rule-editor/AnnotationsStep.test.tsx
● Test suite failed to run
2025-04-15T08:33:01.0842282Z
Jest encountered an unexpected token
2025-04-15T08:33:01.0842623Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:33:01.0843776Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:33:01.0844624Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:33:01.0845068Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:33:01.0849759Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:33:01.0851592Z
Details:
2025-04-15T08:33:01.0851791Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:33:01.0852738Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:33:01.0853062Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:33:01.0857091Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:33:01.0872147Z
PASS packages/grafana-ui/src/components/Select/SelectBase.test.tsx
PASS public/app/plugins/datasource/azuremonitor/components/ResourcePicker/utils.test.ts
PASS packages/grafana-data/src/panel/getPanelOptionsWithDefaults.test.ts
PASS public/app/features/explore/TraceView/components/utils/DraggableManager/DraggableManager.test.ts
FAIL public/app/features/dashboard-scene/panel-edit/PanelDataPane/PanelDataAlertingTab.test.tsx
● Test suite failed to run
2025-04-15T08:33:04.6631545Z
Jest encountered an unexpected token
2025-04-15T08:33:04.6632141Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:33:04.6634232Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:33:04.6635766Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:33:04.6636554Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:33:04.6645274Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:33:04.6648047Z
Details:
2025-04-15T08:33:04.6648400Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:33:04.6650044Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:33:04.6650816Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:33:04.6657904Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:33:04.6683894Z
PASS public/app/plugins/datasource/tempo/language_provider.test.ts
PASS packages/grafana-prometheus/src/querybuilder/components/PromQueryBuilder.test.tsx (5.415 s)
FAIL public/app/features/logs/components/panel/LogListControls.test.tsx
● Test suite failed to run
2025-04-15T08:33:07.3454243Z
Jest encountered an unexpected token
2025-04-15T08:33:07.3454809Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:33:07.3456304Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:33:07.3457166Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:33:07.3457612Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:33:07.3462696Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:33:07.3464268Z
Details:
2025-04-15T08:33:07.3464481Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:33:07.3465428Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:33:07.3465750Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:33:07.3469693Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:33:07.3483582Z
PASS public/app/core/utils/explore.test.ts
PASS public/app/plugins/panel/table/table-new/migrations.test.ts
PASS public/app/plugins/datasource/cloudwatch/language/cloudwatch-ppl/completion/PPLCompletionItemProvider.test.ts
PASS public/app/features/transformers/timeSeriesTable/timeSeriesTableTransformer.test.ts
PASS public/app/plugins/datasource/cloudwatch/components/shared/MetricStatEditor/MetricStatEditor.test.tsx (9.31 s)
FAIL public/app/core/history/RichHistoryLocalStorage.test.ts
● Test suite failed to run
2025-04-15T08:33:15.4338637Z
Jest encountered an unexpected token
2025-04-15T08:33:15.4339229Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:33:15.4341180Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:33:15.4342571Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:33:15.4343118Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:33:15.4348219Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:33:15.4349791Z
Details:
2025-04-15T08:33:15.4349993Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:33:15.4351128Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:33:15.4351450Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:33:15.4355448Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:33:15.4369285Z
FAIL public/app/features/dashboard/components/GenAI/jsonDiffText.test.ts
● Test suite failed to run
2025-04-15T08:33:16.1299644Z
Jest encountered an unexpected token
2025-04-15T08:33:16.1300140Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:33:16.1301547Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:33:16.1302399Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:33:16.1302851Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:33:16.1307572Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:33:16.1309113Z
Details:
2025-04-15T08:33:16.1309302Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:33:16.1310367Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:33:16.1310705Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:33:16.1314655Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:33:16.1328395Z
PASS packages/grafana-ui/src/graveyard/Graph/utils.test.ts
PASS public/app/features/auth-config/ProviderConfigForm.test.tsx (7.627 s)
PASS packages/grafana-runtime/src/analytics/plugins/usePluginInteractionReporter.test.tsx
FAIL public/app/features/alerting/unified/hooks/ruleGroup/useMoveRuleFromRuleGroup.test.tsx
● Test suite failed to run
2025-04-15T08:33:17.1750497Z
Jest encountered an unexpected token
2025-04-15T08:33:17.1751089Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:33:17.1753031Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:33:17.1754552Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:33:17.1755355Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:33:17.1764214Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:33:17.1767013Z
Details:
2025-04-15T08:33:17.1767354Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:33:17.1768641Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:33:17.1769091Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:33:17.1774610Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:33:17.1798721Z
FAIL public/app/features/dashboard/containers/DashboardPageProxy.test.tsx
● Test suite failed to run
2025-04-15T08:33:17.5211905Z
Jest encountered an unexpected token
2025-04-15T08:33:17.5212473Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:33:17.5214519Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:33:17.5215974Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:33:17.5216707Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:33:17.5224771Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:33:17.5227990Z
Details:
2025-04-15T08:33:17.5228316Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:33:17.5229990Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:33:17.5230718Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:33:17.5237570Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:33:17.5263010Z
PASS public/app/features/alerting/unified/search/rulesSearchParser.test.ts
PASS packages/grafana-data/src/utils/location.test.ts
PASS packages/grafana-flamegraph/src/FlameGraph/dataTransform.test.ts
FAIL public/app/features/alerting/unified/components/receivers/form/GrafanaReceiverForm.test.tsx
● Test suite failed to run
2025-04-15T08:33:18.3339829Z
Jest encountered an unexpected token
2025-04-15T08:33:18.3340649Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:33:18.3342633Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:33:18.3344148Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:33:18.3344908Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:33:18.3353191Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:33:18.3356096Z
Details:
2025-04-15T08:33:18.3356437Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:33:18.3358087Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:33:18.3358662Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:33:18.3365857Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:33:18.3391079Z
PASS public/app/plugins/datasource/cloudwatch/language/cloudwatch-sql/completion/statementPosition.test.ts
PASS public/app/features/expressions/components/hysteresis.test.ts
FAIL public/app/features/alerting/unified/hooks/useExternalAMSelector.test.tsx
● Test suite failed to run
2025-04-15T08:33:19.3861921Z
Jest encountered an unexpected token
2025-04-15T08:33:19.3862486Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:33:19.3864001Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:33:19.3864870Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:33:19.3865319Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:33:19.3869687Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:33:19.3871941Z
Details:
2025-04-15T08:33:19.3872136Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:33:19.3873068Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:33:19.3873385Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:33:19.3877208Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:33:19.3891460Z
FAIL public/app/features/dashboard-scene/panel-edit/PanelDataPane/PanelDataTransformationsTab.test.tsx
● Test suite failed to run
2025-04-15T08:33:19.6217967Z
Jest encountered an unexpected token
2025-04-15T08:33:19.6218531Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:33:19.6219839Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:33:19.6220956Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:33:19.6221434Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:33:19.6225768Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:33:19.6227630Z
Details:
2025-04-15T08:33:19.6227829Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:33:19.6228766Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:33:19.6229082Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:33:19.6233184Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:33:19.6246972Z
FAIL public/app/features/dashboard/components/ShareModal/ShareLink.test.tsx
● Test suite failed to run
2025-04-15T08:33:20.3208219Z
Jest encountered an unexpected token
2025-04-15T08:33:20.3208817Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:33:20.3211022Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:33:20.3212468Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:33:20.3213191Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:33:20.3221203Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:33:20.3224002Z
Details:
2025-04-15T08:33:20.3224319Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:33:20.3225940Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:33:20.3226811Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:33:20.3233871Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:33:20.3258759Z
PASS packages/grafana-ui/src/components/ConfirmModal/ConfirmModal.test.tsx
FAIL public/app/features/explore/TraceView/components/TraceTimelineViewer/SpanBarRow.test.tsx
● Test suite failed to run
2025-04-15T08:33:21.3346834Z
Jest encountered an unexpected token
2025-04-15T08:33:21.3347218Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:33:21.3348963Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:33:21.3349824Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:33:21.3350443Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:33:21.3354778Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:33:21.3356327Z
Details:
2025-04-15T08:33:21.3356532Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:33:21.3357639Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:33:21.3357976Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:33:21.3361913Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:33:21.3375775Z
FAIL public/app/features/dashboard-scene/scene/LibraryPanelBehavior.test.tsx
● Test suite failed to run
2025-04-15T08:33:22.0016948Z
Jest encountered an unexpected token
2025-04-15T08:33:22.0017281Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:33:22.0018842Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:33:22.0020034Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:33:22.0020703Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:33:22.0025038Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:33:22.0026596Z
Details:
2025-04-15T08:33:22.0026793Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:33:22.0027728Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:33:22.0028056Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:33:22.0032232Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:33:22.0046099Z
FAIL public/app/plugins/datasource/loki/tracking.test.ts
● Test suite failed to run
2025-04-15T08:33:23.2123395Z
Jest encountered an unexpected token
2025-04-15T08:33:23.2123962Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:33:23.2125901Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:33:23.2127385Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:33:23.2128158Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:33:23.2136503Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:33:23.2139388Z
Details:
2025-04-15T08:33:23.2139728Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:33:23.2141599Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:33:23.2142166Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:33:23.2149515Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:33:23.2174538Z
PASS public/app/features/dimensions/editors/ThresholdsEditor/ThresholdsEditor.test.tsx
PASS public/app/features/migrate-to-cloud/onprem/ConfigureSnapshot.test.tsx
FAIL public/app/features/explore/Logs/LogsSamplePanel.test.tsx
● Test suite failed to run
2025-04-15T08:33:24.7839518Z
Jest encountered an unexpected token
2025-04-15T08:33:24.7840055Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:33:24.7842310Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:33:24.7843775Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:33:24.7844508Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:33:24.7852924Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:33:24.7855805Z
Details:
2025-04-15T08:33:24.7856171Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:33:24.7857868Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:33:24.7858456Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:33:24.7865928Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:33:24.7892259Z
FAIL public/app/features/alerting/unified/rule-list/DataSourceGroupLoader.test.tsx
● Test suite failed to run
2025-04-15T08:33:25.6694010Z
Jest encountered an unexpected token
2025-04-15T08:33:25.6694349Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:33:25.6695757Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:33:25.6696618Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:33:25.6697058Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:33:25.6702120Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:33:25.6703711Z
Details:
2025-04-15T08:33:25.6703903Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:33:25.6704873Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:33:25.6705213Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:33:25.6709023Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:33:25.6723448Z
PASS public/app/features/explore/TraceView/components/model/ddg/PathElem.test.ts
FAIL public/app/features/alerting/unified/rule-editor/RuleEditorCloudOnlyAllowed.test.tsx
● Test suite failed to run
2025-04-15T08:33:26.9594223Z
Jest encountered an unexpected token
2025-04-15T08:33:26.9594661Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:33:26.9596157Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:33:26.9597237Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:33:26.9597789Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:33:26.9603398Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:33:26.9604963Z
Details:
2025-04-15T08:33:26.9605156Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:33:26.9606098Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:33:26.9606417Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:33:26.9610217Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:33:26.9624314Z
PASS public/app/core/utils/richHistory.test.ts
PASS public/app/features/alerting/unified/utils/timeRange.test.ts
PASS public/app/plugins/datasource/azuremonitor/azure_resource_graph/azure_resource_graph_datasource.test.ts (5.967 s)
PASS public/app/plugins/datasource/azuremonitor/components/LogsQueryBuilder/AzureMonitorKustoQueryBuilder.test.ts
FAIL public/app/features/dashboard-scene/panel-edit/PanelOptions.test.tsx
● Test suite failed to run
2025-04-15T08:33:30.1775966Z
Jest encountered an unexpected token
2025-04-15T08:33:30.1776302Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:33:30.1777505Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:33:30.1778333Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:33:30.1778766Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:33:30.1783558Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:33:30.1785131Z
Details:
2025-04-15T08:33:30.1785330Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:33:30.1786253Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:33:30.1786594Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:33:30.1790554Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:33:30.1804499Z
FAIL public/app/features/dashboard-scene/settings/annotations/AnnotationSettingsEdit.test.tsx
● Test suite failed to run
2025-04-15T08:33:31.0185806Z
Jest encountered an unexpected token
2025-04-15T08:33:31.0186140Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:33:31.0187300Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:33:31.0188179Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:33:31.0188636Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:33:31.0193567Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:33:31.0195156Z
Details:
2025-04-15T08:33:31.0195350Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:33:31.0196273Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:33:31.0196602Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:33:31.0200644Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:33:31.0214903Z
PASS public/app/features/transformers/lookupGazetteer/fieldLookup.test.ts
PASS public/app/plugins/datasource/cloudwatch/migrations/dashboardMigrations.test.ts
PASS public/app/features/profile/state/reducers.test.ts
PASS packages/grafana-flamegraph/src/FlameGraph/rendering.test.ts
FAIL public/app/features/explore/TraceView/components/TracePageHeader/SearchBar/NextPrevResult.test.tsx
● Test suite failed to run
2025-04-15T08:33:35.8506731Z
Jest encountered an unexpected token
2025-04-15T08:33:35.8507071Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:33:35.8508267Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:33:35.8509117Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:33:35.8509567Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:33:35.8514111Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:33:35.8515999Z
Details:
2025-04-15T08:33:35.8516192Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:33:35.8517119Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:33:35.8517448Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:33:35.8521425Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:33:35.8546501Z
FAIL public/app/features/dashboard-scene/edit-pane/ElementSelection.test.ts
● Test suite failed to run
2025-04-15T08:33:36.6488981Z
Jest encountered an unexpected token
2025-04-15T08:33:36.6489325Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:33:36.6490671Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:33:36.6491508Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:33:36.6491974Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:33:36.6496340Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:33:36.6498239Z
Details:
2025-04-15T08:33:36.6498444Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:33:36.6499382Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:33:36.6499705Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:33:36.6503714Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:33:36.6517525Z
FAIL public/app/features/dashboard/containers/SoloPanelPage.test.tsx
● Test suite failed to run
2025-04-15T08:33:37.4521819Z
Jest encountered an unexpected token
2025-04-15T08:33:37.4522166Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:33:37.4523348Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:33:37.4524189Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:33:37.4524631Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:33:37.4528973Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:33:37.4530709Z
Details:
2025-04-15T08:33:37.4530906Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:33:37.4531894Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:33:37.4532402Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:33:37.4536217Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:33:37.4550013Z
FAIL public/app/features/dashboard-scene/scene/DashboardControls.test.tsx
● Test suite failed to run
2025-04-15T08:33:38.2416419Z
Jest encountered an unexpected token
2025-04-15T08:33:38.2416760Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:33:38.2417936Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:33:38.2419135Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:33:38.2419575Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:33:38.2424097Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:33:38.2425638Z
Details:
2025-04-15T08:33:38.2425831Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:33:38.2426765Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:33:38.2427094Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:33:38.2431258Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:33:38.2445177Z
FAIL public/app/features/alerting/unified/components/rule-editor/query-and-alert-condition/__snapshots__/areQueriesTransformableToSimpleCondition.test.ts
● Test suite failed to run
2025-04-15T08:33:39.0758644Z
Jest encountered an unexpected token
2025-04-15T08:33:39.0759068Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:33:39.0760510Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:33:39.0761745Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:33:39.0762194Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:33:39.0766621Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:33:39.0768232Z
Details:
2025-04-15T08:33:39.0768426Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:33:39.0769376Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:33:39.0769704Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:33:39.0773985Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:33:39.0787828Z
PASS public/app/plugins/datasource/loki/sortDataFrame.test.ts
PASS public/app/features/dashboard-scene/settings/variables/components/CustomVariableForm.test.tsx
PASS public/app/plugins/datasource/influxdb/components/editor/query/influxql/visual/TagsSection.test.tsx
PASS public/app/plugins/datasource/cloudwatch/components/VariableQueryEditor/MultiFilter.test.tsx
FAIL public/app/features/alerting/unified/hooks/ruleGroup/useDeleteRuleFromGroup.test.tsx
● Test suite failed to run
2025-04-15T08:33:42.9713772Z
Jest encountered an unexpected token
2025-04-15T08:33:42.9714117Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:33:42.9715290Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:33:42.9716456Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:33:42.9716892Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:33:42.9721560Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:33:42.9723156Z
Details:
2025-04-15T08:33:42.9723352Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:33:42.9724276Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:33:42.9724591Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:33:42.9728570Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:33:42.9742506Z
FAIL public/app/features/dashboard-scene/utils/dashboardSceneGraph.test.ts
● Test suite failed to run
2025-04-15T08:33:43.7861435Z
Jest encountered an unexpected token
2025-04-15T08:33:43.7862180Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:33:43.7864178Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:33:43.7865714Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:33:43.7867076Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:33:43.7874829Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:33:43.7878086Z
Details:
2025-04-15T08:33:43.7888311Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:33:43.7894134Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:33:43.7894654Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:33:43.7901328Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:33:43.7923916Z
PASS public/app/core/components/SharedPreferences/SharedPreferences.test.tsx (16.437 s)
FAIL public/app/features/variables/editor/getVariableQueryEditor.test.tsx
● Test suite failed to run
2025-04-15T08:33:45.2083337Z
Jest encountered an unexpected token
2025-04-15T08:33:45.2083690Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:33:45.2085023Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:33:45.2085874Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:33:45.2086317Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:33:45.2091351Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:33:45.2092925Z
Details:
2025-04-15T08:33:45.2093118Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:33:45.2094049Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:33:45.2094369Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:33:45.2098360Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:33:45.2112471Z
PASS public/app/plugins/datasource/cloud-monitoring/components/LabelFilter.test.tsx
PASS packages/grafana-flamegraph/src/FlameGraph/treeTransforms.test.ts
FAIL public/app/features/query/state/DashboardQueryRunner/LegacyAnnotationQueryRunner.test.ts
● Test suite failed to run
2025-04-15T08:33:46.0274652Z
Jest encountered an unexpected token
2025-04-15T08:33:46.0275262Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:33:46.0277402Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:33:46.0278311Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:33:46.0278777Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:33:46.0283776Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:33:46.0285351Z
Details:
2025-04-15T08:33:46.0285558Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:33:46.0286503Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:33:46.0286830Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:33:46.0290744Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:33:46.0304663Z
PASS public/app/plugins/datasource/loki/languageUtils.test.ts
FAIL public/app/features/dashboard-scene/inspect/HelpWizard/HelpWizard.test.tsx
● Test suite failed to run
2025-04-15T08:33:46.5833689Z
Jest encountered an unexpected token
2025-04-15T08:33:46.5834056Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:33:46.5835215Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:33:46.5836043Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:33:46.5836472Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:33:46.5841430Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:33:46.5842979Z
Details:
2025-04-15T08:33:46.5843170Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:33:46.5844095Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:33:46.5844414Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:33:46.5848172Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:33:46.5862387Z
PASS packages/grafana-ui/src/components/Card/Card.test.tsx
PASS public/app/plugins/datasource/azuremonitor/module.test.ts
FAIL public/app/features/dashboard/components/ShareModal/ShareEmbed.test.tsx
● Test suite failed to run
2025-04-15T08:33:47.8394921Z
Jest encountered an unexpected token
2025-04-15T08:33:47.8395523Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:33:47.8397647Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:33:47.8399189Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:33:47.8399976Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:33:47.8408874Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:33:47.8411941Z
Details:
2025-04-15T08:33:47.8412280Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:33:47.8413953Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:33:47.8414545Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:33:47.8422025Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:33:47.8448211Z
FAIL public/app/features/dashboard/components/SaveDashboard/forms/SaveDashboardAsForm.test.tsx
● Test suite failed to run
2025-04-15T08:33:48.2898499Z
Jest encountered an unexpected token
2025-04-15T08:33:48.2898926Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:33:48.2900568Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:33:48.2901649Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:33:48.2902206Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:33:48.2906501Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:33:48.2908904Z
Details:
2025-04-15T08:33:48.2909250Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:33:48.2911210Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:33:48.2911795Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:33:48.2918953Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:33:48.2937775Z
FAIL public/app/features/browse-dashboards/components/BrowseActions/MoveModal.test.tsx
● Test suite failed to run
2025-04-15T08:33:48.6806268Z
Jest encountered an unexpected token
2025-04-15T08:33:48.6806838Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:33:48.6808880Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:33:48.6810608Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:33:48.6811352Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:33:48.6819162Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:33:48.6822359Z
Details:
2025-04-15T08:33:48.6822692Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:33:48.6824338Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:33:48.6824903Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:33:48.6832138Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:33:48.6858041Z
PASS public/app/features/alerting/unified/reducers/alertmanager/notificationTemplates.test.ts
FAIL public/app/features/dashboard-scene/settings/variables/editors/IntervalVariableEditor.test.tsx
● Test suite failed to run
2025-04-15T08:33:49.1156491Z
Jest encountered an unexpected token
2025-04-15T08:33:49.1157141Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:33:49.1159070Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:33:49.1160660Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:33:49.1161385Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:33:49.1168636Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:33:49.1171354Z
Details:
2025-04-15T08:33:49.1171661Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:33:49.1173180Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:33:49.1174027Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:33:49.1198444Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:33:49.1221316Z
PASS packages/grafana-data/src/utils/arrayUtils.test.ts
PASS packages/grafana-ui/src/components/DateTimePickers/TimeRangeContext.test.tsx
PASS packages/grafana-data/src/utils/dataLinks.test.ts
PASS public/app/features/alerting/unified/components/contact-points/utils.test.ts
FAIL public/app/features/dashboard/utils/panel.test.ts
● Test suite failed to run
2025-04-15T08:33:50.4692282Z
Jest encountered an unexpected token
2025-04-15T08:33:50.4693250Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:33:50.4694463Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:33:50.4695297Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:33:50.4695731Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:33:50.4700091Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:33:50.4701917Z
Details:
2025-04-15T08:33:50.4702334Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:33:50.4703296Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:33:50.4703621Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:33:50.4707440Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:33:50.4721713Z
FAIL public/app/plugins/datasource/loki/LokiVariableSupport.test.ts
● Test suite failed to run
2025-04-15T08:33:50.4771736Z
Jest encountered an unexpected token
2025-04-15T08:33:50.4772065Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:33:50.4773516Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:33:50.4774588Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:33:50.4775133Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:33:50.4780734Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:33:50.4782686Z
Details:
2025-04-15T08:33:50.4782934Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:33:50.4783871Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:33:50.4784193Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:33:50.4788147Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:33:50.4802281Z
PASS packages/grafana-ui/src/components/Gauge/utils.test.ts
PASS public/app/features/transformers/joinByLabels/joinByLabels.test.ts
PASS public/app/features/alerting/unified/utils/query.test.ts
PASS public/app/features/plugins/admin/components/GetStartedWithPlugin/GetStartedWithApp.test.tsx
PASS public/app/features/teams/state/reducers.test.ts
PASS packages/grafana-ui/src/components/MatchersUI/FieldsByFrameRefIdMatcher.test.tsx
FAIL public/app/core/components/AppChrome/OrganizationSwitcher/OrganizationSwitcher.test.tsx
● Test suite failed to run
2025-04-15T08:33:52.2939150Z
Jest encountered an unexpected token
2025-04-15T08:33:52.2939869Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:33:52.2941262Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:33:52.2942121Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:33:52.2942561Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:33:52.2946940Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:33:52.2948512Z
Details:
2025-04-15T08:33:52.2948893Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:33:52.2949840Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:33:52.2950162Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:33:52.2954100Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:33:52.2967882Z
FAIL public/app/features/explore/RichHistory/RichHistoryStarredTab.test.tsx
● Test suite failed to run
2025-04-15T08:33:52.6509170Z
Jest encountered an unexpected token
2025-04-15T08:33:52.6509516Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:33:52.6511489Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:33:52.6512372Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:33:52.6512817Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:33:52.6517213Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:33:52.6518803Z
Details:
2025-04-15T08:33:52.6519001Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:33:52.6519935Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:33:52.6520478Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:33:52.6524829Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:33:52.6538893Z
FAIL public/app/features/dashboard-scene/scene/DashboardLinksControls.test.tsx
● Test suite failed to run
2025-04-15T08:33:53.1008203Z
Jest encountered an unexpected token
2025-04-15T08:33:53.1008776Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:33:53.1010979Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:33:53.1012449Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:33:53.1013194Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:33:53.1021664Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:33:53.1024476Z
Details:
2025-04-15T08:33:53.1024798Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:33:53.1026411Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:33:53.1026972Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:33:53.1034359Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:33:53.1059147Z
FAIL public/app/features/migrate-to-cloud/onprem/EmptyState/CallToAction/CallToAction.test.tsx
● Test suite failed to run
2025-04-15T08:33:53.3660473Z
Jest encountered an unexpected token
2025-04-15T08:33:53.3661076Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:33:53.3663210Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:33:53.3664760Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:33:53.3665544Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:33:53.3674232Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:33:53.3677120Z
Details:
2025-04-15T08:33:53.3677472Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:33:53.3679135Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:33:53.3679694Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:33:53.3687056Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:33:53.3702139Z
FAIL public/app/features/plugins/admin/components/PluginDetailsBody.test.tsx
● Test suite failed to run
2025-04-15T08:33:54.0564754Z
Jest encountered an unexpected token
2025-04-15T08:33:54.0565396Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:33:54.0567503Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:33:54.0569114Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:33:54.0569912Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:33:54.0578900Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:33:54.0581957Z
Details:
2025-04-15T08:33:54.0582306Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:33:54.0583995Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:33:54.0584559Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:33:54.0592080Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:33:54.0617756Z
FAIL public/app/features/variables/textbox/adapter.test.ts
● Test suite failed to run
2025-04-15T08:33:54.1769008Z
Jest encountered an unexpected token
2025-04-15T08:33:54.1769353Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:33:54.1770783Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:33:54.1771674Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:33:54.1772134Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:33:54.1776767Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:33:54.1778351Z
Details:
2025-04-15T08:33:54.1778547Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:33:54.1779472Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:33:54.1779789Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:33:54.1783804Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:33:54.1797832Z
FAIL public/app/features/dashboard/containers/PublicDashboardPageProxy.test.tsx
● Test suite failed to run
2025-04-15T08:33:54.7792815Z
Jest encountered an unexpected token
2025-04-15T08:33:54.7793149Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:33:54.7794306Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:33:54.7795128Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:33:54.7795565Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:33:54.7799872Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:33:54.7801782Z
Details:
2025-04-15T08:33:54.7802302Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:33:54.7803249Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:33:54.7803578Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:33:54.7807567Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:33:54.7821338Z
FAIL public/app/core/components/Page/Page.test.tsx
● Test suite failed to run
2025-04-15T08:33:54.8803329Z
Jest encountered an unexpected token
2025-04-15T08:33:54.8803703Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:33:54.8805191Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:33:54.8806038Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:33:54.8806475Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:33:54.8811305Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:33:54.8812851Z
Details:
2025-04-15T08:33:54.8813043Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:33:54.8813976Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:33:54.8814290Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:33:54.8818053Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:33:54.8832237Z
PASS public/app/features/variables/editor/selectors.test.ts
PASS public/app/plugins/datasource/influxdb/components/editor/config/ConfigEditor.test.tsx
PASS public/app/plugins/datasource/cloud-monitoring/components/VariableQueryEditor.test.tsx
PASS public/app/core/utils/browser.test.ts
PASS public/app/plugins/datasource/elasticsearch/hooks/useStatelessReducer.test.tsx
FAIL public/app/features/explore/extensions/AddToDashboard/index.test.tsx
● Test suite failed to run
2025-04-15T08:33:56.8401608Z
Jest encountered an unexpected token
2025-04-15T08:33:56.8402211Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:33:56.8404289Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:33:56.8405825Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:33:56.8406636Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:33:56.8415117Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:33:56.8417954Z
Details:
2025-04-15T08:33:56.8418330Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:33:56.8420760Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:33:56.8421361Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:33:56.8428667Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:33:56.8453980Z
PASS public/app/features/alerting/unified/components/rules/state-history/StateHistory.test.tsx
PASS public/app/features/geo/format/geojson.test.ts
FAIL public/app/features/explore/TraceView/components/CriticalPath/utils/findLastFinishingChildSpan.test.ts
● Test suite failed to run
2025-04-15T08:33:57.5616453Z
Jest encountered an unexpected token
2025-04-15T08:33:57.5617465Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:33:57.5619451Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:33:57.5621124Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:33:57.5621906Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:33:57.5630089Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:33:57.5633095Z
Details:
2025-04-15T08:33:57.5633431Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:33:57.5635069Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:33:57.5635627Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:33:57.5642669Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:33:57.5667817Z
PASS public/app/features/explore/TraceView/components/utils/sort.test.ts
FAIL public/app/features/explore/state/time.test.ts
● Test suite failed to run
2025-04-15T08:33:58.3907607Z
Jest encountered an unexpected token
2025-04-15T08:33:58.3908922Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:33:58.3940758Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:33:58.4023268Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:33:58.4023975Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:33:58.4031631Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:33:58.4034812Z
Details:
2025-04-15T08:33:58.4048787Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:33:58.4049825Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:33:58.4050514Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:33:58.4057883Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:33:58.4075292Z
PASS public/app/plugins/datasource/tempo/VariableQueryEditor.test.tsx
PASS scripts/tests/generate-transformations.test.ts
FAIL public/app/features/explore/spec/query.test.tsx
● Test suite failed to run
2025-04-15T08:33:59.2530986Z
Jest encountered an unexpected token
2025-04-15T08:33:59.2531554Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:33:59.2533612Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:33:59.2535486Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:33:59.2536223Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:33:59.2544584Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:33:59.2547406Z
Details:
2025-04-15T08:33:59.2547739Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:33:59.2549358Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:33:59.2549922Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:33:59.2557024Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:33:59.2582361Z
FAIL public/app/features/variables/constant/actions.test.ts
● Test suite failed to run
2025-04-15T08:33:59.3452430Z
Jest encountered an unexpected token
2025-04-15T08:33:59.3453019Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:33:59.3455112Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:33:59.3456645Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:33:59.3457493Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:33:59.3465941Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:33:59.3468869Z
Details:
2025-04-15T08:33:59.3469222Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:33:59.3471166Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:33:59.3471753Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:33:59.3479658Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:33:59.3505755Z
PASS public/app/features/geo/gazetteer/gazetteer.test.ts
PASS public/app/features/teams/TeamGroupSync.test.tsx
PASS public/app/plugins/datasource/zipkin/utils/graphTransform.test.ts
PASS packages/grafana-ui/src/components/RefreshPicker/RefreshPicker.test.tsx
PASS packages/grafana-ui/src/components/DateTimePickers/TimeRangePicker/TimePickerCalendar.test.tsx
FAIL public/app/features/explore/extensions/getExploreExtensionConfigs.test.tsx
● Test suite failed to run
2025-04-15T08:34:01.6886494Z
Jest encountered an unexpected token
2025-04-15T08:34:01.6886838Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:34:01.6888007Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:34:01.6888886Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:34:01.6889688Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:34:01.6894561Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:34:01.6896122Z
Details:
2025-04-15T08:34:01.6896314Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:34:01.6897243Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:34:01.6897570Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:34:01.6901533Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:34:01.6915549Z
PASS public/app/plugins/datasource/cloud-monitoring/components/GroupBy.test.tsx
FAIL public/app/features/annotations/executeAnnotationQuery.test.ts
● Test suite failed to run
2025-04-15T08:34:02.3927186Z
Jest encountered an unexpected token
2025-04-15T08:34:02.3927701Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:34:02.3929566Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:34:02.3931234Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:34:02.3931998Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:34:02.3939243Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:34:02.3941986Z
Details:
2025-04-15T08:34:02.3942293Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:34:02.3943776Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:34:02.3944273Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:34:02.3955100Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:34:02.3978172Z
FAIL public/app/core/navigation/GrafanaRoute.test.tsx
● Test suite failed to run
2025-04-15T08:34:02.7621070Z
Jest encountered an unexpected token
2025-04-15T08:34:02.7621664Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:34:02.7623648Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:34:02.7625104Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:34:02.7625868Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:34:02.7634315Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:34:02.7637105Z
Details:
2025-04-15T08:34:02.7637437Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:34:02.7639347Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:34:02.7639921Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:34:02.7646970Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:34:02.7671950Z
PASS public/app/features/explore/TraceView/components/TraceTimelineViewer/ListView/index.test.tsx
PASS packages/grafana-data/src/transformations/transformers/filterByRefId.test.ts
FAIL public/app/plugins/datasource/loki/querybuilder/components/LokiQueryCodeEditor.test.tsx
● Test suite failed to run
2025-04-15T08:34:03.2479003Z
Jest encountered an unexpected token
2025-04-15T08:34:03.2479904Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:34:03.2481810Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:34:03.2482776Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:34:03.2483222Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:34:03.2488098Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:34:03.2489650Z
Details:
2025-04-15T08:34:03.2489844Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:34:03.2491087Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:34:03.2491427Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:34:03.2495271Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:34:03.2511021Z
PASS public/app/features/api-keys/state/reducers.test.ts
PASS packages/grafana-prometheus/src/querybuilder/parsingUtils.test.ts
FAIL public/app/features/dashboard-scene/scene/ViewPanelScene.test.tsx
● Test suite failed to run
2025-04-15T08:34:04.1339797Z
Jest encountered an unexpected token
2025-04-15T08:34:04.1340584Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:34:04.1342595Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:34:04.1344076Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:34:04.1344797Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:34:04.1353206Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:34:04.1355994Z
Details:
2025-04-15T08:34:04.1356332Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:34:04.1358217Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:34:04.1358773Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:34:04.1365867Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:34:04.1391020Z
PASS packages/grafana-prometheus/src/configuration/AlertingSettingsOverhaul.test.tsx
PASS packages/grafana-flamegraph/src/FlameGraph/testHelpers.test.ts
FAIL public/app/features/dashboard-scene/sharing/ShareButton/ShareButton.test.tsx
● Test suite failed to run
2025-04-15T08:34:04.9314012Z
Jest encountered an unexpected token
2025-04-15T08:34:04.9314445Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:34:04.9316717Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:34:04.9317814Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:34:04.9318372Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:34:04.9324076Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:34:04.9325734Z
Details:
2025-04-15T08:34:04.9325933Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:34:04.9326867Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:34:04.9327195Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:34:04.9331145Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:34:04.9347726Z
PASS public/app/features/dashboard/api/legacy.test.ts
PASS public/app/plugins/datasource/tempo/variables.test.ts
PASS public/app/features/explore/TraceView/components/TraceTimelineViewer/TimelineHeaderRow/TimelineCollapser.test.tsx
FAIL public/app/features/logs/components/panel/LogListContext.test.tsx
● Test suite failed to run
2025-04-15T08:34:06.0539942Z
Jest encountered an unexpected token
2025-04-15T08:34:06.0540488Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:34:06.0541691Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:34:06.0542543Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:34:06.0542977Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:34:06.0547563Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:34:06.0549639Z
Details:
2025-04-15T08:34:06.0549924Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:34:06.0551599Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:34:06.0552345Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:34:06.0558616Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:34:06.0576962Z
FAIL public/app/plugins/datasource/loki/configuration/ConfigEditor.test.tsx
● Test suite failed to run
2025-04-15T08:34:06.5739164Z
Jest encountered an unexpected token
2025-04-15T08:34:06.5740469Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:34:06.5743311Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:34:06.5745076Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:34:06.5745796Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:34:06.5753070Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:34:06.5755537Z
Details:
2025-04-15T08:34:06.5755824Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:34:06.5757280Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:34:06.5757773Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:34:06.5764272Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:34:06.5787524Z
PASS public/app/features/explore/extensions/AddToDashboard/getAddToDashboardTitle.test.ts
PASS packages/grafana-ui/src/utils/validate.test.ts
PASS packages/grafana-data/src/transformations/transformers/filter.test.ts
FAIL public/app/features/dashboard-scene/sharing/ExportButton/ExportButton.test.tsx
● Test suite failed to run
2025-04-15T08:34:07.4462535Z
Jest encountered an unexpected token
2025-04-15T08:34:07.4462879Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:34:07.4464061Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:34:07.4464932Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:34:07.4465377Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:34:07.4469735Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:34:07.4471885Z
Details:
2025-04-15T08:34:07.4472082Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:34:07.4473024Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:34:07.4473344Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:34:07.4477286Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:34:07.4491209Z
FAIL public/app/core/history/remoteStorageConverter.test.ts
● Test suite failed to run
2025-04-15T08:34:07.8897024Z
Jest encountered an unexpected token
2025-04-15T08:34:07.8897361Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:34:07.8898724Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:34:07.8899569Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:34:07.8900004Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:34:07.8904779Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:34:07.8906369Z
Details:
2025-04-15T08:34:07.8906577Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:34:07.8907512Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:34:07.8907833Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:34:07.8911753Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:34:07.8926176Z
PASS packages/grafana-prometheus/src/components/PromExploreExtraField.test.tsx
PASS public/app/core/components/RolePickerDrawer/RolePickerDrawer.test.tsx
PASS packages/grafana-ui/src/components/DataSourceSettings/AlertingSettings.test.tsx
PASS public/app/features/correlations/components/Wizard/Wizard.test.tsx
PASS public/app/plugins/datasource/opentsdb/components/OpenTsdbQueryEditor.test.tsx
FAIL public/app/features/dashboard/components/HelpWizard/HelpWizard.test.tsx
● Test suite failed to run
2025-04-15T08:34:09.4726020Z
Jest encountered an unexpected token
2025-04-15T08:34:09.4726596Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:34:09.4728584Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:34:09.4730013Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:34:09.4731029Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:34:09.4738800Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:34:09.4742488Z
Details:
2025-04-15T08:34:09.4742823Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:34:09.4744426Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:34:09.4744966Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:34:09.4752414Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:34:09.4776937Z
PASS public/app/features/explore/TraceView/components/TraceTimelineViewer/SpanDetail/TextList.test.tsx
PASS public/app/features/geo/gazetteer/worldmap.test.ts
PASS packages/grafana-ui/src/components/List/AbstractList.test.tsx
PASS public/app/features/explore/PrometheusListView/RawListItem.test.tsx
PASS public/app/plugins/datasource/azuremonitor/utils/useLastError.test.ts
FAIL public/app/features/dashboard-scene/utils/PanelModelCompatibilityWrapper.test.ts
● Test suite failed to run
2025-04-15T08:34:10.9399607Z
Jest encountered an unexpected token
2025-04-15T08:34:10.9400588Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:34:10.9403066Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:34:10.9405452Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:34:10.9406436Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:34:10.9414690Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:34:10.9417545Z
Details:
2025-04-15T08:34:10.9417890Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:34:10.9419504Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:34:10.9420069Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:34:10.9427178Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:34:10.9452272Z
PASS public/app/plugins/datasource/azuremonitor/time_grain_converter.test.ts
PASS packages/grafana-ui/src/components/TagsInput/TagsInput.test.tsx
PASS packages/grafana-sql/src/ResponseParser.test.ts
PASS public/app/plugins/panel/news/atom.test.ts
PASS public/app/features/connections/components/ConnectionsRedirectNotice/ConnectionsRedirectNotice.test.tsx
PASS packages/grafana-ui/src/components/ColorPicker/NamedColorsPalette.test.tsx
PASS public/app/plugins/datasource/loki/querybuilder/state.test.ts
PASS public/app/features/explore/TraceView/useHoverIndentGuide.test.ts
PASS public/app/features/datasources/components/BasicSettings.test.tsx
PASS packages/grafana-data/src/themes/createSpacing.test.ts
PASS public/app/features/alerting/unified/api/util.test.ts
PASS public/app/features/geo/format/geohash.test.ts
PASS public/app/plugins/datasource/mysql/mySqlMetaQuery.test.ts
2025-04-15T08:34:14.1298712Z
Summary of all failing tests
FAIL public/app/features/variables/inspect/utils.test.ts
● Test suite failed to run
2025-04-15T08:34:14.1303475Z
Jest encountered an unexpected token
2025-04-15T08:34:14.1306211Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:34:14.1310497Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:34:14.1313853Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:34:14.1314989Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:34:14.1332622Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:34:14.1337463Z
Details:
2025-04-15T08:34:14.1337788Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:34:14.1341401Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:34:14.1342810Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:34:14.1360096Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:34:14.1432902Z
FAIL public/app/features/explore/state/query.test.ts
● Test suite failed to run
2025-04-15T08:34:14.1434436Z
Jest encountered an unexpected token
2025-04-15T08:34:14.1435013Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:34:14.1438685Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:34:14.1439935Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:34:14.1441039Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:34:14.1451042Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:34:14.1455079Z
Details:
2025-04-15T08:34:14.1455395Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:34:14.1457993Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:34:14.1458638Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:34:14.1470197Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:34:14.1498216Z
FAIL public/app/features/variables/query/actions.test.tsx
● Test suite failed to run
2025-04-15T08:34:14.1499553Z
Jest encountered an unexpected token
2025-04-15T08:34:14.1499970Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:34:14.1503275Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:34:14.1504717Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:34:14.1505168Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:34:14.1512800Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:34:14.1515510Z
Details:
2025-04-15T08:34:14.1515823Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:34:14.1517423Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:34:14.1517966Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:34:14.1525875Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:34:14.1549736Z
FAIL public/app/plugins/datasource/loki/modifyQuery.test.ts
● Test suite failed to run
2025-04-15T08:34:14.1551239Z
Jest encountered an unexpected token
2025-04-15T08:34:14.1551721Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:34:14.1555229Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:34:14.1556581Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:34:14.1557119Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:34:14.1563494Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:34:14.1565407Z
Details:
2025-04-15T08:34:14.1565600Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:34:14.1566924Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:34:14.1567453Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:34:14.1575621Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:34:14.1597629Z
FAIL public/app/core/specs/backend_srv.test.ts
● Test suite failed to run
2025-04-15T08:34:14.1598525Z
Jest encountered an unexpected token
2025-04-15T08:34:14.1598846Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:34:14.1601638Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:34:14.1602822Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:34:14.1603319Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:34:14.1610948Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:34:14.1612821Z
Details:
2025-04-15T08:34:14.1613340Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:34:14.1614887Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:34:14.1615327Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:34:14.1623855Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:34:14.1647591Z
FAIL public/app/features/dashboard-scene/serialization/sceneVariablesSetToVariables.test.ts
● Test suite failed to run
2025-04-15T08:34:14.1649650Z
Jest encountered an unexpected token
2025-04-15T08:34:14.1649979Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:34:14.1652907Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:34:14.1654357Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:34:14.1654861Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:34:14.1662309Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:34:14.1664883Z
Details:
2025-04-15T08:34:14.1665215Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:34:14.1666789Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:34:14.1667232Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:34:14.1676134Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:34:14.1698687Z
FAIL public/app/plugins/datasource/loki/LogContextProvider.test.ts
● Test suite failed to run
2025-04-15T08:34:14.1699812Z
Jest encountered an unexpected token
2025-04-15T08:34:14.1700129Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:34:14.1704381Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:34:14.1705827Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:34:14.1706324Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:34:14.1713726Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:34:14.1716371Z
Details:
2025-04-15T08:34:14.1716677Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:34:14.1717962Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:34:14.1718361Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:34:14.1725666Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:34:14.1749130Z
FAIL public/app/features/variables/state/sharedReducer.test.ts
● Test suite failed to run
2025-04-15T08:34:14.1750698Z
Jest encountered an unexpected token
2025-04-15T08:34:14.1751242Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:34:14.1753252Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:34:14.1754720Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:34:14.1755487Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:34:14.1763652Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:34:14.1766654Z
Details:
2025-04-15T08:34:14.1766967Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:34:14.1768557Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:34:14.1769097Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:34:14.1776138Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:34:14.1800947Z
FAIL public/app/features/plugins/admin/pages/Browse.test.tsx
● Test suite failed to run
2025-04-15T08:34:14.1802514Z
Jest encountered an unexpected token
2025-04-15T08:34:14.1803053Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:34:14.1805110Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:34:14.1806606Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:34:14.1807355Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:34:14.1815127Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:34:14.1817919Z
Details:
2025-04-15T08:34:14.1818252Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:34:14.1820111Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:34:14.1820825Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:34:14.1829444Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:34:14.1862397Z
FAIL public/app/features/dashboard/state/PanelModel.test.ts
● Test suite failed to run
2025-04-15T08:34:14.1863828Z
Jest encountered an unexpected token
2025-04-15T08:34:14.1864398Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:34:14.1868345Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:34:14.1870076Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:34:14.1871019Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:34:14.1880147Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:34:14.1883231Z
Details:
2025-04-15T08:34:14.1883562Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:34:14.1885551Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:34:14.1886124Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:34:14.1898710Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:34:14.1933573Z
FAIL public/app/features/alerting/unified/components/notification-policies/Policy.test.tsx
● Test suite failed to run
2025-04-15T08:34:14.1935913Z
Jest encountered an unexpected token
2025-04-15T08:34:14.1936482Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:34:14.1940661Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:34:14.1942372Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:34:14.1943139Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:34:14.1954437Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:34:14.1957352Z
Details:
2025-04-15T08:34:14.1957695Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:34:14.1959633Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:34:14.1960370Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:34:14.1971407Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:34:14.1998744Z
FAIL public/app/features/query/state/DashboardQueryRunner/DashboardQueryRunner.test.ts
● Test suite failed to run
2025-04-15T08:34:14.2000719Z
Jest encountered an unexpected token
2025-04-15T08:34:14.2001269Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:34:14.2003329Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:34:14.2004826Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:34:14.2005568Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:34:14.2025029Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:34:14.2027833Z
Details:
2025-04-15T08:34:14.2028158Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:34:14.2029809Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:34:14.2030489Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:34:14.2037757Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:34:14.2063255Z
FAIL public/app/features/dashboard/components/ShareModal/SharePublicDashboard/SharePublicDashboard.test.tsx
● Test suite failed to run
2025-04-15T08:34:14.2065544Z
Jest encountered an unexpected token
2025-04-15T08:34:14.2066096Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:34:14.2068187Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:34:14.2069680Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:34:14.2070586Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:34:14.2078680Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:34:14.2081580Z
Details:
2025-04-15T08:34:14.2081913Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:34:14.2083533Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:34:14.2084067Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:34:14.2091192Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:34:14.2117991Z
FAIL public/app/features/datasources/state/actions.test.ts
● Test suite failed to run
2025-04-15T08:34:14.2119395Z
Jest encountered an unexpected token
2025-04-15T08:34:14.2119974Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:34:14.2123886Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:34:14.2125459Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:34:14.2126252Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:34:14.2135396Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:34:14.2138440Z
Details:
2025-04-15T08:34:14.2138766Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:34:14.2140565Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:34:14.2141156Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:34:14.2152241Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:34:14.2181663Z
FAIL public/app/features/dashboard-scene/settings/variables/utils.test.ts
● Test suite failed to run
2025-04-15T08:34:14.2183536Z
Jest encountered an unexpected token
2025-04-15T08:34:14.2184090Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:34:14.2187548Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:34:14.2189083Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:34:14.2189864Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:34:14.2199147Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:34:14.2202305Z
Details:
2025-04-15T08:34:14.2202644Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:34:14.2204428Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:34:14.2205005Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:34:14.2215918Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:34:14.2245097Z
FAIL public/app/features/datasources/components/picker/DataSourcePicker.test.tsx
● Test suite failed to run
2025-04-15T08:34:14.2247082Z
Jest encountered an unexpected token
2025-04-15T08:34:14.2247643Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:34:14.2251213Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:34:14.2252749Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:34:14.2253527Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:34:14.2263709Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:34:14.2266697Z
Details:
2025-04-15T08:34:14.2267020Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:34:14.2269203Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:34:14.2269985Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:34:14.2281055Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:34:14.2314309Z
FAIL public/app/features/dashboard/components/GenAI/GenAIButton.test.tsx
● Test suite failed to run
2025-04-15T08:34:14.2315945Z
Jest encountered an unexpected token
2025-04-15T08:34:14.2316514Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:34:14.2320492Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:34:14.2322272Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:34:14.2323062Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:34:14.2331989Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:34:14.2334966Z
Details:
2025-04-15T08:34:14.2335160Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:34:14.2337086Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:34:14.2337677Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:34:14.2347683Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:34:14.2378481Z
FAIL public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.test.tsx
● Test suite failed to run
2025-04-15T08:34:14.2380501Z
Jest encountered an unexpected token
2025-04-15T08:34:14.2381230Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:34:14.2385597Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:34:14.2387248Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:34:14.2388256Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:34:14.2396903Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:34:14.2398904Z
Details:
2025-04-15T08:34:14.2399097Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:34:14.2400823Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:34:14.2401275Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:34:14.2410461Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:34:14.2432739Z
FAIL public/app/features/alerting/unified/components/rule-editor/AnnotationsStep.test.tsx
● Test suite failed to run
2025-04-15T08:34:14.2434249Z
Jest encountered an unexpected token
2025-04-15T08:34:14.2434570Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:34:14.2436718Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:34:14.2438170Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:34:14.2438843Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:34:14.2446490Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:34:14.2449108Z
Details:
2025-04-15T08:34:14.2449435Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:34:14.2450983Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:34:14.2451512Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:34:14.2459275Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:34:14.2481577Z
FAIL public/app/features/dashboard-scene/panel-edit/PanelDataPane/PanelDataAlertingTab.test.tsx
● Test suite failed to run
2025-04-15T08:34:14.2483367Z
Jest encountered an unexpected token
2025-04-15T08:34:14.2483688Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:34:14.2486252Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:34:14.2487681Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:34:14.2488284Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:34:14.2495994Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:34:14.2498656Z
Details:
2025-04-15T08:34:14.2498962Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:34:14.2500459Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:34:14.2501004Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:34:14.2508472Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:34:14.2531922Z
FAIL public/app/features/logs/components/panel/LogListControls.test.tsx
● Test suite failed to run
2025-04-15T08:34:14.2533349Z
Jest encountered an unexpected token
2025-04-15T08:34:14.2533667Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:34:14.2536392Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:34:14.2537855Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:34:14.2538559Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:34:14.2546253Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:34:14.2549151Z
Details:
2025-04-15T08:34:14.2549463Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:34:14.2551015Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:34:14.2551558Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:34:14.2559023Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:34:14.2581646Z
FAIL public/app/core/history/RichHistoryLocalStorage.test.ts
● Test suite failed to run
2025-04-15T08:34:14.2582962Z
Jest encountered an unexpected token
2025-04-15T08:34:14.2583280Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:34:14.2585373Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:34:14.2586843Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:34:14.2587418Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:34:14.2594979Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:34:14.2597841Z
Details:
2025-04-15T08:34:14.2598154Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:34:14.2599541Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:34:14.2600091Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:34:14.2607584Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:34:14.2629304Z
FAIL public/app/features/dashboard/components/GenAI/jsonDiffText.test.ts
● Test suite failed to run
2025-04-15T08:34:14.2630598Z
Jest encountered an unexpected token
2025-04-15T08:34:14.2631047Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:34:14.2634044Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:34:14.2635097Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:34:14.2635442Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:34:14.2643242Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:34:14.2645306Z
Details:
2025-04-15T08:34:14.2645396Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:34:14.2646862Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:34:14.2647362Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:34:14.2655144Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:34:14.2678572Z
FAIL public/app/features/alerting/unified/hooks/ruleGroup/useMoveRuleFromRuleGroup.test.tsx
● Test suite failed to run
2025-04-15T08:34:14.2680079Z
Jest encountered an unexpected token
2025-04-15T08:34:14.2680574Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:34:14.2683341Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:34:14.2684709Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:34:14.2685144Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:34:14.2692898Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:34:14.2694938Z
Details:
2025-04-15T08:34:14.2695037Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:34:14.2696571Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:34:14.2696921Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:34:14.2705390Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:34:14.2728354Z
FAIL public/app/features/dashboard/containers/DashboardPageProxy.test.tsx
● Test suite failed to run
2025-04-15T08:34:14.2729549Z
Jest encountered an unexpected token
2025-04-15T08:34:14.2729774Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:34:14.2733032Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:34:14.2734129Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:34:14.2734473Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:34:14.2742686Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:34:14.2745530Z
Details:
2025-04-15T08:34:14.2745691Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:34:14.2747327Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:34:14.2747934Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:34:14.2756469Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:34:14.2779275Z
FAIL public/app/features/alerting/unified/components/receivers/form/GrafanaReceiverForm.test.tsx
● Test suite failed to run
2025-04-15T08:34:14.2781024Z
Jest encountered an unexpected token
2025-04-15T08:34:14.2781260Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:34:14.2784357Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:34:14.2785465Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:34:14.2785802Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:34:14.2793925Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:34:14.2795536Z
Details:
2025-04-15T08:34:14.2795680Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:34:14.2797012Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:34:14.2797641Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:34:14.2806236Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:34:14.2828877Z
FAIL public/app/features/alerting/unified/hooks/useExternalAMSelector.test.tsx
● Test suite failed to run
2025-04-15T08:34:14.2830067Z
Jest encountered an unexpected token
2025-04-15T08:34:14.2830472Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:34:14.2833376Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:34:14.2834497Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:34:14.2835012Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:34:14.2842861Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:34:14.2844785Z
Details:
2025-04-15T08:34:14.2844936Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:34:14.2846269Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:34:14.2846837Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:34:14.2855243Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:34:14.2878838Z
FAIL public/app/features/dashboard-scene/panel-edit/PanelDataPane/PanelDataTransformationsTab.test.tsx
● Test suite failed to run
2025-04-15T08:34:14.2879918Z
Jest encountered an unexpected token
2025-04-15T08:34:14.2880145Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:34:14.2882998Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:34:14.2884048Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:34:14.2884407Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:34:14.2892537Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:34:14.2894221Z
Details:
2025-04-15T08:34:14.2894369Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:34:14.2895680Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:34:14.2896114Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:34:14.2904761Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:34:14.2928460Z
FAIL public/app/features/dashboard/components/ShareModal/ShareLink.test.tsx
● Test suite failed to run
2025-04-15T08:34:14.2929088Z
Jest encountered an unexpected token
2025-04-15T08:34:14.2929538Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:34:14.2930444Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:34:14.2931237Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:34:14.2931675Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:34:14.2939464Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:34:14.2941362Z
Details:
2025-04-15T08:34:14.2941710Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:34:14.2942838Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:34:14.2943277Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:34:14.2951204Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:34:14.2975793Z
FAIL public/app/features/explore/TraceView/components/TraceTimelineViewer/SpanBarRow.test.tsx
● Test suite failed to run
2025-04-15T08:34:14.2977223Z
Jest encountered an unexpected token
2025-04-15T08:34:14.2977753Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:34:14.2980831Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:34:14.2982183Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:34:14.2982649Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:34:14.2990553Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:34:14.2992712Z
Details:
2025-04-15T08:34:14.2992972Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:34:14.2994455Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:34:14.2995202Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:34:14.3003122Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:34:14.3026807Z
FAIL public/app/features/dashboard-scene/scene/LibraryPanelBehavior.test.tsx
● Test suite failed to run
2025-04-15T08:34:14.3028217Z
Jest encountered an unexpected token
2025-04-15T08:34:14.3028607Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:34:14.3031523Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:34:14.3032993Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:34:14.3033400Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:34:14.3040954Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:34:14.3043185Z
Details:
2025-04-15T08:34:14.3043277Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:34:14.3045034Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:34:14.3045459Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:34:14.3053760Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:34:14.3077271Z
FAIL public/app/plugins/datasource/loki/tracking.test.ts
● Test suite failed to run
2025-04-15T08:34:14.3078004Z
Jest encountered an unexpected token
2025-04-15T08:34:14.3078497Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:34:14.3081822Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:34:14.3083118Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:34:14.3083543Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:34:14.3091870Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:34:14.3093856Z
Details:
2025-04-15T08:34:14.3094010Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:34:14.3095699Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:34:14.3096106Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:34:14.3104646Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:34:14.3127805Z
FAIL public/app/features/explore/Logs/LogsSamplePanel.test.tsx
● Test suite failed to run
2025-04-15T08:34:14.3128622Z
Jest encountered an unexpected token
2025-04-15T08:34:14.3129099Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:34:14.3132201Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:34:14.3133362Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:34:14.3133695Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:34:14.3141824Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:34:14.3143486Z
Details:
2025-04-15T08:34:14.3143627Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:34:14.3145058Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:34:14.3145567Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:34:14.3153849Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:34:14.3176868Z
FAIL public/app/features/alerting/unified/rule-list/DataSourceGroupLoader.test.tsx
● Test suite failed to run
2025-04-15T08:34:14.3178057Z
Jest encountered an unexpected token
2025-04-15T08:34:14.3180537Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:34:14.3181573Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:34:14.3182774Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:34:14.3183243Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:34:14.3191600Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:34:14.3193371Z
Details:
2025-04-15T08:34:14.3193564Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:34:14.3195270Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:34:14.3195752Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:34:14.3204903Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:34:14.3227649Z
FAIL public/app/features/alerting/unified/rule-editor/RuleEditorCloudOnlyAllowed.test.tsx
● Test suite failed to run
2025-04-15T08:34:14.3229057Z
Jest encountered an unexpected token
2025-04-15T08:34:14.3229358Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:34:14.3232562Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:34:14.3233931Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:34:14.3234546Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:34:14.3243452Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:34:14.3246353Z
Details:
2025-04-15T08:34:14.3246740Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:34:14.3248283Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:34:14.3249320Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:34:14.3260653Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:34:14.3294670Z
FAIL public/app/features/dashboard-scene/panel-edit/PanelOptions.test.tsx
● Test suite failed to run
2025-04-15T08:34:14.3296073Z
Jest encountered an unexpected token
2025-04-15T08:34:14.3296723Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:34:14.3300744Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:34:14.3302718Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:34:14.3303218Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:34:14.3312960Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:34:14.3316318Z
Details:
2025-04-15T08:34:14.3316469Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:34:14.3318678Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:34:14.3319380Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:34:14.3330690Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:34:14.3364581Z
FAIL public/app/features/dashboard-scene/settings/annotations/AnnotationSettingsEdit.test.tsx
● Test suite failed to run
2025-04-15T08:34:14.3366781Z
Jest encountered an unexpected token
2025-04-15T08:34:14.3367047Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:34:14.3371077Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:34:14.3372953Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:34:14.3373479Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:34:14.3384672Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:34:14.3387592Z
Details:
2025-04-15T08:34:14.3387739Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:34:14.3389805Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:34:14.3390630Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:34:14.3401981Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:34:14.3435918Z
FAIL public/app/features/explore/TraceView/components/TracePageHeader/SearchBar/NextPrevResult.test.tsx
● Test suite failed to run
2025-04-15T08:34:14.3438245Z
Jest encountered an unexpected token
2025-04-15T08:34:14.3438492Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:34:14.3442279Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:34:14.3444283Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:34:14.3444970Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:34:14.3454611Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:34:14.3458001Z
Details:
2025-04-15T08:34:14.3458149Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:34:14.3460134Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:34:14.3461198Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:34:14.3472621Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:34:14.3507636Z
FAIL public/app/features/dashboard-scene/edit-pane/ElementSelection.test.ts
● Test suite failed to run
2025-04-15T08:34:14.3509072Z
Jest encountered an unexpected token
2025-04-15T08:34:14.3509719Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:34:14.3513644Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:34:14.3515440Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:34:14.3516080Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:34:14.3527255Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:34:14.3530169Z
Details:
2025-04-15T08:34:14.3530493Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:34:14.3532548Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:34:14.3533227Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:34:14.3544055Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:34:14.3579504Z
FAIL public/app/features/dashboard/containers/SoloPanelPage.test.tsx
● Test suite failed to run
2025-04-15T08:34:14.3581088Z
Jest encountered an unexpected token
2025-04-15T08:34:14.3581710Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:34:14.3585716Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:34:14.3587620Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:34:14.3588248Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:34:14.3598694Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:34:14.3601768Z
Details:
2025-04-15T08:34:14.3601912Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:34:14.3603943Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:34:14.3604795Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:34:14.3615106Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:34:14.3647347Z
FAIL public/app/features/dashboard-scene/scene/DashboardControls.test.tsx
● Test suite failed to run
2025-04-15T08:34:14.3648925Z
Jest encountered an unexpected token
2025-04-15T08:34:14.3649460Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:34:14.3651597Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:34:14.3653058Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:34:14.3653805Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:34:14.3661625Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:34:14.3664287Z
Details:
2025-04-15T08:34:14.3664600Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:34:14.3666175Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:34:14.3666714Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:34:14.3673514Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:34:14.3697917Z
FAIL public/app/features/alerting/unified/components/rule-editor/query-and-alert-condition/__snapshots__/areQueriesTransformableToSimpleCondition.test.ts
● Test suite failed to run
2025-04-15T08:34:14.3700966Z
Jest encountered an unexpected token
2025-04-15T08:34:14.3701506Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:34:14.3703507Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:34:14.3704950Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:34:14.3705697Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:34:14.3713299Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:34:14.3715943Z
Details:
2025-04-15T08:34:14.3716451Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:34:14.3718014Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:34:14.3718552Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:34:14.3725349Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:34:14.3749679Z
FAIL public/app/features/alerting/unified/hooks/ruleGroup/useDeleteRuleFromGroup.test.tsx
● Test suite failed to run
2025-04-15T08:34:14.3751627Z
Jest encountered an unexpected token
2025-04-15T08:34:14.3752165Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:34:14.3754371Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:34:14.3755830Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:34:14.3756564Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:34:14.3763797Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:34:14.3766348Z
Details:
2025-04-15T08:34:14.3766670Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:34:14.3768419Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:34:14.3768969Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:34:14.3775774Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:34:14.3800145Z
FAIL public/app/features/dashboard-scene/utils/dashboardSceneGraph.test.ts
● Test suite failed to run
2025-04-15T08:34:14.3801854Z
Jest encountered an unexpected token
2025-04-15T08:34:14.3802401Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:34:14.3804616Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:34:14.3806117Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:34:14.3806862Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:34:14.3814583Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:34:14.3817259Z
Details:
2025-04-15T08:34:14.3817574Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:34:14.3819146Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:34:14.3819689Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:34:14.3826783Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:34:14.3851655Z
FAIL public/app/features/variables/editor/getVariableQueryEditor.test.tsx
● Test suite failed to run
2025-04-15T08:34:14.3853229Z
Jest encountered an unexpected token
2025-04-15T08:34:14.3853758Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:34:14.3855764Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:34:14.3857238Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:34:14.3857989Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:34:14.3865902Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:34:14.3868594Z
Details:
2025-04-15T08:34:14.3868909Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:34:14.3870601Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:34:14.3871142Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:34:14.3878079Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:34:14.3902826Z
FAIL public/app/features/query/state/DashboardQueryRunner/LegacyAnnotationQueryRunner.test.ts
● Test suite failed to run
2025-04-15T08:34:14.3904746Z
Jest encountered an unexpected token
2025-04-15T08:34:14.3905294Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:34:14.3907308Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:34:14.3908789Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:34:14.3909549Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:34:14.3917408Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:34:14.3920076Z
Details:
2025-04-15T08:34:14.3920538Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:34:14.3922121Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:34:14.3922659Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:34:14.3929411Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:34:14.3954367Z
FAIL public/app/features/dashboard-scene/inspect/HelpWizard/HelpWizard.test.tsx
● Test suite failed to run
2025-04-15T08:34:14.3955993Z
Jest encountered an unexpected token
2025-04-15T08:34:14.3956522Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:34:14.3958557Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:34:14.3960027Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:34:14.3960898Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:34:14.3968656Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:34:14.3971482Z
Details:
2025-04-15T08:34:14.3971793Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:34:14.3973055Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:34:14.3973523Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:34:14.3980402Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:34:14.4016784Z
FAIL public/app/features/dashboard/components/ShareModal/ShareEmbed.test.tsx
● Test suite failed to run
2025-04-15T08:34:14.4018419Z
Jest encountered an unexpected token
2025-04-15T08:34:14.4018962Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:34:14.4021081Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:34:14.4022550Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:34:14.4023290Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:34:14.4031147Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:34:14.4033786Z
Details:
2025-04-15T08:34:14.4034102Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:34:14.4035640Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:34:14.4036176Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:34:14.4043009Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:34:14.4067457Z
FAIL public/app/features/dashboard/components/SaveDashboard/forms/SaveDashboardAsForm.test.tsx
● Test suite failed to run
2025-04-15T08:34:14.4069403Z
Jest encountered an unexpected token
2025-04-15T08:34:14.4069933Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:34:14.4072044Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:34:14.4073496Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:34:14.4074228Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:34:14.4081814Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:34:14.4084458Z
Details:
2025-04-15T08:34:14.4084768Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:34:14.4086510Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:34:14.4087048Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:34:14.4093899Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:34:14.4118260Z
FAIL public/app/features/browse-dashboards/components/BrowseActions/MoveModal.test.tsx
● Test suite failed to run
2025-04-15T08:34:14.4119985Z
Jest encountered an unexpected token
2025-04-15T08:34:14.4120642Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:34:14.4122834Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:34:14.4124279Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:34:14.4125011Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:34:14.4132626Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:34:14.4135263Z
Details:
2025-04-15T08:34:14.4135578Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:34:14.4137404Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:34:14.4137940Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:34:14.4144743Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:34:14.4168940Z
FAIL public/app/features/dashboard-scene/settings/variables/editors/IntervalVariableEditor.test.tsx
● Test suite failed to run
2025-04-15T08:34:14.4171011Z
Jest encountered an unexpected token
2025-04-15T08:34:14.4171538Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:34:14.4173714Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:34:14.4175171Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:34:14.4175896Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:34:14.4183013Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:34:14.4185357Z
Details:
2025-04-15T08:34:14.4185494Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:34:14.4186198Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:34:14.4186423Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:34:14.4190430Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:34:14.4202309Z
FAIL public/app/features/dashboard/utils/panel.test.ts
● Test suite failed to run
2025-04-15T08:34:14.4202919Z
Jest encountered an unexpected token
2025-04-15T08:34:14.4203146Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:34:14.4204153Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:34:14.4204872Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:34:14.4205214Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:34:14.4209395Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:34:14.4210718Z
Details:
2025-04-15T08:34:14.4210854Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:34:14.4211547Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:34:14.4211778Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:34:14.4215569Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:34:14.4227338Z
FAIL public/app/plugins/datasource/loki/LokiVariableSupport.test.ts
● Test suite failed to run
2025-04-15T08:34:14.4228062Z
Jest encountered an unexpected token
2025-04-15T08:34:14.4228282Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:34:14.4229307Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:34:14.4230025Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:34:14.4230530Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:34:14.4234718Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:34:14.4235876Z
Details:
2025-04-15T08:34:14.4236015Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:34:14.4236718Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:34:14.4236959Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:34:14.4240782Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:34:14.4252741Z
FAIL public/app/core/components/AppChrome/OrganizationSwitcher/OrganizationSwitcher.test.tsx
● Test suite failed to run
2025-04-15T08:34:14.4253693Z
Jest encountered an unexpected token
2025-04-15T08:34:14.4253914Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:34:14.4254933Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:34:14.4255674Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:34:14.4256010Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:34:14.4260159Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:34:14.4261488Z
Details:
2025-04-15T08:34:14.4261625Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:34:14.4262326Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:34:14.4262558Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:34:14.4270550Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:34:14.4291867Z
FAIL public/app/features/explore/RichHistory/RichHistoryStarredTab.test.tsx
● Test suite failed to run
2025-04-15T08:34:14.4292777Z
Jest encountered an unexpected token
2025-04-15T08:34:14.4293026Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:34:14.4296033Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:34:14.4297010Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:34:14.4297347Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:34:14.4304897Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:34:14.4306427Z
Details:
2025-04-15T08:34:14.4306527Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:34:14.4307786Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:34:14.4308156Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:34:14.4316798Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:34:14.4342770Z
FAIL public/app/features/dashboard-scene/scene/DashboardLinksControls.test.tsx
● Test suite failed to run
2025-04-15T08:34:14.4343971Z
Jest encountered an unexpected token
2025-04-15T08:34:14.4344273Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:34:14.4347752Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:34:14.4349085Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:34:14.4349624Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:34:14.4358510Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:34:14.4360716Z
Details:
2025-04-15T08:34:14.4360954Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:34:14.4362949Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:34:14.4363310Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:34:14.4372210Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:34:14.4397975Z
FAIL public/app/features/migrate-to-cloud/onprem/EmptyState/CallToAction/CallToAction.test.tsx
● Test suite failed to run
2025-04-15T08:34:14.4399797Z
Jest encountered an unexpected token
2025-04-15T08:34:14.4400040Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:34:14.4403509Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:34:14.4404726Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:34:14.4405194Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:34:14.4414909Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:34:14.4417053Z
Details:
2025-04-15T08:34:14.4418233Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:34:14.4418968Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:34:14.4419565Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:34:14.4428744Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:34:14.4454615Z
FAIL public/app/features/plugins/admin/components/PluginDetailsBody.test.tsx
● Test suite failed to run
2025-04-15T08:34:14.4455935Z
Jest encountered an unexpected token
2025-04-15T08:34:14.4456353Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:34:14.4459769Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:34:14.4461420Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:34:14.4461778Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:34:14.4470757Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:34:14.4472975Z
Details:
2025-04-15T08:34:14.4473147Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:34:14.4474823Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:34:14.4475216Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:34:14.4484255Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:34:14.4510066Z
FAIL public/app/features/variables/textbox/adapter.test.ts
● Test suite failed to run
2025-04-15T08:34:14.4510998Z
Jest encountered an unexpected token
2025-04-15T08:34:14.4511542Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:34:14.4515003Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:34:14.4516309Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:34:14.4516829Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:34:14.4525740Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:34:14.4527853Z
Details:
2025-04-15T08:34:14.4528032Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:34:14.4529782Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:34:14.4530486Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:34:14.4539900Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:34:14.4565415Z
FAIL public/app/features/dashboard/containers/PublicDashboardPageProxy.test.tsx
● Test suite failed to run
2025-04-15T08:34:14.4566735Z
Jest encountered an unexpected token
2025-04-15T08:34:14.4567023Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:34:14.4570480Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:34:14.4571813Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:34:14.4572297Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:34:14.4581277Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:34:14.4583407Z
Details:
2025-04-15T08:34:14.4583571Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:34:14.4585347Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:34:14.4585955Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:34:14.4595042Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:34:14.4620941Z
FAIL public/app/core/components/Page/Page.test.tsx
● Test suite failed to run
2025-04-15T08:34:14.4621520Z
Jest encountered an unexpected token
2025-04-15T08:34:14.4621861Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:34:14.4624781Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:34:14.4626065Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:34:14.4626411Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:34:14.4634252Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:34:14.4635731Z
Details:
2025-04-15T08:34:14.4635876Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:34:14.4637149Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:34:14.4637520Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:34:14.4645747Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:34:14.4668206Z
FAIL public/app/features/explore/extensions/AddToDashboard/index.test.tsx
● Test suite failed to run
2025-04-15T08:34:14.4669351Z
Jest encountered an unexpected token
2025-04-15T08:34:14.4669767Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:34:14.4672620Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:34:14.4674091Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:34:14.4674562Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:34:14.4682580Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:34:14.4684413Z
Details:
2025-04-15T08:34:14.4684538Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:34:14.4686232Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:34:14.4686721Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:34:14.4695101Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:34:14.4716638Z
FAIL public/app/features/explore/TraceView/components/CriticalPath/utils/findLastFinishingChildSpan.test.ts
● Test suite failed to run
2025-04-15T08:34:14.4718592Z
Jest encountered an unexpected token
2025-04-15T08:34:14.4718835Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:34:14.4721508Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:34:14.4722400Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:34:14.4722732Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:34:14.4730424Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:34:14.4731940Z
Details:
2025-04-15T08:34:14.4732083Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:34:14.4733385Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:34:14.4733883Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:34:14.4741656Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:34:14.4763573Z
FAIL public/app/features/explore/state/time.test.ts
● Test suite failed to run
2025-04-15T08:34:14.4764182Z
Jest encountered an unexpected token
2025-04-15T08:34:14.4764670Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:34:14.4768035Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:34:14.4769381Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:34:14.4769761Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:34:14.4777509Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:34:14.4779328Z
Details:
2025-04-15T08:34:14.4779583Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:34:14.4781176Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:34:14.4781750Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:34:14.4789565Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:34:14.4811721Z
FAIL public/app/features/explore/spec/query.test.tsx
● Test suite failed to run
2025-04-15T08:34:14.4812342Z
Jest encountered an unexpected token
2025-04-15T08:34:14.4812737Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:34:14.4815586Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:34:14.4816862Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:34:14.4817479Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:34:14.4824861Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:34:14.4826413Z
Details:
2025-04-15T08:34:14.4826558Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:34:14.4827848Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:34:14.4828430Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:34:14.4836533Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:34:14.4858830Z
FAIL public/app/features/variables/constant/actions.test.ts
● Test suite failed to run
2025-04-15T08:34:14.4859517Z
Jest encountered an unexpected token
2025-04-15T08:34:14.4859991Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:34:14.4863191Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:34:14.4864158Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:34:14.4864504Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:34:14.4871959Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:34:14.4873603Z
Details:
2025-04-15T08:34:14.4874717Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:34:14.4875732Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:34:14.4876188Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:34:14.4883981Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:34:14.4906320Z
FAIL public/app/features/explore/extensions/getExploreExtensionConfigs.test.tsx
● Test suite failed to run
2025-04-15T08:34:14.4907399Z
Jest encountered an unexpected token
2025-04-15T08:34:14.4907760Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:34:14.4910873Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:34:14.4912006Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:34:14.4912401Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:34:14.4920069Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:34:14.4921675Z
Details:
2025-04-15T08:34:14.4921821Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:34:14.4922972Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:34:14.4923527Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:34:14.4931340Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:34:14.4953730Z
FAIL public/app/features/annotations/executeAnnotationQuery.test.ts
● Test suite failed to run
2025-04-15T08:34:14.4954537Z
Jest encountered an unexpected token
2025-04-15T08:34:14.4954992Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:34:14.4957882Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:34:14.4959161Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:34:14.4959476Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:34:14.4967388Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:34:14.4968935Z
Details:
2025-04-15T08:34:14.4969087Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:34:14.4970689Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:34:14.4971033Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:34:14.4979490Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:34:14.5001348Z
FAIL public/app/core/navigation/GrafanaRoute.test.tsx
● Test suite failed to run
2025-04-15T08:34:14.5002324Z
Jest encountered an unexpected token
2025-04-15T08:34:14.5002596Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:34:14.5005964Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:34:14.5007051Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:34:14.5007482Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:34:14.5015171Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:34:14.5017431Z
Details:
2025-04-15T08:34:14.5017629Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:34:14.5019122Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:34:14.5019657Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:34:14.5028323Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:34:14.5050075Z
FAIL public/app/plugins/datasource/loki/querybuilder/components/LokiQueryCodeEditor.test.tsx
● Test suite failed to run
2025-04-15T08:34:14.5051876Z
Jest encountered an unexpected token
2025-04-15T08:34:14.5052122Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:34:14.5055349Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:34:14.5056406Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:34:14.5056831Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:34:14.5064646Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:34:14.5066661Z
Details:
2025-04-15T08:34:14.5066993Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:34:14.5068553Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:34:14.5078836Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:34:14.5081690Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:34:14.5098230Z
FAIL public/app/features/dashboard-scene/scene/ViewPanelScene.test.tsx
● Test suite failed to run
2025-04-15T08:34:14.5099130Z
Jest encountered an unexpected token
2025-04-15T08:34:14.5099694Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:34:14.5102907Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:34:14.5103884Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:34:14.5104451Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:34:14.5111971Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:34:14.5113328Z
Details:
2025-04-15T08:34:14.5113464Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:34:14.5114739Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:34:14.5115135Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:34:14.5123382Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:34:14.5144847Z
FAIL public/app/features/dashboard-scene/sharing/ShareButton/ShareButton.test.tsx
● Test suite failed to run
2025-04-15T08:34:14.5145836Z
Jest encountered an unexpected token
2025-04-15T08:34:14.5146068Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:34:14.5149081Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:34:14.5150025Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:34:14.5150512Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:34:14.5157921Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:34:14.5159421Z
Details:
2025-04-15T08:34:14.5159516Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:34:14.5161048Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:34:14.5161394Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:34:14.5169712Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:34:14.5190941Z
FAIL public/app/features/logs/components/panel/LogListContext.test.tsx
● Test suite failed to run
2025-04-15T08:34:14.5191872Z
Jest encountered an unexpected token
2025-04-15T08:34:14.5192108Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:34:14.5195411Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:34:14.5196148Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:34:14.5196478Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:34:14.5203870Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:34:14.5205619Z
Details:
2025-04-15T08:34:14.5205762Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:34:14.5207158Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:34:14.5207475Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:34:14.5215081Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:34:14.5237210Z
FAIL public/app/plugins/datasource/loki/configuration/ConfigEditor.test.tsx
● Test suite failed to run
2025-04-15T08:34:14.5238246Z
Jest encountered an unexpected token
2025-04-15T08:34:14.5238475Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:34:14.5241931Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:34:14.5242480Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:34:14.5242896Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:34:14.5250625Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:34:14.5251990Z
Details:
2025-04-15T08:34:14.5252082Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:34:14.5253487Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:34:14.5253820Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:34:14.5262168Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:34:14.5283800Z
FAIL public/app/features/dashboard-scene/sharing/ExportButton/ExportButton.test.tsx
● Test suite failed to run
2025-04-15T08:34:14.5284982Z
Jest encountered an unexpected token
2025-04-15T08:34:14.5285215Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:34:14.5288509Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:34:14.5289239Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:34:14.5289596Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:34:14.5297288Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:34:14.5298725Z
Details:
2025-04-15T08:34:14.5299033Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:34:14.5300206Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:34:14.5300703Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:34:14.5309852Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:34:14.5331343Z
FAIL public/app/core/history/remoteStorageConverter.test.ts
● Test suite failed to run
2025-04-15T08:34:14.5332079Z
Jest encountered an unexpected token
2025-04-15T08:34:14.5332421Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:34:14.5335244Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:34:14.5336522Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:34:14.5336813Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:34:14.5344750Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:34:14.5346299Z
Details:
2025-04-15T08:34:14.5346442Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:34:14.5347713Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:34:14.5348142Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:34:14.5356326Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:34:14.5380510Z
FAIL public/app/features/dashboard/components/HelpWizard/HelpWizard.test.tsx
● Test suite failed to run
2025-04-15T08:34:14.5381549Z
Jest encountered an unexpected token
2025-04-15T08:34:14.5382010Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:34:14.5385074Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:34:14.5386571Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:34:14.5386980Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:34:14.5395630Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:34:14.5397776Z
Details:
2025-04-15T08:34:14.5397978Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:34:14.5399305Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:34:14.5400154Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:34:14.5409044Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:34:14.5434887Z
FAIL public/app/features/dashboard-scene/utils/PanelModelCompatibilityWrapper.test.ts
● Test suite failed to run
2025-04-15T08:34:14.5436599Z
Jest encountered an unexpected token
2025-04-15T08:34:14.5436830Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:34:14.5440351Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:34:14.5441852Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:34:14.5442206Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:34:14.5451232Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:34:14.5453416Z
Details:
2025-04-15T08:34:14.5453600Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:34:14.5455281Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:34:14.5455989Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:34:14.5464975Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:34:14.5491007Z
2025-04-15T08:34:14.5491196Z
Test Suites: 78 failed, 111 passed, 189 total
Tests:       1 skipped, 981 passed, 982 total
Snapshots:   37 passed, 37 total
Time:        105.178 s
Ran all test suites.
##[error]Process completed with exit code 1.
