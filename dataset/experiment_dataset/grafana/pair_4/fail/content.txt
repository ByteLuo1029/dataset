Requested labels: ubuntu-latest-8-cores
Job defined at: grafana/grafana/.github/workflows/pr-frontend-unit-tests.yml@refs/pull/98200/merge
Waiting for a runner to pick up this job...
Job is waiting for a runner from 'ubuntu-latest-8-cores' to come online.
Job is about to start running on the runner: ubuntu-latest-8-cores_f4115020f96a (organization)
Current runner version: '2.323.0'
Runner name: 'ubuntu-latest-8-cores_f4115020f96a'
Runner group name: 'GitHub Hosted larger and non-default runners'
Machine name: 'runner'
##[group]Operating System
Ubuntu
24.04.2
LTS
##[endgroup]
##[group]Runner Image
Image: ubuntu-24.04
Version: 20250406.1.0
Included Software: https://github.com/actions/runner-images/blob/ubuntu24/20250406.1/images/ubuntu/Ubuntu2404-Readme.md
Image Release: https://github.com/actions/runner-images/releases/tag/ubuntu24%2F20250406.1
##[endgroup]
##[group]GITHUB_TOKEN Permissions
Actions: write
write
write
write
write
write
write


write
write
write
write
write
write
##[endgroup]
Actions



'actions/checkout@v4' 11bd71901bbe5b1630ceea73d27597364c9af683
'actions/setup-node@v4' 49933ea5288caeca8642d1e84afbd3f7d6820020
Complete job name: Unit tests (1 / 8)
actions/checkout@v4

grafana/grafana



true


1



false

##[endgroup]
grafana/grafana

'/home/runner/work/grafana/grafana'

2 49 0
##[endgroup]
Temporarily overriding HOME='/home/runner/work/_temp/27f94df5-6858-4282-a65f-fdef123aacb6' before making global git config changes

[command]/usr/bin/git config --global --add safe.directory /home/runner/work/grafana/grafana
'/home/runner/work/grafana/grafana'

/home/runner/work/grafana/grafana










/home/runner/work/grafana/grafana/.git/
https://github.com/grafana/grafana
##[endgroup]

[command]/usr/bin/git config --local gc.auto 0
##[endgroup]

core\.sshCommand
'core\.sshCommand' 'core.sshCommand'
http\.https\:\/\/github\.com\/\.extraheader
'http\.https\:\/\/github\.com\/\.extraheader' 'http.https://github.com/.extraheader'
--local
##[endgroup]

2 --no-tags --prune --no-recurse-submodules --depth=1 origin +1c096fde83012253ad4eb6899e3732d4e67f2078:refs/remotes/pull/98200/merge
https://github.com/grafana/grafana
1c096fde83012253ad4eb6899e3732d4e67f2078  pull/98200/merge
##[endgroup]

##[endgroup]

[command]/usr/bin/git config --local --unset-all extensions.worktreeConfig

98200
Updating files:  98% (16893/17143)
Updating files:  99% (16972/17143)
Updating files: 100% (17143/17143)
Updating files: 100% (17143/17143), done.
98200
2025-04-15T08:30:46.7550720Z



2025-04-15T08:30:46.7552529Z


2025-04-15T08:30:46.7554105Z

2025-04-15T08:30:46.7554417Z

2025-04-15T08:30:46.7555078Z

2025-04-15T08:30:46.7555297Z

2025-04-15T08:30:46.7555873Z
1c096fde e7078faed83dfd56cb9135873378aa2febb0c7ec 8e63782e5b58f4a0323ef73b747778e88e639abf
##[endgroup]
-1 --format=%H
1c096fde83012253ad4eb6899e3732d4e67f2078
actions/setup-node@v4

node-version-file: .nvmrc
cache: yarn
cache-dependency-path: yarn.lock
always-auth: false


##[endgroup]
Node version file is not JSON file
Resolved .nvmrc as 22.11.0
Attempting to download 22.11.0...
Acquiring 22.11.0 - x64 from https://github.com/actions/node-versions/releases/download/22.11.0-11593095476/node-22.11.0-linux-x64.tar.gz
Extracting ...
[command]/usr/bin/tar xz --strip 1 --warning=no-unknown-keyword --overwrite -C /home/runner/work/_temp/56ef80eb-b4c8-4d93-a304-9b4f66f98eda -f /home/runner/work/_temp/cb4e6bc1-057d-4092-9705-3185b82f1210
Adding to the cache ...
##[group]Environment details
node: v22.11.0
npm: 10.9.0
yarn: 4.6.0
##[endgroup]
[command]/usr/local/bin/yarn --version
4.6.0
[command]/usr/local/bin/yarn config get cacheFolder
/home/runner/work/grafana/grafana/.yarn/cache
[command]/usr/local/bin/yarn config get enableGlobalCache
[33mfalse[39m
All dependencies are managed locally by yarn3, the previous cache can be used
Cache hit for: node-cache-Linux-x64-yarn-31c3315776a77ce6b54197c6862e17352f2025f6c5e8b1ccc267bcf6fd11ec22
Received 268435456 of 298852381 (89.8%), 250.5 MBs/sec
Received 298852381 of 298852381 (100.0%), 241.1 MBs/sec
Cache Size: ~285 MB (298852381 B)
[command]/usr/bin/tar -xf /home/runner/work/_temp/81793eee-4210-4145-bb4b-0f715657bd36/cache.tzst -P -C /home/runner/work/grafana/grafana --use-compress-program unzstd
Cache restored successfully
Cache restored from key: node-cache-Linux-x64-yarn-bd22c6c85f08cfa61a4624edb1d79fd3579c670895e7e5461b7d1430e7f8657a
##[group]Run yarn install --immutable --check-cache
[36;1myarn install --immutable --check-cache[0m
0
##[endgroup]
[93m➤[39m YN0000: Yarn detected that the current workflow is executed from a public pull request. For safety the hardened mode has been enabled.
[93m➤[39m YN0000: It will prevent malicious lockfile manipulations, in exchange for a slower install time. You can opt-out if necessary; check our documentation for more details.
2025-04-15T08:30:54.4722767Z
[94m➤[39m YN0000: · Yarn 4.6.0
[94m➤[39m [90mYN0000[39m: ┌ Resolution step
##[group]Resolution step
##[endgroup]
[94m➤[39m [90mYN0000[39m: └ Completed in 13s 150ms
[94m➤[39m [90mYN0000[39m: ┌ Post-resolution validation
##[group]Post-resolution validation
[93m➤[39m YN0060: │ [38;5;166m@grafana/[39m[38;5;173mdata[39m is listed by your project with version [38;5;111m12.0.0-pre[39m ([38;5;111mp18fe6[39m), which doesn't satisfy what [38;5;166m@grafana/[39m[38;5;173mgoogle-sdk[39m and other dependencies request ([91mbut they have non-overlapping ranges![39m).
[93m➤[39m YN0060: │ [38;5;166m@grafana/[39m[38;5;173mdata[39m is listed by your project with version [38;5;111m12.0.0-pre[39m ([38;5;111mp26935[39m), which doesn't satisfy what [38;5;166m@grafana/[39m[38;5;173mgoogle-sdk[39m and other dependencies request ([91mbut they have non-overlapping ranges![39m).
[93m➤[39m YN0060: │ [38;5;166m@grafana/[39m[38;5;173me2e-selectors[39m is listed by your project with version [38;5;111m12.0.0-pre[39m ([38;5;111mpc3c51[39m), which doesn't satisfy what [38;5;166m@grafana/[39m[38;5;173mscenes-react[39m and other dependencies request ([38;5;37m^11.0.0[39m).
[93m➤[39m YN0060: │ [38;5;166m@grafana/[39m[38;5;173mruntime[39m is listed by your project with version [38;5;111m12.0.0-pre[39m ([38;5;111mp007e0[39m), which doesn't satisfy what [38;5;166m@grafana/[39m[38;5;173msql[39m and other dependencies request ([91mbut they have non-overlapping ranges![39m).
[93m➤[39m YN0060: │ [38;5;166m@grafana/[39m[38;5;173mruntime[39m is listed by your project with version [38;5;111m12.0.0-pre[39m ([38;5;111mp1034d[39m), which doesn't satisfy what [38;5;166m@grafana/[39m[38;5;173msql[39m and other dependencies request ([91mbut they have non-overlapping ranges![39m).
[93m➤[39m YN0060: │ [38;5;166m@grafana/[39m[38;5;173mruntime[39m is listed by your project with version [38;5;111m12.0.0-pre[39m ([38;5;111mp6708e[39m), which doesn't satisfy what [38;5;166m@grafana/[39m[38;5;173msql[39m and other dependencies request ([91mbut they have non-overlapping ranges![39m).
[93m➤[39m YN0060: │ [38;5;166m@grafana/[39m[38;5;173mruntime[39m is listed by your project with version [38;5;111m12.0.0-pre[39m ([38;5;111mpd4ce2[39m), which doesn't satisfy what [38;5;166m@grafana/[39m[38;5;173mllm[39m and other dependencies request ([91mbut they have non-overlapping ranges![39m).
[93m➤[39m YN0060: │ [38;5;166m@grafana/[39m[38;5;173mschema[39m is listed by your project with version [38;5;111m12.0.0-pre[39m ([38;5;111mpee59c[39m), which doesn't satisfy what [38;5;166m@grafana/[39m[38;5;173mscenes-react[39m and other dependencies request ([38;5;37m^11.0.0[39m).
[93m➤[39m YN0060: │ [38;5;166m@grafana/[39m[38;5;173mui[39m is listed by your project with version [38;5;111m12.0.0-pre[39m ([38;5;111mp1dfda[39m), which doesn't satisfy what [38;5;166m@grafana/[39m[38;5;173mgoogle-sdk[39m and other dependencies request ([91mbut they have non-overlapping ranges![39m).
[93m➤[39m YN0060: │ [38;5;166m@grafana/[39m[38;5;173mui[39m is listed by your project with version [38;5;111m12.0.0-pre[39m ([38;5;111mpc3434[39m), which doesn't satisfy what [38;5;166m@grafana/[39m[38;5;173mgoogle-sdk[39m and other dependencies request ([91mbut they have non-overlapping ranges![39m).
[93m➤[39m YN0060: │ [38;5;166m@testing-library/[39m[38;5;173mdom[39m is listed by your project with version [38;5;111m10.4.0[39m ([38;5;111mp64a44[39m), which doesn't satisfy what [38;5;173mtesting-library-selector[39m and other dependencies request ([91mbut they have non-overlapping ranges![39m).
[93m➤[39m YN0060: │ [38;5;173meslint[39m is listed by your project with version [38;5;111m9.19.0[39m ([38;5;111mpa7fd0[39m), which doesn't satisfy what [38;5;166m@emotion/[39m[38;5;173meslint-plugin[39m and other dependencies request ([91mbut they have non-overlapping ranges![39m).
[93m➤[39m YN0060: │ [38;5;173mmarked[39m is listed by your project with version [38;5;111m15.0.6[39m ([38;5;111mp0def0[39m), which doesn't satisfy what [38;5;166m@glideapps/[39m[38;5;173mglide-data-grid[39m requests ([38;5;37m^4.0.10[39m).
[93m➤[39m YN0060: │ [38;5;173mmonaco-editor[39m is listed by your project with version [38;5;111m0.34.1[39m ([38;5;111mp650cc[39m), which doesn't satisfy what [38;5;166m@kusto/[39m[38;5;173mmonaco-kusto[39m requests ([38;5;37m~0.46.0[39m).
[93m➤[39m YN0060: │ [38;5;173mmonaco-editor[39m is listed by your project with version [38;5;111m0.34.1[39m ([38;5;111mp7caec[39m), which doesn't satisfy what [38;5;166m@grafana/[39m[38;5;173mmonaco-logql[39m requests ([38;5;37m~0.32.1[39m).
[93m➤[39m YN0060: │ [38;5;173mmonaco-editor[39m is listed by your project with version [38;5;111m0.34.1[39m ([38;5;111mp91be2[39m), which doesn't satisfy what [38;5;166m@grafana/[39m[38;5;173mmonaco-logql[39m and other dependencies request ([91mbut they have non-overlapping ranges![39m).
[93m➤[39m YN0060: │ [38;5;173mreact[39m is listed by your project with version [38;5;111m18.3.1[39m ([38;5;111mp05c4c[39m), which doesn't satisfy what [38;5;166m@grafana/[39m[38;5;173mgoogle-sdk[39m and other dependencies request ([91mbut they have non-overlapping ranges![39m).
[93m➤[39m YN0060: │ [38;5;173mreact[39m is listed by your project with version [38;5;111m18.3.1[39m ([38;5;111mp49274[39m), which doesn't satisfy what [38;5;166m@grafana/[39m[38;5;173mgoogle-sdk[39m and other dependencies request ([91mbut they have non-overlapping ranges![39m).
[93m➤[39m YN0060: │ [38;5;173mreact-dom[39m is listed by your project with version [38;5;111m18.3.1[39m ([38;5;111mp9b326[39m), which doesn't satisfy what [38;5;166m@grafana/[39m[38;5;173mgoogle-sdk[39m and other dependencies request ([91mbut they have non-overlapping ranges![39m).
[93m➤[39m YN0060: │ [38;5;173mreact-dom[39m is listed by your project with version [38;5;111m18.3.1[39m ([38;5;111mpa4a01[39m), which doesn't satisfy what [38;5;166m@grafana/[39m[38;5;173mgoogle-sdk[39m and other dependencies request ([91mbut they have non-overlapping ranges![39m).
[93m➤[39m YN0060: │ [38;5;173mreact-router-dom[39m is listed by your project with version [38;5;111m5.3.4[39m ([38;5;111mp5e98b[39m), which doesn't satisfy what [38;5;166m@grafana/[39m[38;5;173mscenes-react[39m and other dependencies request ([91mbut they have non-overlapping ranges![39m).
[93m➤[39m YN0060: │ [38;5;173mrollup[39m is listed by your project with version [38;5;111m4.26.0[39m ([38;5;111mp694e8[39m), which doesn't satisfy what [38;5;166m@rollup/[39m[38;5;173mpluginutils[39m (via [38;5;173mrollup-plugin-sourcemaps[39m) and other dependencies request ([91mbut they have non-overlapping ranges![39m).
[93m➤[39m YN0060: │ [38;5;173mrollup[39m is listed by your project with version [38;5;111m4.26.0[39m ([38;5;111mpbfde0[39m), which doesn't satisfy what [38;5;166m@rollup/[39m[38;5;173mpluginutils[39m (via [38;5;173mrollup-plugin-sourcemaps[39m) and other dependencies request ([91mbut they have non-overlapping ranges![39m).
[93m➤[39m YN0060: │ [38;5;173mrollup[39m is listed by your project with version [38;5;111m4.26.0[39m ([38;5;111mpdf3b2[39m), which doesn't satisfy what [38;5;166m@rollup/[39m[38;5;173mpluginutils[39m (via [38;5;173mrollup-plugin-sourcemaps[39m) and other dependencies request ([91mbut they have non-overlapping ranges![39m).
[93m➤[39m YN0002: │ [38;5;166m@grafana-plugins/[39m[38;5;173mgrafana-postgresql-datasource[39m[38;5;111m@[39m[38;5;111mworkspace:public/app/plugins/datasource/grafana-postgresql-datasource[39m doesn't provide [38;5;173mreact-dom[39m ([38;5;111mpdd2fa[39m), requested by [38;5;166m@grafana/[39m[38;5;173mplugin-ui[39m and other dependencies.
[93m➤[39m YN0002: │ [38;5;166m@grafana-plugins/[39m[38;5;173mmssql[39m[38;5;111m@[39m[38;5;111mworkspace:public/app/plugins/datasource/mssql[39m doesn't provide [38;5;173mreact-dom[39m ([38;5;111mpfb198[39m), requested by [38;5;166m@grafana/[39m[38;5;173mplugin-ui[39m and other dependencies.
[93m➤[39m YN0002: │ [38;5;166m@grafana-plugins/[39m[38;5;173mmysql[39m[38;5;111m@[39m[38;5;111mworkspace:public/app/plugins/datasource/mysql[39m doesn't provide [38;5;173mreact-dom[39m ([38;5;111mpab173[39m), requested by [38;5;166m@grafana/[39m[38;5;173mplugin-ui[39m and other dependencies.
[93m➤[39m YN0002: │ [38;5;166m@grafana/[39m[38;5;173meslint-plugin[39m[38;5;111m@[39m[38;5;111mworkspace:packages/grafana-eslint-rules[39m doesn't provide [38;5;173mtypescript[39m ([38;5;111mpd8d33[39m), requested by [38;5;166m@typescript-eslint/[39m[38;5;173mutils[39m.
[93m➤[39m YN0002: │ [38;5;166m@grafana/[39m[38;5;173mflamegraph[39m[38;5;111m@[39m[38;5;111mworkspace:packages/grafana-flamegraph[39m doesn't provide [38;5;173mreact-dom[39m ([38;5;111mp0bf7f[39m), requested by [38;5;166m@testing-library/[39m[38;5;173mreact[39m and other dependencies.
[93m➤[39m YN0002: │ [38;5;166m@grafana/[39m[38;5;173mo11y-ds-frontend[39m[38;5;111m@[39m[38;5;111mworkspace:packages/grafana-o11y-ds-frontend[39m doesn't provide [38;5;173mreact-dom[39m ([38;5;111mp13635[39m), requested by [38;5;166m@grafana/[39m[38;5;173mplugin-ui[39m and other dependencies.
[93m➤[39m YN0002: │ [38;5;166m@grafana/[39m[38;5;173mprometheus[39m[38;5;111m@[39m[38;5;111mworkspace:packages/grafana-prometheus [655a6][39m doesn't provide [38;5;166m@testing-library/[39m[38;5;173mdom[39m ([38;5;111mp9a3ab[39m), requested by [38;5;166m@testing-library/[39m[38;5;173mreact[39m and other dependencies.
[93m➤[39m YN0002: │ [38;5;166m@grafana/[39m[38;5;173mprometheus[39m[38;5;111m@[39m[38;5;111mworkspace:packages/grafana-prometheus[39m doesn't provide [38;5;166m@testing-library/[39m[38;5;173mdom[39m ([38;5;111mpe123d[39m), requested by [38;5;166m@testing-library/[39m[38;5;173mreact[39m and other dependencies.
[93m➤[39m YN0002: │ [38;5;173mgrafana[39m[38;5;111m@[39m[38;5;111mworkspace:.[39m doesn't provide [38;5;173mjspdf[39m ([38;5;111mp91d71[39m), requested by [38;5;166m@siedlerchr/[39m[38;5;173mtypes-ol-ext[39m.
[93m➤[39m YN0086: │ Some peer dependencies are incorrectly met by your project; run [38;5;111myarn explain peer-requirements <hash>[39m for details, where [38;5;111m<hash>[39m is the six-letter p-prefixed code.
[93m➤[39m YN0086: │ Some peer dependencies are incorrectly met by dependencies; run [38;5;111myarn explain peer-requirements[39m for details.
[93m➤[39m YN0068: │ [38;5;173mrc-trigger[39m ➤ [38;5;111mpeerDependencies[39m ➤ [38;5;173mreact[39m: No matching package in the dependency tree; you may not need this rule anymore.
[93m➤[39m YN0068: │ [38;5;173mrc-trigger[39m ➤ [38;5;111mpeerDependencies[39m ➤ [38;5;173mreact-dom[39m: No matching package in the dependency tree; you may not need this rule anymore.
##[endgroup]
[94m➤[39m [90mYN0000[39m: └ Completed
[94m➤[39m [90mYN0000[39m: ┌ Fetch step
##[group]Fetch step
[94m➤[39m YN0013: │ [38;5;220m8[39m packages were added to the project, and [38;5;220m17[39m were removed ([38;5;70m- 1.63 MiB[39m).
##[endgroup]
[94m➤[39m [90mYN0000[39m: └ Completed in 20s 936ms
[94m➤[39m [90mYN0000[39m: ┌ Link step
##[group]Link step
[94m➤[39m YN0007: │ [38;5;173mcore-js[39m[38;5;111m@[39m[38;5;111mnpm:3.40.0[39m must be built because it never has been before or the last one failed
[94m➤[39m YN0007: │ [38;5;173mcypress[39m[38;5;111m@[39m[38;5;111mnpm:13.10.0[39m must be built because it never has been before or the last one failed
[94m➤[39m YN0007: │ [38;5;173mesbuild[39m[38;5;111m@[39m[38;5;111mnpm:0.25.0[39m must be built because it never has been before or the last one failed
[94m➤[39m YN0007: │ [38;5;166m@swc/[39m[38;5;173mcore[39m[38;5;111m@[39m[38;5;111mnpm:1.10.12 [492e0][39m must be built because it never has been before or the last one failed
[94m➤[39m YN0007: │ [38;5;173mmsw[39m[38;5;111m@[39m[38;5;111mnpm:2.7.0 [655a6][39m must be built because it never has been before or the last one failed
[94m➤[39m YN0007: │ [38;5;173mnx[39m[38;5;111m@[39m[38;5;111mnpm:20.7.1 [1fc7a][39m must be built because it never has been before or the last one failed
[94m➤[39m YN0007: │ [38;5;173mprotobufjs[39m[38;5;111m@[39m[38;5;111mnpm:7.3.2[39m must be built because it never has been before or the last one failed
[94m➤[39m YN0007: │ [38;5;173mcore-js-pure[39m[38;5;111m@[39m[38;5;111mnpm:3.30.2[39m must be built because it never has been before or the last one failed
[94m➤[39m YN0007: │ [38;5;166m@scarf/[39m[38;5;173mscarf[39m[38;5;111m@[39m[38;5;111mnpm:1.4.0[39m must be built because it never has been before or the last one failed
[94m➤[39m YN0007: │ [38;5;166m@swc/[39m[38;5;173mcore[39m[38;5;111m@[39m[38;5;111mnpm:1.11.4 [0b972][39m must be built because it never has been before or the last one failed
[94m➤[39m YN0007: │ [38;5;173mcore-js[39m[38;5;111m@[39m[38;5;111mnpm:2.6.12[39m must be built because it never has been before or the last one failed
[94m➤[39m YN0007: │ [38;5;173mtree-sitter[39m[38;5;111m@[39m[38;5;111mnpm:0.22.1[39m must be built because it never has been before or the last one failed
[94m➤[39m [90mYN0000[39m: │ [38;5;173mcypress[39m[38;5;111m@[39m[38;5;111mnpm:13.10.0[39m [31mSTDERR[39m (node:2741) [DEP0040] DeprecationWarning: The `punycode` module is deprecated. Please use a userland alternative instead.
[94m➤[39m [90mYN0000[39m: │ [38;5;173mcypress[39m[38;5;111m@[39m[38;5;111mnpm:13.10.0[39m [31mSTDERR[39m (Use `node --trace-deprecation ...` to show where the warning was created)
[94m➤[39m [90mYN0000[39m: │ [38;5;173mcypress[39m[38;5;111m@[39m[38;5;111mnpm:13.10.0[39m [32mSTDOUT[39m Installing Cypress (version: 13.10.0)
[94m➤[39m [90mYN0000[39m: │ [38;5;173mcypress[39m[38;5;111m@[39m[38;5;111mnpm:13.10.0[39m [32mSTDOUT[39m
[94m➤[39m [90mYN0000[39m: │ [38;5;173mcypress[39m[38;5;111m@[39m[38;5;111mnpm:13.10.0[39m [32mSTDOUT[39m [STARTED] Task without title.
[94m➤[39m [90mYN0000[39m: │ [38;5;173mcypress[39m[38;5;111m@[39m[38;5;111mnpm:13.10.0[39m [32mSTDOUT[39m [SUCCESS] Task without title.
[94m➤[39m [90mYN0000[39m: │ [38;5;173mcypress[39m[38;5;111m@[39m[38;5;111mnpm:13.10.0[39m [32mSTDOUT[39m [STARTED] Task without title.
[94m➤[39m [90mYN0000[39m: │ [38;5;173mcypress[39m[38;5;111m@[39m[38;5;111mnpm:13.10.0[39m [32mSTDOUT[39m [SUCCESS] Task without title.
[94m➤[39m [90mYN0000[39m: │ [38;5;173mcypress[39m[38;5;111m@[39m[38;5;111mnpm:13.10.0[39m [32mSTDOUT[39m [STARTED] Task without title.
[94m➤[39m [90mYN0000[39m: │ [38;5;173mcypress[39m[38;5;111m@[39m[38;5;111mnpm:13.10.0[39m [32mSTDOUT[39m [SUCCESS] Task without title.
[94m➤[39m [90mYN0000[39m: │ [38;5;173mcypress[39m[38;5;111m@[39m[38;5;111mnpm:13.10.0[39m [32mSTDOUT[39m
[94m➤[39m [90mYN0000[39m: │ [38;5;173mcypress[39m[38;5;111m@[39m[38;5;111mnpm:13.10.0[39m [32mSTDOUT[39m You can now open Cypress by running: node_modules/.bin/cypress open
[94m➤[39m [90mYN0000[39m: │ [38;5;173mcypress[39m[38;5;111m@[39m[38;5;111mnpm:13.10.0[39m [32mSTDOUT[39m
[94m➤[39m [90mYN0000[39m: │ [38;5;173mcypress[39m[38;5;111m@[39m[38;5;111mnpm:13.10.0[39m [32mSTDOUT[39m https://on.cypress.io/installing-cypress
[94m➤[39m [90mYN0000[39m: │ [38;5;173mcypress[39m[38;5;111m@[39m[38;5;111mnpm:13.10.0[39m [32mSTDOUT[39m
[94m➤[39m YN0007: │ [38;5;173mtree-sitter-json[39m[38;5;111m@[39m[38;5;111mnpm:0.24.8 [44844][39m must be built because it never has been before or the last one failed
[94m➤[39m YN0007: │ [38;5;166m@tree-sitter-grammars/[39m[38;5;173mtree-sitter-yaml[39m[38;5;111m@[39m[38;5;111mnpm:0.7.0 [bb3b7][39m must be built because it never has been before or the last one failed
##[endgroup]
[94m➤[39m [90mYN0000[39m: └ Completed in 57s 929ms
[93m➤[39m YN0000: · Done with warnings in 1m 33s
##[group]Run yarn run test:ci
[36;1myarn run test:ci[0m
0

TEST_MAX_WORKERS: 2
TEST_SHARD: 1
TEST_SHARD_TOTAL: 8
##[endgroup]
jest-haste-map: duplicate manual mock found: store.navIndex.mock
The following files share their name; please delete one of them:
* <rootDir>/public/app/features/connections/__mocks__/store.navIndex.mock.ts
* <rootDir>/public/app/features/datasources/__mocks__/store.navIndex.mock.ts
2025-04-15T08:32:28.7942646Z
jest-haste-map: duplicate manual mock found: index
The following files share their name; please delete one of them:
* <rootDir>/public/app/features/datasources/__mocks__/index.ts
* <rootDir>/public/app/features/plugins/admin/__mocks__/index.ts
2025-04-15T08:32:28.8049201Z
jest-haste-map: duplicate manual mock found: datasource
The following files share their name; please delete one of them:
* <rootDir>/public/app/plugins/datasource/azuremonitor/__mocks__/datasource.ts
* <rootDir>/public/app/plugins/datasource/influxdb/__mocks__/datasource.ts
2025-04-15T08:32:28.8059441Z
jest-haste-map: duplicate manual mock found: query
The following files share their name; please delete one of them:
* <rootDir>/public/app/plugins/datasource/azuremonitor/__mocks__/query.ts
* <rootDir>/public/app/plugins/datasource/influxdb/__mocks__/query.ts
2025-04-15T08:32:28.8063421Z
jest-haste-map: duplicate manual mock found: datasource
The following files share their name; please delete one of them:
* <rootDir>/public/app/plugins/datasource/influxdb/__mocks__/datasource.ts
* <rootDir>/public/app/plugins/datasource/loki/__mocks__/datasource.ts
2025-04-15T08:32:28.8066850Z
jest-haste-map: duplicate manual mock found: datasource
The following files share their name; please delete one of them:
* <rootDir>/public/app/plugins/datasource/loki/__mocks__/datasource.ts
* <rootDir>/packages/grafana-prometheus/src/test/__mocks__/datasource.ts
2025-04-15T08:32:28.8070473Z
FAIL public/app/features/variables/inspect/utils.test.ts
● Test suite failed to run
2025-04-15T08:32:45.4949610Z
Jest encountered an unexpected token
2025-04-15T08:32:45.4950201Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:32:45.4952486Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:32:45.4954064Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:32:45.4954874Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:32:45.4963790Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:32:45.4966660Z
Details:
2025-04-15T08:32:45.4967019Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:32:45.4968734Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:32:45.4969318Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:32:45.4977199Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:32:45.5003627Z
FAIL public/app/features/explore/state/query.test.ts
● Test suite failed to run
2025-04-15T08:32:45.5056060Z
Jest encountered an unexpected token
2025-04-15T08:32:45.5056617Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:32:45.5057998Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:32:45.5058867Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:32:45.5059304Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:32:45.5064151Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:32:45.5065714Z
Details:
2025-04-15T08:32:45.5065915Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:32:45.5066957Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:32:45.5067292Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:32:45.5071281Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:32:45.5085492Z
(node:2947) [DEP0040] DeprecationWarning: The `punycode` module is deprecated. Please use a userland alternative instead.
(Use `node --trace-deprecation ...` to show where the warning was created)
(node:2946) [DEP0040] DeprecationWarning: The `punycode` module is deprecated. Please use a userland alternative instead.
(Use `node --trace-deprecation ...` to show where the warning was created)
FAIL public/app/features/variables/query/actions.test.tsx
● Test suite failed to run
2025-04-15T08:32:46.5636397Z
Jest encountered an unexpected token
2025-04-15T08:32:46.5636825Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:32:46.5638294Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:32:46.5639342Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:32:46.5639880Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:32:46.5645680Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:32:46.5647243Z
Details:
2025-04-15T08:32:46.5647436Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:32:46.5648365Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:32:46.5648699Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:32:46.5652869Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:32:46.5666620Z
FAIL public/app/plugins/datasource/loki/modifyQuery.test.ts
● Test suite failed to run
2025-04-15T08:32:46.8116320Z
Jest encountered an unexpected token
2025-04-15T08:32:46.8116647Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:32:46.8117836Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:32:46.8118699Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:32:46.8119135Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:32:46.8123857Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:32:46.8125428Z
Details:
2025-04-15T08:32:46.8125619Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:32:46.8126541Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:32:46.8126857Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:32:46.8130732Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:32:46.8144597Z
FAIL public/app/core/specs/backend_srv.test.ts
● Test suite failed to run
2025-04-15T08:32:47.5604985Z
Jest encountered an unexpected token
2025-04-15T08:32:47.5605553Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:32:47.5607554Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:32:47.5609073Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:32:47.5609885Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:32:47.5617904Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:32:47.5621393Z
Details:
2025-04-15T08:32:47.5621776Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:32:47.5623464Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:32:47.5624032Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:32:47.5631338Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:32:47.5656507Z
FAIL public/app/features/dashboard-scene/serialization/sceneVariablesSetToVariables.test.ts
● Test suite failed to run
2025-04-15T08:32:47.5759095Z
Jest encountered an unexpected token
2025-04-15T08:32:47.5760006Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:32:47.5762384Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:32:47.5763920Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:32:47.5764733Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:32:47.5773396Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:32:47.5776297Z
Details:
2025-04-15T08:32:47.5776662Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:32:47.5778689Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:32:47.5779295Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:32:47.5786943Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:32:47.5812686Z
PASS packages/grafana-prometheus/src/querycache/QueryCache.test.ts
FAIL public/app/plugins/datasource/loki/LogContextProvider.test.ts
● Test suite failed to run
2025-04-15T08:32:48.4211012Z
Jest encountered an unexpected token
2025-04-15T08:32:48.4211431Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:32:48.4213319Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:32:48.4214359Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:32:48.4214905Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:32:48.4219943Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:32:48.4221656Z
Details:
2025-04-15T08:32:48.4221852Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:32:48.4222791Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:32:48.4223116Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:32:48.4227122Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:32:48.4241166Z
FAIL public/app/features/variables/state/sharedReducer.test.ts
● Test suite failed to run
2025-04-15T08:32:49.2557384Z
Jest encountered an unexpected token
2025-04-15T08:32:49.2557721Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:32:49.2558874Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:32:49.2559742Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:32:49.2560857Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:32:49.2565213Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:32:49.2566799Z
Details:
2025-04-15T08:32:49.2566991Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:32:49.2567916Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:32:49.2568231Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:32:49.2572345Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:32:49.2586772Z
PASS public/app/plugins/datasource/influxdb/influx_query_model.test.ts
FAIL public/app/features/plugins/admin/pages/Browse.test.tsx
● Test suite failed to run
2025-04-15T08:32:50.3452369Z
Jest encountered an unexpected token
2025-04-15T08:32:50.3452779Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:32:50.3454217Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:32:50.3455162Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:32:50.3455595Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:32:50.3460428Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:32:50.3461985Z
Details:
2025-04-15T08:32:50.3462181Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:32:50.3463091Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:32:50.3463413Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:32:50.3467310Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:32:50.3481187Z
FAIL public/app/features/dashboard/state/PanelModel.test.ts
● Test suite failed to run
2025-04-15T08:32:51.1150634Z
Jest encountered an unexpected token
2025-04-15T08:32:51.1151162Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:32:51.1152714Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:32:51.1153556Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:32:51.1153996Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:32:51.1158657Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:32:51.1160198Z
Details:
2025-04-15T08:32:51.1160686Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:32:51.1161619Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:32:51.1161942Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:32:51.1165899Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:32:51.1179653Z
FAIL public/app/features/alerting/unified/components/notification-policies/Policy.test.tsx
● Test suite failed to run
2025-04-15T08:32:51.8957199Z
Jest encountered an unexpected token
2025-04-15T08:32:51.8957608Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:32:51.8959250Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:32:51.8960518Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:32:51.8961071Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:32:51.8966237Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:32:51.8967764Z
Details:
2025-04-15T08:32:51.8967952Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:32:51.8968867Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:32:51.8969187Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:32:51.8973137Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:32:51.8987057Z
PASS public/app/features/alerting/unified/utils/notification-policies.test.ts
PASS public/app/plugins/datasource/cloudwatch/language/cloudwatch-logs-sql/completion/CompletionItemProvider.test.ts
FAIL public/app/features/query/state/DashboardQueryRunner/DashboardQueryRunner.test.ts
● Test suite failed to run
2025-04-15T08:32:54.4739746Z
Jest encountered an unexpected token
2025-04-15T08:32:54.4740075Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:32:54.4741457Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:32:54.4742317Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:32:54.4742752Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:32:54.4747019Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:32:54.4749139Z
Details:
2025-04-15T08:32:54.4749332Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:32:54.4750379Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:32:54.4750700Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:32:54.4754524Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:32:54.4769019Z
PASS packages/grafana-data/src/transformations/transformers/convertFieldType.test.ts
FAIL public/app/features/dashboard/components/ShareModal/SharePublicDashboard/SharePublicDashboard.test.tsx
● Test suite failed to run
2025-04-15T08:32:55.5113296Z
Jest encountered an unexpected token
2025-04-15T08:32:55.5113634Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:32:55.5114792Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:32:55.5115653Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:32:55.5116119Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:32:55.5121426Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:32:55.5124089Z
Details:
2025-04-15T08:32:55.5135369Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:32:55.5136425Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:32:55.5136765Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:32:55.5140902Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:32:55.5155011Z
FAIL public/app/features/datasources/state/actions.test.ts
● Test suite failed to run
2025-04-15T08:32:56.2699562Z
Jest encountered an unexpected token
2025-04-15T08:32:56.2699900Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:32:56.2701245Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:32:56.2702074Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:32:56.2702508Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:32:56.2706812Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:32:56.2708360Z
Details:
2025-04-15T08:32:56.2708552Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:32:56.2709819Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:32:56.2710138Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:32:56.2714078Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:32:56.2727829Z
PASS public/app/features/variables/query/queryRunners.test.ts
FAIL public/app/features/dashboard-scene/settings/variables/utils.test.ts
● Test suite failed to run
2025-04-15T08:32:57.5018664Z
Jest encountered an unexpected token
2025-04-15T08:32:57.5019003Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:32:57.5020699Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:32:57.5021544Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:32:57.5021983Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:32:57.5026320Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:32:57.5027875Z
Details:
2025-04-15T08:32:57.5028068Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:32:57.5029198Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:32:57.5029535Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:32:57.5033438Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:32:57.5047350Z
FAIL public/app/features/datasources/components/picker/DataSourcePicker.test.tsx
● Test suite failed to run
2025-04-15T08:32:58.1671877Z
Jest encountered an unexpected token
2025-04-15T08:32:58.1672212Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:32:58.1673702Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:32:58.1674568Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:32:58.1675003Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:32:58.1679289Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:32:58.1681058Z
Details:
2025-04-15T08:32:58.1681252Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:32:58.1682185Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:32:58.1682501Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:32:58.1686474Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:32:58.1700392Z
PASS packages/grafana-ui/src/components/Input/AutoSizeInput.test.tsx
FAIL public/app/features/dashboard/components/GenAI/GenAIButton.test.tsx
● Test suite failed to run
2025-04-15T08:32:59.5929330Z
Jest encountered an unexpected token
2025-04-15T08:32:59.5929665Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:32:59.5931059Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:32:59.5931923Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:32:59.5932364Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:32:59.5936970Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:32:59.5938536Z
Details:
2025-04-15T08:32:59.5938727Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:32:59.5939647Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:32:59.5939973Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:32:59.5944085Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:32:59.5957806Z
FAIL public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.test.tsx
● Test suite failed to run
2025-04-15T08:33:00.2730986Z
Jest encountered an unexpected token
2025-04-15T08:33:00.2731321Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:33:00.2732483Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:33:00.2733321Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:33:00.2733763Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:33:00.2738417Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:33:00.2739961Z
Details:
2025-04-15T08:33:00.2740164Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:33:00.2741311Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:33:00.2741634Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:33:00.2745575Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:33:00.2759424Z
PASS public/app/plugins/datasource/cloudwatch/query-runner/CloudWatchLogsQueryRunner.test.ts (12.627 s)
FAIL public/app/features/alerting/unified/components/rule-editor/AnnotationsStep.test.tsx
● Test suite failed to run
2025-04-15T08:33:01.0842285Z
Jest encountered an unexpected token
2025-04-15T08:33:01.0842626Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:33:01.0843779Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:33:01.0844626Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:33:01.0845070Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:33:01.0849762Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:33:01.0851595Z
Details:
2025-04-15T08:33:01.0851794Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:33:01.0852740Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:33:01.0853064Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:33:01.0857099Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:33:01.0872154Z
PASS packages/grafana-ui/src/components/Select/SelectBase.test.tsx
PASS public/app/plugins/datasource/azuremonitor/components/ResourcePicker/utils.test.ts
PASS packages/grafana-data/src/panel/getPanelOptionsWithDefaults.test.ts
PASS public/app/features/explore/TraceView/components/utils/DraggableManager/DraggableManager.test.ts
FAIL public/app/features/dashboard-scene/panel-edit/PanelDataPane/PanelDataAlertingTab.test.tsx
● Test suite failed to run
2025-04-15T08:33:04.6631551Z
Jest encountered an unexpected token
2025-04-15T08:33:04.6632145Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:33:04.6634236Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:33:04.6635770Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:33:04.6636557Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:33:04.6645280Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:33:04.6648052Z
Details:
2025-04-15T08:33:04.6648403Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:33:04.6650048Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:33:04.6650820Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:33:04.6658194Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:33:04.6683899Z
PASS public/app/plugins/datasource/tempo/language_provider.test.ts
PASS packages/grafana-prometheus/src/querybuilder/components/PromQueryBuilder.test.tsx (5.415 s)
FAIL public/app/features/logs/components/panel/LogListControls.test.tsx
● Test suite failed to run
2025-04-15T08:33:07.3454247Z
Jest encountered an unexpected token
2025-04-15T08:33:07.3454812Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:33:07.3456306Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:33:07.3457169Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:33:07.3457614Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:33:07.3462699Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:33:07.3464270Z
Details:
2025-04-15T08:33:07.3464484Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:33:07.3465431Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:33:07.3465752Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:33:07.3469696Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:33:07.3483585Z
PASS public/app/core/utils/explore.test.ts
PASS public/app/plugins/panel/table/table-new/migrations.test.ts
PASS public/app/plugins/datasource/cloudwatch/language/cloudwatch-ppl/completion/PPLCompletionItemProvider.test.ts
PASS public/app/features/transformers/timeSeriesTable/timeSeriesTableTransformer.test.ts
PASS public/app/plugins/datasource/cloudwatch/components/shared/MetricStatEditor/MetricStatEditor.test.tsx (9.31 s)
FAIL public/app/core/history/RichHistoryLocalStorage.test.ts
● Test suite failed to run
2025-04-15T08:33:15.4338642Z
Jest encountered an unexpected token
2025-04-15T08:33:15.4339233Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:33:15.4341185Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:33:15.4342574Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:33:15.4343121Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:33:15.4348222Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:33:15.4349794Z
Details:
2025-04-15T08:33:15.4349996Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:33:15.4351130Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:33:15.4351452Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:33:15.4355451Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:33:15.4369288Z
FAIL public/app/features/dashboard/components/GenAI/jsonDiffText.test.ts
● Test suite failed to run
2025-04-15T08:33:16.1299648Z
Jest encountered an unexpected token
2025-04-15T08:33:16.1300143Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:33:16.1301549Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:33:16.1302402Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:33:16.1302854Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:33:16.1307575Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:33:16.1309115Z
Details:
2025-04-15T08:33:16.1309305Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:33:16.1310370Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:33:16.1310712Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:33:16.1314658Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:33:16.1328398Z
PASS packages/grafana-ui/src/graveyard/Graph/utils.test.ts
PASS public/app/features/auth-config/ProviderConfigForm.test.tsx (7.627 s)
PASS packages/grafana-runtime/src/analytics/plugins/usePluginInteractionReporter.test.tsx
FAIL public/app/features/alerting/unified/hooks/ruleGroup/useMoveRuleFromRuleGroup.test.tsx
● Test suite failed to run
2025-04-15T08:33:17.1750503Z
Jest encountered an unexpected token
2025-04-15T08:33:17.1751117Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:33:17.1753037Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:33:17.1754559Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:33:17.1755360Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:33:17.1764222Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:33:17.1767019Z
Details:
2025-04-15T08:33:17.1767358Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:33:17.1768643Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:33:17.1769094Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:33:17.1774613Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:33:17.1798726Z
FAIL public/app/features/dashboard/containers/DashboardPageProxy.test.tsx
● Test suite failed to run
2025-04-15T08:33:17.5211909Z
Jest encountered an unexpected token
2025-04-15T08:33:17.5212477Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:33:17.5214526Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:33:17.5215980Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:33:17.5216711Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:33:17.5225193Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:33:17.5227994Z
Details:
2025-04-15T08:33:17.5228319Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:33:17.5229994Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:33:17.5230722Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:33:17.5237574Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:33:17.5263018Z
PASS public/app/features/alerting/unified/search/rulesSearchParser.test.ts
PASS packages/grafana-data/src/utils/location.test.ts
PASS packages/grafana-flamegraph/src/FlameGraph/dataTransform.test.ts
FAIL public/app/features/alerting/unified/components/receivers/form/GrafanaReceiverForm.test.tsx
● Test suite failed to run
2025-04-15T08:33:18.3339834Z
Jest encountered an unexpected token
2025-04-15T08:33:18.3340654Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:33:18.3342640Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:33:18.3344153Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:33:18.3344913Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:33:18.3353216Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:33:18.3356101Z
Details:
2025-04-15T08:33:18.3356441Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:33:18.3358091Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:33:18.3358665Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:33:18.3365862Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:33:18.3391085Z
PASS public/app/plugins/datasource/cloudwatch/language/cloudwatch-sql/completion/statementPosition.test.ts
PASS public/app/features/expressions/components/hysteresis.test.ts
FAIL public/app/features/alerting/unified/hooks/useExternalAMSelector.test.tsx
● Test suite failed to run
2025-04-15T08:33:19.3861925Z
Jest encountered an unexpected token
2025-04-15T08:33:19.3862490Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:33:19.3864004Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:33:19.3864872Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:33:19.3865321Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:33:19.3869690Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:33:19.3871944Z
Details:
2025-04-15T08:33:19.3872138Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:33:19.3873071Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:33:19.3873387Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:33:19.3877211Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:33:19.3891469Z
FAIL public/app/features/dashboard-scene/panel-edit/PanelDataPane/PanelDataTransformationsTab.test.tsx
● Test suite failed to run
2025-04-15T08:33:19.6217972Z
Jest encountered an unexpected token
2025-04-15T08:33:19.6218536Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:33:19.6219841Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:33:19.6220958Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:33:19.6221437Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:33:19.6225771Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:33:19.6227633Z
Details:
2025-04-15T08:33:19.6227831Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:33:19.6228768Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:33:19.6229084Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:33:19.6233186Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:33:19.6246975Z
FAIL public/app/features/dashboard/components/ShareModal/ShareLink.test.tsx
● Test suite failed to run
2025-04-15T08:33:20.3208224Z
Jest encountered an unexpected token
2025-04-15T08:33:20.3208820Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:33:20.3211031Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:33:20.3212473Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:33:20.3213196Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:33:20.3221211Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:33:20.3224005Z
Details:
2025-04-15T08:33:20.3224323Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:33:20.3226229Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:33:20.3226814Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:33:20.3233876Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:33:20.3258765Z
PASS packages/grafana-ui/src/components/ConfirmModal/ConfirmModal.test.tsx
FAIL public/app/features/explore/TraceView/components/TraceTimelineViewer/SpanBarRow.test.tsx
● Test suite failed to run
2025-04-15T08:33:21.3346837Z
Jest encountered an unexpected token
2025-04-15T08:33:21.3347221Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:33:21.3348966Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:33:21.3349826Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:33:21.3350446Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:33:21.3354781Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:33:21.3356330Z
Details:
2025-04-15T08:33:21.3356534Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:33:21.3357641Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:33:21.3357978Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:33:21.3361914Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:33:21.3375777Z
FAIL public/app/features/dashboard-scene/scene/LibraryPanelBehavior.test.tsx
● Test suite failed to run
2025-04-15T08:33:22.0016951Z
Jest encountered an unexpected token
2025-04-15T08:33:22.0017283Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:33:22.0018845Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:33:22.0020037Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:33:22.0020705Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:33:22.0025041Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:33:22.0026598Z
Details:
2025-04-15T08:33:22.0026796Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:33:22.0027730Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:33:22.0028058Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:33:22.0032236Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:33:22.0046101Z
FAIL public/app/plugins/datasource/loki/tracking.test.ts
● Test suite failed to run
2025-04-15T08:33:23.2123400Z
Jest encountered an unexpected token
2025-04-15T08:33:23.2123965Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:33:23.2125907Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:33:23.2127392Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:33:23.2128163Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:33:23.2136510Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:33:23.2139392Z
Details:
2025-04-15T08:33:23.2139731Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:33:23.2141603Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:33:23.2142169Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:33:23.2149520Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:33:23.2174543Z
PASS public/app/features/dimensions/editors/ThresholdsEditor/ThresholdsEditor.test.tsx
PASS public/app/features/migrate-to-cloud/onprem/ConfigureSnapshot.test.tsx
FAIL public/app/features/explore/Logs/LogsSamplePanel.test.tsx
● Test suite failed to run
2025-04-15T08:33:24.7839522Z
Jest encountered an unexpected token
2025-04-15T08:33:24.7840057Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:33:24.7842313Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:33:24.7843778Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:33:24.7844510Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:33:24.7852930Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:33:24.7855810Z
Details:
2025-04-15T08:33:24.7856175Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:33:24.7857873Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:33:24.7858460Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:33:24.7866227Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:33:24.7892264Z
FAIL public/app/features/alerting/unified/rule-list/DataSourceGroupLoader.test.tsx
● Test suite failed to run
2025-04-15T08:33:25.6694014Z
Jest encountered an unexpected token
2025-04-15T08:33:25.6694352Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:33:25.6695760Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:33:25.6696620Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:33:25.6697060Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:33:25.6702124Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:33:25.6703713Z
Details:
2025-04-15T08:33:25.6703906Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:33:25.6704876Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:33:25.6705215Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:33:25.6709026Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:33:25.6723451Z
PASS public/app/features/explore/TraceView/components/model/ddg/PathElem.test.ts
FAIL public/app/features/alerting/unified/rule-editor/RuleEditorCloudOnlyAllowed.test.tsx
● Test suite failed to run
2025-04-15T08:33:26.9594228Z
Jest encountered an unexpected token
2025-04-15T08:33:26.9594665Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:33:26.9596160Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:33:26.9597240Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:33:26.9597792Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:33:26.9603402Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:33:26.9604965Z
Details:
2025-04-15T08:33:26.9605158Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:33:26.9606101Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:33:26.9606418Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:33:26.9610219Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:33:26.9624317Z
PASS public/app/core/utils/richHistory.test.ts
PASS public/app/features/alerting/unified/utils/timeRange.test.ts
PASS public/app/plugins/datasource/azuremonitor/azure_resource_graph/azure_resource_graph_datasource.test.ts (5.967 s)
PASS public/app/plugins/datasource/azuremonitor/components/LogsQueryBuilder/AzureMonitorKustoQueryBuilder.test.ts
FAIL public/app/features/dashboard-scene/panel-edit/PanelOptions.test.tsx
● Test suite failed to run
2025-04-15T08:33:30.1775969Z
Jest encountered an unexpected token
2025-04-15T08:33:30.1776305Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:33:30.1777508Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:33:30.1778335Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:33:30.1778768Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:33:30.1783562Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:33:30.1785134Z
Details:
2025-04-15T08:33:30.1785333Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:33:30.1786255Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:33:30.1786596Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:33:30.1790556Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:33:30.1804502Z
FAIL public/app/features/dashboard-scene/settings/annotations/AnnotationSettingsEdit.test.tsx
● Test suite failed to run
2025-04-15T08:33:31.0185809Z
Jest encountered an unexpected token
2025-04-15T08:33:31.0186143Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:33:31.0187302Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:33:31.0188182Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:33:31.0188638Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:33:31.0193571Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:33:31.0195158Z
Details:
2025-04-15T08:33:31.0195352Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:33:31.0196275Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:33:31.0196604Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:33:31.0200647Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:33:31.0214907Z
PASS public/app/features/transformers/lookupGazetteer/fieldLookup.test.ts
PASS public/app/plugins/datasource/cloudwatch/migrations/dashboardMigrations.test.ts
PASS public/app/features/profile/state/reducers.test.ts
PASS packages/grafana-flamegraph/src/FlameGraph/rendering.test.ts
FAIL public/app/features/explore/TraceView/components/TracePageHeader/SearchBar/NextPrevResult.test.tsx
● Test suite failed to run
2025-04-15T08:33:35.8506735Z
Jest encountered an unexpected token
2025-04-15T08:33:35.8507073Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:33:35.8508270Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:33:35.8509125Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:33:35.8509569Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:33:35.8514114Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:33:35.8516001Z
Details:
2025-04-15T08:33:35.8516195Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:33:35.8517122Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:33:35.8517449Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:33:35.8521428Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:33:35.8546505Z
FAIL public/app/features/dashboard-scene/edit-pane/ElementSelection.test.ts
● Test suite failed to run
2025-04-15T08:33:36.6488984Z
Jest encountered an unexpected token
2025-04-15T08:33:36.6489327Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:33:36.6490674Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:33:36.6491510Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:33:36.6491982Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:33:36.6496343Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:33:36.6498249Z
Details:
2025-04-15T08:33:36.6498446Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:33:36.6499384Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:33:36.6499707Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:33:36.6503717Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:33:36.6517528Z
FAIL public/app/features/dashboard/containers/SoloPanelPage.test.tsx
● Test suite failed to run
2025-04-15T08:33:37.4521822Z
Jest encountered an unexpected token
2025-04-15T08:33:37.4522182Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:33:37.4523350Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:33:37.4524191Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:33:37.4524633Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:33:37.4528976Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:33:37.4530711Z
Details:
2025-04-15T08:33:37.4530909Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:33:37.4532063Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:33:37.4532405Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:33:37.4536219Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:33:37.4550016Z
FAIL public/app/features/dashboard-scene/scene/DashboardControls.test.tsx
● Test suite failed to run
2025-04-15T08:33:38.2416422Z
Jest encountered an unexpected token
2025-04-15T08:33:38.2416763Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:33:38.2417939Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:33:38.2419138Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:33:38.2419578Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:33:38.2424100Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:33:38.2425640Z
Details:
2025-04-15T08:33:38.2425833Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:33:38.2426768Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:33:38.2427097Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:33:38.2431260Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:33:38.2445180Z
FAIL public/app/features/alerting/unified/components/rule-editor/query-and-alert-condition/__snapshots__/areQueriesTransformableToSimpleCondition.test.ts
● Test suite failed to run
2025-04-15T08:33:39.0758649Z
Jest encountered an unexpected token
2025-04-15T08:33:39.0759071Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:33:39.0760514Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:33:39.0761748Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:33:39.0762208Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:33:39.0766624Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:33:39.0768235Z
Details:
2025-04-15T08:33:39.0768428Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:33:39.0769384Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:33:39.0769706Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:33:39.0773987Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:33:39.0787831Z
PASS public/app/plugins/datasource/loki/sortDataFrame.test.ts
PASS public/app/features/dashboard-scene/settings/variables/components/CustomVariableForm.test.tsx
PASS public/app/plugins/datasource/influxdb/components/editor/query/influxql/visual/TagsSection.test.tsx
PASS public/app/plugins/datasource/cloudwatch/components/VariableQueryEditor/MultiFilter.test.tsx
FAIL public/app/features/alerting/unified/hooks/ruleGroup/useDeleteRuleFromGroup.test.tsx
● Test suite failed to run
2025-04-15T08:33:42.9713775Z
Jest encountered an unexpected token
2025-04-15T08:33:42.9714120Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:33:42.9715293Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:33:42.9716458Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:33:42.9716894Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:33:42.9721563Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:33:42.9723159Z
Details:
2025-04-15T08:33:42.9723355Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:33:42.9724278Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:33:42.9724594Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:33:42.9728572Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:33:42.9742509Z
FAIL public/app/features/dashboard-scene/utils/dashboardSceneGraph.test.ts
● Test suite failed to run
2025-04-15T08:33:43.7861441Z
Jest encountered an unexpected token
2025-04-15T08:33:43.7862183Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:33:43.7864182Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:33:43.7865718Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:33:43.7867081Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:33:43.7874834Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:33:43.7878092Z
Details:
2025-04-15T08:33:43.7888324Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:33:43.7894137Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:33:43.7894656Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:33:43.7901332Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:33:43.7923920Z
PASS public/app/core/components/SharedPreferences/SharedPreferences.test.tsx (16.437 s)
FAIL public/app/features/variables/editor/getVariableQueryEditor.test.tsx
● Test suite failed to run
2025-04-15T08:33:45.2083341Z
Jest encountered an unexpected token
2025-04-15T08:33:45.2083693Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:33:45.2085026Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:33:45.2085876Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:33:45.2086319Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:33:45.2091355Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:33:45.2092928Z
Details:
2025-04-15T08:33:45.2093120Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:33:45.2094051Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:33:45.2094371Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:33:45.2098363Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:33:45.2112474Z
PASS public/app/plugins/datasource/cloud-monitoring/components/LabelFilter.test.tsx
PASS packages/grafana-flamegraph/src/FlameGraph/treeTransforms.test.ts
FAIL public/app/features/query/state/DashboardQueryRunner/LegacyAnnotationQueryRunner.test.ts
● Test suite failed to run
2025-04-15T08:33:46.0274658Z
Jest encountered an unexpected token
2025-04-15T08:33:46.0275266Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:33:46.0277409Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:33:46.0278314Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:33:46.0278779Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:33:46.0283779Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:33:46.0285353Z
Details:
2025-04-15T08:33:46.0285565Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:33:46.0286505Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:33:46.0286832Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:33:46.0290747Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:33:46.0304666Z
PASS public/app/plugins/datasource/loki/languageUtils.test.ts
FAIL public/app/features/dashboard-scene/inspect/HelpWizard/HelpWizard.test.tsx
● Test suite failed to run
2025-04-15T08:33:46.5833692Z
Jest encountered an unexpected token
2025-04-15T08:33:46.5834059Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:33:46.5835217Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:33:46.5836046Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:33:46.5836474Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:33:46.5841433Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:33:46.5842982Z
Details:
2025-04-15T08:33:46.5843172Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:33:46.5844097Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:33:46.5844416Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:33:46.5848175Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:33:46.5862390Z
PASS packages/grafana-ui/src/components/Card/Card.test.tsx
PASS public/app/plugins/datasource/azuremonitor/module.test.ts
FAIL public/app/features/dashboard/components/ShareModal/ShareEmbed.test.tsx
● Test suite failed to run
2025-04-15T08:33:47.8394930Z
Jest encountered an unexpected token
2025-04-15T08:33:47.8395530Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:33:47.8397656Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:33:47.8399196Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:33:47.8399988Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:33:47.8408883Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:33:47.8411947Z
Details:
2025-04-15T08:33:47.8412283Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:33:47.8413957Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:33:47.8414550Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:33:47.8422030Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:33:47.8448217Z
FAIL public/app/features/dashboard/components/SaveDashboard/forms/SaveDashboardAsForm.test.tsx
● Test suite failed to run
2025-04-15T08:33:48.2898503Z
Jest encountered an unexpected token
2025-04-15T08:33:48.2898930Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:33:48.2900571Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:33:48.2901653Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:33:48.2902219Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:33:48.2906504Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:33:48.2908909Z
Details:
2025-04-15T08:33:48.2909254Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:33:48.2911214Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:33:48.2911798Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:33:48.2918957Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:33:48.2937778Z
FAIL public/app/features/browse-dashboards/components/BrowseActions/MoveModal.test.tsx
● Test suite failed to run
2025-04-15T08:33:48.6806272Z
Jest encountered an unexpected token
2025-04-15T08:33:48.6806841Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:33:48.6808883Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:33:48.6810612Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:33:48.6811356Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:33:48.6819167Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:33:48.6822364Z
Details:
2025-04-15T08:33:48.6822695Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:33:48.6824341Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:33:48.6824906Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:33:48.6832142Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:33:48.6858045Z
PASS public/app/features/alerting/unified/reducers/alertmanager/notificationTemplates.test.ts
FAIL public/app/features/dashboard-scene/settings/variables/editors/IntervalVariableEditor.test.tsx
● Test suite failed to run
2025-04-15T08:33:49.1156508Z
Jest encountered an unexpected token
2025-04-15T08:33:49.1157170Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:33:49.1159074Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:33:49.1160664Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:33:49.1161388Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:33:49.1168640Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:33:49.1171357Z
Details:
2025-04-15T08:33:49.1171665Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:33:49.1173481Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:33:49.1174030Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:33:49.1198448Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:33:49.1221320Z
PASS packages/grafana-data/src/utils/arrayUtils.test.ts
PASS packages/grafana-ui/src/components/DateTimePickers/TimeRangeContext.test.tsx
PASS packages/grafana-data/src/utils/dataLinks.test.ts
PASS public/app/features/alerting/unified/components/contact-points/utils.test.ts
FAIL public/app/features/dashboard/utils/panel.test.ts
● Test suite failed to run
2025-04-15T08:33:50.4692286Z
Jest encountered an unexpected token
2025-04-15T08:33:50.4693254Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:33:50.4694465Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:33:50.4695300Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:33:50.4695734Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:33:50.4700094Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:33:50.4701920Z
Details:
2025-04-15T08:33:50.4702337Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:33:50.4703299Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:33:50.4703623Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:33:50.4707442Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:33:50.4721715Z
FAIL public/app/plugins/datasource/loki/LokiVariableSupport.test.ts
● Test suite failed to run
2025-04-15T08:33:50.4771740Z
Jest encountered an unexpected token
2025-04-15T08:33:50.4772067Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:33:50.4773528Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:33:50.4774590Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:33:50.4775136Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:33:50.4780738Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:33:50.4782689Z
Details:
2025-04-15T08:33:50.4782938Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:33:50.4783873Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:33:50.4784195Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:33:50.4788149Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:33:50.4802284Z
PASS packages/grafana-ui/src/components/Gauge/utils.test.ts
PASS public/app/features/transformers/joinByLabels/joinByLabels.test.ts
PASS public/app/features/alerting/unified/utils/query.test.ts
PASS public/app/features/plugins/admin/components/GetStartedWithPlugin/GetStartedWithApp.test.tsx
PASS public/app/features/teams/state/reducers.test.ts
PASS packages/grafana-ui/src/components/MatchersUI/FieldsByFrameRefIdMatcher.test.tsx
FAIL public/app/core/components/AppChrome/OrganizationSwitcher/OrganizationSwitcher.test.tsx
● Test suite failed to run
2025-04-15T08:33:52.2939154Z
Jest encountered an unexpected token
2025-04-15T08:33:52.2939872Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:33:52.2941265Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:33:52.2942123Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:33:52.2942563Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:33:52.2946943Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:33:52.2948514Z
Details:
2025-04-15T08:33:52.2948896Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:33:52.2949843Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:33:52.2950164Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:33:52.2954103Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:33:52.2967885Z
FAIL public/app/features/explore/RichHistory/RichHistoryStarredTab.test.tsx
● Test suite failed to run
2025-04-15T08:33:52.6509173Z
Jest encountered an unexpected token
2025-04-15T08:33:52.6509519Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:33:52.6511505Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:33:52.6512375Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:33:52.6512819Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:33:52.6517216Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:33:52.6518806Z
Details:
2025-04-15T08:33:52.6519003Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:33:52.6519937Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:33:52.6520482Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:33:52.6524832Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:33:52.6538896Z
FAIL public/app/features/dashboard-scene/scene/DashboardLinksControls.test.tsx
● Test suite failed to run
2025-04-15T08:33:53.1008209Z
Jest encountered an unexpected token
2025-04-15T08:33:53.1008780Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:33:53.1010989Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:33:53.1012455Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:33:53.1013626Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:33:53.1021669Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:33:53.1024479Z
Details:
2025-04-15T08:33:53.1024802Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:33:53.1026416Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:33:53.1026983Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:33:53.1034363Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:33:53.1059152Z
FAIL public/app/features/migrate-to-cloud/onprem/EmptyState/CallToAction/CallToAction.test.tsx
● Test suite failed to run
2025-04-15T08:33:53.3660478Z
Jest encountered an unexpected token
2025-04-15T08:33:53.3661080Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:33:53.3663218Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:33:53.3664765Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:33:53.3665554Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:33:53.3674238Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:33:53.3677124Z
Details:
2025-04-15T08:33:53.3677475Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:33:53.3679139Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:33:53.3679698Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:33:53.3687061Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:33:53.3702143Z
FAIL public/app/features/plugins/admin/components/PluginDetailsBody.test.tsx
● Test suite failed to run
2025-04-15T08:33:54.0564764Z
Jest encountered an unexpected token
2025-04-15T08:33:54.0565401Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:33:54.0567509Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:33:54.0569122Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:33:54.0569929Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:33:54.0578907Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:33:54.0581962Z
Details:
2025-04-15T08:33:54.0582310Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:33:54.0583999Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:33:54.0584562Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:33:54.0592085Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:33:54.0617764Z
FAIL public/app/features/variables/textbox/adapter.test.ts
● Test suite failed to run
2025-04-15T08:33:54.1769010Z
Jest encountered an unexpected token
2025-04-15T08:33:54.1769355Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:33:54.1770787Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:33:54.1771677Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:33:54.1772137Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:33:54.1776770Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:33:54.1778354Z
Details:
2025-04-15T08:33:54.1778550Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:33:54.1779474Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:33:54.1779791Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:33:54.1783807Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:33:54.1797835Z
FAIL public/app/features/dashboard/containers/PublicDashboardPageProxy.test.tsx
● Test suite failed to run
2025-04-15T08:33:54.7792818Z
Jest encountered an unexpected token
2025-04-15T08:33:54.7793151Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:33:54.7794309Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:33:54.7795130Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:33:54.7795567Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:33:54.7799875Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:33:54.7801785Z
Details:
2025-04-15T08:33:54.7802305Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:33:54.7803251Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:33:54.7803580Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:33:54.7807570Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:33:54.7821341Z
FAIL public/app/core/components/Page/Page.test.tsx
● Test suite failed to run
2025-04-15T08:33:54.8803334Z
Jest encountered an unexpected token
2025-04-15T08:33:54.8803706Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:33:54.8805194Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:33:54.8806040Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:33:54.8806477Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:33:54.8811308Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:33:54.8812853Z
Details:
2025-04-15T08:33:54.8813046Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:33:54.8813978Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:33:54.8814299Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:33:54.8818055Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:33:54.8832240Z
PASS public/app/features/variables/editor/selectors.test.ts
PASS public/app/plugins/datasource/influxdb/components/editor/config/ConfigEditor.test.tsx
PASS public/app/plugins/datasource/cloud-monitoring/components/VariableQueryEditor.test.tsx
PASS public/app/core/utils/browser.test.ts
PASS public/app/plugins/datasource/elasticsearch/hooks/useStatelessReducer.test.tsx
FAIL public/app/features/explore/extensions/AddToDashboard/index.test.tsx
● Test suite failed to run
2025-04-15T08:33:56.8401614Z
Jest encountered an unexpected token
2025-04-15T08:33:56.8402216Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:33:56.8404296Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:33:56.8405832Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:33:56.8406641Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:33:56.8415123Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:33:56.8417959Z
Details:
2025-04-15T08:33:56.8418335Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:33:56.8420765Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:33:56.8421364Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:33:56.8428681Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:33:56.8453984Z
PASS public/app/features/alerting/unified/components/rules/state-history/StateHistory.test.tsx
PASS public/app/features/geo/format/geojson.test.ts
FAIL public/app/features/explore/TraceView/components/CriticalPath/utils/findLastFinishingChildSpan.test.ts
● Test suite failed to run
2025-04-15T08:33:57.5616457Z
Jest encountered an unexpected token
2025-04-15T08:33:57.5617472Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:33:57.5619457Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:33:57.5621131Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:33:57.5621909Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:33:57.5630095Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:33:57.5633100Z
Details:
2025-04-15T08:33:57.5633435Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:33:57.5635072Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:33:57.5635630Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:33:57.5642673Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:33:57.5667824Z
PASS public/app/features/explore/TraceView/components/utils/sort.test.ts
FAIL public/app/features/explore/state/time.test.ts
● Test suite failed to run
2025-04-15T08:33:58.3907615Z
Jest encountered an unexpected token
2025-04-15T08:33:58.3908937Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:33:58.3940774Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:33:58.4023273Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:33:58.4023978Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:33:58.4031637Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:33:58.4034816Z
Details:
2025-04-15T08:33:58.4048790Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:33:58.4049827Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:33:58.4050520Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:33:58.4057886Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:33:58.4075295Z
PASS public/app/plugins/datasource/tempo/VariableQueryEditor.test.tsx
PASS scripts/tests/generate-transformations.test.ts
FAIL public/app/features/explore/spec/query.test.tsx
● Test suite failed to run
2025-04-15T08:33:59.2530992Z
Jest encountered an unexpected token
2025-04-15T08:33:59.2531557Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:33:59.2533618Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:33:59.2535492Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:33:59.2536227Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:33:59.2544605Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:33:59.2547410Z
Details:
2025-04-15T08:33:59.2547743Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:33:59.2549362Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:33:59.2549933Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:33:59.2557028Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:33:59.2582367Z
FAIL public/app/features/variables/constant/actions.test.ts
● Test suite failed to run
2025-04-15T08:33:59.3452435Z
Jest encountered an unexpected token
2025-04-15T08:33:59.3453024Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:33:59.3455122Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:33:59.3456650Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:33:59.3457498Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:33:59.3465950Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:33:59.3468875Z
Details:
2025-04-15T08:33:59.3469226Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:33:59.3471171Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:33:59.3471758Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:33:59.3479663Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:33:59.3505761Z
PASS public/app/features/geo/gazetteer/gazetteer.test.ts
PASS public/app/features/teams/TeamGroupSync.test.tsx
PASS public/app/plugins/datasource/zipkin/utils/graphTransform.test.ts
PASS packages/grafana-ui/src/components/RefreshPicker/RefreshPicker.test.tsx
PASS packages/grafana-ui/src/components/DateTimePickers/TimeRangePicker/TimePickerCalendar.test.tsx
FAIL public/app/features/explore/extensions/getExploreExtensionConfigs.test.tsx
● Test suite failed to run
2025-04-15T08:34:01.6886497Z
Jest encountered an unexpected token
2025-04-15T08:34:01.6886840Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:34:01.6888009Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:34:01.6888889Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:34:01.6889690Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:34:01.6894564Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:34:01.6896124Z
Details:
2025-04-15T08:34:01.6896317Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:34:01.6897246Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:34:01.6897573Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:34:01.6901536Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:34:01.6915552Z
PASS public/app/plugins/datasource/cloud-monitoring/components/GroupBy.test.tsx
FAIL public/app/features/annotations/executeAnnotationQuery.test.ts
● Test suite failed to run
2025-04-15T08:34:02.3927190Z
Jest encountered an unexpected token
2025-04-15T08:34:02.3927704Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:34:02.3929569Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:34:02.3931238Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:34:02.3932007Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:34:02.3939247Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:34:02.3941990Z
Details:
2025-04-15T08:34:02.3942296Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:34:02.3943779Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:34:02.3944276Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:34:02.3955104Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:34:02.3978176Z
FAIL public/app/core/navigation/GrafanaRoute.test.tsx
● Test suite failed to run
2025-04-15T08:34:02.7621078Z
Jest encountered an unexpected token
2025-04-15T08:34:02.7621667Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:34:02.7623655Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:34:02.7625110Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:34:02.7625872Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:34:02.7634320Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:34:02.7637108Z
Details:
2025-04-15T08:34:02.7637441Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:34:02.7639366Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:34:02.7639924Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:34:02.7646974Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:34:02.7671955Z
PASS public/app/features/explore/TraceView/components/TraceTimelineViewer/ListView/index.test.tsx
PASS packages/grafana-data/src/transformations/transformers/filterByRefId.test.ts
FAIL public/app/plugins/datasource/loki/querybuilder/components/LokiQueryCodeEditor.test.tsx
● Test suite failed to run
2025-04-15T08:34:03.2479021Z
Jest encountered an unexpected token
2025-04-15T08:34:03.2479907Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:34:03.2481815Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:34:03.2482778Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:34:03.2483224Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:34:03.2488101Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:34:03.2489653Z
Details:
2025-04-15T08:34:03.2489847Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:34:03.2491089Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:34:03.2491430Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:34:03.2495273Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:34:03.2511027Z
PASS public/app/features/api-keys/state/reducers.test.ts
PASS packages/grafana-prometheus/src/querybuilder/parsingUtils.test.ts
FAIL public/app/features/dashboard-scene/scene/ViewPanelScene.test.tsx
● Test suite failed to run
2025-04-15T08:34:04.1339801Z
Jest encountered an unexpected token
2025-04-15T08:34:04.1340590Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:34:04.1342601Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:34:04.1344083Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:34:04.1344801Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:34:04.1353211Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:34:04.1355999Z
Details:
2025-04-15T08:34:04.1356335Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:34:04.1358221Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:34:04.1358777Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:34:04.1365873Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:34:04.1391028Z
PASS packages/grafana-prometheus/src/configuration/AlertingSettingsOverhaul.test.tsx
PASS packages/grafana-flamegraph/src/FlameGraph/testHelpers.test.ts
FAIL public/app/features/dashboard-scene/sharing/ShareButton/ShareButton.test.tsx
● Test suite failed to run
2025-04-15T08:34:04.9314016Z
Jest encountered an unexpected token
2025-04-15T08:34:04.9314448Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:34:04.9316736Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:34:04.9317817Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:34:04.9318382Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:34:04.9324081Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:34:04.9325736Z
Details:
2025-04-15T08:34:04.9325935Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:34:04.9326869Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:34:04.9327198Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:34:04.9331147Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:34:04.9347729Z
PASS public/app/features/dashboard/api/legacy.test.ts
PASS public/app/plugins/datasource/tempo/variables.test.ts
PASS public/app/features/explore/TraceView/components/TraceTimelineViewer/TimelineHeaderRow/TimelineCollapser.test.tsx
FAIL public/app/features/logs/components/panel/LogListContext.test.tsx
● Test suite failed to run
2025-04-15T08:34:06.0539946Z
Jest encountered an unexpected token
2025-04-15T08:34:06.0540491Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:34:06.0541707Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:34:06.0542545Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:34:06.0542980Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:34:06.0547566Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:34:06.0549642Z
Details:
2025-04-15T08:34:06.0549927Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:34:06.0551601Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:34:06.0552350Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:34:06.0558619Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:34:06.0576964Z
FAIL public/app/plugins/datasource/loki/configuration/ConfigEditor.test.tsx
● Test suite failed to run
2025-04-15T08:34:06.5739170Z
Jest encountered an unexpected token
2025-04-15T08:34:06.5740474Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:34:06.5743315Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:34:06.5745081Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:34:06.5745812Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:34:06.5753073Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:34:06.5755540Z
Details:
2025-04-15T08:34:06.5755827Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:34:06.5757283Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:34:06.5757776Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:34:06.5764276Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:34:06.5787528Z
PASS public/app/features/explore/extensions/AddToDashboard/getAddToDashboardTitle.test.ts
PASS packages/grafana-ui/src/utils/validate.test.ts
PASS packages/grafana-data/src/transformations/transformers/filter.test.ts
FAIL public/app/features/dashboard-scene/sharing/ExportButton/ExportButton.test.tsx
● Test suite failed to run
2025-04-15T08:34:07.4462538Z
Jest encountered an unexpected token
2025-04-15T08:34:07.4462881Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:34:07.4464064Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:34:07.4464935Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:34:07.4465396Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:34:07.4469738Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:34:07.4471888Z
Details:
2025-04-15T08:34:07.4472084Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:34:07.4473027Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:34:07.4473346Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:34:07.4477288Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:34:07.4491211Z
FAIL public/app/core/history/remoteStorageConverter.test.ts
● Test suite failed to run
2025-04-15T08:34:07.8897028Z
Jest encountered an unexpected token
2025-04-15T08:34:07.8897364Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:34:07.8898727Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:34:07.8899571Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:34:07.8900006Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:34:07.8904782Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:34:07.8906372Z
Details:
2025-04-15T08:34:07.8906579Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:34:07.8907514Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:34:07.8907840Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:34:07.8911761Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:34:07.8926178Z
PASS packages/grafana-prometheus/src/components/PromExploreExtraField.test.tsx
PASS public/app/core/components/RolePickerDrawer/RolePickerDrawer.test.tsx
PASS packages/grafana-ui/src/components/DataSourceSettings/AlertingSettings.test.tsx
PASS public/app/features/correlations/components/Wizard/Wizard.test.tsx
PASS public/app/plugins/datasource/opentsdb/components/OpenTsdbQueryEditor.test.tsx
FAIL public/app/features/dashboard/components/HelpWizard/HelpWizard.test.tsx
● Test suite failed to run
2025-04-15T08:34:09.4726025Z
Jest encountered an unexpected token
2025-04-15T08:34:09.4726599Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:34:09.4728591Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:34:09.4730018Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:34:09.4731034Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:34:09.4738805Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:34:09.4742495Z
Details:
2025-04-15T08:34:09.4742826Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:34:09.4744429Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:34:09.4744970Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:34:09.4752419Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:34:09.4776942Z
PASS public/app/features/explore/TraceView/components/TraceTimelineViewer/SpanDetail/TextList.test.tsx
PASS public/app/features/geo/gazetteer/worldmap.test.ts
PASS packages/grafana-ui/src/components/List/AbstractList.test.tsx
PASS public/app/features/explore/PrometheusListView/RawListItem.test.tsx
PASS public/app/plugins/datasource/azuremonitor/utils/useLastError.test.ts
FAIL public/app/features/dashboard-scene/utils/PanelModelCompatibilityWrapper.test.ts
● Test suite failed to run
2025-04-15T08:34:10.9399619Z
Jest encountered an unexpected token
2025-04-15T08:34:10.9400594Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:34:10.9403073Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:34:10.9405476Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:34:10.9406443Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:34:10.9414695Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:34:10.9417550Z
Details:
2025-04-15T08:34:10.9417894Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:34:10.9419508Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:34:10.9420072Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:34:10.9427183Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:34:10.9452286Z
PASS public/app/plugins/datasource/azuremonitor/time_grain_converter.test.ts
PASS packages/grafana-ui/src/components/TagsInput/TagsInput.test.tsx
PASS packages/grafana-sql/src/ResponseParser.test.ts
PASS public/app/plugins/panel/news/atom.test.ts
PASS public/app/features/connections/components/ConnectionsRedirectNotice/ConnectionsRedirectNotice.test.tsx
PASS packages/grafana-ui/src/components/ColorPicker/NamedColorsPalette.test.tsx
PASS public/app/plugins/datasource/loki/querybuilder/state.test.ts
PASS public/app/features/explore/TraceView/useHoverIndentGuide.test.ts
PASS public/app/features/datasources/components/BasicSettings.test.tsx
PASS packages/grafana-data/src/themes/createSpacing.test.ts
PASS public/app/features/alerting/unified/api/util.test.ts
PASS public/app/features/geo/format/geohash.test.ts
PASS public/app/plugins/datasource/mysql/mySqlMetaQuery.test.ts
2025-04-15T08:34:14.1298753Z
Summary of all failing tests
FAIL public/app/features/variables/inspect/utils.test.ts
● Test suite failed to run
2025-04-15T08:34:14.1303478Z
Jest encountered an unexpected token
2025-04-15T08:34:14.1306215Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:34:14.1310500Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:34:14.1314133Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:34:14.1314992Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:34:14.1332626Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:34:14.1337467Z
Details:
2025-04-15T08:34:14.1337791Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:34:14.1341406Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:34:14.1342815Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:34:14.1360100Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:34:14.1432908Z
FAIL public/app/features/explore/state/query.test.ts
● Test suite failed to run
2025-04-15T08:34:14.1434440Z
Jest encountered an unexpected token
2025-04-15T08:34:14.1435017Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:34:14.1438689Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:34:14.1439939Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:34:14.1441044Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:34:14.1451046Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:34:14.1455083Z
Details:
2025-04-15T08:34:14.1455410Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:34:14.1457996Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:34:14.1458641Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:34:14.1470201Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:34:14.1498220Z
FAIL public/app/features/variables/query/actions.test.tsx
● Test suite failed to run
2025-04-15T08:34:14.1499557Z
Jest encountered an unexpected token
2025-04-15T08:34:14.1499972Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:34:14.1503279Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:34:14.1504720Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:34:14.1505171Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:34:14.1512805Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:34:14.1515513Z
Details:
2025-04-15T08:34:14.1515826Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:34:14.1517427Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:34:14.1517979Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:34:14.1525879Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:34:14.1549741Z
FAIL public/app/plugins/datasource/loki/modifyQuery.test.ts
● Test suite failed to run
2025-04-15T08:34:14.1551243Z
Jest encountered an unexpected token
2025-04-15T08:34:14.1551724Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:34:14.1555234Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:34:14.1556584Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:34:14.1557123Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:34:14.1563498Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:34:14.1565410Z
Details:
2025-04-15T08:34:14.1565602Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:34:14.1566926Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:34:14.1567456Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:34:14.1575623Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:34:14.1597635Z
FAIL public/app/core/specs/backend_srv.test.ts
● Test suite failed to run
2025-04-15T08:34:14.1598528Z
Jest encountered an unexpected token
2025-04-15T08:34:14.1598848Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:34:14.1601646Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:34:14.1602826Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:34:14.1603322Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:34:14.1610955Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:34:14.1612823Z
Details:
2025-04-15T08:34:14.1613344Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:34:14.1614890Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:34:14.1615331Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:34:14.1623858Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:34:14.1647594Z
FAIL public/app/features/dashboard-scene/serialization/sceneVariablesSetToVariables.test.ts
● Test suite failed to run
2025-04-15T08:34:14.1649653Z
Jest encountered an unexpected token
2025-04-15T08:34:14.1650144Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:34:14.1652911Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:34:14.1654360Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:34:14.1654864Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:34:14.1662314Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:34:14.1664887Z
Details:
2025-04-15T08:34:14.1665218Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:34:14.1666792Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:34:14.1667234Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:34:14.1676138Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:34:14.1698691Z
FAIL public/app/plugins/datasource/loki/LogContextProvider.test.ts
● Test suite failed to run
2025-04-15T08:34:14.1699815Z
Jest encountered an unexpected token
2025-04-15T08:34:14.1700130Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:34:14.1704385Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:34:14.1705831Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:34:14.1706326Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:34:14.1713741Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:34:14.1716374Z
Details:
2025-04-15T08:34:14.1716680Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:34:14.1717965Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:34:14.1718364Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:34:14.1725669Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:34:14.1749134Z
FAIL public/app/features/variables/state/sharedReducer.test.ts
● Test suite failed to run
2025-04-15T08:34:14.1750702Z
Jest encountered an unexpected token
2025-04-15T08:34:14.1751245Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:34:14.1753256Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:34:14.1754723Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:34:14.1755491Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:34:14.1763657Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:34:14.1766658Z
Details:
2025-04-15T08:34:14.1766970Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:34:14.1768560Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:34:14.1769100Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:34:14.1776142Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:34:14.1800951Z
FAIL public/app/features/plugins/admin/pages/Browse.test.tsx
● Test suite failed to run
2025-04-15T08:34:14.1802518Z
Jest encountered an unexpected token
2025-04-15T08:34:14.1803056Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:34:14.1805116Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:34:14.1806611Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:34:14.1807360Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:34:14.1815132Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:34:14.1817923Z
Details:
2025-04-15T08:34:14.1818255Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:34:14.1820116Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:34:14.1820829Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:34:14.1829449Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:34:14.1862401Z
FAIL public/app/features/dashboard/state/PanelModel.test.ts
● Test suite failed to run
2025-04-15T08:34:14.1863831Z
Jest encountered an unexpected token
2025-04-15T08:34:14.1864401Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:34:14.1868350Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:34:14.1870091Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:34:14.1871022Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:34:14.1880151Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:34:14.1883236Z
Details:
2025-04-15T08:34:14.1883566Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:34:14.1885554Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:34:14.1886127Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:34:14.1898714Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:34:14.1933579Z
FAIL public/app/features/alerting/unified/components/notification-policies/Policy.test.tsx
● Test suite failed to run
2025-04-15T08:34:14.1935918Z
Jest encountered an unexpected token
2025-04-15T08:34:14.1936484Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:34:14.1940667Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:34:14.1942378Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:34:14.1943142Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:34:14.1954442Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:34:14.1957357Z
Details:
2025-04-15T08:34:14.1957699Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:34:14.1959636Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:34:14.1960373Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:34:14.1971411Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:34:14.1998749Z
FAIL public/app/features/query/state/DashboardQueryRunner/DashboardQueryRunner.test.ts
● Test suite failed to run
2025-04-15T08:34:14.2000722Z
Jest encountered an unexpected token
2025-04-15T08:34:14.2001271Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:34:14.2003333Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:34:14.2004829Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:34:14.2005570Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:34:14.2025035Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:34:14.2027836Z
Details:
2025-04-15T08:34:14.2028162Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:34:14.2029812Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:34:14.2030494Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:34:14.2037760Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:34:14.2063259Z
FAIL public/app/features/dashboard/components/ShareModal/SharePublicDashboard/SharePublicDashboard.test.tsx
● Test suite failed to run
2025-04-15T08:34:14.2065547Z
Jest encountered an unexpected token
2025-04-15T08:34:14.2066099Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:34:14.2068191Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:34:14.2069683Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:34:14.2070590Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:34:14.2078685Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:34:14.2081585Z
Details:
2025-04-15T08:34:14.2081916Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:34:14.2083536Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:34:14.2084069Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:34:14.2091196Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:34:14.2117995Z
FAIL public/app/features/datasources/state/actions.test.ts
● Test suite failed to run
2025-04-15T08:34:14.2119399Z
Jest encountered an unexpected token
2025-04-15T08:34:14.2119979Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:34:14.2123893Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:34:14.2125463Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:34:14.2126255Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:34:14.2135402Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:34:14.2138444Z
Details:
2025-04-15T08:34:14.2138769Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:34:14.2140569Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:34:14.2141159Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:34:14.2152245Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:34:14.2181667Z
FAIL public/app/features/dashboard-scene/settings/variables/utils.test.ts
● Test suite failed to run
2025-04-15T08:34:14.2183540Z
Jest encountered an unexpected token
2025-04-15T08:34:14.2184093Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:34:14.2187553Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:34:14.2189086Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:34:14.2189867Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:34:14.2199152Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:34:14.2202309Z
Details:
2025-04-15T08:34:14.2202659Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:34:14.2204431Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:34:14.2205008Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:34:14.2215922Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:34:14.2245101Z
FAIL public/app/features/datasources/components/picker/DataSourcePicker.test.tsx
● Test suite failed to run
2025-04-15T08:34:14.2247086Z
Jest encountered an unexpected token
2025-04-15T08:34:14.2247646Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:34:14.2251219Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:34:14.2252752Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:34:14.2253530Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:34:14.2263713Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:34:14.2266701Z
Details:
2025-04-15T08:34:14.2267023Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:34:14.2269209Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:34:14.2269989Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:34:14.2281058Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:34:14.2314313Z
FAIL public/app/features/dashboard/components/GenAI/GenAIButton.test.tsx
● Test suite failed to run
2025-04-15T08:34:14.2315949Z
Jest encountered an unexpected token
2025-04-15T08:34:14.2316517Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:34:14.2320497Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:34:14.2322277Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:34:14.2323065Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:34:14.2331992Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:34:14.2334969Z
Details:
2025-04-15T08:34:14.2335163Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:34:14.2337088Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:34:14.2337679Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:34:14.2347686Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:34:14.2378484Z
FAIL public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.test.tsx
● Test suite failed to run
2025-04-15T08:34:14.2380504Z
Jest encountered an unexpected token
2025-04-15T08:34:14.2381243Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:34:14.2385601Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:34:14.2387252Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:34:14.2388261Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:34:14.2396908Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:34:14.2398907Z
Details:
2025-04-15T08:34:14.2399099Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:34:14.2400827Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:34:14.2401277Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:34:14.2410466Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:34:14.2432742Z
FAIL public/app/features/alerting/unified/components/rule-editor/AnnotationsStep.test.tsx
● Test suite failed to run
2025-04-15T08:34:14.2434251Z
Jest encountered an unexpected token
2025-04-15T08:34:14.2434573Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:34:14.2436722Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:34:14.2438173Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:34:14.2438845Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:34:14.2446494Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:34:14.2449111Z
Details:
2025-04-15T08:34:14.2449438Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:34:14.2450986Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:34:14.2451515Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:34:14.2459279Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:34:14.2481582Z
FAIL public/app/features/dashboard-scene/panel-edit/PanelDataPane/PanelDataAlertingTab.test.tsx
● Test suite failed to run
2025-04-15T08:34:14.2483370Z
Jest encountered an unexpected token
2025-04-15T08:34:14.2483690Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:34:14.2486257Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:34:14.2487684Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:34:14.2488287Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:34:14.2495998Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:34:14.2498660Z
Details:
2025-04-15T08:34:14.2498965Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:34:14.2500463Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:34:14.2501009Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:34:14.2508475Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:34:14.2531926Z
FAIL public/app/features/logs/components/panel/LogListControls.test.tsx
● Test suite failed to run
2025-04-15T08:34:14.2533352Z
Jest encountered an unexpected token
2025-04-15T08:34:14.2533669Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:34:14.2536395Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:34:14.2537858Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:34:14.2538562Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:34:14.2546257Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:34:14.2549154Z
Details:
2025-04-15T08:34:14.2549466Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:34:14.2551018Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:34:14.2551560Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:34:14.2559026Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:34:14.2581650Z
FAIL public/app/core/history/RichHistoryLocalStorage.test.ts
● Test suite failed to run
2025-04-15T08:34:14.2582964Z
Jest encountered an unexpected token
2025-04-15T08:34:14.2583283Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:34:14.2585377Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:34:14.2586846Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:34:14.2587420Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:34:14.2594983Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:34:14.2597846Z
Details:
2025-04-15T08:34:14.2598157Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:34:14.2599544Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:34:14.2600094Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:34:14.2607587Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:34:14.2629307Z
FAIL public/app/features/dashboard/components/GenAI/jsonDiffText.test.ts
● Test suite failed to run
2025-04-15T08:34:14.2630601Z
Jest encountered an unexpected token
2025-04-15T08:34:14.2631050Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:34:14.2634052Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:34:14.2635100Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:34:14.2635445Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:34:14.2643246Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:34:14.2645309Z
Details:
2025-04-15T08:34:14.2645399Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:34:14.2646866Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:34:14.2647364Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:34:14.2655146Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:34:14.2678575Z
FAIL public/app/features/alerting/unified/hooks/ruleGroup/useMoveRuleFromRuleGroup.test.tsx
● Test suite failed to run
2025-04-15T08:34:14.2680081Z
Jest encountered an unexpected token
2025-04-15T08:34:14.2680576Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:34:14.2683343Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:34:14.2684859Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:34:14.2685146Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:34:14.2692900Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:34:14.2694941Z
Details:
2025-04-15T08:34:14.2695039Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:34:14.2696574Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:34:14.2696924Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:34:14.2705400Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:34:14.2728357Z
FAIL public/app/features/dashboard/containers/DashboardPageProxy.test.tsx
● Test suite failed to run
2025-04-15T08:34:14.2729552Z
Jest encountered an unexpected token
2025-04-15T08:34:14.2729777Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:34:14.2733034Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:34:14.2734131Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:34:14.2734475Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:34:14.2742690Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:34:14.2745533Z
Details:
2025-04-15T08:34:14.2745694Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:34:14.2747329Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:34:14.2747937Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:34:14.2756472Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:34:14.2779278Z
FAIL public/app/features/alerting/unified/components/receivers/form/GrafanaReceiverForm.test.tsx
● Test suite failed to run
2025-04-15T08:34:14.2781027Z
Jest encountered an unexpected token
2025-04-15T08:34:14.2781263Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:34:14.2784359Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:34:14.2785468Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:34:14.2785804Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:34:14.2793928Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:34:14.2795539Z
Details:
2025-04-15T08:34:14.2795683Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:34:14.2797015Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:34:14.2797643Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:34:14.2806240Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:34:14.2828880Z
FAIL public/app/features/alerting/unified/hooks/useExternalAMSelector.test.tsx
● Test suite failed to run
2025-04-15T08:34:14.2830070Z
Jest encountered an unexpected token
2025-04-15T08:34:14.2830474Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:34:14.2833379Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:34:14.2834499Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:34:14.2835015Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:34:14.2842865Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:34:14.2844788Z
Details:
2025-04-15T08:34:14.2844939Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:34:14.2846271Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:34:14.2846840Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:34:14.2855246Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:34:14.2878842Z
FAIL public/app/features/dashboard-scene/panel-edit/PanelDataPane/PanelDataTransformationsTab.test.tsx
● Test suite failed to run
2025-04-15T08:34:14.2879920Z
Jest encountered an unexpected token
2025-04-15T08:34:14.2880148Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:34:14.2883001Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:34:14.2884051Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:34:14.2884409Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:34:14.2892541Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:34:14.2894224Z
Details:
2025-04-15T08:34:14.2894371Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:34:14.2895683Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:34:14.2896117Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:34:14.2904764Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:34:14.2928463Z
FAIL public/app/features/dashboard/components/ShareModal/ShareLink.test.tsx
● Test suite failed to run
2025-04-15T08:34:14.2929299Z
Jest encountered an unexpected token
2025-04-15T08:34:14.2929541Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:34:14.2930446Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:34:14.2931239Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:34:14.2931678Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:34:14.2939467Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:34:14.2941365Z
Details:
2025-04-15T08:34:14.2941713Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:34:14.2942841Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:34:14.2943280Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:34:14.2951206Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:34:14.2975795Z
FAIL public/app/features/explore/TraceView/components/TraceTimelineViewer/SpanBarRow.test.tsx
● Test suite failed to run
2025-04-15T08:34:14.2977224Z
Jest encountered an unexpected token
2025-04-15T08:34:14.2977756Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:34:14.2980839Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:34:14.2982185Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:34:14.2982651Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:34:14.2990556Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:34:14.2992719Z
Details:
2025-04-15T08:34:14.2992974Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:34:14.2994457Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:34:14.2995204Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:34:14.3003125Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:34:14.3026810Z
FAIL public/app/features/dashboard-scene/scene/LibraryPanelBehavior.test.tsx
● Test suite failed to run
2025-04-15T08:34:14.3028219Z
Jest encountered an unexpected token
2025-04-15T08:34:14.3028610Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:34:14.3031525Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:34:14.3032998Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:34:14.3033402Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:34:14.3040961Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:34:14.3043188Z
Details:
2025-04-15T08:34:14.3043279Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:34:14.3045038Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:34:14.3045462Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:34:14.3053763Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:34:14.3077274Z
FAIL public/app/plugins/datasource/loki/tracking.test.ts
● Test suite failed to run
2025-04-15T08:34:14.3078007Z
Jest encountered an unexpected token
2025-04-15T08:34:14.3078500Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:34:14.3081824Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:34:14.3083120Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:34:14.3083545Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:34:14.3091873Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:34:14.3093860Z
Details:
2025-04-15T08:34:14.3094013Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:34:14.3095703Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:34:14.3096108Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:34:14.3104649Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:34:14.3127808Z
FAIL public/app/features/explore/Logs/LogsSamplePanel.test.tsx
● Test suite failed to run
2025-04-15T08:34:14.3128624Z
Jest encountered an unexpected token
2025-04-15T08:34:14.3129102Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:34:14.3132205Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:34:14.3133365Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:34:14.3133698Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:34:14.3141827Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:34:14.3143489Z
Details:
2025-04-15T08:34:14.3143630Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:34:14.3145061Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:34:14.3145569Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:34:14.3153852Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:34:14.3176871Z
FAIL public/app/features/alerting/unified/rule-list/DataSourceGroupLoader.test.tsx
● Test suite failed to run
2025-04-15T08:34:14.3178059Z
Jest encountered an unexpected token
2025-04-15T08:34:14.3180543Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:34:14.3181576Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:34:14.3182791Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:34:14.3183246Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:34:14.3191605Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:34:14.3193374Z
Details:
2025-04-15T08:34:14.3193567Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:34:14.3195273Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:34:14.3195755Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:34:14.3204906Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:34:14.3227661Z
FAIL public/app/features/alerting/unified/rule-editor/RuleEditorCloudOnlyAllowed.test.tsx
● Test suite failed to run
2025-04-15T08:34:14.3229059Z
Jest encountered an unexpected token
2025-04-15T08:34:14.3229361Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:34:14.3232565Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:34:14.3233934Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:34:14.3234549Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:34:14.3243456Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:34:14.3246572Z
Details:
2025-04-15T08:34:14.3246743Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:34:14.3248286Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:34:14.3249323Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:34:14.3260657Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:34:14.3294673Z
FAIL public/app/features/dashboard-scene/panel-edit/PanelOptions.test.tsx
● Test suite failed to run
2025-04-15T08:34:14.3296075Z
Jest encountered an unexpected token
2025-04-15T08:34:14.3296935Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:34:14.3300748Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:34:14.3302721Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:34:14.3303221Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:34:14.3312963Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:34:14.3316321Z
Details:
2025-04-15T08:34:14.3316471Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:34:14.3318682Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:34:14.3319382Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:34:14.3330693Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:34:14.3364585Z
FAIL public/app/features/dashboard-scene/settings/annotations/AnnotationSettingsEdit.test.tsx
● Test suite failed to run
2025-04-15T08:34:14.3366784Z
Jest encountered an unexpected token
2025-04-15T08:34:14.3367050Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:34:14.3371081Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:34:14.3372963Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:34:14.3373483Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:34:14.3384675Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:34:14.3387595Z
Details:
2025-04-15T08:34:14.3387742Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:34:14.3389809Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:34:14.3390633Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:34:14.3401984Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:34:14.3435922Z
FAIL public/app/features/explore/TraceView/components/TracePageHeader/SearchBar/NextPrevResult.test.tsx
● Test suite failed to run
2025-04-15T08:34:14.3438247Z
Jest encountered an unexpected token
2025-04-15T08:34:14.3438495Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:34:14.3442282Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:34:14.3444287Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:34:14.3444972Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:34:14.3454614Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:34:14.3458004Z
Details:
2025-04-15T08:34:14.3458152Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:34:14.3460137Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:34:14.3461201Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:34:14.3472625Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:34:14.3507640Z
FAIL public/app/features/dashboard-scene/edit-pane/ElementSelection.test.ts
● Test suite failed to run
2025-04-15T08:34:14.3509075Z
Jest encountered an unexpected token
2025-04-15T08:34:14.3509722Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:34:14.3513647Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:34:14.3515443Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:34:14.3516082Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:34:14.3527259Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:34:14.3530173Z
Details:
2025-04-15T08:34:14.3530496Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:34:14.3532551Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:34:14.3533230Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:34:14.3544258Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:34:14.3579509Z
FAIL public/app/features/dashboard/containers/SoloPanelPage.test.tsx
● Test suite failed to run
2025-04-15T08:34:14.3581092Z
Jest encountered an unexpected token
2025-04-15T08:34:14.3581713Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:34:14.3585727Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:34:14.3587623Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:34:14.3588251Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:34:14.3598698Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:34:14.3601771Z
Details:
2025-04-15T08:34:14.3601915Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:34:14.3603945Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:34:14.3604798Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:34:14.3615109Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:34:14.3647351Z
FAIL public/app/features/dashboard-scene/scene/DashboardControls.test.tsx
● Test suite failed to run
2025-04-15T08:34:14.3648928Z
Jest encountered an unexpected token
2025-04-15T08:34:14.3649463Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:34:14.3651601Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:34:14.3653062Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:34:14.3653816Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:34:14.3661630Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:34:14.3664291Z
Details:
2025-04-15T08:34:14.3664603Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:34:14.3666178Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:34:14.3666717Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:34:14.3673518Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:34:14.3697921Z
FAIL public/app/features/alerting/unified/components/rule-editor/query-and-alert-condition/__snapshots__/areQueriesTransformableToSimpleCondition.test.ts
● Test suite failed to run
2025-04-15T08:34:14.3700970Z
Jest encountered an unexpected token
2025-04-15T08:34:14.3701508Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:34:14.3703511Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:34:14.3704953Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:34:14.3705700Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:34:14.3713303Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:34:14.3715946Z
Details:
2025-04-15T08:34:14.3716455Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:34:14.3718018Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:34:14.3718555Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:34:14.3725352Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:34:14.3749683Z
FAIL public/app/features/alerting/unified/hooks/ruleGroup/useDeleteRuleFromGroup.test.tsx
● Test suite failed to run
2025-04-15T08:34:14.3751630Z
Jest encountered an unexpected token
2025-04-15T08:34:14.3752377Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:34:14.3754375Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:34:14.3755834Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:34:14.3756567Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:34:14.3763800Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:34:14.3766351Z
Details:
2025-04-15T08:34:14.3766673Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:34:14.3768422Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:34:14.3768971Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:34:14.3775777Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:34:14.3800149Z
FAIL public/app/features/dashboard-scene/utils/dashboardSceneGraph.test.ts
● Test suite failed to run
2025-04-15T08:34:14.3801858Z
Jest encountered an unexpected token
2025-04-15T08:34:14.3802404Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:34:14.3804620Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:34:14.3806121Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:34:14.3806865Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:34:14.3814586Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:34:14.3817262Z
Details:
2025-04-15T08:34:14.3817577Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:34:14.3819148Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:34:14.3819691Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:34:14.3826787Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:34:14.3851659Z
FAIL public/app/features/variables/editor/getVariableQueryEditor.test.tsx
● Test suite failed to run
2025-04-15T08:34:14.3853232Z
Jest encountered an unexpected token
2025-04-15T08:34:14.3853761Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:34:14.3855774Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:34:14.3857241Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:34:14.3857992Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:34:14.3865906Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:34:14.3868598Z
Details:
2025-04-15T08:34:14.3868912Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:34:14.3870604Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:34:14.3871145Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:34:14.3878083Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:34:14.3902829Z
FAIL public/app/features/query/state/DashboardQueryRunner/LegacyAnnotationQueryRunner.test.ts
● Test suite failed to run
2025-04-15T08:34:14.3904760Z
Jest encountered an unexpected token
2025-04-15T08:34:14.3905297Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:34:14.3907311Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:34:14.3908792Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:34:14.3909552Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:34:14.3917412Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:34:14.3920079Z
Details:
2025-04-15T08:34:14.3920541Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:34:14.3922125Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:34:14.3922662Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:34:14.3929414Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:34:14.3954370Z
FAIL public/app/features/dashboard-scene/inspect/HelpWizard/HelpWizard.test.tsx
● Test suite failed to run
2025-04-15T08:34:14.3955996Z
Jest encountered an unexpected token
2025-04-15T08:34:14.3956525Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:34:14.3958559Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:34:14.3960030Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:34:14.3960902Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:34:14.3968660Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:34:14.3971485Z
Details:
2025-04-15T08:34:14.3971795Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:34:14.3973058Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:34:14.3973526Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:34:14.3980405Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:34:14.4016788Z
FAIL public/app/features/dashboard/components/ShareModal/ShareEmbed.test.tsx
● Test suite failed to run
2025-04-15T08:34:14.4018428Z
Jest encountered an unexpected token
2025-04-15T08:34:14.4018964Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:34:14.4021085Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:34:14.4022553Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:34:14.4023293Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:34:14.4031153Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:34:14.4033790Z
Details:
2025-04-15T08:34:14.4034105Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:34:14.4035642Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:34:14.4036179Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:34:14.4043013Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:34:14.4067461Z
FAIL public/app/features/dashboard/components/SaveDashboard/forms/SaveDashboardAsForm.test.tsx
● Test suite failed to run
2025-04-15T08:34:14.4069406Z
Jest encountered an unexpected token
2025-04-15T08:34:14.4069935Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:34:14.4072047Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:34:14.4073499Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:34:14.4074231Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:34:14.4081817Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:34:14.4084461Z
Details:
2025-04-15T08:34:14.4084771Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:34:14.4086513Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:34:14.4087051Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:34:14.4093902Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:34:14.4118264Z
FAIL public/app/features/browse-dashboards/components/BrowseActions/MoveModal.test.tsx
● Test suite failed to run
2025-04-15T08:34:14.4119988Z
Jest encountered an unexpected token
2025-04-15T08:34:14.4120646Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:34:14.4122838Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:34:14.4124282Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:34:14.4125013Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:34:14.4132630Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:34:14.4135266Z
Details:
2025-04-15T08:34:14.4135581Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:34:14.4137407Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:34:14.4137954Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:34:14.4144746Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:34:14.4168944Z
FAIL public/app/features/dashboard-scene/settings/variables/editors/IntervalVariableEditor.test.tsx
● Test suite failed to run
2025-04-15T08:34:14.4171014Z
Jest encountered an unexpected token
2025-04-15T08:34:14.4171541Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:34:14.4173718Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:34:14.4175174Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:34:14.4175899Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:34:14.4183017Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:34:14.4185359Z
Details:
2025-04-15T08:34:14.4185497Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:34:14.4186201Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:34:14.4186431Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:34:14.4190439Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:34:14.4202312Z
FAIL public/app/features/dashboard/utils/panel.test.ts
● Test suite failed to run
2025-04-15T08:34:14.4202921Z
Jest encountered an unexpected token
2025-04-15T08:34:14.4203149Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:34:14.4204156Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:34:14.4204875Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:34:14.4205217Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:34:14.4209399Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:34:14.4210720Z
Details:
2025-04-15T08:34:14.4210857Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:34:14.4211549Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:34:14.4211780Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:34:14.4215571Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:34:14.4227341Z
FAIL public/app/plugins/datasource/loki/LokiVariableSupport.test.ts
● Test suite failed to run
2025-04-15T08:34:14.4228064Z
Jest encountered an unexpected token
2025-04-15T08:34:14.4228294Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:34:14.4229310Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:34:14.4230027Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:34:14.4230533Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:34:14.4234721Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:34:14.4235879Z
Details:
2025-04-15T08:34:14.4236018Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:34:14.4236730Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:34:14.4236962Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:34:14.4240784Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:34:14.4252745Z
FAIL public/app/core/components/AppChrome/OrganizationSwitcher/OrganizationSwitcher.test.tsx
● Test suite failed to run
2025-04-15T08:34:14.4253696Z
Jest encountered an unexpected token
2025-04-15T08:34:14.4253916Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:34:14.4254936Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:34:14.4255677Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:34:14.4256013Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:34:14.4260162Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:34:14.4261490Z
Details:
2025-04-15T08:34:14.4261628Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:34:14.4262328Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:34:14.4262560Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:34:14.4270553Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:34:14.4291871Z
FAIL public/app/features/explore/RichHistory/RichHistoryStarredTab.test.tsx
● Test suite failed to run
2025-04-15T08:34:14.4292780Z
Jest encountered an unexpected token
2025-04-15T08:34:14.4293028Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:34:14.4296036Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:34:14.4297013Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:34:14.4297350Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:34:14.4304900Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:34:14.4306430Z
Details:
2025-04-15T08:34:14.4306529Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:34:14.4307789Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:34:14.4308158Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:34:14.4316801Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:34:14.4342774Z
FAIL public/app/features/dashboard-scene/scene/DashboardLinksControls.test.tsx
● Test suite failed to run
2025-04-15T08:34:14.4343974Z
Jest encountered an unexpected token
2025-04-15T08:34:14.4344276Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:34:14.4347754Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:34:14.4349088Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:34:14.4349626Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:34:14.4358513Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:34:14.4360720Z
Details:
2025-04-15T08:34:14.4360956Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:34:14.4362952Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:34:14.4363313Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:34:14.4372216Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:34:14.4397978Z
FAIL public/app/features/migrate-to-cloud/onprem/EmptyState/CallToAction/CallToAction.test.tsx
● Test suite failed to run
2025-04-15T08:34:14.4399799Z
Jest encountered an unexpected token
2025-04-15T08:34:14.4400043Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:34:14.4403511Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:34:14.4404728Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:34:14.4405197Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:34:14.4414912Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:34:14.4417055Z
Details:
2025-04-15T08:34:14.4418238Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:34:14.4418971Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:34:14.4419567Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:34:14.4428746Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:34:14.4454618Z
FAIL public/app/features/plugins/admin/components/PluginDetailsBody.test.tsx
● Test suite failed to run
2025-04-15T08:34:14.4455938Z
Jest encountered an unexpected token
2025-04-15T08:34:14.4456356Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:34:14.4459771Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:34:14.4461425Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:34:14.4461780Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:34:14.4470760Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:34:14.4472978Z
Details:
2025-04-15T08:34:14.4473149Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:34:14.4474825Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:34:14.4475219Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:34:14.4484259Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:34:14.4510070Z
FAIL public/app/features/variables/textbox/adapter.test.ts
● Test suite failed to run
2025-04-15T08:34:14.4511006Z
Jest encountered an unexpected token
2025-04-15T08:34:14.4511545Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:34:14.4515005Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:34:14.4516312Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:34:14.4516832Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:34:14.4525744Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:34:14.4527856Z
Details:
2025-04-15T08:34:14.4528034Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:34:14.4529785Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:34:14.4530489Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:34:14.4539903Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:34:14.4565418Z
FAIL public/app/features/dashboard/containers/PublicDashboardPageProxy.test.tsx
● Test suite failed to run
2025-04-15T08:34:14.4566738Z
Jest encountered an unexpected token
2025-04-15T08:34:14.4567026Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:34:14.4570482Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:34:14.4571816Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:34:14.4572300Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:34:14.4581280Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:34:14.4583410Z
Details:
2025-04-15T08:34:14.4583574Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:34:14.4585349Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:34:14.4585967Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:34:14.4595044Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:34:14.4620944Z
FAIL public/app/core/components/Page/Page.test.tsx
● Test suite failed to run
2025-04-15T08:34:14.4621523Z
Jest encountered an unexpected token
2025-04-15T08:34:14.4621864Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:34:14.4624784Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:34:14.4626076Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:34:14.4626413Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:34:14.4634255Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:34:14.4635734Z
Details:
2025-04-15T08:34:14.4635879Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:34:14.4637152Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:34:14.4637522Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:34:14.4645750Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:34:14.4668394Z
FAIL public/app/features/explore/extensions/AddToDashboard/index.test.tsx
● Test suite failed to run
2025-04-15T08:34:14.4669354Z
Jest encountered an unexpected token
2025-04-15T08:34:14.4669769Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:34:14.4672622Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:34:14.4674093Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:34:14.4674564Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:34:14.4682584Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:34:14.4684415Z
Details:
2025-04-15T08:34:14.4684540Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:34:14.4686236Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:34:14.4686723Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:34:14.4695104Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:34:14.4716641Z
FAIL public/app/features/explore/TraceView/components/CriticalPath/utils/findLastFinishingChildSpan.test.ts
● Test suite failed to run
2025-04-15T08:34:14.4718594Z
Jest encountered an unexpected token
2025-04-15T08:34:14.4718837Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:34:14.4721511Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:34:14.4722402Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:34:14.4722735Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:34:14.4730427Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:34:14.4731944Z
Details:
2025-04-15T08:34:14.4732085Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:34:14.4733586Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:34:14.4733886Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:34:14.4741658Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:34:14.4763577Z
FAIL public/app/features/explore/state/time.test.ts
● Test suite failed to run
2025-04-15T08:34:14.4764185Z
Jest encountered an unexpected token
2025-04-15T08:34:14.4764673Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:34:14.4768038Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:34:14.4769385Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:34:14.4769764Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:34:14.4777513Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:34:14.4779331Z
Details:
2025-04-15T08:34:14.4779584Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:34:14.4781179Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:34:14.4781754Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:34:14.4789568Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:34:14.4811725Z
FAIL public/app/features/explore/spec/query.test.tsx
● Test suite failed to run
2025-04-15T08:34:14.4812345Z
Jest encountered an unexpected token
2025-04-15T08:34:14.4812739Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:34:14.4815588Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:34:14.4816864Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:34:14.4817482Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:34:14.4824865Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:34:14.4826417Z
Details:
2025-04-15T08:34:14.4826561Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:34:14.4827852Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:34:14.4828432Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:34:14.4836535Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:34:14.4858833Z
FAIL public/app/features/variables/constant/actions.test.ts
● Test suite failed to run
2025-04-15T08:34:14.4859519Z
Jest encountered an unexpected token
2025-04-15T08:34:14.4859995Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:34:14.4863194Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:34:14.4864161Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:34:14.4864506Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:34:14.4871962Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:34:14.4873605Z
Details:
2025-04-15T08:34:14.4874720Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:34:14.4875736Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:34:14.4876191Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:34:14.4883983Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:34:14.4906322Z
FAIL public/app/features/explore/extensions/getExploreExtensionConfigs.test.tsx
● Test suite failed to run
2025-04-15T08:34:14.4907401Z
Jest encountered an unexpected token
2025-04-15T08:34:14.4907763Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:34:14.4910876Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:34:14.4912013Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:34:14.4912403Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:34:14.4920073Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:34:14.4921679Z
Details:
2025-04-15T08:34:14.4921823Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:34:14.4922975Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:34:14.4923529Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:34:14.4931343Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:34:14.4953732Z
FAIL public/app/features/annotations/executeAnnotationQuery.test.ts
● Test suite failed to run
2025-04-15T08:34:14.4954539Z
Jest encountered an unexpected token
2025-04-15T08:34:14.4954995Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:34:14.4957884Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:34:14.4959163Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:34:14.4959478Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:34:14.4967391Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:34:14.4968938Z
Details:
2025-04-15T08:34:14.4969090Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:34:14.4970692Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:34:14.4971036Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:34:14.4979494Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:34:14.5001351Z
FAIL public/app/core/navigation/GrafanaRoute.test.tsx
● Test suite failed to run
2025-04-15T08:34:14.5002327Z
Jest encountered an unexpected token
2025-04-15T08:34:14.5002598Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:34:14.5005967Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:34:14.5007054Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:34:14.5007484Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:34:14.5015173Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:34:14.5017434Z
Details:
2025-04-15T08:34:14.5017631Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:34:14.5019125Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:34:14.5019660Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:34:14.5028333Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:34:14.5050078Z
FAIL public/app/plugins/datasource/loki/querybuilder/components/LokiQueryCodeEditor.test.tsx
● Test suite failed to run
2025-04-15T08:34:14.5051879Z
Jest encountered an unexpected token
2025-04-15T08:34:14.5052125Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:34:14.5055352Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:34:14.5056408Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:34:14.5056834Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:34:14.5064649Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:34:14.5066664Z
Details:
2025-04-15T08:34:14.5066996Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:34:14.5068556Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:34:14.5078839Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:34:14.5081693Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:34:14.5098233Z
FAIL public/app/features/dashboard-scene/scene/ViewPanelScene.test.tsx
● Test suite failed to run
2025-04-15T08:34:14.5099132Z
Jest encountered an unexpected token
2025-04-15T08:34:14.5099698Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:34:14.5102910Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:34:14.5103886Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:34:14.5104454Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:34:14.5111975Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:34:14.5113331Z
Details:
2025-04-15T08:34:14.5113467Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:34:14.5114742Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:34:14.5115138Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:34:14.5123385Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:34:14.5144851Z
FAIL public/app/features/dashboard-scene/sharing/ShareButton/ShareButton.test.tsx
● Test suite failed to run
2025-04-15T08:34:14.5145839Z
Jest encountered an unexpected token
2025-04-15T08:34:14.5146070Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:34:14.5149085Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:34:14.5150027Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:34:14.5150514Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:34:14.5157925Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:34:14.5159423Z
Details:
2025-04-15T08:34:14.5159526Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:34:14.5161051Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:34:14.5161403Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:34:14.5169715Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:34:14.5190945Z
FAIL public/app/features/logs/components/panel/LogListContext.test.tsx
● Test suite failed to run
2025-04-15T08:34:14.5191874Z
Jest encountered an unexpected token
2025-04-15T08:34:14.5192110Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:34:14.5195415Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:34:14.5196151Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:34:14.5196480Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:34:14.5203873Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:34:14.5205621Z
Details:
2025-04-15T08:34:14.5205765Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:34:14.5207160Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:34:14.5207492Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:34:14.5215084Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:34:14.5237213Z
FAIL public/app/plugins/datasource/loki/configuration/ConfigEditor.test.tsx
● Test suite failed to run
2025-04-15T08:34:14.5238248Z
Jest encountered an unexpected token
2025-04-15T08:34:14.5238478Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:34:14.5241935Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:34:14.5242483Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:34:14.5242898Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:34:14.5250628Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:34:14.5251992Z
Details:
2025-04-15T08:34:14.5252084Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:34:14.5253490Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:34:14.5253822Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:34:14.5262171Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:34:14.5283803Z
FAIL public/app/features/dashboard-scene/sharing/ExportButton/ExportButton.test.tsx
● Test suite failed to run
2025-04-15T08:34:14.5284985Z
Jest encountered an unexpected token
2025-04-15T08:34:14.5285218Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:34:14.5288513Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:34:14.5289242Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:34:14.5289598Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:34:14.5297291Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:34:14.5298930Z
Details:
2025-04-15T08:34:14.5299035Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:34:14.5300209Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:34:14.5300705Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:34:14.5309856Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:34:14.5331346Z
FAIL public/app/core/history/remoteStorageConverter.test.ts
● Test suite failed to run
2025-04-15T08:34:14.5332081Z
Jest encountered an unexpected token
2025-04-15T08:34:14.5332576Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:34:14.5335246Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:34:14.5336530Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:34:14.5336815Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:34:14.5344753Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:34:14.5346302Z
Details:
2025-04-15T08:34:14.5346444Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:34:14.5347715Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:34:14.5348145Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:34:14.5356329Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:34:14.5380512Z
FAIL public/app/features/dashboard/components/HelpWizard/HelpWizard.test.tsx
● Test suite failed to run
2025-04-15T08:34:14.5381551Z
Jest encountered an unexpected token
2025-04-15T08:34:14.5382013Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:34:14.5385076Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:34:14.5386573Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:34:14.5386982Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:34:14.5395633Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:34:14.5397778Z
Details:
2025-04-15T08:34:14.5397981Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:34:14.5399307Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:34:14.5400158Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:34:14.5409047Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:34:14.5434890Z
FAIL public/app/features/dashboard-scene/utils/PanelModelCompatibilityWrapper.test.ts
● Test suite failed to run
2025-04-15T08:34:14.5436602Z
Jest encountered an unexpected token
2025-04-15T08:34:14.5436832Z
Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.
2025-04-15T08:34:14.5440353Z
Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.
2025-04-15T08:34:14.5441855Z
By default "node_modules" folder is ignored by transformers.
2025-04-15T08:34:14.5442208Z
Here's what you can do:
• If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
• If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
• To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
• If you need a custom transformation specify a "transform" option in your config.
• If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.
2025-04-15T08:34:14.5451235Z
You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation
2025-04-15T08:34:14.5453419Z
Details:
2025-04-15T08:34:14.5453603Z
/home/runner/work/grafana/grafana/node_modules/pbf/index.js:15
export default class Pbf {
^^^^^^
2025-04-15T08:34:14.5455283Z
SyntaxError: Unexpected token 'export'
2025-04-15T08:34:14.5455991Z
[0m [90m 1 |[39m [36mimport[39m { css } [36mfrom[39m [32m'@emotion/css'[39m[33m;[39m
[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { [33mWKT[39m } [36mfrom[39m [32m'ol/format'[39m[33m;[39m
[90m   |[39m [31m[1m^[22m[39m
[90m 3 |[39m [36mimport[39m { [33mGeometry[39m } [36mfrom[39m [32m'ol/geom'[39m[33m;[39m
[90m 4 |[39m [36mimport[39m { [33mReactNode[39m[33m,[39m useCallback[33m,[39m useLayoutEffect[33m,[39m useMemo[33m,[39m useRef[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m
[90m 5 |[39m[0m
2025-04-15T08:34:14.5464977Z
at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)
at Object.<anonymous> (node_modules/ol/format/MVT.js:6:1)
at Object.<anonymous> (node_modules/ol/format.js:12:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/Cells/TableCellNG.tsx:2:1)
at Object.<anonymous> (packages/grafana-ui/src/components/Table/TableNG/TableNG.tsx:31:1)
at Object.<anonymous> (packages/grafana-ui/src/unstable.ts:14:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx:9:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePickerPlugin.tsx:5:1)
at Object.<anonymous> (public/app/features/panel/components/VizTypePicker/VizTypePicker.tsx:10:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelVizTypePicker.tsx:15:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelOptionsPane.tsx:33:1)
at Object.<anonymous> (public/app/features/dashboard-scene/panel-edit/PanelEditor.tsx:37:1)
at Object.<anonymous> (public/app/features/dashboard/dashgrid/DashboardEmpty.tsx:14:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DefaultGridLayoutManager.tsx:22:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/SceneGridRowEditableElement.tsx:18:1)
at Object.<anonymous> (public/app/features/dashboard-scene/edit-pane/shared.ts:7:1)
at Object.<anonymous> (public/app/features/dashboard-scene/conditional-rendering/ConditionalRendering.tsx:5:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-rows/RowItem.tsx:20:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layouts-shared/scrollCanvasElementIntoView.ts:3:1)
at Object.<anonymous> (public/app/features/dashboard-scene/scene/layout-default/DashboardGridItem.tsx:24:1)
2025-04-15T08:34:14.5491011Z
2025-04-15T08:34:14.5491200Z
Test Suites: 78 failed, 111 passed, 189 total
Tests:       1 skipped, 981 passed, 982 total
Snapshots:   37 passed, 37 total
Time:        105.178 s
Ran all test suites.
##[error]Process completed with exit code 1.


2 49 0
Temporarily overriding HOME='/home/runner/work/_temp/366b7c33-33fa-411e-a2c1-bbef23f53ba1' before making global git config changes

[command]/usr/bin/git config --global --add safe.directory /home/runner/work/grafana/grafana
core\.sshCommand
'core\.sshCommand' 'core.sshCommand'
http\.https\:\/\/github\.com\/\.extraheader


'http\.https\:\/\/github\.com\/\.extraheader' 'http.https://github.com/.extraheader'

