2025-04-15T05:56:21.9643206Z ##[group]Run actions/checkout@v4
2025-04-15T05:56:21.9644124Z with:
2025-04-15T05:56:21.9644581Z   repository: prettier/prettier
2025-04-15T05:56:21.9645293Z   token: ***
2025-04-15T05:56:21.9645719Z   ssh-strict: true
2025-04-15T05:56:21.9646140Z   ssh-user: git
2025-04-15T05:56:21.9646580Z   persist-credentials: true
2025-04-15T05:56:21.9647070Z   clean: true
2025-04-15T05:56:21.9647836Z   sparse-checkout-cone-mode: true
2025-04-15T05:56:21.9648392Z   fetch-depth: 1
2025-04-15T05:56:21.9648813Z   fetch-tags: false
2025-04-15T05:56:21.9649249Z   show-progress: true
2025-04-15T05:56:21.9649700Z   lfs: false
2025-04-15T05:56:21.9650098Z   submodules: false
2025-04-15T05:56:21.9650542Z   set-safe-directory: true
2025-04-15T05:56:21.9651322Z ##[endgroup]
2025-04-15T05:56:22.1752546Z Syncing repository: prettier/prettier
2025-04-15T05:56:22.1754424Z ##[group]Getting Git version info
2025-04-15T05:56:22.1755197Z Working directory is '/home/runner/work/prettier/prettier'
2025-04-15T05:56:22.1756212Z [command]/usr/bin/git version
2025-04-15T05:56:22.1840522Z git version 2.49.0
2025-04-15T05:56:22.1871032Z ##[endgroup]
2025-04-15T05:56:22.1884363Z Temporarily overriding HOME='/home/runner/work/_temp/b7db3f57-75ba-4291-9033-0eefb28c8f7b' before making global git config changes
2025-04-15T05:56:22.1885881Z Adding repository directory to the temporary git global config as a safe directory
2025-04-15T05:56:22.1889313Z [command]/usr/bin/git config --global --add safe.directory /home/runner/work/prettier/prettier
2025-04-15T05:56:22.1923350Z Deleting the contents of '/home/runner/work/prettier/prettier'
2025-04-15T05:56:22.1927154Z ##[group]Initializing the repository
2025-04-15T05:56:22.1931138Z [command]/usr/bin/git init /home/runner/work/prettier/prettier
2025-04-15T05:56:22.2023942Z hint: Using 'master' as the name for the initial branch. This default branch name
2025-04-15T05:56:22.2025772Z hint: is subject to change. To configure the initial branch name to use in all
2025-04-15T05:56:22.2027235Z hint: of your new repositories, which will suppress this warning, call:
2025-04-15T05:56:22.2028872Z hint:
2025-04-15T05:56:22.2029788Z hint: 	git config --global init.defaultBranch <name>
2025-04-15T05:56:22.2030864Z hint:
2025-04-15T05:56:22.2031824Z hint: Names commonly chosen instead of 'master' are 'main', 'trunk' and
2025-04-15T05:56:22.2032846Z hint: 'development'. The just-created branch can be renamed via this command:
2025-04-15T05:56:22.2033625Z hint:
2025-04-15T05:56:22.2034043Z hint: 	git branch -m <name>
2025-04-15T05:56:22.2034823Z Initialized empty Git repository in /home/runner/work/prettier/prettier/.git/
2025-04-15T05:56:22.2041883Z [command]/usr/bin/git remote add origin https://github.com/prettier/prettier
2025-04-15T05:56:22.2073458Z ##[endgroup]
2025-04-15T05:56:22.2074262Z ##[group]Disabling automatic garbage collection
2025-04-15T05:56:22.2077325Z [command]/usr/bin/git config --local gc.auto 0
2025-04-15T05:56:22.2104736Z ##[endgroup]
2025-04-15T05:56:22.2105490Z ##[group]Setting up auth
2025-04-15T05:56:22.2111333Z [command]/usr/bin/git config --local --name-only --get-regexp core\.sshCommand
2025-04-15T05:56:22.2140931Z [command]/usr/bin/git submodule foreach --recursive sh -c "git config --local --name-only --get-regexp 'core\.sshCommand' && git config --local --unset-all 'core.sshCommand' || :"
2025-04-15T05:56:22.2478013Z [command]/usr/bin/git config --local --name-only --get-regexp http\.https\:\/\/github\.com\/\.extraheader
2025-04-15T05:56:22.2515130Z [command]/usr/bin/git submodule foreach --recursive sh -c "git config --local --name-only --get-regexp 'http\.https\:\/\/github\.com\/\.extraheader' && git config --local --unset-all 'http.https://github.com/.extraheader' || :"
2025-04-15T05:56:22.2735530Z [command]/usr/bin/git config --local http.https://github.com/.extraheader AUTHORIZATION: basic ***
2025-04-15T05:56:22.2772049Z ##[endgroup]
2025-04-15T05:56:22.2772880Z ##[group]Fetching the repository
2025-04-15T05:56:22.2782944Z [command]/usr/bin/git -c protocol.version=2 fetch --no-tags --prune --no-recurse-submodules --depth=1 origin +3c084eb538991a4a18e8f3788f0c4b13dcae6e39:refs/remotes/pull/17356/merge
2025-04-15T05:56:23.7371532Z From https://github.com/prettier/prettier
2025-04-15T05:56:23.7375851Z  * [new ref]         3c084eb538991a4a18e8f3788f0c4b13dcae6e39 -> pull/17356/merge
2025-04-15T05:56:23.7414249Z ##[endgroup]
2025-04-15T05:56:23.7416199Z ##[group]Determining the checkout info
2025-04-15T05:56:23.7418602Z ##[endgroup]
2025-04-15T05:56:23.7420886Z [command]/usr/bin/git sparse-checkout disable
2025-04-15T05:56:23.7459785Z [command]/usr/bin/git config --local --unset-all extensions.worktreeConfig
2025-04-15T05:56:23.7488079Z ##[group]Checking out the ref
2025-04-15T05:56:23.7490547Z [command]/usr/bin/git checkout --progress --force refs/remotes/pull/17356/merge
2025-04-15T05:56:24.1709714Z Note: switching to 'refs/remotes/pull/17356/merge'.
2025-04-15T05:56:24.1713772Z 
2025-04-15T05:56:24.1715010Z You are in 'detached HEAD' state. You can look around, make experimental
2025-04-15T05:56:24.1718419Z changes and commit them, and you can discard any commits you make in this
2025-04-15T05:56:24.1720908Z state without impacting any branches by switching back to a branch.
2025-04-15T05:56:24.1722197Z 
2025-04-15T05:56:24.1723023Z If you want to create a new branch to retain commits you create, you may
2025-04-15T05:56:24.1725802Z do so (now or later) by using -c with the switch command. Example:
2025-04-15T05:56:24.1726975Z 
2025-04-15T05:56:24.1727773Z   git switch -c <new-branch-name>
2025-04-15T05:56:24.1728642Z 
2025-04-15T05:56:24.1729164Z Or undo this operation with:
2025-04-15T05:56:24.1729913Z 
2025-04-15T05:56:24.1730380Z   git switch -
2025-04-15T05:56:24.1731106Z 
2025-04-15T05:56:24.1732235Z Turn off this advice by setting config variable advice.detachedHead to false
2025-04-15T05:56:24.1733629Z 
2025-04-15T05:56:24.1735588Z HEAD is now at 3c084eb Merge 49e1f9928175e1bf556bbbef9118d3d1f8b6df81 into 0549e3c562a73bfd62d75755354b6a25bb15d0b8
2025-04-15T05:56:24.1740446Z ##[endgroup]
2025-04-15T05:56:24.1770476Z [command]/usr/bin/git log -1 --format=%H
2025-04-15T05:56:24.1792340Z 3c084eb538991a4a18e8f3788f0c4b13dcae6e39
