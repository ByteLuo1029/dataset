2025-04-15T06:14:35.5559351Z ##[group]Run actions/checkout@v4
2025-04-15T06:14:35.5560303Z with:
2025-04-15T06:14:35.5561007Z   repository: prettier/prettier
2025-04-15T06:14:35.5561913Z   token: ***
2025-04-15T06:14:35.5562303Z   ssh-strict: true
2025-04-15T06:14:35.5562701Z   ssh-user: git
2025-04-15T06:14:35.5563112Z   persist-credentials: true
2025-04-15T06:14:35.5563710Z   clean: true
2025-04-15T06:14:35.5564151Z   sparse-checkout-cone-mode: true
2025-04-15T06:14:35.5564667Z   fetch-depth: 1
2025-04-15T06:14:35.5565072Z   fetch-tags: false
2025-04-15T06:14:35.5565500Z   show-progress: true
2025-04-15T06:14:35.5565908Z   lfs: false
2025-04-15T06:14:35.5566286Z   submodules: false
2025-04-15T06:14:35.5566711Z   set-safe-directory: true
2025-04-15T06:14:35.5567483Z ##[endgroup]
2025-04-15T06:14:35.8178181Z Syncing repository: prettier/prettier
2025-04-15T06:14:35.8179919Z ##[group]Getting Git version info
2025-04-15T06:14:35.8180627Z Working directory is '/home/runner/work/prettier/prettier'
2025-04-15T06:14:35.8181568Z [command]/usr/bin/git version
2025-04-15T06:14:35.8308675Z git version 2.49.0
2025-04-15T06:14:35.8338977Z ##[endgroup]
2025-04-15T06:14:35.8352470Z Temporarily overriding HOME='/home/runner/work/_temp/d9983560-ee81-482f-8ff3-405c24d1469a' before making global git config changes
2025-04-15T06:14:35.8354764Z Adding repository directory to the temporary git global config as a safe directory
2025-04-15T06:14:35.8357704Z [command]/usr/bin/git config --global --add safe.directory /home/runner/work/prettier/prettier
2025-04-15T06:14:35.8396931Z Deleting the contents of '/home/runner/work/prettier/prettier'
2025-04-15T06:14:35.8400844Z ##[group]Initializing the repository
2025-04-15T06:14:35.8404792Z [command]/usr/bin/git init /home/runner/work/prettier/prettier
2025-04-15T06:14:35.8511845Z hint: Using 'master' as the name for the initial branch. This default branch name
2025-04-15T06:14:35.8513226Z hint: is subject to change. To configure the initial branch name to use in all
2025-04-15T06:14:35.8514384Z hint: of your new repositories, which will suppress this warning, call:
2025-04-15T06:14:35.8515079Z hint:
2025-04-15T06:14:35.8515636Z hint: 	git config --global init.defaultBranch <name>
2025-04-15T06:14:35.8516500Z hint:
2025-04-15T06:14:35.8517055Z hint: Names commonly chosen instead of 'master' are 'main', 'trunk' and
2025-04-15T06:14:35.8517947Z hint: 'development'. The just-created branch can be renamed via this command:
2025-04-15T06:14:35.8518631Z hint:
2025-04-15T06:14:35.8519019Z hint: 	git branch -m <name>
2025-04-15T06:14:35.8523046Z Initialized empty Git repository in /home/runner/work/prettier/prettier/.git/
2025-04-15T06:14:35.8533766Z [command]/usr/bin/git remote add origin https://github.com/prettier/prettier
2025-04-15T06:14:35.8573536Z ##[endgroup]
2025-04-15T06:14:35.8574539Z ##[group]Disabling automatic garbage collection
2025-04-15T06:14:35.8577564Z [command]/usr/bin/git config --local gc.auto 0
2025-04-15T06:14:35.8605682Z ##[endgroup]
2025-04-15T06:14:35.8606366Z ##[group]Setting up auth
2025-04-15T06:14:35.8612524Z [command]/usr/bin/git config --local --name-only --get-regexp core\.sshCommand
2025-04-15T06:14:35.8644255Z [command]/usr/bin/git submodule foreach --recursive sh -c "git config --local --name-only --get-regexp 'core\.sshCommand' && git config --local --unset-all 'core.sshCommand' || :"
2025-04-15T06:14:35.9011912Z [command]/usr/bin/git config --local --name-only --get-regexp http\.https\:\/\/github\.com\/\.extraheader
2025-04-15T06:14:35.9042487Z [command]/usr/bin/git submodule foreach --recursive sh -c "git config --local --name-only --get-regexp 'http\.https\:\/\/github\.com\/\.extraheader' && git config --local --unset-all 'http.https://github.com/.extraheader' || :"
2025-04-15T06:14:35.9274455Z [command]/usr/bin/git config --local http.https://github.com/.extraheader AUTHORIZATION: basic ***
2025-04-15T06:14:35.9310785Z ##[endgroup]
2025-04-15T06:14:35.9311719Z ##[group]Fetching the repository
2025-04-15T06:14:35.9320703Z [command]/usr/bin/git -c protocol.version=2 fetch --no-tags --prune --no-recurse-submodules --depth=1 origin +518e021b9cbc1123023497fe92acbe5d745720cc:refs/remotes/pull/17358/merge
2025-04-15T06:14:37.0048780Z From https://github.com/prettier/prettier
2025-04-15T06:14:37.0049935Z  * [new ref]         518e021b9cbc1123023497fe92acbe5d745720cc -> pull/17358/merge
2025-04-15T06:14:37.0091353Z ##[endgroup]
2025-04-15T06:14:37.0092227Z ##[group]Determining the checkout info
2025-04-15T06:14:37.0094760Z ##[endgroup]
2025-04-15T06:14:37.0099703Z [command]/usr/bin/git sparse-checkout disable
2025-04-15T06:14:37.0147796Z [command]/usr/bin/git config --local --unset-all extensions.worktreeConfig
2025-04-15T06:14:37.0175311Z ##[group]Checking out the ref
2025-04-15T06:14:37.0179522Z [command]/usr/bin/git checkout --progress --force refs/remotes/pull/17358/merge
2025-04-15T06:14:37.4457592Z Note: switching to 'refs/remotes/pull/17358/merge'.
2025-04-15T06:14:37.4458287Z 
2025-04-15T06:14:37.4458670Z You are in 'detached HEAD' state. You can look around, make experimental
2025-04-15T06:14:37.4459653Z changes and commit them, and you can discard any commits you make in this
2025-04-15T06:14:37.4460485Z state without impacting any branches by switching back to a branch.
2025-04-15T06:14:37.4460985Z 
2025-04-15T06:14:37.4461354Z If you want to create a new branch to retain commits you create, you may
2025-04-15T06:14:37.4462144Z do so (now or later) by using -c with the switch command. Example:
2025-04-15T06:14:37.4462607Z 
2025-04-15T06:14:37.4462820Z   git switch -c <new-branch-name>
2025-04-15T06:14:37.4463171Z 
2025-04-15T06:14:37.4463457Z Or undo this operation with:
2025-04-15T06:14:37.4464005Z 
2025-04-15T06:14:37.4464192Z   git switch -
2025-04-15T06:14:37.4464516Z 
2025-04-15T06:14:37.4464959Z Turn off this advice by setting config variable advice.detachedHead to false
2025-04-15T06:14:37.4465489Z 
2025-04-15T06:14:37.4466379Z HEAD is now at 518e021 Merge 037b86ffd53c451bc5ca81873b2349858b98fcd2 into aa5b67791d6046274d461c400d5bf2bf796c74c9
2025-04-15T06:14:37.4507662Z ##[endgroup]
2025-04-15T06:14:37.4511322Z [command]/usr/bin/git log -1 --format=%H
2025-04-15T06:14:37.4533449Z 518e021b9cbc1123023497fe92acbe5d745720cc
