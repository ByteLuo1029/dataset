2025-04-14T08:15:53.4293327Z ##[group]Run actions/checkout@v4
2025-04-14T08:15:53.4294179Z with:
2025-04-14T08:15:53.4294877Z   repository: prettier/prettier
2025-04-14T08:15:53.4295528Z   token: ***
2025-04-14T08:15:53.4295924Z   ssh-strict: true
2025-04-14T08:15:53.4296319Z   ssh-user: git
2025-04-14T08:15:53.4296711Z   persist-credentials: true
2025-04-14T08:15:53.4297151Z   clean: true
2025-04-14T08:15:53.4297556Z   sparse-checkout-cone-mode: true
2025-04-14T08:15:53.4298070Z   fetch-depth: 1
2025-04-14T08:15:53.4298449Z   fetch-tags: false
2025-04-14T08:15:53.4298847Z   show-progress: true
2025-04-14T08:15:53.4299264Z   lfs: false
2025-04-14T08:15:53.4299642Z   submodules: false
2025-04-14T08:15:53.4300055Z   set-safe-directory: true
2025-04-14T08:15:53.4300771Z ##[endgroup]
2025-04-14T08:15:53.6221393Z Syncing repository: prettier/prettier
2025-04-14T08:15:53.6223096Z ##[group]Getting Git version info
2025-04-14T08:15:53.6223781Z Working directory is '/home/runner/work/prettier/prettier'
2025-04-14T08:15:53.6224941Z [command]/usr/bin/git version
2025-04-14T08:15:53.6338171Z git version 2.49.0
2025-04-14T08:15:53.6365454Z ##[endgroup]
2025-04-14T08:15:53.6381822Z Temporarily overriding HOME='/home/runner/work/_temp/3fd03b8f-2231-4015-b62a-0da7d1b49947' before making global git config changes
2025-04-14T08:15:53.6384264Z Adding repository directory to the temporary git global config as a safe directory
2025-04-14T08:15:53.6386458Z [command]/usr/bin/git config --global --add safe.directory /home/runner/work/prettier/prettier
2025-04-14T08:15:53.6424679Z Deleting the contents of '/home/runner/work/prettier/prettier'
2025-04-14T08:15:53.6428503Z ##[group]Initializing the repository
2025-04-14T08:15:53.6432223Z [command]/usr/bin/git init /home/runner/work/prettier/prettier
2025-04-14T08:15:53.6563129Z hint: Using 'master' as the name for the initial branch. This default branch name
2025-04-14T08:15:53.6564655Z hint: is subject to change. To configure the initial branch name to use in all
2025-04-14T08:15:53.6565956Z hint: of your new repositories, which will suppress this warning, call:
2025-04-14T08:15:53.6566689Z hint:
2025-04-14T08:15:53.6567168Z hint: 	git config --global init.defaultBranch <name>
2025-04-14T08:15:53.6567722Z hint:
2025-04-14T08:15:53.6568255Z hint: Names commonly chosen instead of 'master' are 'main', 'trunk' and
2025-04-14T08:15:53.6569113Z hint: 'development'. The just-created branch can be renamed via this command:
2025-04-14T08:15:53.6570429Z hint:
2025-04-14T08:15:53.6571122Z hint: 	git branch -m <name>
2025-04-14T08:15:53.6573154Z Initialized empty Git repository in /home/runner/work/prettier/prettier/.git/
2025-04-14T08:15:53.6584448Z [command]/usr/bin/git remote add origin https://github.com/prettier/prettier
2025-04-14T08:15:53.6619015Z ##[endgroup]
2025-04-14T08:15:53.6619760Z ##[group]Disabling automatic garbage collection
2025-04-14T08:15:53.6622849Z [command]/usr/bin/git config --local gc.auto 0
2025-04-14T08:15:53.6650557Z ##[endgroup]
2025-04-14T08:15:53.6651245Z ##[group]Setting up auth
2025-04-14T08:15:53.6657453Z [command]/usr/bin/git config --local --name-only --get-regexp core\.sshCommand
2025-04-14T08:15:53.6691710Z [command]/usr/bin/git submodule foreach --recursive sh -c "git config --local --name-only --get-regexp 'core\.sshCommand' && git config --local --unset-all 'core.sshCommand' || :"
2025-04-14T08:15:53.7044631Z [command]/usr/bin/git config --local --name-only --get-regexp http\.https\:\/\/github\.com\/\.extraheader
2025-04-14T08:15:53.7074696Z [command]/usr/bin/git submodule foreach --recursive sh -c "git config --local --name-only --get-regexp 'http\.https\:\/\/github\.com\/\.extraheader' && git config --local --unset-all 'http.https://github.com/.extraheader' || :"
2025-04-14T08:15:53.7311941Z [command]/usr/bin/git config --local http.https://github.com/.extraheader AUTHORIZATION: basic ***
2025-04-14T08:15:53.7352075Z ##[endgroup]
2025-04-14T08:15:53.7353000Z ##[group]Fetching the repository
2025-04-14T08:15:53.7362571Z [command]/usr/bin/git -c protocol.version=2 fetch --no-tags --prune --no-recurse-submodules --depth=1 origin +d7d408e193f5f3367a4487f077d86dbfd8b5a3ee:refs/remotes/pull/17344/merge
2025-04-14T08:15:54.8879332Z From https://github.com/prettier/prettier
2025-04-14T08:15:54.8881195Z  * [new ref]         d7d408e193f5f3367a4487f077d86dbfd8b5a3ee -> pull/17344/merge
2025-04-14T08:15:54.8893941Z ##[endgroup]
2025-04-14T08:15:54.8895579Z ##[group]Determining the checkout info
2025-04-14T08:15:54.8897678Z ##[endgroup]
2025-04-14T08:15:54.8900751Z [command]/usr/bin/git sparse-checkout disable
2025-04-14T08:15:54.8946636Z [command]/usr/bin/git config --local --unset-all extensions.worktreeConfig
2025-04-14T08:15:54.8972273Z ##[group]Checking out the ref
2025-04-14T08:15:54.8975837Z [command]/usr/bin/git checkout --progress --force refs/remotes/pull/17344/merge
2025-04-14T08:15:55.3215125Z Note: switching to 'refs/remotes/pull/17344/merge'.
2025-04-14T08:15:55.3216380Z 
2025-04-14T08:15:55.3217118Z You are in 'detached HEAD' state. You can look around, make experimental
2025-04-14T08:15:55.3218867Z changes and commit them, and you can discard any commits you make in this
2025-04-14T08:15:55.3220586Z state without impacting any branches by switching back to a branch.
2025-04-14T08:15:55.3221578Z 
2025-04-14T08:15:55.3222203Z If you want to create a new branch to retain commits you create, you may
2025-04-14T08:15:55.3223557Z do so (now or later) by using -c with the switch command. Example:
2025-04-14T08:15:55.3224489Z 
2025-04-14T08:15:55.3224871Z   git switch -c <new-branch-name>
2025-04-14T08:15:55.3225691Z 
2025-04-14T08:15:55.3226202Z Or undo this operation with:
2025-04-14T08:15:55.3226805Z 
2025-04-14T08:15:55.3227131Z   git switch -
2025-04-14T08:15:55.3227593Z 
2025-04-14T08:15:55.3228383Z Turn off this advice by setting config variable advice.detachedHead to false
2025-04-14T08:15:55.3229438Z 
2025-04-14T08:15:55.3231043Z HEAD is now at d7d408e Merge 6fc3eecfe007c430e2854c8206282b9231679152 into c93393c0be9698f3fd303057b114084cf3970fb1
2025-04-14T08:15:55.3234645Z ##[endgroup]
2025-04-14T08:15:55.3265130Z [command]/usr/bin/git log -1 --format=%H
2025-04-14T08:15:55.3286491Z d7d408e193f5f3367a4487f077d86dbfd8b5a3ee
