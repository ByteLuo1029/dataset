2025-04-14T15:15:35.7576940Z ##[group]Run actions/checkout@v4
2025-04-14T15:15:35.7577869Z with:
2025-04-14T15:15:35.7578343Z   repository: prettier/prettier
2025-04-14T15:15:35.7579047Z   token: ***
2025-04-14T15:15:35.7579473Z   ssh-strict: true
2025-04-14T15:15:35.7579906Z   ssh-user: git
2025-04-14T15:15:35.7580345Z   persist-credentials: true
2025-04-14T15:15:35.7580834Z   clean: true
2025-04-14T15:15:35.7581276Z   sparse-checkout-cone-mode: true
2025-04-14T15:15:35.7581801Z   fetch-depth: 1
2025-04-14T15:15:35.7582239Z   fetch-tags: false
2025-04-14T15:15:35.7582687Z   show-progress: true
2025-04-14T15:15:35.7583135Z   lfs: false
2025-04-14T15:15:35.7583758Z   submodules: false
2025-04-14T15:15:35.7584231Z   set-safe-directory: true
2025-04-14T15:15:35.7584984Z ##[endgroup]
2025-04-14T15:15:35.9846516Z Syncing repository: prettier/prettier
2025-04-14T15:15:35.9848406Z ##[group]Getting Git version info
2025-04-14T15:15:35.9849168Z Working directory is '/home/runner/work/prettier/prettier'
2025-04-14T15:15:35.9850172Z [command]/usr/bin/git version
2025-04-14T15:15:35.9949243Z git version 2.49.0
2025-04-14T15:15:35.9978147Z ##[endgroup]
2025-04-14T15:15:35.9991018Z Temporarily overriding HOME='/home/runner/work/_temp/e90e2c76-e960-4f30-aab5-185276c5f2f5' before making global git config changes
2025-04-14T15:15:35.9992531Z Adding repository directory to the temporary git global config as a safe directory
2025-04-14T15:15:35.9996609Z [command]/usr/bin/git config --global --add safe.directory /home/runner/work/prettier/prettier
2025-04-14T15:15:36.0034540Z Deleting the contents of '/home/runner/work/prettier/prettier'
2025-04-14T15:15:36.0038383Z ##[group]Initializing the repository
2025-04-14T15:15:36.0042253Z [command]/usr/bin/git init /home/runner/work/prettier/prettier
2025-04-14T15:15:36.0146383Z hint: Using 'master' as the name for the initial branch. This default branch name
2025-04-14T15:15:36.0147945Z hint: is subject to change. To configure the initial branch name to use in all
2025-04-14T15:15:36.0148913Z hint: of your new repositories, which will suppress this warning, call:
2025-04-14T15:15:36.0149646Z hint:
2025-04-14T15:15:36.0150283Z hint: 	git config --global init.defaultBranch <name>
2025-04-14T15:15:36.0150901Z hint:
2025-04-14T15:15:36.0151498Z hint: Names commonly chosen instead of 'master' are 'main', 'trunk' and
2025-04-14T15:15:36.0152453Z hint: 'development'. The just-created branch can be renamed via this command:
2025-04-14T15:15:36.0153333Z hint:
2025-04-14T15:15:36.0153761Z hint: 	git branch -m <name>
2025-04-14T15:15:36.0158930Z Initialized empty Git repository in /home/runner/work/prettier/prettier/.git/
2025-04-14T15:15:36.0169278Z [command]/usr/bin/git remote add origin https://github.com/prettier/prettier
2025-04-14T15:15:36.0206709Z ##[endgroup]
2025-04-14T15:15:36.0207495Z ##[group]Disabling automatic garbage collection
2025-04-14T15:15:36.0210469Z [command]/usr/bin/git config --local gc.auto 0
2025-04-14T15:15:36.0238390Z ##[endgroup]
2025-04-14T15:15:36.0239134Z ##[group]Setting up auth
2025-04-14T15:15:36.0244927Z [command]/usr/bin/git config --local --name-only --get-regexp core\.sshCommand
2025-04-14T15:15:36.0276980Z [command]/usr/bin/git submodule foreach --recursive sh -c "git config --local --name-only --get-regexp 'core\.sshCommand' && git config --local --unset-all 'core.sshCommand' || :"
2025-04-14T15:15:36.0610703Z [command]/usr/bin/git config --local --name-only --get-regexp http\.https\:\/\/github\.com\/\.extraheader
2025-04-14T15:15:36.0639100Z [command]/usr/bin/git submodule foreach --recursive sh -c "git config --local --name-only --get-regexp 'http\.https\:\/\/github\.com\/\.extraheader' && git config --local --unset-all 'http.https://github.com/.extraheader' || :"
2025-04-14T15:15:36.0866677Z [command]/usr/bin/git config --local http.https://github.com/.extraheader AUTHORIZATION: basic ***
2025-04-14T15:15:36.0904678Z ##[endgroup]
2025-04-14T15:15:36.0905957Z ##[group]Fetching the repository
2025-04-14T15:15:36.0912789Z [command]/usr/bin/git -c protocol.version=2 fetch --no-tags --prune --no-recurse-submodules --depth=1 origin +c3f3e15224d5a05b9676b04073e4d00b9d8b3d15:refs/remotes/pull/17151/merge
2025-04-14T15:15:37.6145066Z From https://github.com/prettier/prettier
2025-04-14T15:15:37.6148073Z  * [new ref]         c3f3e15224d5a05b9676b04073e4d00b9d8b3d15 -> pull/17151/merge
2025-04-14T15:15:37.6188709Z ##[endgroup]
2025-04-14T15:15:37.6190149Z ##[group]Determining the checkout info
2025-04-14T15:15:37.6191720Z ##[endgroup]
2025-04-14T15:15:37.6197294Z [command]/usr/bin/git sparse-checkout disable
2025-04-14T15:15:37.6236407Z [command]/usr/bin/git config --local --unset-all extensions.worktreeConfig
2025-04-14T15:15:37.6263877Z ##[group]Checking out the ref
2025-04-14T15:15:37.6266950Z [command]/usr/bin/git checkout --progress --force refs/remotes/pull/17151/merge
2025-04-14T15:15:38.0470297Z Note: switching to 'refs/remotes/pull/17151/merge'.
2025-04-14T15:15:38.0473543Z 
2025-04-14T15:15:38.0474792Z You are in 'detached HEAD' state. You can look around, make experimental
2025-04-14T15:15:38.0477968Z changes and commit them, and you can discard any commits you make in this
2025-04-14T15:15:38.0480716Z state without impacting any branches by switching back to a branch.
2025-04-14T15:15:38.0481969Z 
2025-04-14T15:15:38.0482802Z If you want to create a new branch to retain commits you create, you may
2025-04-14T15:15:38.0485355Z do so (now or later) by using -c with the switch command. Example:
2025-04-14T15:15:38.0487037Z 
2025-04-14T15:15:38.0487749Z   git switch -c <new-branch-name>
2025-04-14T15:15:38.0488884Z 
2025-04-14T15:15:38.0489402Z Or undo this operation with:
2025-04-14T15:15:38.0490166Z 
2025-04-14T15:15:38.0490615Z   git switch -
2025-04-14T15:15:38.0491213Z 
2025-04-14T15:15:38.0492252Z Turn off this advice by setting config variable advice.detachedHead to false
2025-04-14T15:15:38.0493896Z 
2025-04-14T15:15:38.0495790Z HEAD is now at c3f3e15 Merge f1abd1cffcd6222addb5f05960a823fb2a4d3ece into c93393c0be9698f3fd303057b114084cf3970fb1
2025-04-14T15:15:38.0500348Z ##[endgroup]
2025-04-14T15:15:38.0529493Z [command]/usr/bin/git log -1 --format=%H
2025-04-14T15:15:38.0551535Z c3f3e15224d5a05b9676b04073e4d00b9d8b3d15
