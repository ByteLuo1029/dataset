Requested labels: ubuntu-24.04
Job defined at: godotengine/godot/.github/workflows/static_checks.yml@refs/pull/105301/merge
Reusable workflow chain:
godotengine/godot/.github/workflows/runner.yml@refs/pull/105301/merge (4784030ea76e58c966a37fe79ce6e31df06ea97b)
-> godotengine/godot/.github/workflows/static_checks.yml@refs/pull/105301/merge (4784030ea76e58c966a37fe79ce6e31df06ea97b)
Waiting for a runner to pick up this job...
Job is waiting for a hosted runner to come online.
Job is about to start running on the hosted runner: GitHub Actions 44 (hosted)
Current runner version: '2.323.0'
##[group]Operating System
Ubuntu
24.04.2
LTS
##[endgroup]
##[group]Runner Image
Image: ubuntu-24.04
Version: 20250406.1.0
Included Software: https://github.com/actions/runner-images/blob/ubuntu24/20250406.1/images/ubuntu/Ubuntu2404-Readme.md
Image Release: https://github.com/actions/runner-images/releases/tag/ubuntu24%2F20250406.1
##[endgroup]
##[group]Runner Image Provisioner
2.0.422.1
##[endgroup]
##[group]GITHUB_TOKEN Permissions
Actions: read
Attestations: <:*:>
Checks: <:*:>
Contents: <:*:>
Deployments: <:*:>
Discussions: <:*:>
Issues: <:*:>
Metadata: read
Models: read
Packages: <:*:>
Pages: <:*:>
PullRequests: <:*:>
RepositoryProjects: <:*:>
SecurityEvents: <:*:>
Statuses: <:*:>
##[endgroup]
Secret source: <:*:>
Prepare workflow directory
Prepare all required actions
Getting action download info
##[group]Download immutable action package <:*:>
Version: 4.2.2
Digest: sha256:<:SEQ:>
Source commit SHA: <:SEQ:>
##[endgroup]
Download action repository <:*:> (SHA:<:SEQ:>)
Getting action download info
##[group]Download immutable action package <:*:>
Version: 4.2.3
Digest: sha256:<:SEQ:>
Source commit SHA: <:SEQ:>
##[endgroup]
Uses: godotengine/godot/.github/workflows/static_checks.yml@refs/pull/105301/merge (4784030ea76e58c966a37fe79ce6e31df06ea97b)
Complete job name: 📊 Static checks / Code style, file formatting, and docs
##[group]Run <:*:>
with:
fetch-depth: <:NUM:>
repository: <:*:>
token: ***
ssh-strict: true
ssh-user: git
persist-credentials: <:*:>
clean: true
sparse-checkout-cone-mode: true
fetch-tags: false
show-progress: true
lfs: false
submodules: <:*:>
set-safe-directory: true
##[endgroup]
Syncing repository: <:*:>
##[group]Getting Git version info
Working directory is <:*:>
[command]/usr/bin/git version
git version <:NUM:>.<:NUM:>.<:NUM:>
##[endgroup]
Temporarily overriding HOME='/home/runner/work/_temp/6630b4de-f37c-40d3-9ffc-e2d9c8fe9486' before making global git config changes
Adding repository directory to the temporary git global config as a safe directory
[command]/usr/bin/git config --global --add safe.directory /home/runner/work/godot/godot
Deleting the contents of <:*:>
##[group]Initializing the repository
[command]/usr/bin/git init <:*:>
hint: Using 'master' as the name for the initial branch. This default branch name
hint: is subject to change. To configure the initial branch name to use in all
hint: of your new repositories, which will suppress this warning, call:
hint:
hint: git config --global init.defaultBranch <name>
hint:
hint: Names commonly chosen instead of 'master' are 'main', 'trunk' and
hint: 'development'. The just-created branch can be renamed via this command:
hint:
hint: git branch -m <name>
Initialized empty Git repository in <:*:>
[command]/usr/bin/git remote add origin <:*:>
##[endgroup]
##[group]Disabling automatic garbage collection
[command]/usr/bin/git config --local gc.auto 0
##[endgroup]
##[group]Setting up auth
[command]/usr/bin/git config --local --name-only --get-regexp <:*:>
[command]/usr/bin/git submodule foreach --recursive sh -c "git config --local --name-only --get-regexp <:*:> && git config --local --unset-all <:*:> || :"
[command]/usr/bin/git config --local --name-only --get-regexp <:*:>
[command]/usr/bin/git submodule foreach --recursive sh -c "git config --local --name-only --get-regexp <:*:> && git config --local --unset-all <:*:> || :"
[command]/usr/bin/git config <:*:> http.https://github.com/.extraheader AUTHORIZATION: basic ***
##[endgroup]
##[group]Fetching the repository
[command]/usr/bin/git -c protocol.version=<:NUM:> fetch <:*:> <:*:> <:*:> <:*:> <:*:> <:*:>
From <:*:>
* [new ref] <:SEQ:>-> <:*:>
##[endgroup]
##[group]Determining the checkout info
##[endgroup]
[command]/usr/bin/git sparse-checkout disable
[command]/usr/bin/git config --local --unset-all extensions.worktreeConfig
##[group]Checking out the ref
[command]/usr/bin/git checkout --progress --force refs/remotes/pull/<:NUM:>/merge
Updating files:  83% (10477/12578)
Updating files:  84% (10566/12578)
Updating files:  85% (10692/12578)
Updating files:  86% (10818/12578)
Updating files:  87% (10943/12578)
Updating files:  88% (11069/12578)
Updating files:  89% (11195/12578)
Updating files:  90% (11321/12578)
Updating files:  91% (11446/12578)
Updating files:  92% (11572/12578)
Updating files:  93% (11698/12578)
Updating files:  94% (11824/12578)
Updating files:  95% (11950/12578)
Updating files:  96% (12075/12578)
Updating files:  97% (12201/12578)
Updating files:  98% (12327/12578)
Updating files:  99% (12453/12578)
Updating files: 100% (12578/12578)
Updating files: 100% (12578/12578), done.
Note: switching to 'refs/remotes/pull/<:NUM:>/merge'.
2025-04-15T02:37:09.3661315Z
You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by switching back to a branch.
2025-04-15T02:37:09.3663783Z
If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -c with the switch command. Example:
2025-04-15T02:37:09.3665292Z
git switch -c <new-branch-name>
2025-04-15T02:37:09.3665750Z
Or undo this operation with:
2025-04-15T02:37:09.3666188Z
git switch -
2025-04-15T02:37:09.3666510Z
Turn off this advice by setting config variable advice.detachedHead to false
2025-04-15T02:37:09.3667341Z
HEAD is now at <:*:> Merge <:SEQ:> into <:SEQ:>
##[endgroup]
[command]/usr/bin/git log <:NUM:> <:*:>
<:SEQ:>
##[group]Run bash ./misc/scripts/gitignore_check.sh
[36;1mbash ./misc/scripts/gitignore_check.sh[0m
shell: /usr/bin/bash -e {<:NUM:>}
##[endgroup]
.gitignore validation...
##[group]Run if [ "pull_request" == "pull_request" ]; then
[36;1mif [ "pull_request" == "pull_request" ]; then[0m
[36;1m  files=$(git diff-tree --no-commit-id --name-only -r HEAD^1..HEAD 2> /dev/null || true)[0m
[36;1melif [ "pull_request" == "push" -a "" == "false" -a "" == "false" ]; then[0m
[36;1m  files=$(git diff-tree --no-commit-id --name-only -r a2e8c395ea8a21c6e5f062c2e1ee4745d621d3af..bb2703abae3c1586a95efa886d01654bd471ef58 2> /dev/null || true)[0m
[<:NUM:>;1mfi[0m
[36;1mfiles=$(echo "$files" | xargs -I {} sh -c 'echo "\"./{}\""' | tr '\n' ' ')[0m
[36;1mecho "CHANGED_FILES=$files" >> $GITHUB_ENV[0m
shell: /usr/bin/bash -e {<:NUM:>}
env:
GITHUB TOKEN: ***
##[endgroup]
##[group]Run <:*:>
with:
extra_args: --files "./platform/android/java/lib/src/org/godotengine/godot/input/GodotEditText.java"
env:
CHANGED_FILES: "./platform/android/java/lib/src/org/godotengine/godot/input/GodotEditText.java"
##[endgroup]
##[group]Run python -m pip <:*:> <:*:>
[<:NUM:>;1mpython -m pip <:*:> <:*:>
shell: /usr/bin/bash --noprofile --norc -e -o pipefail {<:NUM:>}
env:
CHANGED_FILES: "./platform/android/java/lib/src/org/godotengine/godot/input/GodotEditText.java"
##[endgroup]
Defaulting to user installation because normal site-packages is not writeable
Collecting <:*:>
Downloading <:*:> <:*:> <:*:> kB)
Collecting <:*:> (from <:*:>
Downloading <:*:> <:*:> kB)
Collecting <:*:> (from <:*:>
Downloading <:*:> <:*:> kB)
Collecting <:*:> (from <:*:>
Downloading <:*:> <:*:> kB)
Requirement already satisfied: pyyaml>=5.1 in /usr/lib/python3/dist-packages (from pre-commit) (6.0.1)
Collecting <:*:> (from <:*:>
Downloading <:*:> <:*:> kB)
Collecting <:*:> (from <:*:>
Downloading <:*:> <:*:> kB)
Collecting <:*:> (from <:*:>
Downloading <:*:> <:*:> kB)
Requirement already satisfied: platformdirs<5,>=3.9.1 in /usr/local/lib/python3.12/dist-packages (from virtualenv>=20.10.0->pre-commit) (4.3.7)
Downloading <:*:> <:*:> <:*:> kB)
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ <:NUM:>.<:NUM:>/<:NUM:>.<:NUM:> <:*:> <:NUM:>.<:NUM:> MB/s eta <:NUM:>:<:NUM:>:<:NUM:>
Downloading <:*:> <:*:> kB)
Downloading <:*:> <:*:> kB)
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ <:NUM:>.<:NUM:>/<:NUM:>.<:NUM:> <:*:> <:NUM:>.<:NUM:> MB/s eta <:NUM:>:<:NUM:>:<:NUM:>
Downloading <:*:> <:*:> kB)
Downloading virtualenv-<:NUM:>.<:NUM:>.<:NUM:>-py3-none-any.whl (<:NUM:>.<:NUM:> MB)
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ <:NUM:>.<:NUM:>/<:NUM:>.<:NUM:> <:*:> <:NUM:>.<:NUM:> MB/s eta <:NUM:>:<:NUM:>:<:NUM:>
Downloading <:*:> <:*:> kB)
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ <:NUM:>.<:NUM:>/<:NUM:>.<:NUM:> <:*:> <:NUM:>.<:NUM:> MB/s eta <:NUM:>:<:NUM:>:<:NUM:>
Downloading <:*:> <:*:> kB)
Installing collected packages: distlib, nodeenv, identify, filelock, cfgv, virtualenv, pre-commit
Successfully installed cfgv-3.4.0 distlib-0.3.9 filelock-3.18.0 identify-2.6.9 nodeenv-1.9.1 pre-commit-4.2.0 virtualenv-20.30.0
##[group]Run python -m pip <:*:> <:*:>
[<:NUM:>;1mpython -m pip <:*:> <:*:>
shell: /usr/bin/bash --noprofile --norc -e -o pipefail {<:NUM:>}
env:
CHANGED_FILES: "./platform/android/java/lib/src/org/godotengine/godot/input/GodotEditText.java"
##[endgroup]
argcomplete==3.6.2
attrs==23.2.0
Automat==22.10.0
Babel==2.10.3
bcc==0.29.1
bcrypt==3.2.2
blinker==1.7.0
boto3==1.34.46
botocore==1.34.46
certifi==2023.11.17
cfgv==<:NUM:>.<:NUM:>.<:NUM:>
chardet==5.2.0
click==8.1.6
cloud-init==24.4
colorama==0.4.6
command-not-found==0.3
configobj==5.0.8
constantly==23.10.4
cryptography==41.0.7
dbus-python==1.3.2
distlib==<:NUM:>.<:NUM:>.<:NUM:>
distro==1.9.0
distro-info==1.7+build1
filelock==<:NUM:>.<:NUM:>.<:NUM:>
httplib2==0.20.4
hyperlink==21.0.0
identify==<:NUM:>.<:NUM:>.<:NUM:>
idna==3.6
incremental==22.10.0
Jinja2==3.1.2
jmespath==1.0.1
jsonpatch==1.32
jsonpointer==2.0
jsonschema==4.10.3
launchpadlib==1.11.0
lazr.restfulclient==0.14.6
lazr.uri==1.0.6
markdown-it-py==3.0.0
MarkupSafe==2.1.5
mdurl==0.1.2
mercurial==6.7.2
netaddr==0.8.0
netifaces==0.11.0
nodeenv==<:NUM:>.<:NUM:>.<:NUM:>
oauthlib==3.2.2
packaging==24.0
pexpect==4.9.0
pipx==1.7.1
platformdirs==<:NUM:>.<:NUM:>.<:NUM:>
pre commit==<:NUM:>.<:NUM:>.<:NUM:>
ptyprocess==0.7.0
pyasn1==0.4.8
pyasn1-modules==0.2.8
Pygments==2.17.2
PyGObject==3.48.2
PyHamcrest==2.1.0
PyJWT==2.7.0
pyOpenSSL==23.2.0
pyparsing==3.1.1
pyparted==3.12.0
pyrsistent==0.20.0
pyserial==3.5
python-apt==2.7.7+ubuntu4
python-dateutil==2.8.2
python-debian==0.1.49+ubuntu2
python-magic==0.4.27
pytz==2024.1
PyYAML==<:NUM:>.<:NUM:>.<:NUM:>
requests==2.31.0
rich==13.7.1
s3transfer==0.10.1
service-identity==24.1.0
setuptools==68.1.2
six==1.16.0
sos==4.7.2
ssh-import-id==5.11
systemd-python==235
Twisted==24.3.0
typing_extensions==4.10.0
ubuntu-pro-client==8001
ufw==0.36.2
urllib3==2.0.7
userpath==1.9.2
virtualenv==<:NUM:>.<:NUM:>.<:NUM:>
wadllib==1.3.6
WALinuxAgent==2.9.1.1
wheel==0.42.0
zope.interface==6.1
zstandard==0.22.0
##[group]Run <:*:>
with:
path: <:*:>
key: pre-commit-3||547c64545613726cd8da7487ed54f1edc27ae9843c378e9a06176ef040e53c6c
enableCrossOsArchive: false
fail-on-cache-miss: false
lookup-only: false
<:*:> false
env:
CHANGED_FILES: "./platform/android/java/lib/src/org/godotengine/godot/input/GodotEditText.java"
##[endgroup]
Cache hit for: pre-commit-3||547c64545613726cd8da7487ed54f1edc27ae9843c378e9a06176ef040e53c6c
Received 8388608 of 54357090 (15.4%), 8.0 MBs/sec
Received 54357090 of 54357090 (100.0%), 35.0 MBs/sec
Cache Size: ~52 MB (54357090 B)
[command]/usr/bin/tar -xf /home/runner/work/_temp/f8ad750c-290c-4e5d-b614-9bfec99305d0/cache.tzst -P -C /home/runner/work/godot/godot --use-compress-program unzstd
Cache restored successfully
Cache restored from key: pre-commit-3||547c64545613726cd8da7487ed54f1edc27ae9843c378e9a06176ef040e53c6c
##[group]Run pre-commit run --show-diff-on-failure --color=always --files "./platform/android/java/lib/src/org/godotengine/godot/input/GodotEditText.java"
[36;1mpre-commit run --show-diff-on-failure --color=always --files "./platform/android/java/lib/src/org/godotengine/godot/input/GodotEditText.java" [0m
shell: /usr/bin/bash --noprofile --norc -e -o pipefail {<:NUM:>}
env:
CHANGED_FILES: "./platform/android/java/lib/src/org/godotengine/godot/input/GodotEditText.java"
##[endgroup]
clang-format.............................................................[41mFailed[m
[2m- hook id: clang-format[m
[2m- files were modified by this hook[m
clang-format-glsl....................................(no files to check)[46;30mSkipped[m
ruff.................................................(no files to check)[46;30mSkipped[m
ruff-format..........................................(no files to check)[46;30mSkipped[m
mypy.................................................(no files to check)[46;30mSkipped[m
codespell................................................................[42mPassed[m
make-rst.............................................(no files to check)[46;30mSkipped[m
doc-status...........................................(no files to check)[46;30mSkipped[m
validate-builders....................................(no files to check)[46;30mSkipped[m
eslint...............................................(no files to check)[46;30mSkipped[m
jsdoc................................................(no files to check)[46;30mSkipped[m
svgo.................................................(no files to check)[46;30mSkipped[m
copyright-headers........................................................[42mPassed[m
header-guards........................................(no files to check)[46;30mSkipped[m
file-format..............................................................[42mPassed[m
dotnet-format........................................(no files to check)[46;30mSkipped[m
All changes made by hooks:
[1mdiff --git a/platform/android/java/lib/src/org/godotengine/godot/input/GodotEditText.java b/platform/android/java/lib/src/org/godotengine/godot/input/GodotEditText.java[m
[1mindex fe50c2d..afaafe1 100644[m
[1m--- a/platform/android/java/lib/src/org/godotengine/godot/input/GodotEditText.java[m
[1m+++ b/platform/android/java/lib/src/org/godotengine/godot/input/GodotEditText.java[m
[36m@@ -173,7 +173,7 @@[m [mpublic class GodotEditText extends EditText {[m
[m
if (!TextUtils.isEmpty(acceptCharacters)) {[m
if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.O) {[m
[31m-							edit.setKeyListener(DigitsKeyListener.getInstance(Locale.getDefault(),true,true));[m
[32m+[m							[32medit.setKeyListener(DigitsKeyListener.getInstance(Locale.getDefault(), true, true));[m
} else {[m
edit.setKeyListener(DigitsKeyListener.getInstance(acceptCharacters));[m
}[m
##[error]Process completed with exit code 1.
Post job cleanup.
Post job cleanup.
[command]/usr/bin/git version
git version <:NUM:>.<:NUM:>.<:NUM:>
Temporarily overriding HOME='/home/runner/work/_temp/76f9a59b-6183-4750-8e71-e674f0e908bf' before making global git config changes
Adding repository directory to the temporary git global config as a safe directory
[command]/usr/bin/git config --global --add safe.directory /home/runner/work/godot/godot
[command]/usr/bin/git config --local --name-only --get-regexp <:*:>
[command]/usr/bin/git submodule foreach --recursive sh -c "git config --local --name-only --get-regexp <:*:> && git config --local --unset-all <:*:> || :"
[command]/usr/bin/git config --local --name-only --get-regexp <:*:>
http.https://github.com/.extraheader
[command]/usr/bin/git config --local --unset-all http.https://github.com/.extraheader
[command]/usr/bin/git submodule foreach --recursive sh -c "git config --local --name-only --get-regexp <:*:> && git config --local --unset-all <:*:> || :"
Cleaning up orphan processes
