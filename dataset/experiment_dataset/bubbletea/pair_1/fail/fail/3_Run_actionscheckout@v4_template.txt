##[group]Run <:*:>
with:
path: <:*:>
repository: <:*:>
token: ***
ssh-strict: true
ssh-user: git
persist-credentials: <:*:>
clean: true
sparse-checkout-cone-mode: true
fetch-depth: <:NUM:>
fetch-tags: false
show-progress: true
lfs: false
submodules: <:*:>
set-safe-directory: true
##[endgroup]
Syncing repository: <:*:>
##[group]Getting Git version info
Working directory is <:*:>
[command]"C:\Program Files\Git\bin\git.exe" version
git version 2.49.0.windows.1
##[endgroup]
Copying 'C:\Users\runneradmin\.gitconfig' to 'D:\a\_temp\be09d575-fd28-4935-8b1f-e01023c66582\.gitconfig'
Temporarily overriding HOME='D:\a\_temp\be09d575-fd28-4935-8b1f-e01023c66582' before making global git config changes
Adding repository directory to the temporary git global config as a safe directory
[command]"C:\Program Files\Git\bin\git.exe" config --global --add safe.directory D:\a\bubbletea\bubbletea\charmbracelet\bubbletea
##[group]Initializing the repository
[command]"C:\Program Files\Git\bin\git.exe" init D:\a\bubbletea\bubbletea\charmbracelet\bubbletea
Initialized empty Git repository in <:*:>
[command]"C:\Program Files\Git\bin\git.exe" remote add origin https://github.com/charmbracelet/bubbletea
##[endgroup]
##[group]Disabling automatic garbage collection
[command]"C:\Program Files\Git\bin\git.exe" config --local gc.auto 0
##[endgroup]
##[group]Setting up auth
[command]"C:\Program Files\Git\bin\git.exe" config --local --name-only --get-regexp core\.sshCommand
[command]"C:\Program Files\Git\bin\git.exe" submodule foreach --recursive "sh -c \"git config --local --name-only --get-regexp 'core\.sshCommand' && git config --local --unset-all 'core.sshCommand' || :\""
[command]"C:\Program Files\Git\bin\git.exe" config --local --name-only --get-regexp http\.https\:\/\/github\.com\/\.extraheader
[command]"C:\Program Files\Git\bin\git.exe" submodule foreach --recursive "sh -c \"git config --local --name-only --get-regexp 'http\.https\:\/\/github\.com\/\.extraheader' && git config --local --unset-all 'http.https://github.com/.extraheader' || :\""
[command]"C:\Program Files\Git\bin\git.exe" config --local http.https://github.com/.extraheader "AUTHORIZATION: basic ***"
##[endgroup]
##[group]Fetching the repository
[command]"C:\Program Files\Git\bin\git.exe" -c protocol.version=2 fetch --no-tags --prune --no-recurse-submodules --depth=1 origin +2dfbfc60f7120b15969830b6a4fedd9c1a31ea79:refs/remotes/pull/1389/merge
From <:*:>
* [new ref] <:SEQ:>-> <:*:>
##[endgroup]
##[group]Determining the checkout info
##[endgroup]
[command]"C:\Program Files\Git\bin\git.exe" sparse-checkout disable
[command]"C:\Program Files\Git\bin\git.exe" config --local --unset-all extensions.worktreeConfig
##[group]Checking out the ref
[command]"C:\Program Files\Git\bin\git.exe" checkout --progress --force refs/remotes/pull/1389/merge
Note: switching to 'refs/remotes/pull/<:NUM:>/merge'.
2025-04-14T09:20:12.2134477Z
You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by switching back to a branch.
2025-04-14T09:20:12.2137385Z
If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -c with the switch command. Example:
2025-04-14T09:20:12.2140307Z
git switch -c <new-branch-name>
2025-04-14T09:20:12.2140879Z
Or undo this operation with:
2025-04-14T09:20:12.2141419Z
git switch -
2025-04-14T09:20:12.2141805Z
Turn off this advice by setting config variable advice.detachedHead to false
2025-04-14T09:20:12.2142671Z
HEAD is now at <:*:> Merge <:SEQ:> into <:SEQ:>
##[endgroup]
[command]"C:\Program Files\Git\bin\git.exe" log -1 --format=%H
<:SEQ:>
