Requested labels: windows-latest
Job defined at: charmbracelet/meta/.github/workflows/lint.yml@refs/heads/main
Reusable workflow chain:
charmbracelet/bubbletea/.github/workflows/lint.yml@refs/pull/1389/merge (2dfbfc60f7120b15969830b6a4fedd9c1a31ea79)
-> charmbracelet/meta/.github/workflows/lint.yml@refs/heads/main (cf4478641f98719c6ffce4cad6d603170421aa3c)
Waiting for a runner to pick up this job...
Job is waiting for a hosted runner to come online.
Job is about to start running on the hosted runner: GitHub Actions 55 (hosted)
Current runner version: '2.323.0'
##[group]Operating System
Microsoft Windows Server 2022
10.0.20348
Datacenter
##[endgroup]
##[group]Runner Image
Image: windows-2022
Version: 20250406.1.0
Included Software: https://github.com/actions/runner-images/blob/win22/20250406.1/images/windows/Windows2022-Readme.md
Image Release: https://github.com/actions/runner-images/releases/tag/win22%2F20250406.1
##[endgroup]
##[group]Runner Image Provisioner
2.0.422.1
##[endgroup]
##[group]GITHUB_TOKEN Permissions
Checks: <:*:>
Contents: <:*:>
Metadata: read
PullRequests: <:*:>
##[endgroup]
Secret source: <:*:>
Prepare workflow directory
Prepare all required actions
Getting action download info
##[group]Download immutable action package <:*:>
Version: 4.2.2
Digest: sha256:<:SEQ:>
Source commit SHA: <:SEQ:>
##[endgroup]
##[group]Download immutable action package <:*:>
Version: 5.4.0
Digest: sha256:<:SEQ:>
Source commit SHA: <:SEQ:>
##[endgroup]
Download action repository <:*:> (SHA:<:SEQ:>)
Uses: charmbracelet/meta/.github/workflows/lint.yml@refs/heads/main (cf4478641f98719c6ffce4cad6d603170421aa3c)
##[group] Inputs
golangci_path:
##[endgroup]
Complete job name: lint / lint (windows-latest)
##[group]Run git config --global core.autocrlf input
[36;1mgit config --global core.autocrlf input[0m
shell: C:\Program Files\PowerShell\7\pwsh.EXE -command ". '{0}'"
##[endgroup]
##[group]Run <:*:>
with:
path: <:*:>
repository: <:*:>
token: ***
ssh-strict: true
ssh-user: git
persist-credentials: <:*:>
clean: true
sparse-checkout-cone-mode: true
fetch-depth: <:NUM:>
fetch-tags: false
show-progress: true
lfs: false
submodules: <:*:>
set-safe-directory: true
##[endgroup]
Syncing repository: <:*:>
##[group]Getting Git version info
Working directory is <:*:>
[command]"C:\Program Files\Git\bin\git.exe" version
git version 2.49.0.windows.1
##[endgroup]
Copying 'C:\Users\runneradmin\.gitconfig' to 'D:\a\_temp\be09d575-fd28-4935-8b1f-e01023c66582\.gitconfig'
Temporarily overriding HOME='D:\a\_temp\be09d575-fd28-4935-8b1f-e01023c66582' before making global git config changes
Adding repository directory to the temporary git global config as a safe directory
[command]"C:\Program Files\Git\bin\git.exe" config --global --add safe.directory D:\a\bubbletea\bubbletea\charmbracelet\bubbletea
##[group]Initializing the repository
[command]"C:\Program Files\Git\bin\git.exe" init D:\a\bubbletea\bubbletea\charmbracelet\bubbletea
Initialized empty Git repository in <:*:>
[command]"C:\Program Files\Git\bin\git.exe" remote add origin https://github.com/charmbracelet/bubbletea
##[endgroup]
##[group]Disabling automatic garbage collection
[command]"C:\Program Files\Git\bin\git.exe" config --local gc.auto 0
##[endgroup]
##[group]Setting up auth
[command]"C:\Program Files\Git\bin\git.exe" config --local --name-only --get-regexp core\.sshCommand
[command]"C:\Program Files\Git\bin\git.exe" submodule foreach --recursive "sh -c \"git config --local --name-only --get-regexp 'core\.sshCommand' && git config --local --unset-all 'core.sshCommand' || :\""
[command]"C:\Program Files\Git\bin\git.exe" config --local --name-only --get-regexp http\.https\:\/\/github\.com\/\.extraheader
[command]"C:\Program Files\Git\bin\git.exe" submodule foreach --recursive "sh -c \"git config --local --name-only --get-regexp 'http\.https\:\/\/github\.com\/\.extraheader' && git config --local --unset-all 'http.https://github.com/.extraheader' || :\""
[command]"C:\Program Files\Git\bin\git.exe" config --local http.https://github.com/.extraheader "AUTHORIZATION: basic ***"
##[endgroup]
##[group]Fetching the repository
[command]"C:\Program Files\Git\bin\git.exe" -c protocol.version=2 fetch --no-tags --prune --no-recurse-submodules --depth=1 origin +2dfbfc60f7120b15969830b6a4fedd9c1a31ea79:refs/remotes/pull/1389/merge
From <:*:>
* [new ref] <:SEQ:>-> <:*:>
##[endgroup]
##[group]Determining the checkout info
##[endgroup]
[command]"C:\Program Files\Git\bin\git.exe" sparse-checkout disable
[command]"C:\Program Files\Git\bin\git.exe" config --local --unset-all extensions.worktreeConfig
##[group]Checking out the ref
[command]"C:\Program Files\Git\bin\git.exe" checkout --progress --force refs/remotes/pull/1389/merge
Note: switching to 'refs/remotes/pull/<:NUM:>/merge'.
2025-04-14T09:20:12.2134493Z
You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by switching back to a branch.
2025-04-14T09:20:12.2137420Z
If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -c with the switch command. Example:
2025-04-14T09:20:12.2140312Z
git switch -c <new-branch-name>
2025-04-14T09:20:12.2140884Z
Or undo this operation with:
2025-04-14T09:20:12.2141423Z
git switch -
2025-04-14T09:20:12.2141810Z
Turn off this advice by setting config variable advice.detachedHead to false
2025-04-14T09:20:12.2142674Z
HEAD is now at <:*:> Merge <:SEQ:> into <:SEQ:>
##[endgroup]
[command]"C:\Program Files\Git\bin\git.exe" log -1 --format=%H
<:SEQ:>
##[group]Run <:*:>
with:
repository: <:*:>
path: <:*:>
token: ***
ssh-strict: true
ssh-user: git
persist-credentials: <:*:>
clean: true
sparse-checkout-cone-mode: true
fetch-depth: <:NUM:>
fetch-tags: false
show-progress: true
lfs: false
submodules: <:*:>
set-safe-directory: true
##[endgroup]
Syncing repository: <:*:>
##[group]Getting Git version info
Working directory is <:*:>
[command]"C:\Program Files\Git\bin\git.exe" version
git version 2.49.0.windows.1
##[endgroup]
Copying 'C:\Users\runneradmin\.gitconfig' to 'D:\a\_temp\929d29c2-82d4-4e41-88e0-e6f42a61c7b1\.gitconfig'
Temporarily overriding HOME='D:\a\_temp\929d29c2-82d4-4e41-88e0-e6f42a61c7b1' before making global git config changes
Adding repository directory to the temporary git global config as a safe directory
[command]"C:\Program Files\Git\bin\git.exe" config --global --add safe.directory D:\a\bubbletea\bubbletea\charmbracelet\meta
##[group]Initializing the repository
[command]"C:\Program Files\Git\bin\git.exe" init D:\a\bubbletea\bubbletea\charmbracelet\meta
Initialized empty Git repository in <:*:>
[command]"C:\Program Files\Git\bin\git.exe" remote add origin https://github.com/charmbracelet/meta
##[endgroup]
##[group]Disabling automatic garbage collection
[command]"C:\Program Files\Git\bin\git.exe" config --local gc.auto 0
##[endgroup]
##[group]Setting up auth
[command]"C:\Program Files\Git\bin\git.exe" config --local --name-only --get-regexp core\.sshCommand
[command]"C:\Program Files\Git\bin\git.exe" submodule foreach --recursive "sh -c \"git config --local --name-only --get-regexp 'core\.sshCommand' && git config --local --unset-all 'core.sshCommand' || :\""
[command]"C:\Program Files\Git\bin\git.exe" config --local --name-only --get-regexp http\.https\:\/\/github\.com\/\.extraheader
[command]"C:\Program Files\Git\bin\git.exe" submodule foreach --recursive "sh -c \"git config --local --name-only --get-regexp 'http\.https\:\/\/github\.com\/\.extraheader' && git config --local --unset-all 'http.https://github.com/.extraheader' || :\""
[command]"C:\Program Files\Git\bin\git.exe" config --local http.https://github.com/.extraheader "AUTHORIZATION: basic ***"
##[endgroup]
##[group]Determining the default branch
Retrieving the default branch name
Default branch 'main'
##[endgroup]
##[group]Fetching the repository
[command]"C:\Program Files\Git\bin\git.exe" -c protocol.version=2 fetch --no-tags --prune --no-recurse-submodules --depth=1 origin +refs/heads/main:refs/remotes/origin/main
From <:*:>
* [new <:*:> <:*:> -> <:*:>
##[endgroup]
##[group]Determining the checkout info
##[endgroup]
[command]"C:\Program Files\Git\bin\git.exe" sparse-checkout disable
[command]"C:\Program Files\Git\bin\git.exe" config --local --unset-all extensions.worktreeConfig
##[group]Checking out the ref
[command]"C:\Program Files\Git\bin\git.exe" checkout --progress --force -B main refs/remotes/origin/main
branch <:*:> set up to track <:*:>
Switched to a new branch 'main'
##[endgroup]
[command]"C:\Program Files\Git\bin\git.exe" log -1 --format=%H
<:SEQ:>
##[group]Run <:*:>
with:
go-version: stable
check-latest: false
token: ***
cache: true
##[endgroup]
Setup go version spec stable
stable version resolved as 1.24.2
Attempting to download 1.24.2...
matching 1.24.2...
Acquiring 1.24.2 from https://github.com/actions/go-versions/releases/download/1.24.2-14210955142/go-1.24.2-win32-x64.zip
Extracting Go...
[command]"C:\Program Files\PowerShell\7\pwsh.exe" -NoLogo -NoProfile -NonInteractive -ExecutionPolicy Unrestricted -Command "$ErrorActionPreference = 'Stop' ; try { Add-Type -AssemblyName System.IO.Compression.ZipFile } catch { } ; try { [System.IO.Compression.ZipFile]::ExtractToDirectory('D:\a\_temp\go-1.24.2-win32-x64.zip', 'D:\a\_temp\51aa18e0-5bcb-4367-835a-ecbe0127e33f', $true) } catch { if (($_.Exception.GetType().FullName -eq 'System.Management.Automation.MethodException') -or ($_.Exception.GetType().FullName -eq 'System.Management.Automation.RuntimeException') ){ Expand-Archive -LiteralPath 'D:\a\_temp\go-1.24.2-win32-x64.zip' -DestinationPath 'D:\a\_temp\51aa18e0-5bcb-4367-835a-ecbe0127e33f' -Force } else { throw $_ } } ;"
Successfully extracted go to D:\a\_temp\51aa18e0-5bcb-4367-835a-ecbe0127e33f
Adding to the cache ...
Created link C:\hostedtoolcache\windows\go\1.24.2\x64 => D:\hostedtoolcache\windows\go\1.24.2\x64
Created link C:\hostedtoolcache\windows\go\1.24.2\x64.complete => D:\hostedtoolcache\windows\go\1.24.2\x64.complete
Successfully cached go to C:\hostedtoolcache\windows\go\1.24.2\x64
Added go to the path
Successfully set up Go version stable
[command]C:\hostedtoolcache\windows\go\1.24.2\x64\bin\go.exe env GOMODCACHE
[command]C:\hostedtoolcache\windows\go\1.24.2\x64\bin\go.exe env GOCACHE
C:\Users\runneradmin\go\pkg\mod
C:\Users\runneradmin\AppData\Local\go-build
##[warning]Restore cache failed: Dependencies file is not found in D:\a\bubbletea\bubbletea. Supported file pattern: go.sum
go version go1.24.2 windows/amd64
2025-04-14T09:20:30.4022516Z
##[group]go env
set AR=ar
set CC=gcc
set CGO_CFLAGS=-O2 -g
set CGO_CPPFLAGS=
set CGO_CXXFLAGS=-O2 -g
set CGO_ENABLED=1
set CGO_FFLAGS=-O2 -g
set CGO_LDFLAGS=-O2 -g
set CXX=g++
set GCCGO=gccgo
set GO111MODULE=
set GOAMD64=v1
set GOARCH=amd64
set GOAUTH=netrc
set GOBIN=
set GOCACHE=C:\Users\runneradmin\AppData\Local\go-build
set GOCACHEPROG=
set GODEBUG=
set GOENV=C:\Users\runneradmin\AppData\Roaming\go\env
set GOEXE=.exe
set GOEXPERIMENT=
set GOFIPS140=off
set GOFLAGS=
set GOGCCFLAGS=-m64 -mthreads -Wl,--no-gc-sections -fmessage-length=0 -ffile-prefix-map=C:\Users\RUNNER~1\AppData\Local\Temp\go-build2645932658=/tmp/go-build -gno-record-gcc-switches
set GOHOSTARCH=amd64
set GOHOSTOS=windows
set GOINSECURE=
set GOMOD=NUL
set GOMODCACHE=C:\Users\runneradmin\go\pkg\mod
set GONOPROXY=
set GONOSUMDB=
set GOOS=windows
set GOPATH=C:\Users\runneradmin\go
set GOPRIVATE=
set GOPROXY=https://proxy.golang.org,direct
set GOROOT=C:\hostedtoolcache\windows\go\1.24.2\x64
set GOSUMDB=sum.golang.org
set GOTELEMETRY=local
set GOTELEMETRYDIR=C:\Users\runneradmin\AppData\Roaming\go\telemetry
set GOTMPDIR=
set GOTOOLCHAIN=auto
set GOTOOLDIR=C:\hostedtoolcache\windows\go\1.24.2\x64\pkg\tool\windows_amd64
set GOVCS=
set GOVERSION=go1.24.2
set GOWORK=
set PKG_CONFIG=pkg-config
2025-04-14T09:20:39.8315737Z
##[endgroup]
##[group]Run <:*:>
with:
working-directory: charmbracelet/bubbletea
args: --config="D:\a\bubbletea\bubbletea/charmbracelet/meta/golangci.yml" --timeout=5m
install-mode: binary
github-token: ***
<:*:> true
<:*:> false
<:*:> false
<:*:> false
<:*:> false
cache-invalidation-interval: 7
##[endgroup]
##[group]prepare environment
Checking for go.mod: charmbracelet\bubbletea\go.mod
Cache not found for input keys: golangci-lint.cache-Windows-charmbracelet/bubbletea-2884-a41e129518298f55dbe75a34369bfc28c0379178, golangci-lint.cache-Windows-charmbracelet/bubbletea-2884-
Finding needed golangci-lint version...
Requested golangci-lint 'latest', using 'v2.1.1', calculation took 46ms
Installation mode: binary
Installing golangci-lint binary v2.1.1...
Downloading binary https://github.com/golangci/golangci-lint/releases/download/v2.1.1/golangci-lint-2.1.1-windows-amd64.zip ...
[command]"C:\Program Files\PowerShell\7\pwsh.exe" -NoLogo -NoProfile -NonInteractive -ExecutionPolicy Unrestricted -Command "$ErrorActionPreference = 'Stop' ; try { Add-Type -AssemblyName System.IO.Compression.ZipFile } catch { } ; try { [System.IO.Compression.ZipFile]::ExtractToDirectory('D:\a\_temp\2de94dfc-a17f-4e85-9daa-b0f0b3d9121e', 'D:\a\_temp\89243a58-4973-4ed8-957d-f9db8cb3870a', $true) } catch { if (($_.Exception.GetType().FullName -eq 'System.Management.Automation.MethodException') -or ($_.Exception.GetType().FullName -eq 'System.Management.Automation.RuntimeException') ){ Expand-Archive -LiteralPath 'D:\a\_temp\2de94dfc-a17f-4e85-9daa-b0f0b3d9121e' -DestinationPath 'D:\a\_temp\89243a58-4973-4ed8-957d-f9db8cb3870a' -Force } else { throw $_ } } ;"
Installed golangci-lint into D:\a\_temp\89243a58-4973-4ed8-957d-f9db8cb3870a\golangci-lint-2.1.1-windows-amd64\golangci-lint in 1044ms
Prepared env in 1532ms
##[endgroup]
##[group]run golangci-lint
Running [D:\a\_temp\89243a58-4973-4ed8-957d-f9db8cb3870a\golangci-lint-2.1.1-windows-amd64\golangci-lint config path --config="D:\a\bubbletea\bubbletea/charmbracelet/meta/golangci.yml"] in [D:\a\bubbletea\bubbletea\charmbracelet\bubbletea] ...
Running [D:\a\_temp\89243a58-4973-4ed8-957d-f9db8cb3870a\golangci-lint-2.1.1-windows-amd64\golangci-lint config verify --config="D:\a\bubbletea\bubbletea/charmbracelet/meta/golangci.yml"] in [D:\a\bubbletea\bubbletea\charmbracelet\bubbletea] ...
Running [D:\a\_temp\89243a58-4973-4ed8-957d-f9db8cb3870a\golangci-lint-2.1.1-windows-amd64\golangci-lint run --path-prefix=charmbracelet/bubbletea --config="D:\a\bubbletea\bubbletea/charmbracelet/meta/golangci.yml" --timeout=5m] in [D:\a\bubbletea\bubbletea\charmbracelet\bubbletea] ...
##[error]charmbracelet\bubbletea\tty_windows.go:59:12: G302: Expect file permissions to be 0600 or less (gosec)
f, err := os.OpenFile("CONIN$", os.O_RDWR, 0o644)
^
##[error]charmbracelet\bubbletea\key_windows.go:120:2: QF1002: could use tagged switch on btn (staticcheck)
switch {
^
2 issues:
* gosec: 1
* staticcheck: 1
2025-04-14T09:21:13.6754575Z
##[error]issues found
Ran golangci-lint in 31372ms
##[endgroup]
Post job cleanup.
[command]"C:\Program Files\Git\usr\bin\tar.exe" --posix -cf cache.tzst --exclude cache.tzst -P -C D:/a/bubbletea/bubbletea --files-from manifest.txt --force-local --use-compress-program "zstd -T0"
Sent <:NUM:> of <:NUM:> (<:NUM:>.<:NUM:>%), <:NUM:>.<:NUM:> MBs/sec
Saved cache for golangci-lint from paths 'C:\Users\runneradmin\.cache\golangci-lint' in 1340ms
Post job cleanup.
[command]"C:\Program Files\Git\bin\git.exe" version
git version 2.49.0.windows.1
Copying 'C:\Users\runneradmin\.gitconfig' to 'D:\a\_temp\ba07a864-f8a8-4692-98d4-bf93c81a301d\.gitconfig'
Temporarily overriding HOME='D:\a\_temp\ba07a864-f8a8-4692-98d4-bf93c81a301d' before making global git config changes
Adding repository directory to the temporary git global config as a safe directory
[command]"C:\Program Files\Git\bin\git.exe" config --global --add safe.directory D:\a\bubbletea\bubbletea\charmbracelet\meta
[command]"C:\Program Files\Git\bin\git.exe" config --local --name-only --get-regexp core\.sshCommand
[command]"C:\Program Files\Git\bin\git.exe" submodule foreach --recursive "sh -c \"git config --local --name-only --get-regexp 'core\.sshCommand' && git config --local --unset-all 'core.sshCommand' || :\""
[command]"C:\Program Files\Git\bin\git.exe" config --local --name-only --get-regexp http\.https\:\/\/github\.com\/\.extraheader
http.https://github.com/.extraheader
[command]"C:\Program Files\Git\bin\git.exe" config --local --unset-all http.https://github.com/.extraheader
[command]"C:\Program Files\Git\bin\git.exe" submodule foreach --recursive "sh -c \"git config --local --name-only --get-regexp 'http\.https\:\/\/github\.com\/\.extraheader' && git config --local --unset-all 'http.https://github.com/.extraheader' || :\""
Post job cleanup.
[command]"C:\Program Files\Git\bin\git.exe" version
git version 2.49.0.windows.1
Copying 'C:\Users\runneradmin\.gitconfig' to 'D:\a\_temp\897c9585-3ea5-48be-846e-66a0543fba32\.gitconfig'
Temporarily overriding HOME='D:\a\_temp\897c9585-3ea5-48be-846e-66a0543fba32' before making global git config changes
Adding repository directory to the temporary git global config as a safe directory
[command]"C:\Program Files\Git\bin\git.exe" config --global --add safe.directory D:\a\bubbletea\bubbletea\charmbracelet\bubbletea
[command]"C:\Program Files\Git\bin\git.exe" config --local --name-only --get-regexp core\.sshCommand
[command]"C:\Program Files\Git\bin\git.exe" submodule foreach --recursive "sh -c \"git config --local --name-only --get-regexp 'core\.sshCommand' && git config --local --unset-all 'core.sshCommand' || :\""
[command]"C:\Program Files\Git\bin\git.exe" config --local --name-only --get-regexp http\.https\:\/\/github\.com\/\.extraheader
http.https://github.com/.extraheader
[command]"C:\Program Files\Git\bin\git.exe" config --local --unset-all http.https://github.com/.extraheader
[command]"C:\Program Files\Git\bin\git.exe" submodule foreach --recursive "sh -c \"git config --local --name-only --get-regexp 'http\.https\:\/\/github\.com\/\.extraheader' && git config --local --unset-all 'http.https://github.com/.extraheader' || :\""
Cleaning up orphan processes
