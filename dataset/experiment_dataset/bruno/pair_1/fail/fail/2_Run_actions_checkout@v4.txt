2025-04-15T11:27:12.2027443Z ##[group]Run actions/checkout@v4
2025-04-15T11:27:12.2028379Z with:
2025-04-15T11:27:12.2028848Z   repository: usebruno/bruno
2025-04-15T11:27:12.2029515Z   token: ***
2025-04-15T11:27:12.2029994Z   ssh-strict: true
2025-04-15T11:27:12.2030421Z   ssh-user: git
2025-04-15T11:27:12.2030858Z   persist-credentials: true
2025-04-15T11:27:12.2031339Z   clean: true
2025-04-15T11:27:12.2031771Z   sparse-checkout-cone-mode: true
2025-04-15T11:27:12.2032290Z   fetch-depth: 1
2025-04-15T11:27:12.2032746Z   fetch-tags: false
2025-04-15T11:27:12.2033196Z   show-progress: true
2025-04-15T11:27:12.2033631Z   lfs: false
2025-04-15T11:27:12.2034042Z   submodules: false
2025-04-15T11:27:12.2034478Z   set-safe-directory: true
2025-04-15T11:27:12.2035204Z ##[endgroup]
2025-04-15T11:27:12.4485560Z Syncing repository: usebruno/bruno
2025-04-15T11:27:12.4488490Z ##[group]Getting Git version info
2025-04-15T11:27:12.4489711Z Working directory is '/home/runner/work/bruno/bruno'
2025-04-15T11:27:12.4491469Z [command]/usr/bin/git version
2025-04-15T11:27:12.4578612Z git version 2.49.0
2025-04-15T11:27:12.4607947Z ##[endgroup]
2025-04-15T11:27:12.4621757Z Temporarily overriding HOME='/home/runner/work/_temp/d5fe4079-cd67-4f45-a95d-cf1f498e331f' before making global git config changes
2025-04-15T11:27:12.4623177Z Adding repository directory to the temporary git global config as a safe directory
2025-04-15T11:27:12.4627297Z [command]/usr/bin/git config --global --add safe.directory /home/runner/work/bruno/bruno
2025-04-15T11:27:12.4661299Z Deleting the contents of '/home/runner/work/bruno/bruno'
2025-04-15T11:27:12.4664868Z ##[group]Initializing the repository
2025-04-15T11:27:12.4669321Z [command]/usr/bin/git init /home/runner/work/bruno/bruno
2025-04-15T11:27:12.4756707Z hint: Using 'master' as the name for the initial branch. This default branch name
2025-04-15T11:27:12.4758222Z hint: is subject to change. To configure the initial branch name to use in all
2025-04-15T11:27:12.4759281Z hint: of your new repositories, which will suppress this warning, call:
2025-04-15T11:27:12.4760438Z hint:
2025-04-15T11:27:12.4760957Z hint: 	git config --global init.defaultBranch <name>
2025-04-15T11:27:12.4761591Z hint:
2025-04-15T11:27:12.4762190Z hint: Names commonly chosen instead of 'master' are 'main', 'trunk' and
2025-04-15T11:27:12.4763295Z hint: 'development'. The just-created branch can be renamed via this command:
2025-04-15T11:27:12.4764096Z hint:
2025-04-15T11:27:12.4764512Z hint: 	git branch -m <name>
2025-04-15T11:27:12.4766678Z Initialized empty Git repository in /home/runner/work/bruno/bruno/.git/
2025-04-15T11:27:12.4778831Z [command]/usr/bin/git remote add origin https://github.com/usebruno/bruno
2025-04-15T11:27:12.4812515Z ##[endgroup]
2025-04-15T11:27:12.4813872Z ##[group]Disabling automatic garbage collection
2025-04-15T11:27:12.4817882Z [command]/usr/bin/git config --local gc.auto 0
2025-04-15T11:27:12.4846843Z ##[endgroup]
2025-04-15T11:27:12.4848251Z ##[group]Setting up auth
2025-04-15T11:27:12.4854457Z [command]/usr/bin/git config --local --name-only --get-regexp core\.sshCommand
2025-04-15T11:27:12.4885867Z [command]/usr/bin/git submodule foreach --recursive sh -c "git config --local --name-only --get-regexp 'core\.sshCommand' && git config --local --unset-all 'core.sshCommand' || :"
2025-04-15T11:27:12.5238872Z [command]/usr/bin/git config --local --name-only --get-regexp http\.https\:\/\/github\.com\/\.extraheader
2025-04-15T11:27:12.5267416Z [command]/usr/bin/git submodule foreach --recursive sh -c "git config --local --name-only --get-regexp 'http\.https\:\/\/github\.com\/\.extraheader' && git config --local --unset-all 'http.https://github.com/.extraheader' || :"
2025-04-15T11:27:12.5498813Z [command]/usr/bin/git config --local http.https://github.com/.extraheader AUTHORIZATION: basic ***
2025-04-15T11:27:12.5545337Z ##[endgroup]
2025-04-15T11:27:12.5547018Z ##[group]Fetching the repository
2025-04-15T11:27:12.5555525Z [command]/usr/bin/git -c protocol.version=2 fetch --no-tags --prune --no-recurse-submodules --depth=1 origin +a68bab5950ebd2966e38a4ad3d0a2e1e31bdbc02:refs/remotes/pull/4507/merge
2025-04-15T11:27:13.0306943Z From https://github.com/usebruno/bruno
2025-04-15T11:27:13.0309163Z  * [new ref]         a68bab5950ebd2966e38a4ad3d0a2e1e31bdbc02 -> pull/4507/merge
2025-04-15T11:27:13.0341465Z ##[endgroup]
2025-04-15T11:27:13.0343296Z ##[group]Determining the checkout info
2025-04-15T11:27:13.0345290Z ##[endgroup]
2025-04-15T11:27:13.0349685Z [command]/usr/bin/git sparse-checkout disable
2025-04-15T11:27:13.0391149Z [command]/usr/bin/git config --local --unset-all extensions.worktreeConfig
2025-04-15T11:27:13.0419807Z ##[group]Checking out the ref
2025-04-15T11:27:13.0423718Z [command]/usr/bin/git checkout --progress --force refs/remotes/pull/4507/merge
2025-04-15T11:27:13.1132004Z Note: switching to 'refs/remotes/pull/4507/merge'.
2025-04-15T11:27:13.1133198Z 
2025-04-15T11:27:13.1134010Z You are in 'detached HEAD' state. You can look around, make experimental
2025-04-15T11:27:13.1136876Z changes and commit them, and you can discard any commits you make in this
2025-04-15T11:27:13.1140168Z state without impacting any branches by switching back to a branch.
2025-04-15T11:27:13.1141646Z 
2025-04-15T11:27:13.1142647Z If you want to create a new branch to retain commits you create, you may
2025-04-15T11:27:13.1144955Z do so (now or later) by using -c with the switch command. Example:
2025-04-15T11:27:13.1146233Z 
2025-04-15T11:27:13.1147008Z   git switch -c <new-branch-name>
2025-04-15T11:27:13.1148006Z 
2025-04-15T11:27:13.1148613Z Or undo this operation with:
2025-04-15T11:27:13.1149505Z 
2025-04-15T11:27:13.1149986Z   git switch -
2025-04-15T11:27:13.1150621Z 
2025-04-15T11:27:13.1151651Z Turn off this advice by setting config variable advice.detachedHead to false
2025-04-15T11:27:13.1153284Z 
2025-04-15T11:27:13.1155151Z HEAD is now at a68bab5 Merge d9c0cc8b3698f90774fbc0e95a2c80979e0a8a99 into d376947a9101c38a5537f10b7eaa7f1f9d192f6c
2025-04-15T11:27:13.1159461Z ##[endgroup]
2025-04-15T11:27:13.1184723Z [command]/usr/bin/git log -1 --format=%H
2025-04-15T11:27:13.1207507Z a68bab5950ebd2966e38a4ad3d0a2e1e31bdbc02
