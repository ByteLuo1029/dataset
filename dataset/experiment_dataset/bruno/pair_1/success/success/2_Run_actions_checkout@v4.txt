2025-04-15T11:23:33.7661319Z ##[group]Run actions/checkout@v4
2025-04-15T11:23:33.7662140Z with:
2025-04-15T11:23:33.7662534Z   repository: usebruno/bruno
2025-04-15T11:23:33.7663135Z   token: ***
2025-04-15T11:23:33.7663503Z   ssh-strict: true
2025-04-15T11:23:33.7663884Z   ssh-user: git
2025-04-15T11:23:33.7664267Z   persist-credentials: true
2025-04-15T11:23:33.7664709Z   clean: true
2025-04-15T11:23:33.7665273Z   sparse-checkout-cone-mode: true
2025-04-15T11:23:33.7665752Z   fetch-depth: 1
2025-04-15T11:23:33.7666125Z   fetch-tags: false
2025-04-15T11:23:33.7666519Z   show-progress: true
2025-04-15T11:23:33.7666905Z   lfs: false
2025-04-15T11:23:33.7667258Z   submodules: false
2025-04-15T11:23:33.7667639Z   set-safe-directory: true
2025-04-15T11:23:33.7668340Z ##[endgroup]
2025-04-15T11:23:34.0315465Z Syncing repository: usebruno/bruno
2025-04-15T11:23:34.0317292Z ##[group]Getting Git version info
2025-04-15T11:23:34.0318123Z Working directory is '/home/runner/work/bruno/bruno'
2025-04-15T11:23:34.0319647Z [command]/usr/bin/git version
2025-04-15T11:23:34.0437102Z git version 2.49.0
2025-04-15T11:23:34.0467358Z ##[endgroup]
2025-04-15T11:23:34.0480716Z Temporarily overriding HOME='/home/runner/work/_temp/67f43b95-98a1-477f-9e76-645d6ced3285' before making global git config changes
2025-04-15T11:23:34.0482147Z Adding repository directory to the temporary git global config as a safe directory
2025-04-15T11:23:34.0486600Z [command]/usr/bin/git config --global --add safe.directory /home/runner/work/bruno/bruno
2025-04-15T11:23:34.0522940Z Deleting the contents of '/home/runner/work/bruno/bruno'
2025-04-15T11:23:34.0527118Z ##[group]Initializing the repository
2025-04-15T11:23:34.0530634Z [command]/usr/bin/git init /home/runner/work/bruno/bruno
2025-04-15T11:23:34.0639683Z hint: Using 'master' as the name for the initial branch. This default branch name
2025-04-15T11:23:34.0640892Z hint: is subject to change. To configure the initial branch name to use in all
2025-04-15T11:23:34.0641837Z hint: of your new repositories, which will suppress this warning, call:
2025-04-15T11:23:34.0642807Z hint:
2025-04-15T11:23:34.0643326Z hint: 	git config --global init.defaultBranch <name>
2025-04-15T11:23:34.0643937Z hint:
2025-04-15T11:23:34.0644887Z hint: Names commonly chosen instead of 'master' are 'main', 'trunk' and
2025-04-15T11:23:34.0646247Z hint: 'development'. The just-created branch can be renamed via this command:
2025-04-15T11:23:34.0647022Z hint:
2025-04-15T11:23:34.0647429Z hint: 	git branch -m <name>
2025-04-15T11:23:34.0654818Z Initialized empty Git repository in /home/runner/work/bruno/bruno/.git/
2025-04-15T11:23:34.0668948Z [command]/usr/bin/git remote add origin https://github.com/usebruno/bruno
2025-04-15T11:23:34.0710504Z ##[endgroup]
2025-04-15T11:23:34.0711609Z ##[group]Disabling automatic garbage collection
2025-04-15T11:23:34.0717013Z [command]/usr/bin/git config --local gc.auto 0
2025-04-15T11:23:34.0750754Z ##[endgroup]
2025-04-15T11:23:34.0751756Z ##[group]Setting up auth
2025-04-15T11:23:34.0762307Z [command]/usr/bin/git config --local --name-only --get-regexp core\.sshCommand
2025-04-15T11:23:34.0797776Z [command]/usr/bin/git submodule foreach --recursive sh -c "git config --local --name-only --get-regexp 'core\.sshCommand' && git config --local --unset-all 'core.sshCommand' || :"
2025-04-15T11:23:34.1182723Z [command]/usr/bin/git config --local --name-only --get-regexp http\.https\:\/\/github\.com\/\.extraheader
2025-04-15T11:23:34.1212974Z [command]/usr/bin/git submodule foreach --recursive sh -c "git config --local --name-only --get-regexp 'http\.https\:\/\/github\.com\/\.extraheader' && git config --local --unset-all 'http.https://github.com/.extraheader' || :"
2025-04-15T11:23:34.1439208Z [command]/usr/bin/git config --local http.https://github.com/.extraheader AUTHORIZATION: basic ***
2025-04-15T11:23:34.1474722Z ##[endgroup]
2025-04-15T11:23:34.1476342Z ##[group]Fetching the repository
2025-04-15T11:23:34.1484658Z [command]/usr/bin/git -c protocol.version=2 fetch --no-tags --prune --no-recurse-submodules --depth=1 origin +cc7eb77bd757a28bd400a20b1727bc3a4adb1aa4:refs/remotes/pull/4509/merge
2025-04-15T11:23:34.6127726Z From https://github.com/usebruno/bruno
2025-04-15T11:23:34.6129717Z  * [new ref]         cc7eb77bd757a28bd400a20b1727bc3a4adb1aa4 -> pull/4509/merge
2025-04-15T11:23:34.6173642Z ##[endgroup]
2025-04-15T11:23:34.6175603Z ##[group]Determining the checkout info
2025-04-15T11:23:34.6177586Z ##[endgroup]
2025-04-15T11:23:34.6182426Z [command]/usr/bin/git sparse-checkout disable
2025-04-15T11:23:34.6226372Z [command]/usr/bin/git config --local --unset-all extensions.worktreeConfig
2025-04-15T11:23:34.6254768Z ##[group]Checking out the ref
2025-04-15T11:23:34.6259013Z [command]/usr/bin/git checkout --progress --force refs/remotes/pull/4509/merge
2025-04-15T11:23:34.6971187Z Note: switching to 'refs/remotes/pull/4509/merge'.
2025-04-15T11:23:34.6972774Z 
2025-04-15T11:23:34.6973911Z You are in 'detached HEAD' state. You can look around, make experimental
2025-04-15T11:23:34.6976355Z changes and commit them, and you can discard any commits you make in this
2025-04-15T11:23:34.6978066Z state without impacting any branches by switching back to a branch.
2025-04-15T11:23:34.6979548Z 
2025-04-15T11:23:34.6980478Z If you want to create a new branch to retain commits you create, you may
2025-04-15T11:23:34.6982410Z do so (now or later) by using -c with the switch command. Example:
2025-04-15T11:23:34.6983292Z 
2025-04-15T11:23:34.6983630Z   git switch -c <new-branch-name>
2025-04-15T11:23:34.6984188Z 
2025-04-15T11:23:34.6984520Z Or undo this operation with:
2025-04-15T11:23:34.6985162Z 
2025-04-15T11:23:34.6985442Z   git switch -
2025-04-15T11:23:34.6985866Z 
2025-04-15T11:23:34.6986560Z Turn off this advice by setting config variable advice.detachedHead to false
2025-04-15T11:23:34.6987651Z 
2025-04-15T11:23:34.6988862Z HEAD is now at cc7eb77 Merge 2f480234aaa1970c111ddb86e232cc65bc8e8303 into d376947a9101c38a5537f10b7eaa7f1f9d192f6c
2025-04-15T11:23:34.6992495Z ##[endgroup]
2025-04-15T11:23:34.7020549Z [command]/usr/bin/git log -1 --format=%H
2025-04-15T11:23:34.7043694Z cc7eb77bd757a28bd400a20b1727bc3a4adb1aa4
