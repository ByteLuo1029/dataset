Requested labels: ubuntu-latest
Job defined at: python/cpython/.github/workflows/lint.yml@refs/pull/132540/merge
Waiting for a runner to pick up this job...
Job is waiting for a hosted runner to come online.
Job is about to start running on the hosted runner: GitHub Actions 104 (hosted)
Current runner version: '2.323.0'
##[group]Operating System
Ubuntu
24.04.2
LTS
##[endgroup]
##[group]Runner Image
Image: ubuntu-24.04
Version: 20250406.1.0
Included Software: https://github.com/actions/runner-images/blob/ubuntu24/20250406.1/images/ubuntu/Ubuntu2404-Readme.md
Image Release: https://github.com/actions/runner-images/releases/tag/ubuntu24%2F20250406.1
##[endgroup]
##[group]Runner Image Provisioner
2.0.422.1
##[endgroup]
##[group]GITHUB_TOKEN Permissions
Contents: <:*:>
Metadata: read
##[endgroup]
Secret source: <:*:>
Prepare workflow directory
Prepare all required actions
Getting action download info
##[group]Download immutable action package <:*:>
Version: 4.2.2
Digest: sha256:<:SEQ:>
Source commit SHA: <:SEQ:>
##[endgroup]
##[group]Download immutable action package <:*:>
Version: 5.5.0
Digest: sha256:<:SEQ:>
Source commit SHA: <:SEQ:>
##[endgroup]
Download action repository <:*:> (SHA:<:SEQ:>)
Getting action download info
##[group]Download immutable action package <:*:>
Version: 4.2.3
Digest: sha256:<:SEQ:>
Source commit SHA: <:SEQ:>
##[endgroup]
Complete job name: <:*:>
##[group]Run <:*:>
with:
persist-credentials: <:*:>
repository: <:*:>
token: ***
ssh-strict: true
ssh-user: git
clean: true
sparse-checkout-cone-mode: true
fetch-depth: <:NUM:>
fetch-tags: false
show-progress: true
lfs: false
submodules: <:*:>
set-safe-directory: true
env:
FORCE_COLOR: 1
RUFF_OUTPUT_FORMAT: github
##[endgroup]
Syncing repository: <:*:>
##[group]Getting Git version info
Working directory is <:*:>
[command]/usr/bin/git version
git version <:NUM:>.<:NUM:>.<:NUM:>
##[endgroup]
Temporarily overriding HOME='/home/runner/work/_temp/04442260-451e-45b6-a694-a893410dbe98' before making global git config changes
Adding repository directory to the temporary git global config as a safe directory
[command]/usr/bin/git config --global --add safe.directory /home/runner/work/cpython/cpython
Deleting the contents of <:*:>
##[group]Initializing the repository
[command]/usr/bin/git init <:*:>
hint: Using 'master' as the name for the initial branch. This default branch name
hint: is subject to change. To configure the initial branch name to use in all
hint: of your new repositories, which will suppress this warning, call:
hint:
hint: git config --global init.defaultBranch <name>
hint:
hint: Names commonly chosen instead of 'master' are 'main', 'trunk' and
hint: 'development'. The just-created branch can be renamed via this command:
hint:
hint: git branch -m <name>
Initialized empty Git repository in <:*:>
[command]/usr/bin/git remote add origin <:*:>
##[endgroup]
##[group]Disabling automatic garbage collection
[command]/usr/bin/git config --local gc.auto 0
##[endgroup]
##[group]Setting up auth
[command]/usr/bin/git config --local --name-only --get-regexp <:*:>
[command]/usr/bin/git submodule foreach --recursive sh -c "git config --local --name-only --get-regexp <:*:> && git config --local --unset-all <:*:> || :"
[command]/usr/bin/git config --local --name-only --get-regexp <:*:>
[command]/usr/bin/git submodule foreach --recursive sh -c "git config --local --name-only --get-regexp <:*:> && git config --local --unset-all <:*:> || :"
[command]/usr/bin/git config <:*:> http.https://github.com/.extraheader AUTHORIZATION: basic ***
##[endgroup]
##[group]Fetching the repository
[command]/usr/bin/git -c protocol.version=<:NUM:> fetch <:*:> <:*:> <:*:> <:*:> <:*:> <:*:>
From <:*:>
* [new ref] <:SEQ:>-> <:*:>
##[endgroup]
##[group]Determining the checkout info
##[endgroup]
[command]/usr/bin/git sparse-checkout disable
[command]/usr/bin/git config --local --unset-all extensions.worktreeConfig
##[group]Checking out the ref
[command]/usr/bin/git checkout --progress --force refs/remotes/pull/<:NUM:>/merge
Note: switching to 'refs/remotes/pull/<:NUM:>/merge'.
2025-04-15T04:30:14.8423352Z
You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by switching back to a branch.
2025-04-15T04:30:14.8425965Z
If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -c with the switch command. Example:
2025-04-15T04:30:14.8427909Z
git switch -c <new-branch-name>
2025-04-15T04:30:14.8428418Z
Or undo this operation with:
2025-04-15T04:30:14.8428915Z
git switch -
2025-04-15T04:30:14.8429347Z
Turn off this advice by setting config variable advice.detachedHead to false
2025-04-15T04:30:14.8430540Z
HEAD is now at <:*:> Merge <:SEQ:> into <:SEQ:>
##[endgroup]
[command]/usr/bin/git log <:NUM:> <:*:>
<:SEQ:>
##[group]Removing auth
[command]/usr/bin/git config --local --name-only --get-regexp <:*:>
[command]/usr/bin/git submodule foreach --recursive sh -c "git config --local --name-only --get-regexp <:*:> && git config --local --unset-all <:*:> || :"
[command]/usr/bin/git config --local --name-only --get-regexp <:*:>
http.https://github.com/.extraheader
[command]/usr/bin/git config --local --unset-all http.https://github.com/.extraheader
[command]/usr/bin/git submodule foreach --recursive sh -c "git config --local --name-only --get-regexp <:*:> && git config --local --unset-all <:*:> || :"
##[endgroup]
##[group]Run <:*:>
with:
python-version: <:*:>
check-latest: false
token: ***
<:*:> true
<:*:> false
<:*:> false
env:
FORCE_COLOR: 1
RUFF_OUTPUT_FORMAT: github
##[endgroup]
##[group]Installed versions
Successfully set up CPython (<:NUM:>.<:NUM:>.<:NUM:>)
##[endgroup]
##[group]Run <:*:>
with:
extra args: --all-files
env:
FORCE_COLOR: 1
RUFF_OUTPUT_FORMAT: github
pythonLocation: /opt/hostedtoolcache/Python/<:NUM:>.<:NUM:>.<:NUM:>/x64
PKG CONFIG PATH: /opt/hostedtoolcache/Python/<:NUM:>.<:NUM:>.<:NUM:>/x64/lib/pkgconfig
Python ROOT DIR: /opt/hostedtoolcache/Python/<:NUM:>.<:NUM:>.<:NUM:>/x64
<:*:> ROOT DIR: /opt/hostedtoolcache/Python/<:NUM:>.<:NUM:>.<:NUM:>/x64
<:*:> ROOT DIR: /opt/hostedtoolcache/Python/<:NUM:>.<:NUM:>.<:NUM:>/x64
LD LIBRARY PATH: /opt/hostedtoolcache/Python/<:NUM:>.<:NUM:>.<:NUM:>/x64/lib
##[endgroup]
##[group]Run python -m pip <:*:> <:*:>
[<:NUM:>;1mpython -m pip <:*:> <:*:>
shell: /usr/bin/bash --noprofile --norc -e -o pipefail {<:NUM:>}
env:
FORCE_COLOR: 1
RUFF_OUTPUT_FORMAT: github
pythonLocation: /opt/hostedtoolcache/Python/<:NUM:>.<:NUM:>.<:NUM:>/x64
PKG CONFIG PATH: /opt/hostedtoolcache/Python/<:NUM:>.<:NUM:>.<:NUM:>/x64/lib/pkgconfig
Python ROOT DIR: /opt/hostedtoolcache/Python/<:NUM:>.<:NUM:>.<:NUM:>/x64
<:*:> ROOT DIR: /opt/hostedtoolcache/Python/<:NUM:>.<:NUM:>.<:NUM:>/x64
<:*:> ROOT DIR: /opt/hostedtoolcache/Python/<:NUM:>.<:NUM:>.<:NUM:>/x64
LD LIBRARY PATH: /opt/hostedtoolcache/Python/<:NUM:>.<:NUM:>.<:NUM:>/x64/lib
##[endgroup]
Collecting <:*:>
Downloading <:*:> <:*:> <:*:> kB)
Collecting <:*:> (from <:*:>
Downloading <:*:> <:*:> kB)
Collecting <:*:> (from <:*:>
Downloading <:*:> <:*:> kB)
Collecting <:*:> (from <:*:>
Downloading <:*:> <:*:> kB)
Collecting <:*:> (from <:*:>
Downloading PyYAML-<:NUM:>.<:NUM:>.<:NUM:>-cp313-cp313-manylinux <:NUM:> <:NUM:> x86 <:NUM:>.manylinux2014 x86 <:*:> <:*:> kB)
Collecting <:*:> (from <:*:>
Downloading <:*:> <:*:> kB)
Collecting <:*:> (from <:*:>
Downloading <:*:> <:*:> kB)
Collecting <:*:> (from <:*:>
Downloading <:*:> <:*:> kB)
Collecting <:*:> (from <:*:>
Downloading <:*:> <:*:> kB)
Downloading <:*:> <:*:> <:*:> kB)
Downloading <:*:> <:*:> kB)
Downloading <:*:> <:*:> kB)
Downloading <:*:> <:*:> kB)
Downloading PyYAML-<:NUM:>.<:NUM:>.<:NUM:>-cp313-cp313-manylinux <:NUM:> <:NUM:> x86 <:NUM:>.manylinux2014 x86 <:*:> <:*:> kB)
[?25l   [90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━[0m [32m0.0/759.5 kB[0m [31m?[0m eta [36m-:--:--[0m
[2K   [90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━[0m [32m759.5/759.5 kB[0m [31m48.3 MB/s[0m eta [36m0:00:00[0m
[?25hDownloading virtualenv-20.30.0-py3-none-any.whl (4.3 MB)
[?25l   [90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━[0m [32m0.0/4.3 MB[0m [31m?[0m eta [36m-:--:--[0m
[2K   [90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━[0m [32m4.3/4.3 MB[0m [31m105.7 MB/s[0m eta [36m0:00:00[0m
[?25hDownloading distlib-0.3.9-py2.py3-none-any.whl (468 kB)
Downloading <:*:> <:*:> kB)
Downloading <:*:> <:*:> kB)
Installing collected packages: distlib, pyyaml, platformdirs, nodeenv, identify, filelock, cfgv, virtualenv, pre-commit
Successfully installed cfgv-<:NUM:>.<:NUM:>.<:NUM:> distlib-<:NUM:>.<:NUM:>.<:NUM:> filelock-<:NUM:>.<:NUM:>.<:NUM:> identify-<:NUM:>.<:NUM:>.<:NUM:> nodeenv-<:NUM:>.<:NUM:>.<:NUM:> platformdirs-<:NUM:>.<:NUM:>.<:NUM:> pre-commit-<:NUM:>.<:NUM:>.<:NUM:> pyyaml-<:NUM:>.<:NUM:>.<:NUM:> virtualenv-<:NUM:>.<:NUM:>.<:NUM:>
##[group]Run python -m pip <:*:> <:*:>
[<:NUM:>;1mpython -m pip <:*:> <:*:>
shell: /usr/bin/bash --noprofile --norc -e -o pipefail {<:NUM:>}
env:
FORCE_COLOR: 1
RUFF_OUTPUT_FORMAT: github
pythonLocation: /opt/hostedtoolcache/Python/<:NUM:>.<:NUM:>.<:NUM:>/x64
PKG CONFIG PATH: /opt/hostedtoolcache/Python/<:NUM:>.<:NUM:>.<:NUM:>/x64/lib/pkgconfig
Python ROOT DIR: /opt/hostedtoolcache/Python/<:NUM:>.<:NUM:>.<:NUM:>/x64
<:*:> ROOT DIR: /opt/hostedtoolcache/Python/<:NUM:>.<:NUM:>.<:NUM:>/x64
<:*:> ROOT DIR: /opt/hostedtoolcache/Python/<:NUM:>.<:NUM:>.<:NUM:>/x64
LD LIBRARY PATH: /opt/hostedtoolcache/Python/<:NUM:>.<:NUM:>.<:NUM:>/x64/lib
##[endgroup]
cfgv==<:NUM:>.<:NUM:>.<:NUM:>
distlib==<:NUM:>.<:NUM:>.<:NUM:>
filelock==<:NUM:>.<:NUM:>.<:NUM:>
identify==<:NUM:>.<:NUM:>.<:NUM:>
nodeenv==<:NUM:>.<:NUM:>.<:NUM:>
platformdirs==<:NUM:>.<:NUM:>.<:NUM:>
pre commit==<:NUM:>.<:NUM:>.<:NUM:>
PyYAML==<:NUM:>.<:NUM:>.<:NUM:>
virtualenv==<:NUM:>.<:NUM:>.<:NUM:>
##[group]Run <:*:>
with:
path: <:*:>
key: pre-commit-<:NUM:>|/opt/hostedtoolcache/Python/<:NUM:>.<:NUM:>.<:NUM:>/x64|<:SEQ:>
enableCrossOsArchive: false
fail-on-cache-miss: false
lookup-only: false
<:*:> false
env:
FORCE_COLOR: 1
RUFF_OUTPUT_FORMAT: github
pythonLocation: /opt/hostedtoolcache/Python/<:NUM:>.<:NUM:>.<:NUM:>/x64
PKG CONFIG PATH: /opt/hostedtoolcache/Python/<:NUM:>.<:NUM:>.<:NUM:>/x64/lib/pkgconfig
Python ROOT DIR: /opt/hostedtoolcache/Python/<:NUM:>.<:NUM:>.<:NUM:>/x64
<:*:> ROOT DIR: /opt/hostedtoolcache/Python/<:NUM:>.<:NUM:>.<:NUM:>/x64
<:*:> ROOT DIR: /opt/hostedtoolcache/Python/<:NUM:>.<:NUM:>.<:NUM:>/x64
LD LIBRARY PATH: /opt/hostedtoolcache/Python/<:NUM:>.<:NUM:>.<:NUM:>/x64/lib
##[endgroup]
Cache not found for input keys: pre-commit-<:NUM:>|/opt/hostedtoolcache/Python/<:NUM:>.<:NUM:>.<:NUM:>/x64|<:SEQ:>
##[group]Run pre-commit run --show-diff-on-failure --color=always --all-files
[<:NUM:>;1mpre-commit run --show-diff-on-failure --color=always --all-files[0m
shell: /usr/bin/bash --noprofile --norc -e -o pipefail {<:NUM:>}
env:
FORCE_COLOR: 1
RUFF_OUTPUT_FORMAT: github
pythonLocation: /opt/hostedtoolcache/Python/<:NUM:>.<:NUM:>.<:NUM:>/x64
PKG CONFIG PATH: /opt/hostedtoolcache/Python/<:NUM:>.<:NUM:>.<:NUM:>/x64/lib/pkgconfig
Python ROOT DIR: /opt/hostedtoolcache/Python/<:NUM:>.<:NUM:>.<:NUM:>/x64
<:*:> ROOT DIR: /opt/hostedtoolcache/Python/<:NUM:>.<:NUM:>.<:NUM:>/x64
<:*:> ROOT DIR: /opt/hostedtoolcache/Python/<:NUM:>.<:NUM:>.<:NUM:>/x64
LD LIBRARY PATH: /opt/hostedtoolcache/Python/<:NUM:>.<:NUM:>.<:NUM:>/x64/lib
##[endgroup]
[INFO][m <:*:> environment for <:*:>
[INFO][m <:*:> environment for <:*:>
[INFO][m <:*:> environment for <:*:>
[INFO][m <:*:> environment for <:*:>
[INFO][m <:*:> environment for <:*:>
[INFO][m <:*:> environment for <:*:>
[INFO][m <:*:> environment for <:*:>
[INFO][m <:*:> environment for <:*:>
[INFO][m Once installed this environment will be reused.
[INFO][m This may take a few minutes...
[INFO][m <:*:> environment for <:*:>
[INFO][m Once installed this environment will be reused.
[INFO][m This may take a few minutes...
[INFO][m <:*:> environment for <:*:>
[INFO][m Once installed this environment will be reused.
[INFO][m This may take a few minutes...
[INFO][m <:*:> environment for <:*:>
[INFO][m Once installed this environment will be reused.
[INFO][m This may take a few minutes...
[INFO][m <:*:> environment for <:*:>
[INFO][m Once installed this environment will be reused.
[INFO][m This may take a few minutes...
[INFO][m <:*:> environment for <:*:>
[INFO][m Once installed this environment will be reused.
[INFO][m This may take a few minutes...
[INFO][m <:*:> environment for <:*:>
[INFO][m Once installed this environment will be reused.
[INFO][m This may take a few minutes...
Run Ruff (lint) on Doc/..................................................[42mPassed[m
Run Ruff (lint) on Lib/test/.............................................[42mPassed[m
Run Ruff (lint) on Tools/build/check_warnings.py.........................[42mPassed[m
Run Ruff (lint) on Argument Clinic.......................................[42mPassed[m
Run Ruff (format) on Doc/................................................[42mPassed[m
Run Black on Tools/build/check_warnings.py...............................[42mPassed[m
Run Black on Tools/jit/..................................................[42mPassed[m
check for case conflicts.................................................[42mPassed[m
check for merge conflicts................................................[42mPassed[m
check toml...............................................................[42mPassed[m
check yaml...............................................................[42mPassed[m
fix end of files.........................................................[41mFailed[m
[2m- hook id: end-of-file-fixer[m
[2m- exit code: 1[m
[2m- files were modified by this hook[m
2025-04-15T04:31:05.7501441Z
Fixing Lib/http/server.py
2025-04-15T04:31:05.7501843Z
trim trailing whitespace.................................................[41mFailed[m
[2m- hook id: trailing-whitespace[m
[2m- exit code: 1[m
[2m- files were modified by this hook[m
2025-04-15T04:31:06.6856352Z
Fixing Lib/test/test_httpservers.py
2025-04-15T04:31:06.6856957Z
Validate Dependabot Config (v2)..........................................[42mPassed[m
Validate GitHub Workflows................................................[42mPassed[m
Validate ReadTheDocs Config..............................................[42mPassed[m
Lint GitHub Actions workflow files.......................................[42mPassed[m
zizmor...................................................................[42mPassed[m
Sphinx Lint..............................................................[42mPassed[m
Check C API news entries.............................(no files to check)[46;30mSkipped[m
Check Core and Builtins news entries.................(no files to check)[46;30mSkipped[m
Check hooks apply to the repository......................................[42mPassed[m
Check for useless excludes...............................................[42mPassed[m
pre-commit hook(s) made changes.
If you are seeing this message in CI, reproduce locally with: `pre-commit run --all-files`.
To run `pre-commit` as part of git workflow, use `pre-commit install`.
All changes made by hooks:
[1mdiff --git a/Lib/http/server.py b/Lib/http/server.py[m
[1mindex d0a7777..28f431a 100644[m
[1m--- a/Lib/http/server.py[m
[1m+++ b/Lib/http/server.py[m
[36m@@ -1423,4 +1423,4 @@[m [mdef finish_request(self, request, client_address):[m
[m
[m
if __name__ == '__main__':[m
[31m-    _main()[m
\ No newline at end of file[m
[32m+[m[32m    _main()[m
[1mdiff --git a/Lib/test/test_httpservers.py b/Lib/test/test_httpservers.py[m
[1mindex 51a6371..fa4523b 100644[m
[1m--- a/Lib/test/test_httpservers.py[m
[1m+++ b/Lib/test/test_httpservers.py[m
[36m@@ -1547,7 +1547,7 @@[m [mdef setUp(self):[m
self.default_server = http.server.CommandLineServerClass[m
self.tls_cert = '-----BEGIN CERTIFICATE-----\n' + '-----END CERTIFICATE-----\n'[m
self.tls_key = '-----BEGIN RSA PRIVATE KEY-----\n' + '-----END RSA PRIVATE KEY-----\n'[m
[31m-        [m
[32m+[m
self.tls_password = '<PASSWORD>'[m
tls_password_file_object = tempfile.NamedTemporaryFile(mode='w+', delete=False)[m
tls_password_file_object.write(self.tls_password)[m
[36m@@ -1624,7 +1624,7 @@[m [mdef test_cgi_flag(self, mock_func):[m
self.invoke_httpd(['--cgi'])[m
mock_func.assert_called_once_with(HandlerClass=CGIHTTPRequestHandler, ServerClass=self.default_server,[m
protocol=self.default_protocol, port=self.default_port, bind=self.default_bind,[m
[31m-                                          tls_cert=None, tls_key=None, tls_password=None)  [m
[32m+[m[32m                                          tls_cert=None, tls_key=None, tls_password=None)[m
[m
@mock.patch('http.server.test')[m
def test_tls_flag(self, mock_func):[m
[36m@@ -1632,7 +1632,7 @@[m [mdef test_tls_flag(self, mock_func):[m
tls_key_options = ['--tls-key', ][m
tls_password_options = ['--tls-password-file', ][m
# Normal: --tls-cert and --tls-key[m
[31m-        [m
[32m+[m
for tls_cert_option in tls_cert_options:[m
for tls_key_option in tls_key_options:[m
self.invoke_httpd([tls_cert_option, self.tls_cert, tls_key_option, self.tls_key])[m
[36m@@ -1640,36 +1640,36 @@[m [mdef test_tls_flag(self, mock_func):[m
protocol=self.default_protocol, port=self.default_port, bind=self.default_bind,[m
tls_cert=self.tls_cert, tls_key=self.tls_key, tls_password=None)[m
mock_func.reset_mock()[m
[31m-        [m
[32m+[m
# Normal: --tls-cert, --tls-key and --tls-password-file[m
[31m-        [m
[32m+[m
for tls_cert_option in tls_cert_options:[m
for tls_key_option in tls_key_options:[m
for tls_password_option in tls_password_options:[m
self.invoke_httpd([tls_cert_option, self.tls_cert, tls_key_option, self.tls_key, tls_password_option, self.tls_password_file])[m
[31m-                    [m
[32m+[m
mock_func.assert_called_once_with(HandlerClass=self.default_handler, ServerClass=self.default_server,[m
protocol=self.default_protocol, port=self.default_port, bind=self.default_bind,[m
tls_cert=self.tls_cert, tls_key=self.tls_key, tls_password=self.tls_password)[m
mock_func.reset_mock()[m
[31m-        [m
[32m+[m
# Abnormal: --tls-key without --tls-cert[m
[31m-        [m
[32m+[m
for tls_key_option in tls_key_options:[m
for tls_cert_option in tls_cert_options:[m
with self.assertRaises(SystemExit):[m
self.invoke_httpd([tls_key_option, self.tls_key])[m
mock_func.reset_mock()[m
[31m-        [m
[32m+[m
# Abnormal: --tls-password-file without --tls-cert[m
[31m-        [m
[32m+[m
for tls_password_option in tls_password_options:[m
with self.assertRaises(SystemExit):[m
self.invoke_httpd([tls_password_option, self.tls_password_file])[m
mock_func.reset_mock()[m
[31m-        [m
[32m+[m
# Abnormal: --tls-password-file cannot be opened[m
[31m-        [m
[32m+[m
non_existent_file = os.path.join(tempfile.gettempdir(), os.urandom(16).hex())[m
retry_count = 0[m
while os.path.exists(non_existent_file) and retry_count < 10:[m
##[error]Process completed with exit code 1.
Post job cleanup.
Post job cleanup.
[command]/usr/bin/git version
git version <:NUM:>.<:NUM:>.<:NUM:>
Temporarily overriding HOME='/home/runner/work/_temp/7361c057-d431-42fa-a93d-56e023a82d7f' before making global git config changes
Adding repository directory to the temporary git global config as a safe directory
[command]/usr/bin/git config --global --add safe.directory /home/runner/work/cpython/cpython
[command]/usr/bin/git config --local --name-only --get-regexp <:*:>
[command]/usr/bin/git submodule foreach --recursive sh -c "git config --local --name-only --get-regexp <:*:> && git config --local --unset-all <:*:> || :"
[command]/usr/bin/git config --local --name-only --get-regexp <:*:>
[command]/usr/bin/git submodule foreach --recursive sh -c "git config --local --name-only --get-regexp <:*:> && git config --local --unset-all <:*:> || :"
Cleaning up orphan processes
