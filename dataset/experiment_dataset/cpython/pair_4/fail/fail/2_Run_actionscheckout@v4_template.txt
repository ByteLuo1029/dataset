##[debug]Evaluating condition for step: 'Run actions/checkout@v4'
##[debug]Evaluating: success()
##[debug]Evaluating success:
<:*:> true
<:*:> true
##[debug]Starting: Run actions/checkout@v4
##[debug]Register post job cleanup for action: actions/checkout@v4
##[debug]Loading inputs
##[debug]Evaluating: github.repository
##[debug]Evaluating Index:
##[debug]..Evaluating github:
##[debug]..=> Object
##[debug]..Evaluating String:
##[debug]..=> 'repository'
##[debug]=> 'python/cpython'
##[debug]Result: 'python/cpython'
##[debug]Evaluating: github.token
##[debug]Evaluating Index:
##[debug]..Evaluating github:
##[debug]..=> Object
##[debug]..Evaluating String:
##[debug]..=> 'token'
##[debug]=> '***'
##[debug]Result: '***'
##[debug]Loading env
##[group]Run <:*:>
with:
persist-credentials: <:*:>
repository: <:*:>
token: ***
ssh-strict: true
ssh-user: git
clean: true
sparse-checkout-cone-mode: true
fetch-depth: <:NUM:>
fetch-tags: false
show-progress: true
lfs: false
submodules: <:*:>
set-safe-directory: true
env:
FORCE_COLOR: 1
##[endgroup]
##[debug]GITHUB_WORKSPACE = '/home/runner/work/cpython/cpython'
##[debug]qualified repository = 'python/cpython'
##[debug]ref = 'refs/heads/main'
##[debug]commit = '0879ebc953fa7372a4d99f3f79889093f04cac67'
##[debug]clean = true
##[debug]filter = undefined
##[debug]fetch depth = 1
##[debug]fetch tags = false
##[debug]show progress = true
##[debug]lfs = false
##[debug]submodules = false
##[debug]recursive submodules = false
##[debug]GitHub Host URL =
::add-matcher::/home/runner/work/_actions/actions/checkout/v4/dist/problem-matcher.json
##[debug]Added matchers: 'checkout-git'. Problem matchers scan action output for known warning or error strings and report these inline.
Syncing repository: <:*:>
::group::Getting Git version info
##[group]Getting Git version info
Working directory is <:*:>
##[debug]Getting git version
[command]/usr/bin/git version
git version <:NUM:>.<:NUM:>.<:NUM:>
##[debug]0
##[debug]git version 2.49.0
##[debug]
##[debug]Set git useragent to: git/2.49.0 (github-actions-checkout)
::endgroup::
##[endgroup]
::add-mask::***
Temporarily overriding HOME='/home/runner/work/_temp/6855a80e-49fb-4c18-a20e-9f494484b200' before making global git config changes
Adding repository directory to the temporary git global config as a safe directory
[command]/usr/bin/git config --global --add safe.directory /home/runner/work/cpython/cpython
##[debug]0
##[debug]
Deleting the contents of <:*:>
::group::Initializing the repository
##[group]Initializing the repository
[command]/usr/bin/git init <:*:>
hint: Using 'master' as the name for the initial branch. This default branch name
hint: is subject to change. To configure the initial branch name to use in all
hint: of your new repositories, which will suppress this warning, call:
hint:
hint: git config --global init.defaultBranch <name>
hint:
hint: Names commonly chosen instead of 'master' are 'main', 'trunk' and
hint: 'development'. The just-created branch can be renamed via this command:
hint:
hint: git branch -m <name>
Initialized empty Git repository in <:*:>
##[debug]0
##[debug]Initialized empty Git repository in /home/runner/work/cpython/cpython/.git/
##[debug]
[command]/usr/bin/git remote add origin <:*:>
##[debug]0
##[debug]
::endgroup::
##[endgroup]
::group::Disabling automatic garbage collection
##[group]Disabling automatic garbage collection
[command]/usr/bin/git config --local gc.auto 0
##[debug]0
##[debug]
::endgroup::
##[endgroup]
::group::Setting up auth
##[group]Setting up auth
[command]/usr/bin/git config --local --name-only --get-regexp <:*:>
##[debug]1
##[debug]
[command]/usr/bin/git submodule foreach --recursive sh -c "git config --local --name-only --get-regexp <:*:> && git config --local --unset-all <:*:> || :"
##[debug]0
##[debug]
[command]/usr/bin/git config --local --name-only --get-regexp <:*:>
##[debug]1
##[debug]
[command]/usr/bin/git submodule foreach --recursive sh -c "git config --local --name-only --get-regexp <:*:> && git config --local --unset-all <:*:> || :"
##[debug]0
##[debug]
[command]/usr/bin/git config <:*:> http.https://github.com/.extraheader AUTHORIZATION: basic ***
##[debug]0
##[debug]
::endgroup::
##[endgroup]
::group::Fetching the repository
##[group]Fetching the repository
[command]/usr/bin/git -c protocol.version=<:NUM:> fetch <:*:> <:*:> <:*:> <:*:> <:*:> <:*:>
From <:*:>
* [new ref] <:SEQ:>-> <:*:>
##[debug]0
##[debug]
::endgroup::
##[endgroup]
::group::Determining the checkout info
##[group]Determining the checkout info
::endgroup::
##[endgroup]
[command]/usr/bin/git sparse-checkout disable
##[debug]0
##[debug]
[command]/usr/bin/git config --local --unset-all extensions.worktreeConfig
##[debug]0
##[debug]
::group::Checking out the ref
##[group]Checking out the ref
[command]/usr/bin/git checkout --progress --force -B <:*:> <:*:>
Switched to a new branch 'main'
branch <:*:> set up to track <:*:>
##[debug]0
##[debug]branch 'main' set up to track 'origin/main'.
##[debug]
::endgroup::
##[endgroup]
##[debug]0
##[debug]commit 0879ebc953fa7372a4d99f3f79889093f04cac67
##[debug]Author: Barney Gale <barney.gale@gmail.com>
##[debug]Date:   Tue Apr 15 01:05:06 2025 +0100
##[debug]
##[debug]    GH-123599: Match `file:` URL hostname against machine hostname in urllib (#132523)
##[debug]
##[debug]    In `_is_local_authority()`, return early if the authority matches the
##[debug]    machine hostname from `socket.gethostname()`, rather than resolving the
##[debug]    names and matching IP addresses.
##[debug]
[command]/usr/bin/git log <:NUM:> <:*:>
<:SEQ:>
##[debug]0
##[debug]0879ebc953fa7372a4d99f3f79889093f04cac67
##[debug]
::group::Removing auth
##[group]Removing auth
[command]/usr/bin/git config --local --name-only --get-regexp <:*:>
##[debug]1
##[debug]
[command]/usr/bin/git submodule foreach --recursive sh -c "git config --local --name-only --get-regexp <:*:> && git config --local --unset-all <:*:> || :"
##[debug]0
##[debug]
[command]/usr/bin/git config --local --name-only --get-regexp <:*:>
http.https://github.com/.extraheader
##[debug]0
##[debug]http.https://github.com/.extraheader
##[debug]
[command]/usr/bin/git config --local --unset-all http.https://github.com/.extraheader
##[debug]0
##[debug]
[command]/usr/bin/git submodule foreach --recursive sh -c "git config --local --name-only --get-regexp <:*:> && git config --local --unset-all <:*:> || :"
##[debug]0
##[debug]
::endgroup::
##[endgroup]
##[debug]Unsetting HOME override
::remove-matcher owner=checkout-git::
##[debug]Removed matchers: 'checkout-git'
##[debug]Node Action run completed with exit code 0
##[debug]Save intra-action state isPost = true
##[debug]Save intra-action state setSafeDirectory = true
##[debug]Save intra-action state repositoryPath = /home/runner/work/cpython/cpython
##[debug]Set output commit = 0879ebc953fa7372a4d99f3f79889093f04cac67
##[debug]Set output ref = refs/heads/main
##[debug]Finishing: Run actions/checkout@v4
