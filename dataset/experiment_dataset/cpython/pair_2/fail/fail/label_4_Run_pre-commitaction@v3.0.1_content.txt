pre-commit/action@v3.0.1



FORCE_COLOR: 1
RUFF_OUTPUT_FORMAT: github
3 13 2
3 13 2
3 13 2
Python2 3 13 2
Python3 3 13 2
3 13 2
##[endgroup]
install pre-commit
36 install pre-commit[0m
0

FORCE_COLOR: 1
RUFF_OUTPUT_FORMAT: github
3 13 2
3 13 2
3 13 2
Python2 3 13 2
Python3 3 13 2
3 13 2
##[endgroup]
pre-commit
pre commit-4.2.0-py2.py3-none-any.whl.metadata (1.3
cfgv>=2.0.0 pre-commit)
cfgv-3.4.0-py2.py3-none-any.whl.metadata (8.5
identify>=1.0.0 pre-commit)
identify-2.6.9-py2.py3-none-any.whl.metadata (4.4
nodeenv>=0.11.1 pre-commit)
nodeenv-1.9.1-py2.py3-none-any.whl.metadata (21
pyyaml>=5.1 pre-commit)
6 0 2 2 17 64 64.whl.metadata (2.1
virtualenv>=20.10.0 pre-commit)
virtualenv-20.30.0-py3-none-any.whl.metadata (4.5
distlib<1,>=0.3.7 virtualenv>=20.10.0->pre-commit)
distlib-0.3.9-py2.py3-none-any.whl.metadata (5.2
filelock<4,>=3.12.2 virtualenv>=20.10.0->pre-commit)
filelock-3.18.0-py3-none-any.whl.metadata (2.9
platformdirs<5,>=3.9.1 virtualenv>=20.10.0->pre-commit)
platformdirs-4.3.7-py3-none-any.whl.metadata (11
pre commit-4.2.0-py2.py3-none-any.whl (220
cfgv-3.4.0-py2.py3-none-any.whl (7.2
identify-2.6.9-py2.py3-none-any.whl (99
nodeenv-1.9.1-py2.py3-none-any.whl (22
6 0 2 2 17 64 64.whl (759
[?25l   [90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━[0m [32m0.0/759.5 kB[0m [31m?[0m eta [36m-:--:--[0m
[2K   [90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━[0m [32m759.5/759.5 kB[0m [31m83.8 MB/s[0m eta [36m0:00:00[0m
[?25hDownloading virtualenv-20.30.0-py3-none-any.whl (4.3 MB)
[?25l   [90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━[0m [32m0.0/4.3 MB[0m [31m?[0m eta [36m-:--:--[0m
[2K   [90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━[0m [32m4.3/4.3 MB[0m [31m183.8 MB/s[0m eta [36m0:00:00[0m
[?25hDownloading distlib-0.3.9-py2.py3-none-any.whl (468 kB)
filelock-3.18.0-py3-none-any.whl (16
platformdirs-4.3.7-py3-none-any.whl (18

3 4 0 0 3 9 3 18 0 2 6 9 1 9 1 4 3 7 4 2 0 6 0 2 20 30 0
freeze --local
36 freeze --local[0m
0

FORCE_COLOR: 1
RUFF_OUTPUT_FORMAT: github
3 13 2
3 13 2
3 13 2
Python2 3 13 2
Python3 3 13 2
3 13 2
##[endgroup]
3 4 0
0 3 9
3 18 0
2 6 9
1 9 1
4 3 7
4 2 0
6 0 2
20 30 0
actions/cache@v4

~/.cache/pre-commit
3 3 13 2 0428c2e8ed80cf0a2d5389423091d2d8769c5a650aa021eb7ff3ea667410ce7a



save-always:

FORCE_COLOR: 1
RUFF_OUTPUT_FORMAT: github
3 13 2
3 13 2
3 13 2
Python2 3 13 2
Python3 3 13 2
3 13 2
##[endgroup]
3 3 13 2 0428c2e8ed80cf0a2d5389423091d2d8769c5a650aa021eb7ff3ea667410ce7a

36
0

FORCE_COLOR: 1
RUFF_OUTPUT_FORMAT: github
3 13 2
3 13 2
3 13 2
Python2 3 13 2
Python3 3 13 2
3 13 2
##[endgroup]
Initializing https://github.com/astral-sh/ruff-pre-commit.
Initializing https://github.com/psf/black-pre-commit-mirror.
Initializing https://github.com/pre-commit/pre-commit-hooks.
Initializing https://github.com/python-jsonschema/check-jsonschema.
Initializing https://github.com/rhysd/actionlint.
Initializing https://github.com/woodruffw/zizmor-pre-commit.
Initializing https://github.com/sphinx-contrib/sphinx-lint.
Installing https://github.com/astral-sh/ruff-pre-commit.


Installing https://github.com/psf/black-pre-commit-mirror.


Installing https://github.com/pre-commit/pre-commit-hooks.


Installing https://github.com/python-jsonschema/check-jsonschema.


Installing https://github.com/rhysd/actionlint.


Installing https://github.com/woodruffw/zizmor-pre-commit.


Installing https://github.com/sphinx-contrib/sphinx-lint.


Run Ruff (lint) on Doc/..................................................[42mPassed[m
Run Ruff (lint) on Lib/test/.............................................[42mPassed[m
Run Ruff (lint) on Tools/build/check_warnings.py.........................[42mPassed[m
Run Ruff (lint) on Argument Clinic.......................................[42mPassed[m
Run Ruff (format) on Doc/................................................[42mPassed[m
Run Black on Tools/build/check_warnings.py...............................[42mPassed[m
Run Black on Tools/jit/..................................................[42mPassed[m
check for case conflicts.................................................[42mPassed[m

check toml...............................................................[42mPassed[m
check yaml...............................................................[42mPassed[m
fix end of files.........................................................[41mFailed[m
[2m- hook id: end-of-file-fixer[m
[2m- exit code: 1[m
[2m- files were modified by this hook[m
2025-04-15T04:53:49.5426032Z
Fixing Lib/http/server.py
2025-04-15T04:53:49.5426309Z
trim trailing whitespace.................................................[41mFailed[m
[2m- hook id: trailing-whitespace[m
[2m- exit code: 1[m
[2m- files were modified by this hook[m
2025-04-15T04:53:50.2516971Z
Fixing Lib/test/test_httpservers.py
2025-04-15T04:53:50.2517952Z
Validate Dependabot Config (v2)..........................................[42mPassed[m
Validate GitHub Workflows................................................[42mPassed[m
Validate ReadTheDocs Config..............................................[42mPassed[m
Lint GitHub Actions workflow files.......................................[42mPassed[m
zizmor...................................................................[42mPassed[m
Sphinx Lint..............................................................[41mFailed[m
[2m- hook id: sphinx-lint[m
[2m- exit code: 1[m
2025-04-15T04:53:57.5118478Z
Misc/NEWS.d/next/Library/2025-04-15-12-47-09.gh-issue-131178.Td8j5x.rst:1: No newline at end of file. (missing-final-newline)
2025-04-15T04:53:57.5119898Z
Check C API news entries.............................(no files to check)[46;30mSkipped[m
Check Core and Builtins news entries.................(no files to check)[46;30mSkipped[m
Check hooks apply to the repository......................................[42mPassed[m
Check for useless excludes...............................................[42mPassed[m
pre-commit hook(s) made changes.
If you are seeing this message in CI, reproduce locally with: `pre-commit run --all-files`.
To run `pre-commit` as part of git workflow, use `pre-commit install`.
All changes made by hooks:
[1mdiff --git a/Lib/http/server.py b/Lib/http/server.py[m
[1mindex d0a7777..28f431a 100644[m
[1m--- a/Lib/http/server.py[m
[1m+++ b/Lib/http/server.py[m
[36m@@ -1423,4 +1423,4 @@[m [mdef finish_request(self, request, client_address):[m
[m
[m
if __name__ == '__main__':[m
[31m-    _main()[m
\ No newline at end of file[m
[32m+[m[32m    _main()[m
[1mdiff --git a/Lib/test/test_httpservers.py b/Lib/test/test_httpservers.py[m
[1mindex 51a6371..fa4523b 100644[m
[1m--- a/Lib/test/test_httpservers.py[m
[1m+++ b/Lib/test/test_httpservers.py[m
[36m@@ -1547,7 +1547,7 @@[m [mdef setUp(self):[m
self.default_server = http.server.CommandLineServerClass[m
self.tls_cert = '-----BEGIN CERTIFICATE-----\n' + '-----END CERTIFICATE-----\n'[m
self.tls_key = '-----BEGIN RSA PRIVATE KEY-----\n' + '-----END RSA PRIVATE KEY-----\n'[m
[31m-        [m
[32m+[m
self.tls_password = '<PASSWORD>'[m
tls_password_file_object = tempfile.NamedTemporaryFile(mode='w+', delete=False)[m
tls_password_file_object.write(self.tls_password)[m
[36m@@ -1624,7 +1624,7 @@[m [mdef test_cgi_flag(self, mock_func):[m
self.invoke_httpd(['--cgi'])[m
mock_func.assert_called_once_with(HandlerClass=CGIHTTPRequestHandler, ServerClass=self.default_server,[m
protocol=self.default_protocol, port=self.default_port, bind=self.default_bind,[m
[31m-                                          tls_cert=None, tls_key=None, tls_password=None)  [m
[32m+[m[32m                                          tls_cert=None, tls_key=None, tls_password=None)[m
[m
@mock.patch('http.server.test')[m
def test_tls_flag(self, mock_func):[m
[36m@@ -1632,7 +1632,7 @@[m [mdef test_tls_flag(self, mock_func):[m
tls_key_options = ['--tls-key', ][m
tls_password_options = ['--tls-password-file', ][m
# Normal: --tls-cert and --tls-key[m
[31m-        [m
[32m+[m
for tls_cert_option in tls_cert_options:[m
for tls_key_option in tls_key_options:[m
self.invoke_httpd([tls_cert_option, self.tls_cert, tls_key_option, self.tls_key])[m
[36m@@ -1640,36 +1640,36 @@[m [mdef test_tls_flag(self, mock_func):[m
protocol=self.default_protocol, port=self.default_port, bind=self.default_bind,[m
tls_cert=self.tls_cert, tls_key=self.tls_key, tls_password=None)[m
mock_func.reset_mock()[m
[31m-        [m
[32m+[m
# Normal: --tls-cert, --tls-key and --tls-password-file[m
[31m-        [m
[32m+[m
for tls_cert_option in tls_cert_options:[m
for tls_key_option in tls_key_options:[m
for tls_password_option in tls_password_options:[m
self.invoke_httpd([tls_cert_option, self.tls_cert, tls_key_option, self.tls_key, tls_password_option, self.tls_password_file])[m
[31m-                    [m
[32m+[m
mock_func.assert_called_once_with(HandlerClass=self.default_handler, ServerClass=self.default_server,[m
protocol=self.default_protocol, port=self.default_port, bind=self.default_bind,[m
tls_cert=self.tls_cert, tls_key=self.tls_key, tls_password=self.tls_password)[m
mock_func.reset_mock()[m
[31m-        [m
[32m+[m
# Abnormal: --tls-key without --tls-cert[m
[31m-        [m
[32m+[m
for tls_key_option in tls_key_options:[m
for tls_cert_option in tls_cert_options:[m
with self.assertRaises(SystemExit):[m
self.invoke_httpd([tls_key_option, self.tls_key])[m
mock_func.reset_mock()[m
[31m-        [m
[32m+[m
# Abnormal: --tls-password-file without --tls-cert[m
[31m-        [m
[32m+[m
for tls_password_option in tls_password_options:[m
with self.assertRaises(SystemExit):[m
self.invoke_httpd([tls_password_option, self.tls_password_file])[m
mock_func.reset_mock()[m
[31m-        [m
[32m+[m
# Abnormal: --tls-password-file cannot be opened[m
[31m-        [m
[32m+[m
non_existent_file = os.path.join(tempfile.gettempdir(), os.urandom(16).hex())[m
retry_count = 0[m
while os.path.exists(non_existent_file) and retry_count < 10:[m
##[error]Process completed with exit code 1.
