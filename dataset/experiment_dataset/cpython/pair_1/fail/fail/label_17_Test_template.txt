##[group]Run make --directory "${CROSS_BUILD_WASI}" test
[36;1mmake --directory "${CROSS_BUILD_WASI}" test[0m
shell: /usr/bin/bash -e {<:NUM:>}
env:
FORCE_COLOR: 1
WASMTIME_VERSION: wasmtime-cli 22.0.0 (761f044ef 2024-06-20)
WASI_SDK_VERSION: 24
WASI_SDK_PATH: /opt/wasi-sdk
CROSS_BUILD_PYTHON: cross-build/build
CROSS_BUILD_WASI: cross-build/wasm32-wasip1
PATH: /usr/lib/ccache:/home/runner/downloader/bin:/snap/bin:/home/runner/.local/bin:/opt/pipx_bin:/home/runner/.cargo/bin:/home/runner/.config/composer/vendor/bin:/usr/local/.ghcup/bin:/home/runner/.dotnet/tools:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin
pythonLocation: /opt/hostedtoolcache/Python/<:NUM:>.<:NUM:>.<:NUM:>/x64
PKG CONFIG PATH: /opt/hostedtoolcache/Python/<:NUM:>.<:NUM:>.<:NUM:>/x64/lib/pkgconfig
Python ROOT DIR: /opt/hostedtoolcache/Python/<:NUM:>.<:NUM:>.<:NUM:>/x64
<:*:> ROOT DIR: /opt/hostedtoolcache/Python/<:NUM:>.<:NUM:>.<:NUM:>/x64
<:*:> ROOT DIR: /opt/hostedtoolcache/Python/<:NUM:>.<:NUM:>.<:NUM:>/x64
LD LIBRARY PATH: /opt/hostedtoolcache/Python/<:NUM:>.<:NUM:>.<:NUM:>/x64/lib
IMAGE_OS_VERSION: ubuntu24-20250406.1.0
##[endgroup]
make: Entering directory '/home/runner/work/cpython/cpython/cross-build/wasm32-wasip1'
The following modules are *disabled* in configure script:
_sqlite3
2025-04-15T07:07:00.5501633Z
The necessary bits to build these optional modules were not found:
_bz2                      _ctypes                   _hashlib
_lzma                     _ssl                      _uuid
readline                  zlib
To find the necessary bits, look in configure.ac and config.log.
2025-04-15T07:07:00.5504268Z
Could not build the ssl module!
Python requires a OpenSSL 1.1.1 or newer
2025-04-15T07:07:00.5505027Z
Checked 113 modules (78 built-in, 0 shared, 26 n/a on wasi-wasm32, 1 disabled, 8 missing, 0 failed on import)
_PYTHON_HOSTRUNNER='/home/runner/downloader/bin/wasmtime run --wasm max-wasm-stack=16777216 --dir /home/runner/work/cpython/cpython::/ --env PYTHONPATH=/cross-build/wasm32-wasip1/build/lib.wasi-wasm32-3.14' _PYTHON_PROJECT_BASE=/home/runner/work/cpython/cpython/cross-build/wasm32-wasip1 _PYTHON_HOST_PLATFORM=wasi-wasm32 PYTHONPATH=../../Lib _PYTHON_SYSCONFIGDATA_NAME=_sysconfigdata__wasi_wasm32-wasi _PYTHON_SYSCONFIGDATA_PATH=/home/runner/work/cpython/cpython/cross-build/wasm32-wasip1/build/lib.wasi-wasm32-3.14 /home/runner/work/cpython/cpython/cross-build/build/python  -m test --fast-ci -u-gui --timeout=
+ /home/runner/work/cpython/cpython/cross-build/build/python -u -W error -bb -m test --fast-ci -u-gui --timeout= --python '/home/runner/downloader/bin/wasmtime run --wasm max-wasm-stack=16777216 --dir /home/runner/work/cpython/cpython::/ --env PYTHONPATH=/cross-build/wasm32-wasip1/build/lib.wasi-wasm32-3.14 python.wasm' --dont-add-python-opts
== CPython 3.14.0a7+ (remotes/pull/132517/merge-dirty:e02b411, Apr 15 2025, 07:05:21) [GCC 13.3.0]
== Linux-6.8.0-1021-azure-x86_64-with-glibc2.39 little-endian
== Python build: debug without_assert
== cwd: /home/runner/work/cpython/cpython/cross-build/wasm32-wasip1/build/test_python_worker_9880Ã¦
== CPU count: 4
== encodings: locale=UTF-8 FS=utf-8
== resources: all,-cpu,-gui
== cross compiled: Yes
== host python: /home/runner/downloader/bin/wasmtime run --wasm max-wasm-stack=16777216 --dir /home/runner/work/cpython/cpython::/ --env PYTHONPATH=/cross-build/wasm32-wasip1/build/lib.wasi-wasm32-3.14 python.wasm
== host platform: wasi-0.0.0-wasm32-32bit
2025-04-15T07:07:01.0976555Z
Using random seed: 3608454227
0:00:00 load avg: 3.65 Run 486 tests in parallel using 6 worker processes (timeout: 10 min, worker timeout: 15 min)
0:00:00 load avg: 3.65 [  1/486] [33mtest_msvcrt skipped[0m
test_msvcrt skipped -- windows related tests
0:00:00 load avg: 3.65 [  2/486] [32mtest_hash passed[0m
0:00:00 load avg: 3.65 [  3/486] [33mtest_perfmaps skipped[0m
test_perfmaps skipped -- Linux only
0:00:00 load avg: 3.65 [  4/486] [32mtest_dictviews passed[0m
0:00:00 load avg: 3.65 [  5/486] [32mtest_monitoring passed[0m
0:00:01 load avg: 3.65 [  6/486] [33mtest_mailbox skipped[0m
test_mailbox skipped -- test requires gethostname()
0:00:01 load avg: 3.65 [  7/486] [33mtest_pyrepl skipped[0m
test_pyrepl skipped -- No module named '_curses'
0:00:01 load avg: 3.65 [  8/486] [32mtest_augassign passed[0m
0:00:01 load avg: 3.65 [  9/486] [32mtest_slice passed[0m
0:00:01 load avg: 3.65 [ 10/486] [32mtest_platform passed[0m
0:00:01 load avg: 3.65 [ 11/486] [32mtest_flufl passed[0m
0:00:01 load avg: 3.65 [ 12/486] [33mtest.test_asyncio.test_threads skipped[0m
test.test_asyncio.test_threads skipped -- requires socket support
0:00:02 load avg: 3.65 [ 13/486] [33mtest_syslog skipped[0m
test_syslog skipped -- No module named 'syslog'
0:00:02 load avg: 3.65 [ 14/486] [32mtest_genericclass passed[0m
0:00:02 load avg: 3.65 [ 15/486] [32mtest_fileio passed[0m
0:00:02 load avg: 3.65 [ 16/486] [32mtest_fractions passed[0m
0:00:02 load avg: 3.65 [ 17/486] [32mtest_dynamic passed[0m
0:00:02 load avg: 3.65 [ 18/486] [33mtest_generated_cases skipped[0m
test_generated_cases skipped -- test module requires subprocess
0:00:02 load avg: 3.65 [ 19/486] [32mtest_ordered_dict passed[0m
0:00:03 load avg: 3.65 [ 20/486] [32mtest_mimetypes passed[0m
0:00:03 load avg: 3.65 [ 21/486] [33mtest_subprocess skipped[0m
test_subprocess skipped -- test module requires subprocess
0:00:03 load avg: 3.65 [ 22/486] [33mtest.test_asyncio.test_pep492 skipped[0m
test.test_asyncio.test_pep492 skipped -- requires socket support
0:00:03 load avg: 3.84 [ 23/486] [32mtest_ipaddress passed[0m
0:00:03 load avg: 3.84 [ 24/486] [33mtest_dbm_ndbm skipped[0m
test_dbm_ndbm skipped -- No module named '_dbm'
0:00:03 load avg: 3.84 [ 25/486] [33mtest.test_asyncio.test_context skipped[0m
test.test_asyncio.test_context skipped -- requires socket support
0:00:03 load avg: 3.84 [ 26/486] [32mtest_timeit passed[0m
0:00:04 load avg: 3.84 [ 27/486] [32mtest_htmlparser passed[0m
0:00:04 load avg: 3.84 [ 28/486] [33mtest_ftplib skipped[0m
test_ftplib skipped -- requires socket support
0:00:04 load avg: 3.84 [ 29/486] [33mtest.test_multiprocessing_fork.test_misc skipped[0m
test.test_multiprocessing_fork.test_misc skipped -- No module named '_multiprocessing'
0:00:04 load avg: 3.84 [ 30/486] [32mtest_tomllib passed[0m
0:00:04 load avg: 3.84 [ 31/486] [33mtest.test_gdb.test_cfunction_full skipped[0m
test.test_gdb.test_cfunction_full skipped -- Couldn't find gdb program on the path: [Errno 58] wasi does not support processes.
0:00:05 load avg: 3.84 [ 32/486] [32mtest_dynamicclassattribute passed[0m
0:00:05 load avg: 3.84 [ 33/486] [33mtest.test_asyncio.test_tasks skipped[0m
test.test_asyncio.test_tasks skipped -- requires socket support
0:00:05 load avg: 3.84 [ 34/486] [32mtest_richcmp passed[0m
0:00:05 load avg: 3.84 [ 35/486] [33mtest_select skipped[0m
test_select skipped -- requires socket support
0:00:05 load avg: 3.84 [ 36/486] [32mtest_finalization passed[0m
0:00:06 load avg: 3.84 [ 37/486] [32mtest_unicode_identifiers passed[0m
0:00:06 load avg: 3.84 [ 38/486] [32mtest_codecmaps_jp passed[0m
0:00:06 load avg: 3.84 [ 39/486] [32mtest_py_compile passed[0m
0:00:06 load avg: 3.84 [ 40/486] [32mtest_contextlib passed[0m
0:00:06 load avg: 3.84 [ 41/486] [33mtest.test_multiprocessing_forkserver.test_manager skipped[0m
test.test_multiprocessing_forkserver.test_manager skipped -- No module named '_multiprocessing'
0:00:06 load avg: 3.84 [ 42/486] [33mtest_threading skipped[0m
test_threading skipped -- requires threading support
0:00:06 load avg: 3.84 [ 43/486] [32mtest_index passed[0m
0:00:07 load avg: 3.84 [ 44/486] [33mtest_urllib2net skipped (resource denied)[0m
test_urllib2net skipped -- No socket support
0:00:07 load avg: 3.84 [ 45/486] [32mtest_type_comments passed[0m
0:00:07 load avg: 3.84 [ 46/486] [33mtest_pkgutil skipped[0m
test_pkgutil skipped -- No module named '_testsinglephase'
0:00:07 load avg: 3.84 [ 47/486] [32mtest_itertools passed[0m
0:00:07 load avg: 3.84 [ 48/486] [32mtest_baseexception passed[0m
0:00:08 load avg: 3.84 [ 49/486] [33mtest_regrtest skipped[0m
test_regrtest skipped -- test module requires subprocess
0:00:08 load avg: 3.84 [ 50/486] [32mtest_bigaddrspace passed[0m
0:00:08 load avg: 3.93 [ 51/486] [33mtest_peg_generator skipped (resource denied)[0m
test_peg_generator skipped -- Use of the 'cpu' resource not enabled
0:00:08 load avg: 3.93 [ 52/486] [32mtest_memoryview passed[0m
0:00:09 load avg: 3.93 [ 53/486] [33mtest_winapi skipped[0m
test_winapi skipped -- No module named '_winapi'
0:00:09 load avg: 3.93 [ 54/486] [33mtest.test_asyncio.test_graph skipped[0m
test.test_asyncio.test_graph skipped -- requires socket support
0:00:09 load avg: 3.93 [ 55/486] [33mtest_tools skipped[0m
test_tools skipped -- test module requires subprocess
0:00:09 load avg: 3.93 [ 56/486] [32mtest_quopri passed[0m
0:00:10 load avg: 3.93 [ 57/486] [32mtest_largefile passed[0m
0:00:10 load avg: 3.93 [ 58/486] [33mtest_repl skipped[0m
test_repl skipped -- test module requires subprocess
0:00:10 load avg: 3.93 [ 59/486] [32mtest_stat passed[0m
0:00:10 load avg: 3.93 [ 60/486] [32mtest_codecs passed[0m
0:00:10 load avg: 3.93 [ 61/486] [33mtest_zipfile64 skipped (resource denied)[0m
test_zipfile64 skipped -- test requires loads of disk-space bytes and a long time to run
0:00:10 load avg: 3.93 [ 62/486] [33mtest.test_asyncio.test_protocols skipped[0m
test.test_asyncio.test_protocols skipped -- requires socket support
0:00:10 load avg: 3.93 [ 63/486] [32mtest_cext passed[0m
0:00:10 load avg: 3.93 [ 64/486] [32mtest_codecencodings_hk passed[0m
0:00:11 load avg: 3.93 [ 65/486] [32mtest_multibytecodec passed[0m
0:00:11 load avg: 3.93 [ 66/486] [32mtest_collections passed[0m
0:00:11 load avg: 3.93 [ 67/486] [32mtest_getpass passed[0m
0:00:12 load avg: 3.93 [ 68/486] [32mtest_unittest passed[0m
0:00:12 load avg: 3.93 [ 69/486] [32mtest_locale passed[0m
0:00:12 load avg: 3.93 [ 70/486] [33mtest_lzma skipped[0m
test_lzma skipped -- No module named '_lzma'
0:00:12 load avg: 3.93 [ 71/486] [32mtest_bool passed[0m
0:00:12 load avg: 3.93 [ 72/486] [32mtest_codecencodings_iso2022 passed[0m
0:00:13 load avg: 3.93 [ 73/486] [32mtest_re passed[0m
0:00:13 load avg: 3.93 [ 74/486] [32mtest_codecencodings_tw passed[0m
0:00:13 load avg: 4.10 [ 75/486] [32mtest_interpreters passed[0m
0:00:13 load avg: 4.10 [ 76/486] [32mtest.test_future_stmt.test_future passed[0m
0:00:13 load avg: 4.10 [ 77/486] [32mtest_profile passed[0m
0:00:14 load avg: 4.10 [ 78/486] [32mtest_getpath passed[0m
0:00:14 load avg: 4.10 [ 79/486] [32mtest_enum passed[0m
0:00:15 load avg: 4.10 [ 80/486] [33mtest_tcl skipped[0m
test_tcl skipped -- No module named '_tkinter'
0:00:15 load avg: 4.10 [ 81/486] [32mtest_time passed[0m
0:00:15 load avg: 4.10 [ 82/486] [32mtest__locale passed[0m
0:00:15 load avg: 4.10 [ 83/486] [33mtest.test_asyncio.test_locks skipped[0m
test.test_asyncio.test_locks skipped -- requires socket support
0:00:15 load avg: 4.10 [ 84/486] [32mtest_type_cache passed[0m
0:00:16 load avg: 4.10 [ 85/486] [32mtest__opcode passed[0m
0:00:16 load avg: 4.10 [ 86/486] [32mtest_reprlib passed[0m
0:00:16 load avg: 4.10 [ 87/486] [32mtest_unicodedata passed[0m
0:00:16 load avg: 4.10 [ 88/486] [33mtest_dtrace skipped[0m
test_dtrace skipped -- test module requires subprocess
0:00:16 load avg: 4.10 [ 89/486] [32mtest_math_property passed[0m
0:00:16 load avg: 4.10 [ 90/486] [33mtest.test_multiprocessing_forkserver.test_misc skipped[0m
test.test_multiprocessing_forkserver.test_misc skipped -- No module named '_multiprocessing'
0:00:16 load avg: 4.10 [ 91/486] [32mtest_frozen passed[0m
0:00:17 load avg: 4.10 [ 92/486] [33mtest.test_multiprocessing_spawn.test_processes skipped[0m
test.test_multiprocessing_spawn.test_processes skipped -- No module named '_multiprocessing'
0:00:17 load avg: 4.10 [ 93/486] [32mtest_importlib passed[0m
0:00:17 load avg: 4.10 [ 94/486] [32mtest_operator passed[0m
0:00:17 load avg: 4.10 [ 95/486] [33mtest_poll skipped[0m
test_poll skipped -- requires socket support
0:00:17 load avg: 4.10 [ 96/486] [33mtest_urllib2_localnet skipped[0m
test_urllib2_localnet skipped -- requires socket support
0:00:17 load avg: 4.10 [ 97/486] [32mtest_str passed[0m
0:00:18 load avg: 4.10 [ 98/486] [33mtest_imaplib skipped[0m
test_imaplib skipped -- requires socket support
0:00:18 load avg: 4.10 [ 99/486] [32mtest_string_literals passed[0m
0:00:18 load avg: 4.25 [100/486] [32mtest_super passed[0m
0:00:18 load avg: 4.25 [101/486] [32mtest_eintr passed[0m
0:00:18 load avg: 4.25 [102/486] [33mtest_wmi skipped[0m
test_wmi skipped -- No module named '_wmi'
0:00:18 load avg: 4.25 [103/486] [32mtest_structseq passed[0m
0:00:19 load avg: 4.25 [104/486] [32mtest_build_details passed[0m
0:00:19 load avg: 4.25 [105/486] [33mtest.test_asyncio.test_windows_utils skipped[0m
test.test_asyncio.test_windows_utils skipped -- requires socket support
0:00:19 load avg: 4.25 [106/486] [33mtest_xxlimited skipped[0m
test_xxlimited skipped -- No module named 'xxlimited'
0:00:19 load avg: 4.25 [107/486] [32mtest_codecencodings_jp passed[0m
0:00:19 load avg: 4.25 [108/486] [32mtest_filecmp passed[0m
0:00:20 load avg: 4.25 [109/486] [33mtest__interpreters skipped[0m
test__interpreters skipped -- No module named '_interpreters'
0:00:20 load avg: 4.25 [110/486] [32mtest_http_cookiejar passed[0m
0:00:20 load avg: 4.25 [111/486] [32mtest_hmac passed[0m
0:00:20 load avg: 4.25 [112/486] [32mtest_userdict passed[0m
0:00:21 load avg: 4.25 [113/486] [32mtest_bigmem passed[0m
0:00:21 load avg: 4.25 [114/486] [33mtest.test_asyncio.test_runners skipped[0m
test.test_asyncio.test_runners skipped -- requires socket support
0:00:21 load avg: 4.25 [115/486] [32mtest_codecmaps_hk passed[0m
0:00:21 load avg: 4.25 [116/486] [33mtest_embed skipped[0m
test_embed skipped -- test module requires subprocess
0:00:22 load avg: 4.25 [117/486] [33mtest_urllib2 skipped[0m
test_urllib2 skipped -- test requires gethostname()
0:00:22 load avg: 4.25 [118/486] [32mtest_tempfile passed[0m
0:00:23 load avg: 4.25 [119/486] [32mtest_array passed[0m
0:00:23 load avg: 4.39 [120/486] [33mtest.test_gdb.test_misc skipped[0m
test.test_gdb.test_misc skipped -- Couldn't find gdb program on the path: [Errno 58] wasi does not support processes.
0:00:23 load avg: 4.39 [121/486] [32mtest_compile passed[0m
0:00:23 load avg: 4.39 [122/486] [33mtest_clinic skipped[0m
test_clinic skipped -- test module requires subprocess
0:00:24 load avg: 4.39 [123/486] [32mtest_copy passed[0m
0:00:24 load avg: 4.39 [124/486] [32mtest_calendar passed[0m
0:00:24 load avg: 4.39 [125/486] [32mtest_xxtestfuzz passed[0m
0:00:25 load avg: 4.39 [126/486] [33mtest_external_inspection skipped[0m
test_external_inspection skipped -- Test only runs when _testexternalinspection is available
0:00:25 load avg: 4.39 [127/486] [33mtest_thread skipped[0m
test_thread skipped -- requires threading support
0:00:25 load avg: 4.39 [128/486] [32mtest_struct passed[0m
0:00:26 load avg: 4.39 [129/486] [33mtest.test_concurrent_futures.test_as_completed skipped[0m
test.test_concurrent_futures.test_as_completed skipped -- requires threading support
0:00:26 load avg: 4.39 [130/486] [32mtest_cmd_line_script passed[0m
0:00:27 load avg: 4.39 [131/486] [32mtest_descr passed[0m
0:00:27 load avg: 4.39 [132/486] [32mtest_bytes passed[0m
0:00:27 load avg: 4.39 [133/486] [32mtest_peepholer passed[0m
0:00:28 load avg: 4.39 [134/486] [32mtest_osx_env passed[0m
0:00:28 load avg: 4.52 [135/486] [32mtest.test_future_stmt.test_future_single_import passed[0m
0:00:28 load avg: 4.52 [136/486] [32mtest_tracemalloc passed[0m
0:00:29 load avg: 4.52 [137/486] [33mtest.test_multiprocessing_fork.test_threads skipped[0m
test.test_multiprocessing_fork.test_threads skipped -- No module named '_multiprocessing'
0:00:29 load avg: 4.52 [138/486] [32mtest_tuple passed[0m
0:00:29 load avg: 4.52 [139/486] [32mtest_descrtut passed[0m
0:00:30 load avg: 4.52 [140/486] [32mtest_raise passed[0m
0:00:30 load avg: 4.52 [141/486] [33mtest_bz2 skipped[0m
test_bz2 skipped -- No module named '_bz2'
0:00:31 load avg: 4.52 [142/486] [32mtest_scope passed[0m
0:00:32 load avg: 4.52 [143/486] [33mtest.test_asyncio.test_queues skipped[0m
test.test_asyncio.test_queues skipped -- requires socket support
0:00:32 load avg: 4.52 [144/486] [32mtest_json passed[0m
0:00:32 load avg: 4.52 [145/486] [32mtest_io passed[0m
0:00:32 load avg: 4.52 [146/486] [32mtest_pkg passed[0m
0:00:33 load avg: 4.52 [147/486] [32mtest_binascii passed[0m
0:00:33 load avg: 4.52 [148/486] [32mtest_math passed[0m
0:00:33 load avg: 4.64 [149/486] [33mtest.test_asyncio.test_streams skipped[0m
test.test_asyncio.test_streams skipped -- requires socket support
0:00:33 load avg: 4.64 [150/486] [32mtest_traceback passed[0m
0:00:33 load avg: 4.64 [151/486] [32mtest_zipimport passed[0m
0:00:33 load avg: 4.64 [152/486] [32mtest_syntax passed[0m
0:00:34 load avg: 4.64 [153/486] [33mtest_socket skipped[0m
test_socket skipped -- requires socket support
0:00:34 load avg: 4.64 [154/486] [33mtest.test_multiprocessing_forkserver.test_processes skipped[0m
test.test_multiprocessing_forkserver.test_processes skipped -- No module named '_multiprocessing'
0:00:34 load avg: 4.64 [155/486] [33mtest_idle skipped[0m
test_idle skipped -- No module named '_tkinter'
0:00:34 load avg: 4.64 [156/486] [33mtest.test_asyncio.test_waitfor skipped[0m
test.test_asyncio.test_waitfor skipped -- requires socket support
0:00:34 load avg: 4.64 [157/486] [32mtest_timeout passed[0m
0:00:34 load avg: 4.64 [158/486] [32mtest_file passed[0m
0:00:35 load avg: 4.64 [159/486] [33mtest.test_gdb.test_pretty_print skipped[0m
test.test_gdb.test_pretty_print skipped -- Couldn't find gdb program on the path: [Errno 58] wasi does not support processes.
0:00:35 load avg: 4.64 [160/486] [32mtest_pickle passed[0m
0:00:35 load avg: 4.64 [161/486] [32mtest_xml_etree passed[0m
0:00:35 load avg: 4.64 [162/486] [32mtest_print passed[0m
0:00:35 load avg: 4.64 [163/486] [32mtest_keyword passed[0m
0:00:35 load avg: 4.64 [164/486] [33mtest_gzip skipped[0m
test_gzip skipped -- No module named 'zlib'
0:00:36 load avg: 4.64 [165/486] [33mtest.test_asyncio.test_selector_events skipped[0m
test.test_asyncio.test_selector_events skipped -- requires socket support
0:00:36 load avg: 4.64 [166/486] [32mtest_code passed[0m
0:00:37 load avg: 4.64 [167/486] [32mtest_asdl_parser passed[0m
0:00:37 load avg: 4.64 [168/486] [32mtest_dis passed[0m
0:00:37 load avg: 4.64 [169/486] [32mtest_random passed[0m
0:00:37 load avg: 4.64 [170/486] [32mtest_strptime passed[0m
0:00:37 load avg: 4.64 [171/486] [33mtest_smtpnet skipped[0m
test_smtpnet skipped -- No module named '_ssl'
0:00:37 load avg: 4.64 [172/486] [32mtest_doctest passed[0m
0:00:37 load avg: 4.64 [173/486] [32mtest_gc passed[0m
0:00:38 load avg: 4.64 [174/486] [32mtest_gettext passed[0m
0:00:38 load avg: 4.64 [175/486] [32mtest_unpack_ex passed[0m
0:00:38 load avg: 4.83 [176/486] [32mtest_binop passed[0m
0:00:38 load avg: 4.83 [177/486] [33mtest_readline skipped[0m
test_readline skipped -- No module named 'readline'
0:00:38 load avg: 4.83 [178/486] [32mtest_positional_only_arg passed[0m
0:00:38 load avg: 4.83 [179/486] [33mtest_ttk_textonly skipped[0m
test_ttk_textonly skipped -- No module named '_tkinter'
0:00:39 load avg: 4.83 [180/486] [32mtest_source_encoding passed[0m
0:00:39 load avg: 4.83 [181/486] [32mtest_sys passed[0m
0:00:39 load avg: 4.83 [182/486] [32mtest_keywordonlyarg passed[0m
0:00:39 load avg: 4.83 [183/486] [32mtest_userlist passed[0m
0:00:39 load avg: 4.83 [184/486] [33mtest_winsound skipped[0m
test_winsound skipped -- No module named 'winsound'
0:00:39 load avg: 4.83 [185/486] [32mtest_xml_dom_minicompat passed[0m
0:00:39 load avg: 4.83 [186/486] [32mtest_ast passed[0m
0:00:40 load avg: 4.83 [187/486] [33mtest.test_asyncio.test_sock_lowlevel skipped[0m
test.test_asyncio.test_sock_lowlevel skipped -- requires socket support
0:00:40 load avg: 4.83 [188/486] [32mtest_type_annotations passed[0m
0:00:40 load avg: 4.83 [189/486] [32mtest_errno passed[0m
0:00:40 load avg: 4.83 [190/486] [33mtest_smtplib skipped[0m
test_smtplib skipped -- requires socket support
0:00:40 load avg: 4.83 [191/486] [32mtest_defaultdict passed[0m
0:00:41 load avg: 4.83 [192/486] [32mtest_tokenize passed[0m
0:00:41 load avg: 4.83 [193/486] [32mtest_memoryio passed[0m
0:00:41 load avg: 4.83 [194/486] [33mtest_asyncgen skipped[0m
test_asyncgen skipped -- requires socket support
0:00:41 load avg: 4.83 [195/486] [32mtest_minidom passed[0m
0:00:42 load avg: 4.83 [196/486] [32mtest_strtod passed[0m
0:00:42 load avg: 4.83 [197/486] [32mtest_wave passed[0m
0:00:42 load avg: 4.83 [198/486] [33mtest.test_gdb.test_cfunction skipped[0m
test.test_gdb.test_cfunction skipped -- Couldn't find gdb program on the path: [Errno 58] wasi does not support processes.
0:00:42 load avg: 4.83 [199/486] [33mtest_launcher skipped[0m
test_launcher skipped -- test only applies to Windows
0:00:42 load avg: 4.83 [200/486] [33mtest_resource skipped[0m
test_resource skipped -- No module named 'resource'
0:00:42 load avg: 4.83 [201/486] [32mtest_configparser passed[0m
0:00:42 load avg: 4.83 [202/486] [33mtest_fcntl skipped[0m
test_fcntl skipped -- No module named 'fcntl'
0:00:42 load avg: 4.83 [203/486] [32mtest__colorize passed[0m
0:00:42 load avg: 4.83 [204/486] [32mtest_except_star passed[0m
0:00:43 load avg: 4.83 [205/486] [33mtest_wait3 skipped[0m
test_wait3 skipped -- requires working os.fork()
0:00:43 load avg: 4.83 [206/486] [32mtest_colorsys passed[0m
0:00:43 load avg: 4.76 [207/486] [32mtest_sysconfig passed[0m
0:00:43 load avg: 4.76 [208/486] [32mtest_dictcomps passed[0m
0:00:43 load avg: 4.76 [209/486] [32mtest_unpack passed[0m
0:00:43 load avg: 4.76 [210/486] [32mtest_optimizer passed[0m
0:00:43 load avg: 4.76 [211/486] [33mtest_perf_profiler skipped[0m
test_perf_profiler skipped -- test module requires subprocess
0:00:43 load avg: 4.76 [212/486] [33mtest.test_concurrent_futures.test_interpreter_pool skipped[0m
test.test_concurrent_futures.test_interpreter_pool skipped -- requires threading support
0:00:44 load avg: 4.76 [213/486] [33mtest.test_concurrent_futures.test_process_pool skipped[0m
test.test_concurrent_futures.test_process_pool skipped -- requires threading support
0:00:44 load avg: 4.76 [214/486] [33mtest_ctypes skipped[0m
test_ctypes skipped -- No module named '_ctypes'
0:00:44 load avg: 4.76 [215/486] [33mtest_ioctl skipped[0m
test_ioctl skipped -- No module named 'fcntl'
0:00:44 load avg: 4.76 [216/486] [32mtest_listcomps passed[0m
0:00:44 load avg: 4.76 [217/486] [33mtest_free_threading skipped[0m
test_free_threading skipped -- GIL enabled
0:00:44 load avg: 4.76 [218/486] [32mtest_numeric_tower passed[0m
0:00:44 load avg: 4.76 [219/486] [33mtest_file_eintr skipped[0m
test_file_eintr skipped -- test module requires subprocess
0:00:45 load avg: 4.76 [220/486] [32mtest__osx_support passed[0m
0:00:45 load avg: 4.76 [221/486] [33mtest_tkinter skipped[0m
test_tkinter skipped -- No module named '_tkinter'
0:00:45 load avg: 4.76 [222/486] [32mtest.test_future_stmt.test_future_multiple_features passed[0m
0:00:45 load avg: 4.76 [223/486] [32mtest_strftime passed[0m
0:00:46 load avg: 4.76 [224/486] [32mtest_codecencodings_cn passed[0m
0:00:46 load avg: 4.76 [225/486] [32mtest_graphlib passed[0m
0:00:46 load avg: 4.76 [226/486] [32mtest_glob passed[0m
0:00:46 load avg: 4.76 [227/486] [33mtest_ssl skipped[0m
test_ssl skipped -- No module named '_ssl'
0:00:46 load avg: 4.76 [228/486] [32mtest_ensurepip passed[0m
0:00:46 load avg: 4.76 [229/486] [32mtest_utf8source passed[0m
0:00:46 load avg: 4.76 [230/486] [33mtest.test_asyncio.test_taskgroups skipped[0m
test.test_asyncio.test_taskgroups skipped -- requires socket support
0:00:46 load avg: 4.76 [231/486] [32mtest_codecencodings_kr passed[0m
0:00:46 load avg: 4.76 [232/486] [32mtest_cprofile passed[0m
0:00:46 load avg: 4.76 [233/486] [33mtest.test_concurrent_futures.test_shutdown skipped[0m
test.test_concurrent_futures.test_shutdown skipped -- requires threading support
0:00:47 load avg: 4.76 [234/486] [32mtest_compiler_codegen passed[0m
0:00:47 load avg: 4.76 [235/486] [33mtest.test_concurrent_futures.test_thread_pool skipped[0m
test.test_concurrent_futures.test_thread_pool skipped -- requires threading support
0:00:47 load avg: 4.76 [236/486] [33mtest_pwd skipped[0m
test_pwd skipped -- No module named 'pwd'
0:00:47 load avg: 4.76 [237/486] [32mtest_zoneinfo passed[0m
0:00:47 load avg: 4.76 [238/486] [32mtest_lltrace passed[0m
0:00:47 load avg: 4.76 [239/486] [32mtest_c_locale_coercion passed[0m
0:00:48 load avg: 4.76 [240/486] [32mtest_cmath passed[0m
0:00:48 load avg: 4.76 [241/486] [33mtest_termios skipped[0m
test_termios skipped -- No module named 'termios'
0:00:48 load avg: 4.86 [242/486] [32mtest_annotationlib passed[0m
0:00:48 load avg: 4.86 [243/486] [32mtest_pow passed[0m
0:00:48 load avg: 4.86 [244/486] [33mtest_apple skipped[0m
test_apple skipped -- Apple-specific
0:00:48 load avg: 4.86 [245/486] [32mtest_complex passed[0m
0:00:48 load avg: 4.86 [246/486] [32mtest_enumerate passed[0m
0:00:49 load avg: 4.86 [247/486] [32mtest_codecmaps_cn passed[0m
0:00:49 load avg: 4.86 [248/486] [33mtest.test_asyncio.test_ssl skipped[0m
test.test_asyncio.test_ssl skipped -- requires socket support
0:00:49 load avg: 4.86 [249/486] [32mtest_int_literal passed[0m
0:00:49 load avg: 4.86 [250/486] [32mtest.test_future_stmt.test_future_multiple_imports passed[0m
0:00:49 load avg: 4.86 [251/486] [33mtest_argparse skipped[0m
test_argparse skipped -- test module requires subprocess
0:00:49 load avg: 4.86 [252/486] [32mtest_http_cookies passed[0m
0:00:49 load avg: 4.86 [253/486] [33mtest_threadedtempfile skipped[0m
test_threadedtempfile skipped -- requires threading support
0:00:50 load avg: 4.86 [254/486] [32mtest_dbm_dumb passed[0m
0:00:50 load avg: 4.86 [255/486] [33mtest.test_asyncio.test_staggered skipped[0m
test.test_asyncio.test_staggered skipped -- requires socket support
0:00:50 load avg: 4.86 [256/486] [33mtest_faulthandler skipped[0m
test_faulthandler skipped -- test module requires subprocess
0:00:50 load avg: 4.86 [257/486] [32mtest_compiler_assemble passed[0m
0:00:51 load avg: 4.86 [258/486/1] [1;31m[1;31mtest_shutil failed (1 error)[0m[0m
test_module_all_attribute (test.test_shutil.PublicAPITests.test_module_all_attribute) ... ok
test_make_archive (test.test_shutil.TestArchives.test_make_archive) ... ok
test_make_archive_cwd (test.test_shutil.TestArchives.test_make_archive_cwd) ... ok
test_make_archive_cwd_default (test.test_shutil.TestArchives.test_make_archive_cwd_default) ... ok
test_make_archive_cwd_supports_root_dir (test.test_shutil.TestArchives.test_make_archive_cwd_supports_root_dir) ... ok
test_make_archive_owner_group (test.test_shutil.TestArchives.test_make_archive_owner_group) ... skipped 'requires zlib'
test_make_tarfile (test.test_shutil.TestArchives.test_make_tarfile) ... skipped 'requires zlib'
test_make_tarfile_in_curdir (test.test_shutil.TestArchives.test_make_tarfile_in_curdir) ... ok
test_make_tarfile_rootdir_nodir (test.test_shutil.TestArchives.test_make_tarfile_rootdir_nodir) ... ok
test_make_tarfile_with_explicit_curdir (test.test_shutil.TestArchives.test_make_tarfile_with_explicit_curdir) ... ok
test_make_tarfile_without_rootdir (test.test_shutil.TestArchives.test_make_tarfile_without_rootdir) ... skipped 'requires zlib'
test_make_zipfile (test.test_shutil.TestArchives.test_make_zipfile) ... skipped 'requires zlib'
test_make_zipfile_in_curdir (test.test_shutil.TestArchives.test_make_zipfile_in_curdir) ... skipped 'requires zlib'
test_make_zipfile_rootdir_nodir (test.test_shutil.TestArchives.test_make_zipfile_rootdir_nodir) ... skipped 'requires zlib'
test_make_zipfile_with_explicit_curdir (test.test_shutil.TestArchives.test_make_zipfile_with_explicit_curdir) ... skipped 'requires zlib'
test_make_zipfile_without_rootdir (test.test_shutil.TestArchives.test_make_zipfile_without_rootdir) ... skipped 'requires zlib'
test_register_archive_format (test.test_shutil.TestArchives.test_register_archive_format) ... ok
test_tarfile_root_owner (test.test_shutil.TestArchives.test_tarfile_root_owner) ... skipped 'requires zlib'
test_tarfile_vs_tar (test.test_shutil.TestArchives.test_tarfile_vs_tar) ... skipped 'requires zlib'
test_unpack_archive_bztar (test.test_shutil.TestArchives.test_unpack_archive_bztar) ... skipped 'requires bz2'
test_unpack_archive_gztar (test.test_shutil.TestArchives.test_unpack_archive_gztar) ... skipped 'requires zlib'
test_unpack_archive_tar (test.test_shutil.TestArchives.test_unpack_archive_tar) ... ok
test_unpack_archive_xztar (test.test_shutil.TestArchives.test_unpack_archive_xztar) ... skipped 'requires lzma'
test_unpack_archive_zip (test.test_shutil.TestArchives.test_unpack_archive_zip) ... skipped 'requires zlib'
test_unpack_registry (test.test_shutil.TestArchives.test_unpack_registry) ... ok
test_unzip_zipfile (test.test_shutil.TestArchives.test_unzip_zipfile) ... skipped 'requires zlib'
test_zipfile_vs_zip (test.test_shutil.TestArchives.test_zipfile_vs_zip) ... skipped 'requires zlib'
test_copy (test.test_shutil.TestCopy.test_copy) ... ok
test_copy2 (test.test_shutil.TestCopy.test_copy2) ... ok
test_copy2_dir (test.test_shutil.TestCopy.test_copy2_dir) ... ok
test_copy2_symlinks (test.test_shutil.TestCopy.test_copy2_symlinks) ... skipped 'Requires functional symlink implementation'
test_copy2_xattr (test.test_shutil.TestCopy.test_copy2_xattr) ... skipped 'no non-broken extended attribute support'
test_copy_dir (test.test_shutil.TestCopy.test_copy_dir) ... ok
test_copy_return_value (test.test_shutil.TestCopy.test_copy_return_value) ... ok
test_copy_symlinks (test.test_shutil.TestCopy.test_copy_symlinks) ... skipped 'Requires functional symlink implementation'
test_copyfile_copy_dir (test.test_shutil.TestCopy.test_copyfile_copy_dir) ... ok
test_copyfile_named_pipe (test.test_shutil.TestCopy.test_copyfile_named_pipe) ... skipped 'requires os.mkfifo()'
test_copyfile_nonexistent_dir (test.test_shutil.TestCopy.test_copyfile_nonexistent_dir) ... ok
test_copyfile_return_value (test.test_shutil.TestCopy.test_copyfile_return_value) ... ok
test_copyfile_same_file (test.test_shutil.TestCopy.test_copyfile_same_file) ... ok
test_copyfile_symlinks (test.test_shutil.TestCopy.test_copyfile_symlinks) ... skipped 'Requires functional symlink implementation'
test_copymode_follow_symlinks (test.test_shutil.TestCopy.test_copymode_follow_symlinks) ... skipped 'Requires functional symlink implementation'
test_copymode_symlink_to_symlink (test.test_shutil.TestCopy.test_copymode_symlink_to_symlink) ... skipped 'requires os.lchmod'
test_copymode_symlink_to_symlink_wo_lchmod (test.test_shutil.TestCopy.test_copymode_symlink_to_symlink_wo_lchmod) ... skipped 'Requires functional symlink implementation'
test_copystat_handles_harmless_chflags_errors (test.test_shutil.TestCopy.test_copystat_handles_harmless_chflags_errors) ... skipped 'requires os.chflags, EOPNOTSUPP & ENOTSUP'
test_copystat_symlinks (test.test_shutil.TestCopy.test_copystat_symlinks) ... skipped 'Requires functional symlink implementation'
test_copyxattr (test.test_shutil.TestCopy.test_copyxattr) ... skipped 'no non-broken extended attribute support'
test_copyxattr_symlinks (test.test_shutil.TestCopy.test_copyxattr_symlinks) ... skipped 'Requires functional symlink implementation'
test_dont_copy_file_onto_link_to_itself (test.test_shutil.TestCopy.test_dont_copy_file_onto_link_to_itself) ... ERROR
test_dont_copy_file_onto_symlink_to_itself (test.test_shutil.TestCopy.test_dont_copy_file_onto_symlink_to_itself) ... skipped 'Requires functional symlink implementation'
test_w_dest_close_fails (test.test_shutil.TestCopyFile.test_w_dest_close_fails) ... ok
test_w_dest_open_fails (test.test_shutil.TestCopyFile.test_w_dest_open_fails) ... ok
test_w_source_close_fails (test.test_shutil.TestCopyFile.test_w_source_close_fails) ... ok
test_w_source_open_fails (test.test_shutil.TestCopyFile.test_w_source_open_fails) ... ok
test_content (test.test_shutil.TestCopyFileObj.test_content) ... ok
test_file_not_closed (test.test_shutil.TestCopyFileObj.test_file_not_closed) ... ok
test_file_offset (test.test_shutil.TestCopyFileObj.test_file_offset) ... ok
test_win_impl (test.test_shutil.TestCopyFileObj.test_win_impl) ... skipped 'Windows only'
test_copytree_arg_types_of_ignore (test.test_shutil.TestCopyTree.test_copytree_arg_types_of_ignore) ... ok
test_copytree_custom_copy_function (test.test_shutil.TestCopyTree.test_copytree_custom_copy_function) ... ok
test_copytree_dangling_symlinks (test.test_shutil.TestCopyTree.test_copytree_dangling_symlinks) ... skipped 'Requires functional symlink implementation'
test_copytree_dirs_exist_ok (test.test_shutil.TestCopyTree.test_copytree_dirs_exist_ok) ... ok
test_copytree_named_pipe (test.test_shutil.TestCopyTree.test_copytree_named_pipe) ... skipped 'requires os.mkfifo()'
test_copytree_retains_permissions (test.test_shutil.TestCopyTree.test_copytree_retains_permissions) ... ok
test_copytree_return_value (test.test_shutil.TestCopyTree.test_copytree_return_value) ... ok
test_copytree_simple (test.test_shutil.TestCopyTree.test_copytree_simple) ... ok
test_copytree_special_func (test.test_shutil.TestCopyTree.test_copytree_special_func) ... ok
test_copytree_subdirectory (test.test_shutil.TestCopyTree.test_copytree_subdirectory) ... ok
test_copytree_symlink_dir (test.test_shutil.TestCopyTree.test_copytree_symlink_dir) ... skipped 'Requires functional symlink implementation'
test_copytree_symlinks (test.test_shutil.TestCopyTree.test_copytree_symlinks) ... skipped 'Requires functional symlink implementation'
test_copytree_winerror (test.test_shutil.TestCopyTree.test_copytree_winerror) ... ok
test_copytree_with_exclude (test.test_shutil.TestCopyTree.test_copytree_with_exclude) ... ok
test_bad_environ (test.test_shutil.TestGetTerminalSize.test_bad_environ) ... ok
test_does_not_crash (test.test_shutil.TestGetTerminalSize.test_does_not_crash)
Check if get_terminal_size() returns a meaningful value. ... ok
test_fallback (test.test_shutil.TestGetTerminalSize.test_fallback) ... skipped 'WASI has no /dev/null'
test_os_environ_first (test.test_shutil.TestGetTerminalSize.test_os_environ_first)
Check if environment variables have precedence ... ok
test_stty_match (test.test_shutil.TestGetTerminalSize.test_stty_match)
Check if stty returns the same results ignoring env ... skipped 'not on tty'
test_chown (test.test_shutil.TestMisc.test_chown) ... skipped 'Requires grp and pwd support'
test_disk_usage (test.test_shutil.TestMisc.test_disk_usage) ... skipped 'disk_usage not available on this platform'
test_destinsrc_false_negative (test.test_shutil.TestMove.test_destinsrc_false_negative) ... ok
test_destinsrc_false_positive (test.test_shutil.TestMove.test_destinsrc_false_positive) ... ok
test_dont_move_dir_in_itself (test.test_shutil.TestMove.test_dont_move_dir_in_itself) ... ok
test_existing_file_inside_dest_dir (test.test_shutil.TestMove.test_existing_file_inside_dest_dir) ... ok
test_move_as_rename_return_value (test.test_shutil.TestMove.test_move_as_rename_return_value) ... ok
test_move_dangling_symlink (test.test_shutil.TestMove.test_move_dangling_symlink) ... skipped 'Requires functional symlink implementation'
test_move_dir (test.test_shutil.TestMove.test_move_dir) ... ok
test_move_dir_altsep_to_dir (test.test_shutil.TestMove.test_move_dir_altsep_to_dir) ... skipped 'requires os.path.altsep'
test_move_dir_caseinsensitive (test.test_shutil.TestMove.test_move_dir_caseinsensitive) ... ok
test_move_dir_other_fs (test.test_shutil.TestMove.test_move_dir_other_fs) ... ok
test_move_dir_permission_denied (test.test_shutil.TestMove.test_move_dir_permission_denied) ... skipped 'requires CAP_DAC_OVERRIDE'
test_move_dir_sep_to_dir (test.test_shutil.TestMove.test_move_dir_sep_to_dir) ... ok
test_move_dir_special_function (test.test_shutil.TestMove.test_move_dir_special_function) ... ok
test_move_dir_symlink (test.test_shutil.TestMove.test_move_dir_symlink) ... skipped 'Requires functional symlink implementation'
test_move_dir_to_dir (test.test_shutil.TestMove.test_move_dir_to_dir) ... ok
test_move_dir_to_dir_other_fs (test.test_shutil.TestMove.test_move_dir_to_dir_other_fs) ... ok
test_move_file (test.test_shutil.TestMove.test_move_file) ... ok
test_move_file_other_fs (test.test_shutil.TestMove.test_move_file_other_fs) ... ok
test_move_file_special_function (test.test_shutil.TestMove.test_move_file_special_function) ... ok
test_move_file_symlink (test.test_shutil.TestMove.test_move_file_symlink) ... skipped 'Requires functional symlink implementation'
test_move_file_symlink_to_dir (test.test_shutil.TestMove.test_move_file_symlink_to_dir) ... skipped 'Requires functional symlink implementation'
test_move_file_to_dir (test.test_shutil.TestMove.test_move_file_to_dir) ... ok
test_move_file_to_dir_other_fs (test.test_shutil.TestMove.test_move_file_to_dir_other_fs) ... ok
test_move_file_to_dir_pathlike_dst (test.test_shutil.TestMove.test_move_file_to_dir_pathlike_dst) ... ok
test_move_file_to_dir_pathlike_src (test.test_shutil.TestMove.test_move_file_to_dir_pathlike_src) ... ok
test_move_return_value (test.test_shutil.TestMove.test_move_return_value) ... ok
test_move_symlink_to_dir_into_dir (test.test_shutil.TestMove.test_move_symlink_to_dir_into_dir) ... skipped 'Requires functional symlink implementation'
test_move_symlink_to_dir_into_symlink_to_dir (test.test_shutil.TestMove.test_move_symlink_to_dir_into_symlink_to_dir) ... skipped 'Requires functional symlink implementation'
test_both_onerror_and_onexc (test.test_shutil.TestRmTree.test_both_onerror_and_onexc) ... skipped 'requires working os.chmod()'
test_on_error (test.test_shutil.TestRmTree.test_on_error) ... skipped 'requires working os.chmod()'
test_on_exc (test.test_shutil.TestRmTree.test_on_exc) ... skipped 'requires working os.chmod()'
test_rmtree_above_recursion_limit (test.test_shutil.TestRmTree.test_rmtree_above_recursion_limit) ... ok
test_rmtree_deleted_race_condition (test.test_shutil.TestRmTree.test_rmtree_deleted_race_condition) ... skipped 'requires working os.chmod()'
test_rmtree_does_not_choke_on_failing_lstat (test.test_shutil.TestRmTree.test_rmtree_does_not_choke_on_failing_lstat) ... ok
test_rmtree_dont_delete_file (test.test_shutil.TestRmTree.test_rmtree_dont_delete_file) ... ok
test_rmtree_errors (test.test_shutil.TestRmTree.test_rmtree_errors) ... ok
test_rmtree_errors_onerror (test.test_shutil.TestRmTree.test_rmtree_errors_onerror) ... ok
test_rmtree_errors_onexc (test.test_shutil.TestRmTree.test_rmtree_errors_onexc) ... ok
test_rmtree_fails_on_close (test.test_shutil.TestRmTree.test_rmtree_fails_on_close) ... skipped 'requires safe rmtree'
test_rmtree_fails_on_junctions_onerror (test.test_shutil.TestRmTree.test_rmtree_fails_on_junctions_onerror) ... skipped 'only relevant on Windows'
test_rmtree_fails_on_junctions_onexc (test.test_shutil.TestRmTree.test_rmtree_fails_on_junctions_onexc) ... skipped 'only relevant on Windows'
test_rmtree_fails_on_symlink_onerror (test.test_shutil.TestRmTree.test_rmtree_fails_on_symlink_onerror) ... skipped 'Requires functional symlink implementation'
test_rmtree_fails_on_symlink_onexc (test.test_shutil.TestRmTree.test_rmtree_fails_on_symlink_onexc) ... skipped 'Requires functional symlink implementation'
test_rmtree_on_junction (test.test_shutil.TestRmTree.test_rmtree_on_junction) ... skipped 'only relevant on Windows'
test_rmtree_on_named_pipe (test.test_shutil.TestRmTree.test_rmtree_on_named_pipe) ... skipped 'requires os.mkfifo()'
test_rmtree_on_symlink (test.test_shutil.TestRmTree.test_rmtree_on_symlink) ... skipped 'Requires functional symlink implementation'
test_rmtree_uses_safe_fd_version_if_available (test.test_shutil.TestRmTree.test_rmtree_uses_safe_fd_version_if_available) ... ok
test_rmtree_with_dir_fd (test.test_shutil.TestRmTree.test_rmtree_with_dir_fd) ... skipped 'dir_fd is not supported'
test_rmtree_with_dir_fd_unsupported (test.test_shutil.TestRmTree.test_rmtree_with_dir_fd_unsupported) ... ok
test_rmtree_works_on_bytes (test.test_shutil.TestRmTree.test_rmtree_works_on_bytes) ... ok
test_rmtree_works_on_junctions (test.test_shutil.TestRmTree.test_rmtree_works_on_junctions) ... skipped 'only relevant on Windows'
test_rmtree_works_on_symlinks (test.test_shutil.TestRmTree.test_rmtree_works_on_symlinks) ... skipped 'Requires functional symlink implementation'
test_absolute_cmd (test.test_shutil.TestWhich.test_absolute_cmd) ... skipped 'requires subprocess support'
test_basic (test.test_shutil.TestWhich.test_basic) ... skipped 'requires subprocess support'
test_cwd_non_win32 (test.test_shutil.TestWhich.test_cwd_non_win32) ... skipped 'requires subprocess support'
test_cwd_win32 (test.test_shutil.TestWhich.test_cwd_win32) ... skipped 'requires subprocess support'
test_cwd_win32_added_before_all_other_path (test.test_shutil.TestWhich.test_cwd_win32_added_before_all_other_path) ... skipped 'requires subprocess support'
test_dir_order_with_pathext_extension (test.test_shutil.TestWhich.test_dir_order_with_pathext_extension) ... skipped 'requires subprocess support'
test_dir_order_without_pathext_extension (test.test_shutil.TestWhich.test_dir_order_without_pathext_extension) ... skipped 'requires subprocess support'
test_empty_path (test.test_shutil.TestWhich.test_empty_path) ... skipped 'requires subprocess support'
test_empty_path_no_PATH (test.test_shutil.TestWhich.test_empty_path_no_PATH) ... skipped 'requires subprocess support'
test_environ_path (test.test_shutil.TestWhich.test_environ_path) ... skipped 'requires subprocess support'
test_environ_path_cwd (test.test_shutil.TestWhich.test_environ_path_cwd) ... skipped 'requires subprocess support'
test_environ_path_empty (test.test_shutil.TestWhich.test_environ_path_empty) ... skipped 'requires subprocess support'
test_environ_path_missing (test.test_shutil.TestWhich.test_environ_path_missing) ... skipped 'requires subprocess support'
test_non_matching_mode (test.test_shutil.TestWhich.test_non_matching_mode) ... skipped 'requires subprocess support'
test_nonexistent_file (test.test_shutil.TestWhich.test_nonexistent_file) ... skipped 'requires subprocess support'
test_pathext (test.test_shutil.TestWhich.test_pathext) ... skipped 'requires subprocess support'
test_pathext_applied_on_files_in_path (test.test_shutil.TestWhich.test_pathext_applied_on_files_in_path) ... skipped 'requires subprocess support'
test_pathext_checking (test.test_shutil.TestWhich.test_pathext_checking) ... skipped 'requires subprocess support'
test_pathext_extension_ends_with_dot (test.test_shutil.TestWhich.test_pathext_extension_ends_with_dot) ... skipped 'requires subprocess support'
test_pathext_with_empty_str (test.test_shutil.TestWhich.test_pathext_with_empty_str) ... skipped 'requires subprocess support'
test_pathext_with_multidot_extension (test.test_shutil.TestWhich.test_pathext_with_multidot_extension) ... skipped 'requires subprocess support'
test_pathext_with_null_extension (test.test_shutil.TestWhich.test_pathext_with_null_extension) ... skipped 'requires subprocess support'
test_relative_cmd (test.test_shutil.TestWhich.test_relative_cmd) ... skipped 'requires subprocess support'
test_relative_path (test.test_shutil.TestWhich.test_relative_path) ... skipped 'requires subprocess support'
test_same_dir_with_pathext_extension (test.test_shutil.TestWhich.test_same_dir_with_pathext_extension) ... skipped 'requires subprocess support'
test_same_dir_without_pathext_extension (test.test_shutil.TestWhich.test_same_dir_without_pathext_extension) ... skipped 'requires subprocess support'
test_win_path_needs_curdir (test.test_shutil.TestWhich.test_win_path_needs_curdir) ... skipped 'requires subprocess support'
test_absolute_cmd (test.test_shutil.TestWhichBytes.test_absolute_cmd) ... skipped 'requires subprocess support'
test_basic (test.test_shutil.TestWhichBytes.test_basic) ... skipped 'requires subprocess support'
test_cwd_non_win32 (test.test_shutil.TestWhichBytes.test_cwd_non_win32) ... skipped 'requires subprocess support'
test_cwd_win32 (test.test_shutil.TestWhichBytes.test_cwd_win32) ... skipped 'requires subprocess support'
test_cwd_win32_added_before_all_other_path (test.test_shutil.TestWhichBytes.test_cwd_win32_added_before_all_other_path) ... skipped 'requires subprocess support'
test_dir_order_with_pathext_extension (test.test_shutil.TestWhichBytes.test_dir_order_with_pathext_extension) ... skipped 'requires subprocess support'
test_dir_order_without_pathext_extension (test.test_shutil.TestWhichBytes.test_dir_order_without_pathext_extension) ... skipped 'requires subprocess support'
test_empty_path (test.test_shutil.TestWhichBytes.test_empty_path) ... skipped 'requires subprocess support'
test_empty_path_no_PATH (test.test_shutil.TestWhichBytes.test_empty_path_no_PATH) ... skipped 'requires subprocess support'
test_environ_path (test.test_shutil.TestWhichBytes.test_environ_path) ... skipped 'requires subprocess support'
test_environ_path_cwd (test.test_shutil.TestWhichBytes.test_environ_path_cwd) ... skipped 'requires subprocess support'
test_environ_path_empty (test.test_shutil.TestWhichBytes.test_environ_path_empty) ... skipped 'requires subprocess support'
test_environ_path_missing (test.test_shutil.TestWhichBytes.test_environ_path_missing) ... skipped 'requires subprocess support'
test_non_matching_mode (test.test_shutil.TestWhichBytes.test_non_matching_mode) ... skipped 'requires subprocess support'
test_nonexistent_file (test.test_shutil.TestWhichBytes.test_nonexistent_file) ... skipped 'requires subprocess support'
test_pathext (test.test_shutil.TestWhichBytes.test_pathext) ... skipped 'requires subprocess support'
test_pathext_applied_on_files_in_path (test.test_shutil.TestWhichBytes.test_pathext_applied_on_files_in_path) ... skipped 'requires subprocess support'
test_pathext_checking (test.test_shutil.TestWhichBytes.test_pathext_checking) ... skipped 'requires subprocess support'
test_pathext_extension_ends_with_dot (test.test_shutil.TestWhichBytes.test_pathext_extension_ends_with_dot) ... skipped 'requires subprocess support'
test_pathext_with_empty_str (test.test_shutil.TestWhichBytes.test_pathext_with_empty_str) ... skipped 'requires subprocess support'
test_pathext_with_multidot_extension (test.test_shutil.TestWhichBytes.test_pathext_with_multidot_extension) ... skipped 'requires subprocess support'
test_pathext_with_null_extension (test.test_shutil.TestWhichBytes.test_pathext_with_null_extension) ... skipped 'requires subprocess support'
test_relative_cmd (test.test_shutil.TestWhichBytes.test_relative_cmd) ... skipped 'requires subprocess support'
test_relative_path (test.test_shutil.TestWhichBytes.test_relative_path) ... skipped 'requires subprocess support'
test_same_dir_with_pathext_extension (test.test_shutil.TestWhichBytes.test_same_dir_with_pathext_extension) ... skipped 'requires subprocess support'
test_same_dir_without_pathext_extension (test.test_shutil.TestWhichBytes.test_same_dir_without_pathext_extension) ... skipped 'requires subprocess support'
test_win_path_needs_curdir (test.test_shutil.TestWhichBytes.test_win_path_needs_curdir) ... skipped 'requires subprocess support'
test_big_chunk (test.test_shutil.TestZeroCopyCopyFileRange.test_big_chunk) ... skipped 'os.copy_file_range() not supported'
test_blocksize_arg (test.test_shutil.TestZeroCopyCopyFileRange.test_blocksize_arg) ... skipped 'os.copy_file_range() not supported'
test_cant_get_size (test.test_shutil.TestZeroCopyCopyFileRange.test_cant_get_size) ... skipped 'os.copy_file_range() not supported'
test_empty_file (test.test_shutil.TestZeroCopyCopyFileRange.test_empty_file) ... skipped 'os.copy_file_range() not supported'
test_exception_on_first_call (test.test_shutil.TestZeroCopyCopyFileRange.test_exception_on_first_call) ... skipped 'os.copy_file_range() not supported'
test_exception_on_second_call (test.test_shutil.TestZeroCopyCopyFileRange.test_exception_on_second_call) ... skipped 'os.copy_file_range() not supported'
test_filesystem_full (test.test_shutil.TestZeroCopyCopyFileRange.test_filesystem_full) ... skipped 'os.copy_file_range() not supported'
test_non_existent_src (test.test_shutil.TestZeroCopyCopyFileRange.test_non_existent_src) ... skipped 'os.copy_file_range() not supported'
test_non_regular_file_dst (test.test_shutil.TestZeroCopyCopyFileRange.test_non_regular_file_dst) ... skipped 'os.copy_file_range() not supported'
test_non_regular_file_src (test.test_shutil.TestZeroCopyCopyFileRange.test_non_regular_file_src) ... skipped 'os.copy_file_range() not supported'
test_regular_copy (test.test_shutil.TestZeroCopyCopyFileRange.test_regular_copy) ... skipped 'os.copy_file_range() not supported'
test_same_file (test.test_shutil.TestZeroCopyCopyFileRange.test_same_file) ... skipped 'os.copy_file_range() not supported'
test_small_chunks (test.test_shutil.TestZeroCopyCopyFileRange.test_small_chunks) ... skipped 'os.copy_file_range() not supported'
test_unhandled_exception (test.test_shutil.TestZeroCopyCopyFileRange.test_unhandled_exception) ... skipped 'os.copy_file_range() not supported'
test_empty_file (test.test_shutil.TestZeroCopyMACOS.test_empty_file) ... skipped 'macOS only'
test_exception_on_first_call (test.test_shutil.TestZeroCopyMACOS.test_exception_on_first_call) ... skipped 'macOS only'
test_filesystem_full (test.test_shutil.TestZeroCopyMACOS.test_filesystem_full) ... skipped 'macOS only'
test_non_existent_src (test.test_shutil.TestZeroCopyMACOS.test_non_existent_src) ... skipped 'macOS only'
test_regular_copy (test.test_shutil.TestZeroCopyMACOS.test_regular_copy) ... skipped 'macOS only'
test_same_file (test.test_shutil.TestZeroCopyMACOS.test_same_file) ... skipped 'macOS only'
test_unhandled_exception (test.test_shutil.TestZeroCopyMACOS.test_unhandled_exception) ... skipped 'macOS only'
test_big_chunk (test.test_shutil.TestZeroCopySendfile.test_big_chunk) ... skipped 'os.sendfile() not supported'
test_blocksize_arg (test.test_shutil.TestZeroCopySendfile.test_blocksize_arg) ... skipped 'os.sendfile() not supported'
test_cant_get_size (test.test_shutil.TestZeroCopySendfile.test_cant_get_size) ... skipped 'os.sendfile() not supported'
test_empty_file (test.test_shutil.TestZeroCopySendfile.test_empty_file) ... skipped 'os.sendfile() not supported'
test_exception_on_first_call (test.test_shutil.TestZeroCopySendfile.test_exception_on_first_call) ... skipped 'os.sendfile() not supported'
test_exception_on_second_call (test.test_shutil.TestZeroCopySendfile.test_exception_on_second_call) ... skipped 'os.sendfile() not supported'
test_file2file_not_supported (test.test_shutil.TestZeroCopySendfile.test_file2file_not_supported) ... skipped 'os.sendfile() not supported'
test_filesystem_full (test.test_shutil.TestZeroCopySendfile.test_filesystem_full) ... skipped 'os.sendfile() not supported'
test_non_existent_src (test.test_shutil.TestZeroCopySendfile.test_non_existent_src) ... skipped 'os.sendfile() not supported'
test_non_regular_file_dst (test.test_shutil.TestZeroCopySendfile.test_non_regular_file_dst) ... skipped 'os.sendfile() not supported'
test_non_regular_file_src (test.test_shutil.TestZeroCopySendfile.test_non_regular_file_src) ... skipped 'os.sendfile() not supported'
test_regular_copy (test.test_shutil.TestZeroCopySendfile.test_regular_copy) ... skipped 'os.sendfile() not supported'
test_same_file (test.test_shutil.TestZeroCopySendfile.test_same_file) ... skipped 'os.sendfile() not supported'
test_small_chunks (test.test_shutil.TestZeroCopySendfile.test_small_chunks) ... skipped 'os.sendfile() not supported'
test_unhandled_exception (test.test_shutil.TestZeroCopySendfile.test_unhandled_exception) ... skipped 'os.sendfile() not supported'
2025-04-15T07:07:52.0729834Z
======================================================================
ERROR: test_dont_copy_file_onto_link_to_itself (test.test_shutil.TestCopy.test_dont_copy_file_onto_link_to_itself)
----------------------------------------------------------------------
Traceback (most recent call last):
File "/Lib/test/test_shutil.py", line 1514, in test_dont_copy_file_onto_link_to_itself
os.link(src, dst)
~~~~~~~^^^^^^^^^^
OSError: [Errno 28] Invalid argument: '@test_42_tmpÃ¦/cheese' -> '@test_42_tmpÃ¦/shop'
2025-04-15T07:07:52.0852053Z
----------------------------------------------------------------------
Ran 221 tests in 0.403s
2025-04-15T07:07:52.0853090Z
FAILED (errors=1, skipped=151)
test test_shutil failed
0:00:51 load avg: 4.86 [259/486/1] [32mtest_patma passed[0m
0:00:51 load avg: 4.86 [260/486/1] [32mtest_list passed[0m
0:00:51 load avg: 4.86 [261/486/1] [32mtest_opcache passed[0m
0:00:52 load avg: 4.86 [262/486/1] [32mtest_heapq passed[0m
0:00:52 load avg: 4.86 [263/486/1] [32mtest_iter passed[0m
0:00:52 load avg: 4.86 [264/486/1] [32mtest_metaclass passed[0m
0:00:52 load avg: 4.86 [265/486/1] [32mtest_call passed[0m
0:00:53 load avg: 4.86 [266/486/1] [32mtest_utf8_mode passed[0m
0:00:53 load avg: 4.86 [267/486/1] [32mtest.test_future_stmt.test_future_flags passed[0m
0:00:53 load avg: 4.95 [268/486/1] [32mtest_plistlib passed[0m
0:00:54 load avg: 4.95 [269/486/1] [33mtest_turtle skipped[0m
test_turtle skipped -- No module named '_tkinter'
0:00:54 load avg: 4.95 [270/486/1] [33mtest_urllib skipped[0m
test_urllib skipped -- test requires gethostname()
0:00:54 load avg: 4.95 [271/486/1] [32mtest_netrc passed[0m
0:00:55 load avg: 4.95 [272/486/1] [33mtest_webbrowser skipped[0m
test_webbrowser skipped -- requires threading support
0:00:55 load avg: 4.95 [273/486/1] [32mtest_longexp passed[0m
0:00:55 load avg: 4.95 [274/486/1] [33mtest.test_asyncio.test_buffered_proto skipped[0m
test.test_asyncio.test_buffered_proto skipped -- requires socket support
0:00:55 load avg: 4.95 [275/486/1] [32mtest_capi passed[0m
0:00:56 load avg: 4.95 [276/486/1] [33mtest.test_asyncio.test_unix_events skipped[0m
test.test_asyncio.test_unix_events skipped -- requires socket support
0:00:56 load avg: 4.95 [277/486/1] [32mtest_univnewlines passed[0m
0:00:57 load avg: 4.95 [278/486/1] [33mtest.test_asyncio.test_free_threading skipped[0m
test.test_asyncio.test_free_threading skipped -- requires socket support
0:00:58 load avg: 4.95 [279/486/1] [32mtest.test_pydoc.test_pydoc passed[0m
0:00:58 load avg: 4.95 [280/486/1] [32mtest_datetime passed[0m
0:00:58 load avg: 4.95 [281/486/1] [32mtest_sort passed[0m
0:00:58 load avg: 5.04 [282/486/1] [33mtest_mmap skipped[0m
test_mmap skipped -- No module named 'mmap'
0:00:58 load avg: 5.04 [283/486/1] [33mtest.test_multiprocessing_spawn.test_threads skipped[0m
test.test_multiprocessing_spawn.test_threads skipped -- No module named '_multiprocessing'
0:00:59 load avg: 5.04 [284/486/1] [32mtest_pulldom passed[0m
0:00:59 load avg: 5.04 [285/486/1] [33mtest.test_concurrent_futures.test_wait skipped[0m
test.test_concurrent_futures.test_wait skipped -- requires threading support
0:00:59 load avg: 5.04 [286/486/1] [33mtest.test_asyncio.test_base_events skipped[0m
test.test_asyncio.test_base_events skipped -- requires socket support
0:00:59 load avg: 5.04 [287/486/1] [33mtest_pty skipped[0m
test_pty skipped -- No module named 'termios'
0:01:00 load avg: 5.04 [288/486/1] [33mtest_kqueue skipped[0m
test_kqueue skipped -- test works only on BSD
0:01:01 load avg: 5.04 [289/486/1] [32mtest_bufio passed[0m
0:01:01 load avg: 5.04 [290/486/1] [32mtest_email passed[0m
0:01:01 load avg: 5.04 [291/486/1] [32mtest_module passed[0m
0:01:01 load avg: 5.04 [292/486/1] [32mtest_uuid passed[0m
0:01:01 load avg: 5.04 [293/486/1] [33mtest_poplib skipped[0m
test_poplib skipped -- requires socket support
0:01:02 load avg: 5.04 [294/486/1] [32mtest_exception_variations passed[0m
0:01:02 load avg: 5.04 [295/486/1] [32mtest_support passed[0m
0:01:02 load avg: 5.04 [296/486/1] [32mtest_generator_stop passed[0m
0:01:03 load avg: 5.04 [297/486/1] [32mtest_exceptions passed[0m
0:01:03 load avg: 5.04 [298/486/1] [32mtest_userstring passed[0m
0:01:03 load avg: 5.04 [299/486/1] [32mtest_compare passed[0m
0:01:03 load avg: 5.03 [300/486/1] [32mtest_signal passed[0m
0:01:03 load avg: 5.03 [301/486/1] [32mtest_eof passed[0m
0:01:04 load avg: 5.03 [302/486/1] [33mtest_venv skipped[0m
test_venv skipped -- venv is not available on this platform
0:01:04 load avg: 5.03 [303/486/1] [33mtest_winreg skipped[0m
test_winreg skipped -- No module named 'winreg'
0:01:04 load avg: 5.03 [304/486/1] [32mtest_int passed[0m
0:01:04 load avg: 5.03 [305/486/1] [33mtest_docxmlrpc skipped[0m
test_docxmlrpc skipped -- requires socket support
0:01:04 load avg: 5.03 [306/486/1] [32mtest_code_module passed[0m
0:01:05 load avg: 5.03 [307/486/1] [33mtest.test_asyncio.test_timeouts skipped[0m
test.test_asyncio.test_timeouts skipped -- requires socket support
0:01:05 load avg: 5.03 [308/486/1] [33mtest.test_asyncio.test_eager_task_factory skipped[0m
test.test_asyncio.test_eager_task_factory skipped -- requires socket support
0:01:05 load avg: 5.03 [309/486/1] [32mtest_unicode_file passed[0m
0:01:05 load avg: 5.03 [310/486/1] [33mtest.test_concurrent_futures.test_init skipped[0m
test.test_concurrent_futures.test_init skipped -- requires threading support
0:01:05 load avg: 5.03 [311/486/1] [32mtest_dict passed[0m
0:01:06 load avg: 5.03 [312/486/1] [32mtest_html passed[0m
0:01:06 load avg: 5.03 [313/486/1] [32mtest_statistics passed[0m
0:01:06 load avg: 5.03 [314/486/1] [32mtest_pstats passed[0m
0:01:06 load avg: 5.03 [315/486/1] [32mtest_zipfile passed[0m
0:01:06 load avg: 5.03 [316/486/1] [32mtest_sched passed[0m
0:01:06 load avg: 5.03 [317/486/1] [32mtest_float passed[0m
0:01:06 load avg: 5.03 [318/486/1] [33mtest.test_asyncio.test_subprocess skipped[0m
test.test_asyncio.test_subprocess skipped -- requires socket support
0:01:06 load avg: 5.03 [319/486/1] [33mtest_tty skipped[0m
test_tty skipped -- No module named 'termios'
0:01:07 load avg: 5.03 [320/486/1] [32mtest_tabnanny passed[0m
0:01:07 load avg: 5.03 [321/486/1] [32mtest_abc passed[0m
0:01:07 load avg: 5.03 [322/486/1] [32mtest_audit passed[0m
0:01:07 load avg: 5.03 [323/486/1] [33mtest_threading_local skipped[0m
test_threading_local skipped -- requires threading support
0:01:07 load avg: 5.03 [324/486/1] [32mtest_popen passed[0m
0:01:07 load avg: 5.03 [325/486/1] [33mtest_zlib skipped[0m
test_zlib skipped -- No module named 'zlib'
0:01:07 load avg: 5.03 [326/486/1] [32mtest_subclassinit passed[0m
0:01:07 load avg: 5.03 [327/486/2] [1;31m[1;31mtest_posixpath failed (2 errors)[0m[0m
test_path_abspath (test.test_posixpath.PathLikeTests.test_path_abspath) ... ok
test_path_basename (test.test_posixpath.PathLikeTests.test_path_basename) ... ok
test_path_commonpath (test.test_posixpath.PathLikeTests.test_path_commonpath) ... ok
test_path_dirname (test.test_posixpath.PathLikeTests.test_path_dirname) ... ok
test_path_expanduser (test.test_posixpath.PathLikeTests.test_path_expanduser) ... ok
test_path_expandvars (test.test_posixpath.PathLikeTests.test_path_expandvars) ... ok
test_path_isabs (test.test_posixpath.PathLikeTests.test_path_isabs) ... ok
test_path_islink (test.test_posixpath.PathLikeTests.test_path_islink) ... ok
test_path_ismount (test.test_posixpath.PathLikeTests.test_path_ismount) ... ok
test_path_join (test.test_posixpath.PathLikeTests.test_path_join) ... ok
test_path_lexists (test.test_posixpath.PathLikeTests.test_path_lexists) ... ok
test_path_normcase (test.test_posixpath.PathLikeTests.test_path_normcase) ... ok
test_path_normpath (test.test_posixpath.PathLikeTests.test_path_normpath) ... ok
test_path_realpath (test.test_posixpath.PathLikeTests.test_path_realpath) ... ok
test_path_relpath (test.test_posixpath.PathLikeTests.test_path_relpath) ... ok
test_path_split (test.test_posixpath.PathLikeTests.test_path_split) ... ok
test_path_splitdrive (test.test_posixpath.PathLikeTests.test_path_splitdrive) ... ok
test_path_splitext (test.test_posixpath.PathLikeTests.test_path_splitext) ... ok
test_path_splitroot (test.test_posixpath.PathLikeTests.test_path_splitroot) ... ok
test_abspath (test.test_posixpath.PosixCommonTest.test_abspath) ... ok
test_abspath_issue3426 (test.test_posixpath.PosixCommonTest.test_abspath_issue3426) ... ok
test_commonprefix (test.test_posixpath.PosixCommonTest.test_commonprefix) ... ok
test_exists (test.test_posixpath.PosixCommonTest.test_exists) ... ok
test_exists_bool (test.test_posixpath.PosixCommonTest.test_exists_bool) ... ok
test_exists_fd (test.test_posixpath.PosixCommonTest.test_exists_fd) ... skipped 'requires os.pipe()'
test_expandvars (test.test_posixpath.PosixCommonTest.test_expandvars) ... ok
test_expandvars_nonascii (test.test_posixpath.PosixCommonTest.test_expandvars_nonascii) ... ok
test_filetime (test.test_posixpath.PosixCommonTest.test_filetime) ... ok
test_getsize (test.test_posixpath.PosixCommonTest.test_getsize) ... ok
test_import (test.test_posixpath.PosixCommonTest.test_import) ... skipped 'requires subprocess support'
test_isdir (test.test_posixpath.PosixCommonTest.test_isdir) ... ok
test_isfile (test.test_posixpath.PosixCommonTest.test_isfile) ... ok
test_join_errors (test.test_posixpath.PosixCommonTest.test_join_errors) ... ok
test_no_argument (test.test_posixpath.PosixCommonTest.test_no_argument) ... ok
test_nonascii_abspath (test.test_posixpath.PosixCommonTest.test_nonascii_abspath) ... ok
test_normcase (test.test_posixpath.PosixCommonTest.test_normcase) ... ok
test_normpath_issue106242 (test.test_posixpath.PosixCommonTest.test_normpath_issue106242) ... ok
test_normpath_issue5827 (test.test_posixpath.PosixCommonTest.test_normpath_issue5827) ... ok
test_realpath (test.test_posixpath.PosixCommonTest.test_realpath) ... ok
test_relpath_errors (test.test_posixpath.PosixCommonTest.test_relpath_errors) ... ok
test_samefile (test.test_posixpath.PosixCommonTest.test_samefile) ... ok
test_samefile_on_link (test.test_posixpath.PosixCommonTest.test_samefile_on_link) ... ERROR
test_samefile_on_symlink (test.test_posixpath.PosixCommonTest.test_samefile_on_symlink) ... skipped 'Requires functional symlink implementation'
test_sameopenfile (test.test_posixpath.PosixCommonTest.test_sameopenfile) ... ok
test_samestat (test.test_posixpath.PosixCommonTest.test_samestat) ... ok
test_samestat_on_link (test.test_posixpath.PosixCommonTest.test_samestat_on_link) ... ERROR
test_samestat_on_symlink (test.test_posixpath.PosixCommonTest.test_samestat_on_symlink) ... skipped 'Requires functional symlink implementation'
test_splitdrive (test.test_posixpath.PosixCommonTest.test_splitdrive) ... ok
test_basename (test.test_posixpath.PosixPathTest.test_basename) ... ok
test_commonpath (test.test_posixpath.PosixPathTest.test_commonpath) ... ok
test_dirname (test.test_posixpath.PosixPathTest.test_dirname) ... ok
test_expanduser (test.test_posixpath.PosixPathTest.test_expanduser) ... ok
test_expanduser_home_envvar (test.test_posixpath.PosixPathTest.test_expanduser_home_envvar) ... ok
test_expanduser_pwd (test.test_posixpath.PosixPathTest.test_expanduser_pwd) ... skipped "No module named 'pwd'"
test_expanduser_pwd2 (test.test_posixpath.PosixPathTest.test_expanduser_pwd2) ... skipped "No module named 'pwd'"
test_fast_paths_in_use (test.test_posixpath.PosixPathTest.test_fast_paths_in_use) ... ok
test_isabs (test.test_posixpath.PosixPathTest.test_isabs) ... ok
test_isjunction (test.test_posixpath.PosixPathTest.test_isjunction) ... ok
test_islink (test.test_posixpath.PosixPathTest.test_islink) ... ok
test_ismount (test.test_posixpath.PosixPathTest.test_ismount) ... ok
test_ismount_different_device (test.test_posixpath.PosixPathTest.test_ismount_different_device) ... ok
test_ismount_directory_not_readable (test.test_posixpath.PosixPathTest.test_ismount_directory_not_readable) ... ok
test_ismount_non_existent (test.test_posixpath.PosixPathTest.test_ismount_non_existent) ... ok
test_ismount_symlinks (test.test_posixpath.PosixPathTest.test_ismount_symlinks) ... skipped 'Requires functional symlink implementation'
test_join (test.test_posixpath.PosixPathTest.test_join) ... ok
test_normpath (test.test_posixpath.PosixPathTest.test_normpath) ... ok
test_realpath_basic (test.test_posixpath.PosixPathTest.test_realpath_basic) ... skipped 'Requires functional symlink implementation'
test_realpath_curdir (test.test_posixpath.PosixPathTest.test_realpath_curdir) ... ok
test_realpath_deep_recursion (test.test_posixpath.PosixPathTest.test_realpath_deep_recursion) ... skipped 'Requires functional symlink implementation'
test_realpath_missing_pardir (test.test_posixpath.PosixPathTest.test_realpath_missing_pardir) ... skipped 'Requires functional symlink implementation'
test_realpath_nonterminal_file (test.test_posixpath.PosixPathTest.test_realpath_nonterminal_file) ... ok
test_realpath_nonterminal_symlink_to_file (test.test_posixpath.PosixPathTest.test_realpath_nonterminal_symlink_to_file) ... skipped 'Requires functional symlink implementation'
test_realpath_nonterminal_symlink_to_symlinks_to_file (test.test_posixpath.PosixPathTest.test_realpath_nonterminal_symlink_to_symlinks_to_file) ... skipped 'Requires functional symlink implementation'
test_realpath_pardir (test.test_posixpath.PosixPathTest.test_realpath_pardir) ... ok
test_realpath_relative (test.test_posixpath.PosixPathTest.test_realpath_relative) ... skipped 'Requires functional symlink implementation'
test_realpath_repeated_indirect_symlinks (test.test_posixpath.PosixPathTest.test_realpath_repeated_indirect_symlinks) ... skipped 'Requires functional symlink implementation'
test_realpath_resolve_before_normalizing (test.test_posixpath.PosixPathTest.test_realpath_resolve_before_normalizing) ... skipped 'Requires functional symlink implementation'
test_realpath_resolve_first (test.test_posixpath.PosixPathTest.test_realpath_resolve_first) ... skipped 'Requires functional symlink implementation'
test_realpath_resolve_parents (test.test_posixpath.PosixPathTest.test_realpath_resolve_parents) ... skipped 'Requires functional symlink implementation'
test_realpath_strict (test.test_posixpath.PosixPathTest.test_realpath_strict) ... skipped 'Requires functional symlink implementation'
test_realpath_symlink_loops (test.test_posixpath.PosixPathTest.test_realpath_symlink_loops) ... skipped 'Requires functional symlink implementation'
test_realpath_symlink_loops_strict (test.test_posixpath.PosixPathTest.test_realpath_symlink_loops_strict) ... skipped 'Requires functional symlink implementation'
test_realpath_unreadable_symlink (test.test_posixpath.PosixPathTest.test_realpath_unreadable_symlink) ... skipped 'Requires functional symlink implementation'
test_relpath (test.test_posixpath.PosixPathTest.test_relpath) ... ok
test_relpath_bytes (test.test_posixpath.PosixPathTest.test_relpath_bytes) ... ok
test_split (test.test_posixpath.PosixPathTest.test_split) ... ok
test_splitext (test.test_posixpath.PosixPathTest.test_splitext) ... ok
test_splitroot (test.test_posixpath.PosixPathTest.test_splitroot) ... ok
2025-04-15T07:08:08.7439367Z
======================================================================
ERROR: test_samefile_on_link (test.test_posixpath.PosixCommonTest.test_samefile_on_link)
----------------------------------------------------------------------
Traceback (most recent call last):
File "/Lib/test/test_genericpath.py", line 265, in test_samefile_on_link
self._test_samefile_on_link_func(os.link)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^
File "/Lib/test/test_genericpath.py", line 251, in _test_samefile_on_link_func
func(test_fn1, test_fn2)
~~~~^^^^^^^^^^^^^^^^^^^^
OSError: [Errno 28] Invalid argument: '@test_42_tmpÃ¦' -> '@test_42_tmpÃ¦2'
2025-04-15T07:08:08.7516499Z
======================================================================
ERROR: test_samestat_on_link (test.test_posixpath.PosixCommonTest.test_samestat_on_link)
----------------------------------------------------------------------
Traceback (most recent call last):
File "/Lib/test/test_genericpath.py", line 308, in test_samestat_on_link
self._test_samestat_on_link_func(os.link)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^
File "/Lib/test/test_genericpath.py", line 292, in _test_samestat_on_link_func
func(test_fn1, test_fn2)
~~~~^^^^^^^^^^^^^^^^^^^^
OSError: [Errno 28] Invalid argument: '@test_42_tmpÃ¦1' -> '@test_42_tmpÃ¦2'
2025-04-15T07:08:08.7524330Z
----------------------------------------------------------------------
Ran 88 tests in 0.089s
2025-04-15T07:08:08.7525332Z
FAILED (errors=2, skipped=21)
test test_posixpath failed
0:01:07 load avg: 5.03 [328/486/2] [33mtest_dbm_gnu skipped[0m
test_dbm_gnu skipped -- No module named '_gdbm'
0:01:08 load avg: 5.11 [329/486/2] [32mtest_type_params passed[0m
0:01:08 load avg: 5.11 [330/486/2] [32mtest_grammar passed[0m
0:01:08 load avg: 5.11 [331/486/2] [33mtest.test_asyncio.test_server skipped[0m
test.test_asyncio.test_server skipped -- requires socket support
0:01:08 load avg: 5.11 [332/486/2] [33mtest_stable_abi_ctypes skipped[0m
test_stable_abi_ctypes skipped -- No module named '_ctypes'
0:01:08 load avg: 5.11 [333/486/2] [33mtest_winconsoleio skipped[0m
test_winconsoleio skipped -- test only relevant on win32
0:01:09 load avg: 5.11 [334/486/2] [33mtest_queue skipped[0m
test_queue skipped -- requires threading support
0:01:09 load avg: 5.11 [335/486/2] [32mtest_contextlib_async passed[0m
0:01:10 load avg: 5.11 [336/486/2] [32mtest_codecmaps_tw passed[0m
0:01:10 load avg: 5.11 [337/486/2] [32mtest_sys_settrace passed[0m
0:01:11 load avg: 5.11 [338/486/2] [33mtest_import skipped[0m
test_import skipped -- No module named '_testsinglephase'
0:01:11 load avg: 5.11 [339/486/2] [32mtest___all__ passed[0m
0:01:12 load avg: 5.11 [340/486/2] [32mtest_dbm passed[0m
0:01:12 load avg: 5.11 [341/486/2] [33mtest.test_concurrent_futures.test_future skipped[0m
test.test_concurrent_futures.test_future skipped -- requires threading support
0:01:12 load avg: 5.11 [342/486/2] [33mtest_wait4 skipped[0m
test_wait4 skipped -- requires working os.fork()
0:01:12 load avg: 5.11 [343/486/2] [33mtest.test_asyncio.test_futures skipped[0m
test.test_asyncio.test_futures skipped -- requires socket support
0:01:13 load avg: 5.11 [344/486/2] [32mtest_abstract_numbers passed[0m
0:01:13 load avg: 5.18 [345/486/2] [33mtest_getopt skipped[0m
test_getopt skipped -- test module requires subprocess
0:01:14 load avg: 5.18 [346/486/2] [32mtest_generators passed[0m
0:01:14 load avg: 5.18 [347/486/2] [33mtest_epoll skipped[0m
test_epoll skipped -- test works only on Linux 2.6
0:01:14 load avg: 5.18 [348/486/2] [32mtest_buffer passed[0m
0:01:14 load avg: 5.18 [349/486/2] [32mtest_fnmatch passed[0m
0:01:14 load avg: 5.18 [350/486/2] [32mtest_genexps passed[0m
0:01:15 load avg: 5.18 [351/486/2] [32mtest_property passed[0m
0:01:15 load avg: 5.18 [352/486/2] [33mtest__interpchannels skipped[0m
test__interpchannels skipped -- No module named '_interpchannels'
0:01:15 load avg: 5.18 [353/486/2] [33mtest_wsgiref skipped[0m
test_wsgiref skipped -- requires socket support
0:01:16 load avg: 5.18 [354/486/2] [32mtest_long passed[0m
0:01:17 load avg: 5.18 [355/486/2] [33mtest_ttk skipped[0m
test_ttk skipped -- No module named '_tkinter'
0:01:18 load avg: 5.18 [356/486/2] [32mtest_range passed[0m
0:01:18 load avg: 5.25 [357/486/2] [32mtest_set passed[0m
0:01:19 load avg: 5.25 [358/486/2] [32mtest_warnings passed[0m
0:01:19 load avg: 5.25 [359/486/2] [33mtest.test_multiprocessing_fork.test_manager skipped[0m
test.test_multiprocessing_fork.test_manager skipped -- No module named '_multiprocessing'
0:01:19 load avg: 5.25 [360/486/2] [32mtest_pickletools passed[0m
0:01:19 load avg: 5.25 [361/486/2] [32mtest_rlcompleter passed[0m
0:01:20 load avg: 5.25 [362/486/2] [33mtest_fork1 skipped[0m
test_fork1 skipped -- test module requires working os.fork
0:01:20 load avg: 5.25 [363/486/2] [33mtest_openpty skipped[0m
test_openpty skipped -- os.openpty() not available.
0:01:20 load avg: 5.25 [364/486/3] [1;31m[1;31mtest_pathlib failed (3 errors)[0m[0m
test_copy_dir (test.test_pathlib.test_copy.LocalToLocalPathCopyTest.test_copy_dir) ... ok
test_copy_dir_follow_symlinks_false (test.test_pathlib.test_copy.LocalToLocalPathCopyTest.test_copy_dir_follow_symlinks_false) ... skipped 'needs symlink support on source'
test_copy_dir_follow_symlinks_true (test.test_pathlib.test_copy.LocalToLocalPathCopyTest.test_copy_dir_follow_symlinks_true) ... skipped 'needs symlink support on source'
test_copy_dir_into_itself (test.test_pathlib.test_copy.LocalToLocalPathCopyTest.test_copy_dir_into_itself) ... ok
test_copy_dir_to_existing_directory (test.test_pathlib.test_copy.LocalToLocalPathCopyTest.test_copy_dir_to_existing_directory) ... ok
test_copy_dir_to_itself (test.test_pathlib.test_copy.LocalToLocalPathCopyTest.test_copy_dir_to_itself) ... ok
test_copy_file (test.test_pathlib.test_copy.LocalToLocalPathCopyTest.test_copy_file) ... ok
test_copy_file_empty (test.test_pathlib.test_copy.LocalToLocalPathCopyTest.test_copy_file_empty) ... ok
test_copy_file_to_directory (test.test_pathlib.test_copy.LocalToLocalPathCopyTest.test_copy_file_to_directory) ... ok
test_copy_file_to_existing_file (test.test_pathlib.test_copy.LocalToLocalPathCopyTest.test_copy_file_to_existing_file) ... ok
test_copy_file_to_itself (test.test_pathlib.test_copy.LocalToLocalPathCopyTest.test_copy_file_to_itself) ... ok
test_copy_into (test.test_pathlib.test_copy.LocalToLocalPathCopyTest.test_copy_into) ... ok
test_copy_into_empty_name (test.test_pathlib.test_copy.LocalToLocalPathCopyTest.test_copy_into_empty_name) ... ok
test_copy_dir (test.test_pathlib.test_copy.LocalToZipPathCopyTest.test_copy_dir) ... ok
test_copy_dir_follow_symlinks_false (test.test_pathlib.test_copy.LocalToZipPathCopyTest.test_copy_dir_follow_symlinks_false) ... skipped 'needs symlink support on source'
test_copy_dir_follow_symlinks_true (test.test_pathlib.test_copy.LocalToZipPathCopyTest.test_copy_dir_follow_symlinks_true) ... skipped 'needs symlink support on source'
test_copy_dir_into_itself (test.test_pathlib.test_copy.LocalToZipPathCopyTest.test_copy_dir_into_itself) ... ok
test_copy_dir_to_existing_directory (test.test_pathlib.test_copy.LocalToZipPathCopyTest.test_copy_dir_to_existing_directory) ... skipped 'needs local target'
test_copy_dir_to_itself (test.test_pathlib.test_copy.LocalToZipPathCopyTest.test_copy_dir_to_itself) ... ok
test_copy_file (test.test_pathlib.test_copy.LocalToZipPathCopyTest.test_copy_file) ... ok
test_copy_file_empty (test.test_pathlib.test_copy.LocalToZipPathCopyTest.test_copy_file_empty) ... ok
test_copy_file_to_directory (test.test_pathlib.test_copy.LocalToZipPathCopyTest.test_copy_file_to_directory) ... skipped 'needs local target'
test_copy_file_to_existing_file (test.test_pathlib.test_copy.LocalToZipPathCopyTest.test_copy_file_to_existing_file) ... ok
test_copy_file_to_itself (test.test_pathlib.test_copy.LocalToZipPathCopyTest.test_copy_file_to_itself) ... ok
test_copy_into (test.test_pathlib.test_copy.LocalToZipPathCopyTest.test_copy_into) ... ok
test_copy_into_empty_name (test.test_pathlib.test_copy.LocalToZipPathCopyTest.test_copy_into_empty_name) ... ok
test_copy_dir (test.test_pathlib.test_copy.ZipToLocalPathCopyTest.test_copy_dir) ... ok
test_copy_dir_follow_symlinks_false (test.test_pathlib.test_copy.ZipToLocalPathCopyTest.test_copy_dir_follow_symlinks_false) ... skipped 'needs symlink support on target'
test_copy_dir_follow_symlinks_true (test.test_pathlib.test_copy.ZipToLocalPathCopyTest.test_copy_dir_follow_symlinks_true) ... ok
test_copy_dir_into_itself (test.test_pathlib.test_copy.ZipToLocalPathCopyTest.test_copy_dir_into_itself) ... ok
test_copy_dir_to_existing_directory (test.test_pathlib.test_copy.ZipToLocalPathCopyTest.test_copy_dir_to_existing_directory) ... ok
test_copy_dir_to_itself (test.test_pathlib.test_copy.ZipToLocalPathCopyTest.test_copy_dir_to_itself) ... ok
test_copy_file (test.test_pathlib.test_copy.ZipToLocalPathCopyTest.test_copy_file) ... ok
test_copy_file_empty (test.test_pathlib.test_copy.ZipToLocalPathCopyTest.test_copy_file_empty) ... ok
test_copy_file_to_directory (test.test_pathlib.test_copy.ZipToLocalPathCopyTest.test_copy_file_to_directory) ... ok
test_copy_file_to_existing_file (test.test_pathlib.test_copy.ZipToLocalPathCopyTest.test_copy_file_to_existing_file) ... ok
test_copy_file_to_itself (test.test_pathlib.test_copy.ZipToLocalPathCopyTest.test_copy_file_to_itself) ... ok
test_copy_into (test.test_pathlib.test_copy.ZipToLocalPathCopyTest.test_copy_into) ... ok
test_copy_into_empty_name (test.test_pathlib.test_copy.ZipToLocalPathCopyTest.test_copy_into_empty_name) ... ok
test_copy_dir (test.test_pathlib.test_copy.ZipToZipPathCopyTest.test_copy_dir) ... ok
test_copy_dir_follow_symlinks_false (test.test_pathlib.test_copy.ZipToZipPathCopyTest.test_copy_dir_follow_symlinks_false) ... ok
test_copy_dir_follow_symlinks_true (test.test_pathlib.test_copy.ZipToZipPathCopyTest.test_copy_dir_follow_symlinks_true) ... ok
test_copy_dir_into_itself (test.test_pathlib.test_copy.ZipToZipPathCopyTest.test_copy_dir_into_itself) ... ok
test_copy_dir_to_existing_directory (test.test_pathlib.test_copy.ZipToZipPathCopyTest.test_copy_dir_to_existing_directory) ... skipped 'needs local target'
test_copy_dir_to_itself (test.test_pathlib.test_copy.ZipToZipPathCopyTest.test_copy_dir_to_itself) ... ok
test_copy_file (test.test_pathlib.test_copy.ZipToZipPathCopyTest.test_copy_file) ... ok
test_copy_file_empty (test.test_pathlib.test_copy.ZipToZipPathCopyTest.test_copy_file_empty) ... ok
test_copy_file_to_directory (test.test_pathlib.test_copy.ZipToZipPathCopyTest.test_copy_file_to_directory) ... skipped 'needs local target'
test_copy_file_to_existing_file (test.test_pathlib.test_copy.ZipToZipPathCopyTest.test_copy_file_to_existing_file) ... ok
test_copy_file_to_itself (test.test_pathlib.test_copy.ZipToZipPathCopyTest.test_copy_file_to_itself) ... ok
test_copy_into (test.test_pathlib.test_copy.ZipToZipPathCopyTest.test_copy_into) ... ok
test_copy_into_empty_name (test.test_pathlib.test_copy.ZipToZipPathCopyTest.test_copy_into_empty_name) ... ok
test_anchor (test.test_pathlib.test_join.LexicalPathJoinTest.test_anchor) ... ok
test_constructor (test.test_pathlib.test_join.LexicalPathJoinTest.test_constructor) ... ok
test_div (test.test_pathlib.test_join.LexicalPathJoinTest.test_div) ... ok
test_full_match (test.test_pathlib.test_join.LexicalPathJoinTest.test_full_match) ... ok
test_is_joinable (test.test_pathlib.test_join.LexicalPathJoinTest.test_is_joinable) ... ok
test_join (test.test_pathlib.test_join.LexicalPathJoinTest.test_join) ... ok
test_name (test.test_pathlib.test_join.LexicalPathJoinTest.test_name) ... ok
test_parent (test.test_pathlib.test_join.LexicalPathJoinTest.test_parent) ... ok
test_parents (test.test_pathlib.test_join.LexicalPathJoinTest.test_parents) ... ok
test_parser (test.test_pathlib.test_join.LexicalPathJoinTest.test_parser) ... ok
test_parts (test.test_pathlib.test_join.LexicalPathJoinTest.test_parts) ... ok
test_stem (test.test_pathlib.test_join.LexicalPathJoinTest.test_stem) ... ok
test_suffix (test.test_pathlib.test_join.LexicalPathJoinTest.test_suffix) ... ok
test_suffixes (test.test_pathlib.test_join.LexicalPathJoinTest.test_suffixes) ... ok
test_with_name (test.test_pathlib.test_join.LexicalPathJoinTest.test_with_name) ... ok
test_with_segments (test.test_pathlib.test_join.LexicalPathJoinTest.test_with_segments) ... ok
test_with_stem (test.test_pathlib.test_join.LexicalPathJoinTest.test_with_stem) ... ok
test_with_suffix (test.test_pathlib.test_join.LexicalPathJoinTest.test_with_suffix) ... ok
test_anchor (test.test_pathlib.test_join.PathJoinTest.test_anchor) ... ok
test_constructor (test.test_pathlib.test_join.PathJoinTest.test_constructor) ... ok
test_div (test.test_pathlib.test_join.PathJoinTest.test_div) ... ok
test_full_match (test.test_pathlib.test_join.PathJoinTest.test_full_match) ... ok
test_is_joinable (test.test_pathlib.test_join.PathJoinTest.test_is_joinable) ... ok
test_join (test.test_pathlib.test_join.PathJoinTest.test_join) ... ok
test_name (test.test_pathlib.test_join.PathJoinTest.test_name) ... ok
test_parent (test.test_pathlib.test_join.PathJoinTest.test_parent) ... ok
test_parents (test.test_pathlib.test_join.PathJoinTest.test_parents) ... ok
test_parser (test.test_pathlib.test_join.PathJoinTest.test_parser) ... ok
test_parts (test.test_pathlib.test_join.PathJoinTest.test_parts) ... ok
test_stem (test.test_pathlib.test_join.PathJoinTest.test_stem) ... ok
test_suffix (test.test_pathlib.test_join.PathJoinTest.test_suffix) ... ok
test_suffixes (test.test_pathlib.test_join.PathJoinTest.test_suffixes) ... ok
test_with_name (test.test_pathlib.test_join.PathJoinTest.test_with_name) ... ok
test_with_segments (test.test_pathlib.test_join.PathJoinTest.test_with_segments) ... ok
test_with_stem (test.test_pathlib.test_join.PathJoinTest.test_with_stem) ... ok
test_with_suffix (test.test_pathlib.test_join.PathJoinTest.test_with_suffix) ... ok
test_anchor (test.test_pathlib.test_join.PurePathJoinTest.test_anchor) ... ok
test_constructor (test.test_pathlib.test_join.PurePathJoinTest.test_constructor) ... ok
test_div (test.test_pathlib.test_join.PurePathJoinTest.test_div) ... ok
test_full_match (test.test_pathlib.test_join.PurePathJoinTest.test_full_match) ... ok
test_is_joinable (test.test_pathlib.test_join.PurePathJoinTest.test_is_joinable) ... ok
test_join (test.test_pathlib.test_join.PurePathJoinTest.test_join) ... ok
test_name (test.test_pathlib.test_join.PurePathJoinTest.test_name) ... ok
test_parent (test.test_pathlib.test_join.PurePathJoinTest.test_parent) ... ok
test_parents (test.test_pathlib.test_join.PurePathJoinTest.test_parents) ... ok
test_parser (test.test_pathlib.test_join.PurePathJoinTest.test_parser) ... ok
test_parts (test.test_pathlib.test_join.PurePathJoinTest.test_parts) ... ok
test_stem (test.test_pathlib.test_join.PurePathJoinTest.test_stem) ... ok
test_suffix (test.test_pathlib.test_join.PurePathJoinTest.test_suffix) ... ok
test_suffixes (test.test_pathlib.test_join.PurePathJoinTest.test_suffixes) ... ok
test_with_name (test.test_pathlib.test_join.PurePathJoinTest.test_with_name) ... ok
test_with_segments (test.test_pathlib.test_join.PurePathJoinTest.test_with_segments) ... ok
test_with_stem (test.test_pathlib.test_join.PurePathJoinTest.test_with_stem) ... ok
test_with_suffix (test.test_pathlib.test_join.PurePathJoinTest.test_with_suffix) ... ok
test_div (test.test_pathlib.test_join_posix.LexicalPosixPathJoinTest.test_div) ... ok
test_join (test.test_pathlib.test_join_posix.LexicalPosixPathJoinTest.test_join) ... ok
test_div (test.test_pathlib.test_join_posix.PosixPathJoinTest.test_div) ... ok
test_join (test.test_pathlib.test_join_posix.PosixPathJoinTest.test_join) ... ok
test_div (test.test_pathlib.test_join_posix.PurePosixPathJoinTest.test_div) ... ok
test_join (test.test_pathlib.test_join_posix.PurePosixPathJoinTest.test_join) ... ok
test_anchor (test.test_pathlib.test_join_windows.LexicalWindowsPathJoinTest.test_anchor) ... ok
test_div (test.test_pathlib.test_join_windows.LexicalWindowsPathJoinTest.test_div) ... ok
test_join (test.test_pathlib.test_join_windows.LexicalWindowsPathJoinTest.test_join) ... ok
test_name (test.test_pathlib.test_join_windows.LexicalWindowsPathJoinTest.test_name) ... ok
test_parent (test.test_pathlib.test_join_windows.LexicalWindowsPathJoinTest.test_parent) ... ok
test_parents (test.test_pathlib.test_join_windows.LexicalWindowsPathJoinTest.test_parents) ... ok
test_parts (test.test_pathlib.test_join_windows.LexicalWindowsPathJoinTest.test_parts) ... ok
test_stem (test.test_pathlib.test_join_windows.LexicalWindowsPathJoinTest.test_stem) ... ok
test_str (test.test_pathlib.test_join_windows.LexicalWindowsPathJoinTest.test_str) ... ok
test_suffix (test.test_pathlib.test_join_windows.LexicalWindowsPathJoinTest.test_suffix) ... ok
test_suffixes (test.test_pathlib.test_join_windows.LexicalWindowsPathJoinTest.test_suffixes) ... ok
test_with_name (test.test_pathlib.test_join_windows.LexicalWindowsPathJoinTest.test_with_name) ... ok
test_with_stem (test.test_pathlib.test_join_windows.LexicalWindowsPathJoinTest.test_with_stem) ... ok
test_with_suffix (test.test_pathlib.test_join_windows.LexicalWindowsPathJoinTest.test_with_suffix) ... ok
test_anchor (test.test_pathlib.test_join_windows.PureWindowsPathJoinTest.test_anchor) ... ok
test_div (test.test_pathlib.test_join_windows.PureWindowsPathJoinTest.test_div) ... ok
test_join (test.test_pathlib.test_join_windows.PureWindowsPathJoinTest.test_join) ... ok
test_name (test.test_pathlib.test_join_windows.PureWindowsPathJoinTest.test_name) ... ok
test_parent (test.test_pathlib.test_join_windows.PureWindowsPathJoinTest.test_parent) ... ok
test_parents (test.test_pathlib.test_join_windows.PureWindowsPathJoinTest.test_parents) ... ok
test_parts (test.test_pathlib.test_join_windows.PureWindowsPathJoinTest.test_parts) ... ok
test_stem (test.test_pathlib.test_join_windows.PureWindowsPathJoinTest.test_stem) ... ok
test_str (test.test_pathlib.test_join_windows.PureWindowsPathJoinTest.test_str) ... ok
test_suffix (test.test_pathlib.test_join_windows.PureWindowsPathJoinTest.test_suffix) ... ok
test_suffixes (test.test_pathlib.test_join_windows.PureWindowsPathJoinTest.test_suffixes) ... ok
test_with_name (test.test_pathlib.test_join_windows.PureWindowsPathJoinTest.test_with_name) ... ok
test_with_stem (test.test_pathlib.test_join_windows.PureWindowsPathJoinTest.test_with_stem) ... ok
test_with_suffix (test.test_pathlib.test_join_windows.PureWindowsPathJoinTest.test_with_suffix) ... ok
test_rtruediv (test.test_pathlib.test_pathlib.CompatiblePathTest.test_rtruediv) ... ok
test_truediv (test.test_pathlib.test_pathlib.CompatiblePathTest.test_truediv) ... ok
test_absolute_common (test.test_pathlib.test_pathlib.PathSubclassTest.test_absolute_common) ... ok
test_absolute_posix (test.test_pathlib.test_pathlib.PathSubclassTest.test_absolute_posix) ... ok
test_absolute_windows (test.test_pathlib.test_pathlib.PathSubclassTest.test_absolute_windows) ... skipped 'requires Windows-flavoured path class'
test_as_bytes_common (test.test_pathlib.test_pathlib.PathSubclassTest.test_as_bytes_common) ... ok
test_as_posix_common (test.test_pathlib.test_pathlib.PathSubclassTest.test_as_posix_common) ... ok
test_as_uri_common (test.test_pathlib.test_pathlib.PathSubclassTest.test_as_uri_common) ... ok
test_as_uri_non_ascii (test.test_pathlib.test_pathlib.PathSubclassTest.test_as_uri_non_ascii) ... ok
test_as_uri_posix (test.test_pathlib.test_pathlib.PathSubclassTest.test_as_uri_posix) ... ok
test_as_uri_windows (test.test_pathlib.test_pathlib.PathSubclassTest.test_as_uri_windows) ... skipped 'requires Windows-flavoured path class'
test_bytes (test.test_pathlib.test_pathlib.PathSubclassTest.test_bytes) ... ok
test_bytes_exc_message (test.test_pathlib.test_pathlib.PathSubclassTest.test_bytes_exc_message) ... ok
test_chmod (test.test_pathlib.test_pathlib.PathSubclassTest.test_chmod) ... skipped 'requires working os.chmod()'
test_chmod_follow_symlinks_true (test.test_pathlib.test_pathlib.PathSubclassTest.test_chmod_follow_symlinks_true) ... skipped 'requires working os.chmod()'
test_complex_symlinks_absolute (test.test_pathlib.test_pathlib.PathSubclassTest.test_complex_symlinks_absolute) ... skipped 'requires symlinks'
test_complex_symlinks_relative (test.test_pathlib.test_pathlib.PathSubclassTest.test_complex_symlinks_relative) ... skipped 'requires symlinks'
test_complex_symlinks_relative_dot_dot (test.test_pathlib.test_pathlib.PathSubclassTest.test_complex_symlinks_relative_dot_dot) ... skipped 'requires symlinks'
test_concrete_class (test.test_pathlib.test_pathlib.PathSubclassTest.test_concrete_class) ... ok
test_concrete_parser (test.test_pathlib.test_pathlib.PathSubclassTest.test_concrete_parser) ... ok
test_constructor_nested (test.test_pathlib.test_pathlib.PathSubclassTest.test_constructor_nested) ... ok
test_constructor_nested_foreign_flavour (test.test_pathlib.test_pathlib.PathSubclassTest.test_constructor_nested_foreign_flavour) ... skipped 'requires Windows-flavoured path class'
test_copy_dangling_symlink (test.test_pathlib.test_pathlib.PathSubclassTest.test_copy_dangling_symlink) ... skipped 'requires symlinks'
test_copy_dir_no_read_permission (test.test_pathlib.test_pathlib.PathSubclassTest.test_copy_dir_no_read_permission) ... skipped 'directories are always readable on Windows and WASI'
test_copy_dir_preserve_metadata (test.test_pathlib.test_pathlib.PathSubclassTest.test_copy_dir_preserve_metadata) ... ok
test_copy_dir_preserve_metadata_xattrs (test.test_pathlib.test_pathlib.PathSubclassTest.test_copy_dir_preserve_metadata_xattrs) ... skipped 'no non-broken extended attribute support'
test_copy_directory_symlink_follow_symlinks_false (test.test_pathlib.test_pathlib.PathSubclassTest.test_copy_directory_symlink_follow_symlinks_false) ... skipped 'requires symlinks'
test_copy_directory_symlink_into_itself (test.test_pathlib.test_pathlib.PathSubclassTest.test_copy_directory_symlink_into_itself) ... skipped 'requires symlinks'
test_copy_directory_symlink_to_existing_directory_symlink (test.test_pathlib.test_pathlib.PathSubclassTest.test_copy_directory_symlink_to_existing_directory_symlink) ... skipped 'requires symlinks'
test_copy_directory_symlink_to_existing_symlink (test.test_pathlib.test_pathlib.PathSubclassTest.test_copy_directory_symlink_to_existing_symlink) ... skipped 'requires symlinks'
test_copy_directory_symlink_to_itself (test.test_pathlib.test_pathlib.PathSubclassTest.test_copy_directory_symlink_to_itself) ... skipped 'requires symlinks'
test_copy_error_handling (test.test_pathlib.test_pathlib.PathSubclassTest.test_copy_error_handling) ... ok
test_copy_file_preserve_metadata (test.test_pathlib.test_pathlib.PathSubclassTest.test_copy_file_preserve_metadata) ... ok
test_copy_file_preserve_metadata_xattrs (test.test_pathlib.test_pathlib.PathSubclassTest.test_copy_file_preserve_metadata_xattrs) ... skipped 'no non-broken extended attribute support'
test_copy_file_to_existing_symlink (test.test_pathlib.test_pathlib.PathSubclassTest.test_copy_file_to_existing_symlink) ... skipped 'requires symlinks'
test_copy_file_to_existing_symlink_follow_symlinks_false (test.test_pathlib.test_pathlib.PathSubclassTest.test_copy_file_to_existing_symlink_follow_symlinks_false) ... skipped 'requires symlinks'
test_copy_link_preserve_metadata (test.test_pathlib.test_pathlib.PathSubclassTest.test_copy_link_preserve_metadata) ... skipped 'requires symlinks'
test_copy_symlink_follow_symlinks_false (test.test_pathlib.test_pathlib.PathSubclassTest.test_copy_symlink_follow_symlinks_false) ... skipped 'requires symlinks'
test_copy_symlink_follow_symlinks_true (test.test_pathlib.test_pathlib.PathSubclassTest.test_copy_symlink_follow_symlinks_true) ... skipped 'requires symlinks'
test_copy_symlink_to_existing_directory_symlink (test.test_pathlib.test_pathlib.PathSubclassTest.test_copy_symlink_to_existing_directory_symlink) ... skipped 'requires symlinks'
test_copy_symlink_to_existing_symlink (test.test_pathlib.test_pathlib.PathSubclassTest.test_copy_symlink_to_existing_symlink) ... skipped 'requires symlinks'
test_copy_symlink_to_itself (test.test_pathlib.test_pathlib.PathSubclassTest.test_copy_symlink_to_itself) ... skipped 'requires symlinks'
test_cwd (test.test_pathlib.test_pathlib.PathSubclassTest.test_cwd) ... ok
test_delete_dir (test.test_pathlib.test_pathlib.PathSubclassTest.test_delete_dir) ... ok
test_delete_does_not_choke_on_failing_lstat (test.test_pathlib.test_pathlib.PathSubclassTest.test_delete_does_not_choke_on_failing_lstat) ... ok
test_delete_file (test.test_pathlib.test_pathlib.PathSubclassTest.test_delete_file) ... ok
test_delete_inner_junction (test.test_pathlib.test_pathlib.PathSubclassTest.test_delete_inner_junction) ... skipped 'requires Windows-flavoured path class'
test_delete_inner_symlink (test.test_pathlib.test_pathlib.PathSubclassTest.test_delete_inner_symlink) ... skipped 'requires symlinks'
test_delete_missing (test.test_pathlib.test_pathlib.PathSubclassTest.test_delete_missing) ... ok
test_delete_on_named_pipe (test.test_pathlib.test_pathlib.PathSubclassTest.test_delete_on_named_pipe) ... skipped 'requires os.mkfifo()'
test_delete_outer_junction (test.test_pathlib.test_pathlib.PathSubclassTest.test_delete_outer_junction) ... skipped 'requires Windows-flavoured path class'
test_delete_symlink (test.test_pathlib.test_pathlib.PathSubclassTest.test_delete_symlink) ... skipped 'requires symlinks'
test_delete_unwritable (test.test_pathlib.test_pathlib.PathSubclassTest.test_delete_unwritable) ... skipped 'requires working os.chmod()'
test_different_parsers_unequal (test.test_pathlib.test_pathlib.PathSubclassTest.test_different_parsers_unequal) ... ok
test_different_parsers_unordered (test.test_pathlib.test_pathlib.PathSubclassTest.test_different_parsers_unordered) ... ok
test_div_nested (test.test_pathlib.test_pathlib.PathSubclassTest.test_div_nested) ... ok
test_drive_common (test.test_pathlib.test_pathlib.PathSubclassTest.test_drive_common) ... ok
test_drive_windows (test.test_pathlib.test_pathlib.PathSubclassTest.test_drive_windows) ... skipped 'requires Windows-flavoured path class'
test_empty_path (test.test_pathlib.test_pathlib.PathSubclassTest.test_empty_path) ... ok
test_eq_common (test.test_pathlib.test_pathlib.PathSubclassTest.test_eq_common) ... ok
test_eq_posix (test.test_pathlib.test_pathlib.PathSubclassTest.test_eq_posix) ... ok
test_eq_windows (test.test_pathlib.test_pathlib.PathSubclassTest.test_eq_windows) ... skipped 'requires Windows-flavoured path class'
test_equivalences (test.test_pathlib.test_pathlib.PathSubclassTest.test_equivalences) ... ok
test_equivalences_windows (test.test_pathlib.test_pathlib.PathSubclassTest.test_equivalences_windows) ... skipped 'requires Windows-flavoured path class'
test_exists (test.test_pathlib.test_pathlib.PathSubclassTest.test_exists) ... ok
test_expanduser_common (test.test_pathlib.test_pathlib.PathSubclassTest.test_expanduser_common) ... skipped 'WASI has no user accounts.'
test_expanduser_posix (test.test_pathlib.test_pathlib.PathSubclassTest.test_expanduser_posix) ... skipped 'pwd module does not expose getpwall()'
test_expanduser_windows (test.test_pathlib.test_pathlib.PathSubclassTest.test_expanduser_windows) ... skipped 'requires Windows-flavoured path class'
test_from_uri_pathname2url_posix (test.test_pathlib.test_pathlib.PathSubclassTest.test_from_uri_pathname2url_posix) ... ok
test_from_uri_pathname2url_windows (test.test_pathlib.test_pathlib.PathSubclassTest.test_from_uri_pathname2url_windows) ... skipped 'requires Windows-flavoured path class'
test_from_uri_posix (test.test_pathlib.test_pathlib.PathSubclassTest.test_from_uri_posix) ... ok
test_from_uri_windows (test.test_pathlib.test_pathlib.PathSubclassTest.test_from_uri_windows) ... skipped 'requires Windows-flavoured path class'
test_fspath_common (test.test_pathlib.test_pathlib.PathSubclassTest.test_fspath_common) ... ok
test_full_match_case_sensitive (test.test_pathlib.test_pathlib.PathSubclassTest.test_full_match_case_sensitive) ... ok
test_glob_above_recursion_limit (test.test_pathlib.test_pathlib.PathSubclassTest.test_glob_above_recursion_limit) ... ok
test_glob_case_sensitive (test.test_pathlib.test_pathlib.PathSubclassTest.test_glob_case_sensitive) ... ok
test_glob_dot (test.test_pathlib.test_pathlib.PathSubclassTest.test_glob_dot) ... skipped 'requires symlinks'
test_glob_dotdot (test.test_pathlib.test_pathlib.PathSubclassTest.test_glob_dotdot) ... skipped "WASI resolution of '..' parts doesn't match POSIX"
test_glob_empty_pattern (test.test_pathlib.test_pathlib.PathSubclassTest.test_glob_empty_pattern) ... ok
test_glob_inaccessible (test.test_pathlib.test_pathlib.PathSubclassTest.test_glob_inaccessible) ... ok
test_glob_long_symlink (test.test_pathlib.test_pathlib.PathSubclassTest.test_glob_long_symlink) ... skipped 'requires symlinks'
test_glob_many_open_files (test.test_pathlib.test_pathlib.PathSubclassTest.test_glob_many_open_files) ... ok
test_glob_pathlike (test.test_pathlib.test_pathlib.PathSubclassTest.test_glob_pathlike) ... ok
test_glob_permissions (test.test_pathlib.test_pathlib.PathSubclassTest.test_glob_permissions) ... skipped 'requires symlinks'
test_glob_posix (test.test_pathlib.test_pathlib.PathSubclassTest.test_glob_posix) ... ok
test_glob_recurse_symlinks_common (test.test_pathlib.test_pathlib.PathSubclassTest.test_glob_recurse_symlinks_common) ... skipped 'requires symlinks'
test_glob_windows (test.test_pathlib.test_pathlib.PathSubclassTest.test_glob_windows) ... skipped 'requires Windows-flavoured path class'
test_group (test.test_pathlib.test_pathlib.PathSubclassTest.test_group) ... skipped 'the grp module is needed for this test'
test_group_no_follow_symlinks (test.test_pathlib.test_pathlib.PathSubclassTest.test_group_no_follow_symlinks) ... skipped 'the grp module is needed for this test'
test_group_windows (test.test_pathlib.test_pathlib.PathSubclassTest.test_group_windows) ... skipped 'requires Windows-flavoured path class'
test_handling_bad_descriptor (test.test_pathlib.test_pathlib.PathSubclassTest.test_handling_bad_descriptor) ... skipped 'Bad file descriptor in /dev/fd affects only macOS'
test_hardlink_to (test.test_pathlib.test_pathlib.PathSubclassTest.test_hardlink_to) ... ERROR
test_hardlink_to_unsupported (test.test_pathlib.test_pathlib.PathSubclassTest.test_hardlink_to_unsupported) ... skipped 'os.link() is present'
test_home (test.test_pathlib.test_pathlib.PathSubclassTest.test_home) ... skipped 'Test requires pwd module to get homedir.'
test_info_exists_caching (test.test_pathlib.test_pathlib.PathSubclassTest.test_info_exists_caching) ... ok
test_info_is_dir_caching (test.test_pathlib.test_pathlib.PathSubclassTest.test_info_is_dir_caching) ... ok
test_info_is_file_caching (test.test_pathlib.test_pathlib.PathSubclassTest.test_info_is_file_caching) ... ok
test_info_is_symlink_caching (test.test_pathlib.test_pathlib.PathSubclassTest.test_info_is_symlink_caching) ... skipped 'requires symlinks'
test_is_absolute_posix (test.test_pathlib.test_pathlib.PathSubclassTest.test_is_absolute_posix) ... ok
test_is_absolute_windows (test.test_pathlib.test_pathlib.PathSubclassTest.test_is_absolute_windows) ... skipped 'requires Windows-flavoured path class'
test_is_block_device_false (test.test_pathlib.test_pathlib.PathSubclassTest.test_is_block_device_false) ... ok
test_is_char_device_false (test.test_pathlib.test_pathlib.PathSubclassTest.test_is_char_device_false) ... ok
test_is_char_device_true (test.test_pathlib.test_pathlib.PathSubclassTest.test_is_char_device_true) ... skipped 'null device required'
test_is_dir (test.test_pathlib.test_pathlib.PathSubclassTest.test_is_dir) ... ok
test_is_dir_no_follow_symlinks (test.test_pathlib.test_pathlib.PathSubclassTest.test_is_dir_no_follow_symlinks) ... ok
test_is_fifo_false (test.test_pathlib.test_pathlib.PathSubclassTest.test_is_fifo_false) ... ok
test_is_fifo_true (test.test_pathlib.test_pathlib.PathSubclassTest.test_is_fifo_true) ... skipped 'os.mkfifo() required'
test_is_file (test.test_pathlib.test_pathlib.PathSubclassTest.test_is_file) ... ok
test_is_file_no_follow_symlinks (test.test_pathlib.test_pathlib.PathSubclassTest.test_is_file_no_follow_symlinks) ... ok
test_is_junction_false (test.test_pathlib.test_pathlib.PathSubclassTest.test_is_junction_false) ... ok
test_is_junction_true (test.test_pathlib.test_pathlib.PathSubclassTest.test_is_junction_true) ... ok
test_is_mount (test.test_pathlib.test_pathlib.PathSubclassTest.test_is_mount) ... ok
test_is_relative_to_common (test.test_pathlib.test_pathlib.PathSubclassTest.test_is_relative_to_common) ... ok
test_is_relative_to_windows (test.test_pathlib.test_pathlib.PathSubclassTest.test_is_relative_to_windows) ... skipped 'requires Windows-flavoured path class'
test_is_reserved_deprecated (test.test_pathlib.test_pathlib.PathSubclassTest.test_is_reserved_deprecated) ... ok
test_is_socket_false (test.test_pathlib.test_pathlib.PathSubclassTest.test_is_socket_false) ... ok
test_is_socket_true (test.test_pathlib.test_pathlib.PathSubclassTest.test_is_socket_true) ... skipped 'Unix sockets required'
test_is_symlink (test.test_pathlib.test_pathlib.PathSubclassTest.test_is_symlink) ... ok
test_iterdir_symlink (test.test_pathlib.test_pathlib.PathSubclassTest.test_iterdir_symlink) ... skipped 'requires symlinks'
test_join_nested (test.test_pathlib.test_pathlib.PathSubclassTest.test_join_nested) ... ok
test_lstat (test.test_pathlib.test_pathlib.PathSubclassTest.test_lstat) ... skipped 'requires symlinks'
test_lstat_nosymlink (test.test_pathlib.test_pathlib.PathSubclassTest.test_lstat_nosymlink) ... ok
test_match_common (test.test_pathlib.test_pathlib.PathSubclassTest.test_match_common) ... ok
test_match_empty (test.test_pathlib.test_pathlib.PathSubclassTest.test_match_empty) ... ok
test_match_posix (test.test_pathlib.test_pathlib.PathSubclassTest.test_match_posix) ... ok
test_match_windows (test.test_pathlib.test_pathlib.PathSubclassTest.test_match_windows) ... skipped 'requires Windows-flavoured path class'
test_matches_writablepath_docstrings (test.test_pathlib.test_pathlib.PathSubclassTest.test_matches_writablepath_docstrings) ... ok
test_mkdir (test.test_pathlib.test_pathlib.PathSubclassTest.test_mkdir) ... ok
test_mkdir_concurrent_parent_creation (test.test_pathlib.test_pathlib.PathSubclassTest.test_mkdir_concurrent_parent_creation) ... ok
test_mkdir_exist_ok (test.test_pathlib.test_pathlib.PathSubclassTest.test_mkdir_exist_ok) ... ok
test_mkdir_exist_ok_root (test.test_pathlib.test_pathlib.PathSubclassTest.test_mkdir_exist_ok_root) ... ok
test_mkdir_exist_ok_with_parent (test.test_pathlib.test_pathlib.PathSubclassTest.test_mkdir_exist_ok_with_parent) ... ok
test_mkdir_no_parents_file (test.test_pathlib.test_pathlib.PathSubclassTest.test_mkdir_no_parents_file) ... ok
test_mkdir_parents (test.test_pathlib.test_pathlib.PathSubclassTest.test_mkdir_parents) ... ok
test_mkdir_with_child_file (test.test_pathlib.test_pathlib.PathSubclassTest.test_mkdir_with_child_file) ... ok
test_mkdir_with_unknown_drive (test.test_pathlib.test_pathlib.PathSubclassTest.test_mkdir_with_unknown_drive) ... skipped 'requires Windows-flavoured path class'
test_move_dangling_symlink (test.test_pathlib.test_pathlib.PathSubclassTest.test_move_dangling_symlink) ... skipped 'requires symlinks'
test_move_dangling_symlink_other_fs (test.test_pathlib.test_pathlib.PathSubclassTest.test_move_dangling_symlink_other_fs) ... skipped 'requires symlinks'
test_move_dir (test.test_pathlib.test_pathlib.PathSubclassTest.test_move_dir) ... ok
test_move_dir_into_itself (test.test_pathlib.test_pathlib.PathSubclassTest.test_move_dir_into_itself) ... ok
test_move_dir_into_itself_other_fs (test.test_pathlib.test_pathlib.PathSubclassTest.test_move_dir_into_itself_other_fs) ... ok
test_move_dir_other_fs (test.test_pathlib.test_pathlib.PathSubclassTest.test_move_dir_other_fs) ... ok
test_move_dir_symlink (test.test_pathlib.test_pathlib.PathSubclassTest.test_move_dir_symlink) ... skipped 'requires symlinks'
test_move_dir_symlink_other_fs (test.test_pathlib.test_pathlib.PathSubclassTest.test_move_dir_symlink_other_fs) ... skipped 'requires symlinks'
test_move_dir_symlink_to_itself (test.test_pathlib.test_pathlib.PathSubclassTest.test_move_dir_symlink_to_itself) ... skipped 'requires symlinks'
test_move_dir_symlink_to_itself_other_fs (test.test_pathlib.test_pathlib.PathSubclassTest.test_move_dir_symlink_to_itself_other_fs) ... skipped 'requires symlinks'
test_move_dir_to_dir (test.test_pathlib.test_pathlib.PathSubclassTest.test_move_dir_to_dir) ... ok
test_move_dir_to_dir_other_fs (test.test_pathlib.test_pathlib.PathSubclassTest.test_move_dir_to_dir_other_fs) ... ok
test_move_dir_to_itself (test.test_pathlib.test_pathlib.PathSubclassTest.test_move_dir_to_itself) ... ok
test_move_file (test.test_pathlib.test_pathlib.PathSubclassTest.test_move_file) ... ok
test_move_file_other_fs (test.test_pathlib.test_pathlib.PathSubclassTest.test_move_file_other_fs) ... ok
test_move_file_symlink (test.test_pathlib.test_pathlib.PathSubclassTest.test_move_file_symlink) ... skipped 'requires symlinks'
test_move_file_symlink_other_fs (test.test_pathlib.test_pathlib.PathSubclassTest.test_move_file_symlink_other_fs) ... skipped 'requires symlinks'
test_move_file_symlink_to_itself (test.test_pathlib.test_pathlib.PathSubclassTest.test_move_file_symlink_to_itself) ... skipped 'requires symlinks'
test_move_file_symlink_to_itself_other_fs (test.test_pathlib.test_pathlib.PathSubclassTest.test_move_file_symlink_to_itself_other_fs) ... skipped 'requires symlinks'
test_move_file_to_dir (test.test_pathlib.test_pathlib.PathSubclassTest.test_move_file_to_dir) ... ok
test_move_file_to_dir_other_fs (test.test_pathlib.test_pathlib.PathSubclassTest.test_move_file_to_dir_other_fs) ... ok
test_move_file_to_file (test.test_pathlib.test_pathlib.PathSubclassTest.test_move_file_to_file) ... ok
test_move_file_to_file_other_fs (test.test_pathlib.test_pathlib.PathSubclassTest.test_move_file_to_file_other_fs) ... ok
test_move_file_to_itself (test.test_pathlib.test_pathlib.PathSubclassTest.test_move_file_to_itself) ... ok
test_move_into (test.test_pathlib.test_pathlib.PathSubclassTest.test_move_into) ... ok
test_move_into_empty_name (test.test_pathlib.test_pathlib.PathSubclassTest.test_move_into_empty_name) ... ok
test_move_into_empty_name_other_os (test.test_pathlib.test_pathlib.PathSubclassTest.test_move_into_empty_name_other_os) ... ok
test_move_into_other_os (test.test_pathlib.test_pathlib.PathSubclassTest.test_move_into_other_os) ... ok
test_name_empty (test.test_pathlib.test_pathlib.PathSubclassTest.test_name_empty) ... ok
test_open_common (test.test_pathlib.test_pathlib.PathSubclassTest.test_open_common) ... ok
test_open_mode (test.test_pathlib.test_pathlib.PathSubclassTest.test_open_mode) ... skipped 'umask is not implemented on Emscripten/WASI.'
test_open_unbuffered (test.test_pathlib.test_pathlib.PathSubclassTest.test_open_unbuffered) ... ok
test_ordering_common (test.test_pathlib.test_pathlib.PathSubclassTest.test_ordering_common) ... ok
test_ordering_windows (test.test_pathlib.test_pathlib.PathSubclassTest.test_ordering_windows) ... skipped 'requires Windows-flavoured path class'
test_owner (test.test_pathlib.test_pathlib.PathSubclassTest.test_owner) ... skipped 'the pwd module is needed for this test'
test_owner_no_follow_symlinks (test.test_pathlib.test_pathlib.PathSubclassTest.test_owner_no_follow_symlinks) ... skipped 'the pwd module is needed for this test'
test_owner_windows (test.test_pathlib.test_pathlib.PathSubclassTest.test_owner_windows) ... skipped 'requires Windows-flavoured path class'
test_parse_path_common (test.test_pathlib.test_pathlib.PathSubclassTest.test_parse_path_common) ... ok
test_parse_path_posix (test.test_pathlib.test_pathlib.PathSubclassTest.test_parse_path_posix) ... ok
test_parse_path_windows (test.test_pathlib.test_pathlib.PathSubclassTest.test_parse_path_windows) ... skipped 'requires Windows-flavoured path class'
test_parse_windows_path (test.test_pathlib.test_pathlib.PathSubclassTest.test_parse_windows_path) ... ok
test_passing_kwargs_errors (test.test_pathlib.test_pathlib.PathSubclassTest.test_passing_kwargs_errors) ... ok
test_pickling_common (test.test_pathlib.test_pathlib.PathSubclassTest.test_pickling_common) ... ok
test_readlink (test.test_pathlib.test_pathlib.PathSubclassTest.test_readlink) ... skipped 'requires symlinks'
test_readlink_unsupported (test.test_pathlib.test_pathlib.PathSubclassTest.test_readlink_unsupported) ... skipped 'os.readlink() is present'
test_relative_to_common (test.test_pathlib.test_pathlib.PathSubclassTest.test_relative_to_common) ... ok
test_relative_to_windows (test.test_pathlib.test_pathlib.PathSubclassTest.test_relative_to_windows) ... skipped 'requires Windows-flavoured path class'
test_rename (test.test_pathlib.test_pathlib.PathSubclassTest.test_rename) ... ok
test_replace (test.test_pathlib.test_pathlib.PathSubclassTest.test_replace) ... ok
test_repr_common (test.test_pathlib.test_pathlib.PathSubclassTest.test_repr_common) ... ok
test_resolve_common (test.test_pathlib.test_pathlib.PathSubclassTest.test_resolve_common) ... skipped 'requires symlinks'
test_resolve_dot (test.test_pathlib.test_pathlib.PathSubclassTest.test_resolve_dot) ... skipped 'requires symlinks'
test_resolve_loop (test.test_pathlib.test_pathlib.PathSubclassTest.test_resolve_loop) ... skipped 'requires symlinks'
test_resolve_nonexist_relative_issue38671 (test.test_pathlib.test_pathlib.PathSubclassTest.test_resolve_nonexist_relative_issue38671) ... ok
test_resolve_root (test.test_pathlib.test_pathlib.PathSubclassTest.test_resolve_root) ... ok
test_rglob_pathlike (test.test_pathlib.test_pathlib.PathSubclassTest.test_rglob_pathlike) ... ok
test_rglob_posix (test.test_pathlib.test_pathlib.PathSubclassTest.test_rglob_posix) ... ok
test_rglob_recurse_symlinks_common (test.test_pathlib.test_pathlib.PathSubclassTest.test_rglob_recurse_symlinks_common) ... skipped 'requires symlinks'
test_rglob_recurse_symlinks_false (test.test_pathlib.test_pathlib.PathSubclassTest.test_rglob_recurse_symlinks_false) ... ok
test_rglob_symlink_loop (test.test_pathlib.test_pathlib.PathSubclassTest.test_rglob_symlink_loop) ... skipped 'requires symlinks'
test_rglob_windows (test.test_pathlib.test_pathlib.PathSubclassTest.test_rglob_windows) ... skipped 'requires Windows-flavoured path class'
test_rmdir (test.test_pathlib.test_pathlib.PathSubclassTest.test_rmdir) ... ok
test_root_common (test.test_pathlib.test_pathlib.PathSubclassTest.test_root_common) ... ok
test_root_posix (test.test_pathlib.test_pathlib.PathSubclassTest.test_root_posix) ... ok
test_root_windows (test.test_pathlib.test_pathlib.PathSubclassTest.test_root_windows) ... skipped 'requires Windows-flavoured path class'
test_samefile (test.test_pathlib.test_pathlib.PathSubclassTest.test_samefile) ... ok
test_stat (test.test_pathlib.test_pathlib.PathSubclassTest.test_stat) ... ok
test_stat_no_follow_symlinks (test.test_pathlib.test_pathlib.PathSubclassTest.test_stat_no_follow_symlinks) ... skipped 'requires symlinks'
test_stat_no_follow_symlinks_nosymlink (test.test_pathlib.test_pathlib.PathSubclassTest.test_stat_no_follow_symlinks_nosymlink) ... ok
test_stem_empty (test.test_pathlib.test_pathlib.PathSubclassTest.test_stem_empty) ... ok
test_str_common (test.test_pathlib.test_pathlib.PathSubclassTest.test_str_common) ... ok
test_str_subclass_common (test.test_pathlib.test_pathlib.PathSubclassTest.test_str_subclass_common) ... ok
test_str_subclass_windows (test.test_pathlib.test_pathlib.PathSubclassTest.test_str_subclass_windows) ... skipped 'requires Windows-flavoured path class'
test_str_windows (test.test_pathlib.test_pathlib.PathSubclassTest.test_str_windows) ... skipped 'requires Windows-flavoured path class'
test_symlink_to (test.test_pathlib.test_pathlib.PathSubclassTest.test_symlink_to) ... skipped 'requires symlinks'
test_symlink_to_unsupported (test.test_pathlib.test_pathlib.PathSubclassTest.test_symlink_to_unsupported) ... skipped 'os.symlink() is present'
test_touch_common (test.test_pathlib.test_pathlib.PathSubclassTest.test_touch_common) ... ok
test_touch_mode (test.test_pathlib.test_pathlib.PathSubclassTest.test_touch_mode) ... skipped 'umask is not implemented on Emscripten/WASI.'
test_touch_nochange (test.test_pathlib.test_pathlib.PathSubclassTest.test_touch_nochange) ... ok
test_unlink (test.test_pathlib.test_pathlib.PathSubclassTest.test_unlink) ... ok
test_unlink_missing_ok (test.test_pathlib.test_pathlib.PathSubclassTest.test_unlink_missing_ok) ... ok
test_unsupported_parser (test.test_pathlib.test_pathlib.PathSubclassTest.test_unsupported_parser) ... skipped 'path parser is supported'
test_with_name_empty (test.test_pathlib.test_pathlib.PathSubclassTest.test_with_name_empty) ... ok
test_with_name_windows (test.test_pathlib.test_pathlib.PathSubclassTest.test_with_name_windows) ... skipped 'requires Windows-flavoured path class'
test_with_segments (test.test_pathlib.test_pathlib.PathSubclassTest.test_with_segments) ... ok
test_with_stem_empty (test.test_pathlib.test_pathlib.PathSubclassTest.test_with_stem_empty) ... ok
test_with_stem_windows (test.test_pathlib.test_pathlib.PathSubclassTest.test_with_stem_windows) ... skipped 'requires Windows-flavoured path class'
test_absolute_common (test.test_pathlib.test_pathlib.PathTest.test_absolute_common) ... ok
test_absolute_posix (test.test_pathlib.test_pathlib.PathTest.test_absolute_posix) ... ok
test_absolute_windows (test.test_pathlib.test_pathlib.PathTest.test_absolute_windows) ... skipped 'requires Windows-flavoured path class'
test_as_bytes_common (test.test_pathlib.test_pathlib.PathTest.test_as_bytes_common) ... ok
test_as_posix_common (test.test_pathlib.test_pathlib.PathTest.test_as_posix_common) ... ok
test_as_uri_common (test.test_pathlib.test_pathlib.PathTest.test_as_uri_common) ... ok
test_as_uri_non_ascii (test.test_pathlib.test_pathlib.PathTest.test_as_uri_non_ascii) ... ok
test_as_uri_posix (test.test_pathlib.test_pathlib.PathTest.test_as_uri_posix) ... ok
test_as_uri_windows (test.test_pathlib.test_pathlib.PathTest.test_as_uri_windows) ... skipped 'requires Windows-flavoured path class'
test_bytes (test.test_pathlib.test_pathlib.PathTest.test_bytes) ... ok
test_bytes_exc_message (test.test_pathlib.test_pathlib.PathTest.test_bytes_exc_message) ... ok
test_chmod (test.test_pathlib.test_pathlib.PathTest.test_chmod) ... skipped 'requires working os.chmod()'
test_chmod_follow_symlinks_true (test.test_pathlib.test_pathlib.PathTest.test_chmod_follow_symlinks_true) ... skipped 'requires working os.chmod()'
test_complex_symlinks_absolute (test.test_pathlib.test_pathlib.PathTest.test_complex_symlinks_absolute) ... skipped 'requires symlinks'
test_complex_symlinks_relative (test.test_pathlib.test_pathlib.PathTest.test_complex_symlinks_relative) ... skipped 'requires symlinks'
test_complex_symlinks_relative_dot_dot (test.test_pathlib.test_pathlib.PathTest.test_complex_symlinks_relative_dot_dot) ... skipped 'requires symlinks'
test_concrete_class (test.test_pathlib.test_pathlib.PathTest.test_concrete_class) ... ok
test_concrete_parser (test.test_pathlib.test_pathlib.PathTest.test_concrete_parser) ... ok
test_constructor_nested (test.test_pathlib.test_pathlib.PathTest.test_constructor_nested) ... ok
test_constructor_nested_foreign_flavour (test.test_pathlib.test_pathlib.PathTest.test_constructor_nested_foreign_flavour) ... skipped 'requires Windows-flavoured path class'
test_copy_dangling_symlink (test.test_pathlib.test_pathlib.PathTest.test_copy_dangling_symlink) ... skipped 'requires symlinks'
test_copy_dir_no_read_permission (test.test_pathlib.test_pathlib.PathTest.test_copy_dir_no_read_permission) ... skipped 'directories are always readable on Windows and WASI'
test_copy_dir_preserve_metadata (test.test_pathlib.test_pathlib.PathTest.test_copy_dir_preserve_metadata) ... ok
test_copy_dir_preserve_metadata_xattrs (test.test_pathlib.test_pathlib.PathTest.test_copy_dir_preserve_metadata_xattrs) ... skipped 'no non-broken extended attribute support'
test_copy_directory_symlink_follow_symlinks_false (test.test_pathlib.test_pathlib.PathTest.test_copy_directory_symlink_follow_symlinks_false) ... skipped 'requires symlinks'
test_copy_directory_symlink_into_itself (test.test_pathlib.test_pathlib.PathTest.test_copy_directory_symlink_into_itself) ... skipped 'requires symlinks'
test_copy_directory_symlink_to_existing_directory_symlink (test.test_pathlib.test_pathlib.PathTest.test_copy_directory_symlink_to_existing_directory_symlink) ... skipped 'requires symlinks'
test_copy_directory_symlink_to_existing_symlink (test.test_pathlib.test_pathlib.PathTest.test_copy_directory_symlink_to_existing_symlink) ... skipped 'requires symlinks'
test_copy_directory_symlink_to_itself (test.test_pathlib.test_pathlib.PathTest.test_copy_directory_symlink_to_itself) ... skipped 'requires symlinks'
test_copy_error_handling (test.test_pathlib.test_pathlib.PathTest.test_copy_error_handling) ... ok
test_copy_file_preserve_metadata (test.test_pathlib.test_pathlib.PathTest.test_copy_file_preserve_metadata) ... ok
test_copy_file_preserve_metadata_xattrs (test.test_pathlib.test_pathlib.PathTest.test_copy_file_preserve_metadata_xattrs) ... skipped 'no non-broken extended attribute support'
test_copy_file_to_existing_symlink (test.test_pathlib.test_pathlib.PathTest.test_copy_file_to_existing_symlink) ... skipped 'requires symlinks'
test_copy_file_to_existing_symlink_follow_symlinks_false (test.test_pathlib.test_pathlib.PathTest.test_copy_file_to_existing_symlink_follow_symlinks_false) ... skipped 'requires symlinks'
test_copy_link_preserve_metadata (test.test_pathlib.test_pathlib.PathTest.test_copy_link_preserve_metadata) ... skipped 'requires symlinks'
test_copy_symlink_follow_symlinks_false (test.test_pathlib.test_pathlib.PathTest.test_copy_symlink_follow_symlinks_false) ... skipped 'requires symlinks'
test_copy_symlink_follow_symlinks_true (test.test_pathlib.test_pathlib.PathTest.test_copy_symlink_follow_symlinks_true) ... skipped 'requires symlinks'
test_copy_symlink_to_existing_directory_symlink (test.test_pathlib.test_pathlib.PathTest.test_copy_symlink_to_existing_directory_symlink) ... skipped 'requires symlinks'
test_copy_symlink_to_existing_symlink (test.test_pathlib.test_pathlib.PathTest.test_copy_symlink_to_existing_symlink) ... skipped 'requires symlinks'
test_copy_symlink_to_itself (test.test_pathlib.test_pathlib.PathTest.test_copy_symlink_to_itself) ... skipped 'requires symlinks'
test_cwd (test.test_pathlib.test_pathlib.PathTest.test_cwd) ... ok
test_delete_dir (test.test_pathlib.test_pathlib.PathTest.test_delete_dir) ... ok
test_delete_does_not_choke_on_failing_lstat (test.test_pathlib.test_pathlib.PathTest.test_delete_does_not_choke_on_failing_lstat) ... ok
test_delete_file (test.test_pathlib.test_pathlib.PathTest.test_delete_file) ... ok
test_delete_inner_junction (test.test_pathlib.test_pathlib.PathTest.test_delete_inner_junction) ... skipped 'requires Windows-flavoured path class'
test_delete_inner_symlink (test.test_pathlib.test_pathlib.PathTest.test_delete_inner_symlink) ... skipped 'requires symlinks'
test_delete_missing (test.test_pathlib.test_pathlib.PathTest.test_delete_missing) ... ok
test_delete_on_named_pipe (test.test_pathlib.test_pathlib.PathTest.test_delete_on_named_pipe) ... skipped 'requires os.mkfifo()'
test_delete_outer_junction (test.test_pathlib.test_pathlib.PathTest.test_delete_outer_junction) ... skipped 'requires Windows-flavoured path class'
test_delete_symlink (test.test_pathlib.test_pathlib.PathTest.test_delete_symlink) ... skipped 'requires symlinks'
test_delete_unwritable (test.test_pathlib.test_pathlib.PathTest.test_delete_unwritable) ... skipped 'requires working os.chmod()'
test_different_parsers_unequal (test.test_pathlib.test_pathlib.PathTest.test_different_parsers_unequal) ... ok
test_different_parsers_unordered (test.test_pathlib.test_pathlib.PathTest.test_different_parsers_unordered) ... ok
test_div_nested (test.test_pathlib.test_pathlib.PathTest.test_div_nested) ... ok
test_drive_common (test.test_pathlib.test_pathlib.PathTest.test_drive_common) ... ok
test_drive_windows (test.test_pathlib.test_pathlib.PathTest.test_drive_windows) ... skipped 'requires Windows-flavoured path class'
test_empty_path (test.test_pathlib.test_pathlib.PathTest.test_empty_path) ... ok
test_eq_common (test.test_pathlib.test_pathlib.PathTest.test_eq_common) ... ok
test_eq_posix (test.test_pathlib.test_pathlib.PathTest.test_eq_posix) ... ok
test_eq_windows (test.test_pathlib.test_pathlib.PathTest.test_eq_windows) ... skipped 'requires Windows-flavoured path class'
test_equivalences (test.test_pathlib.test_pathlib.PathTest.test_equivalences) ... ok
test_equivalences_windows (test.test_pathlib.test_pathlib.PathTest.test_equivalences_windows) ... skipped 'requires Windows-flavoured path class'
test_exists (test.test_pathlib.test_pathlib.PathTest.test_exists) ... ok
test_expanduser_common (test.test_pathlib.test_pathlib.PathTest.test_expanduser_common) ... skipped 'WASI has no user accounts.'
test_expanduser_posix (test.test_pathlib.test_pathlib.PathTest.test_expanduser_posix) ... skipped 'pwd module does not expose getpwall()'
test_expanduser_windows (test.test_pathlib.test_pathlib.PathTest.test_expanduser_windows) ... skipped 'requires Windows-flavoured path class'
test_from_uri_pathname2url_posix (test.test_pathlib.test_pathlib.PathTest.test_from_uri_pathname2url_posix) ... ok
test_from_uri_pathname2url_windows (test.test_pathlib.test_pathlib.PathTest.test_from_uri_pathname2url_windows) ... skipped 'requires Windows-flavoured path class'
test_from_uri_posix (test.test_pathlib.test_pathlib.PathTest.test_from_uri_posix) ... ok
test_from_uri_windows (test.test_pathlib.test_pathlib.PathTest.test_from_uri_windows) ... skipped 'requires Windows-flavoured path class'
test_fspath_common (test.test_pathlib.test_pathlib.PathTest.test_fspath_common) ... ok
test_full_match_case_sensitive (test.test_pathlib.test_pathlib.PathTest.test_full_match_case_sensitive) ... ok
test_glob_above_recursion_limit (test.test_pathlib.test_pathlib.PathTest.test_glob_above_recursion_limit) ... ok
test_glob_case_sensitive (test.test_pathlib.test_pathlib.PathTest.test_glob_case_sensitive) ... ok
test_glob_dot (test.test_pathlib.test_pathlib.PathTest.test_glob_dot) ... skipped 'requires symlinks'
test_glob_dotdot (test.test_pathlib.test_pathlib.PathTest.test_glob_dotdot) ... skipped "WASI resolution of '..' parts doesn't match POSIX"
test_glob_empty_pattern (test.test_pathlib.test_pathlib.PathTest.test_glob_empty_pattern) ... ok
test_glob_inaccessible (test.test_pathlib.test_pathlib.PathTest.test_glob_inaccessible) ... ok
test_glob_long_symlink (test.test_pathlib.test_pathlib.PathTest.test_glob_long_symlink) ... skipped 'requires symlinks'
test_glob_many_open_files (test.test_pathlib.test_pathlib.PathTest.test_glob_many_open_files) ... ok
test_glob_pathlike (test.test_pathlib.test_pathlib.PathTest.test_glob_pathlike) ... ok
test_glob_permissions (test.test_pathlib.test_pathlib.PathTest.test_glob_permissions) ... skipped 'requires symlinks'
test_glob_posix (test.test_pathlib.test_pathlib.PathTest.test_glob_posix) ... ok
test_glob_recurse_symlinks_common (test.test_pathlib.test_pathlib.PathTest.test_glob_recurse_symlinks_common) ... skipped 'requires symlinks'
test_glob_windows (test.test_pathlib.test_pathlib.PathTest.test_glob_windows) ... skipped 'requires Windows-flavoured path class'
test_group (test.test_pathlib.test_pathlib.PathTest.test_group) ... skipped 'the grp module is needed for this test'
test_group_no_follow_symlinks (test.test_pathlib.test_pathlib.PathTest.test_group_no_follow_symlinks) ... skipped 'the grp module is needed for this test'
test_group_windows (test.test_pathlib.test_pathlib.PathTest.test_group_windows) ... skipped 'requires Windows-flavoured path class'
test_handling_bad_descriptor (test.test_pathlib.test_pathlib.PathTest.test_handling_bad_descriptor) ... skipped 'Bad file descriptor in /dev/fd affects only macOS'
test_hardlink_to (test.test_pathlib.test_pathlib.PathTest.test_hardlink_to) ... ERROR
test_hardlink_to_unsupported (test.test_pathlib.test_pathlib.PathTest.test_hardlink_to_unsupported) ... skipped 'os.link() is present'
test_home (test.test_pathlib.test_pathlib.PathTest.test_home) ... skipped 'Test requires pwd module to get homedir.'
test_info_exists_caching (test.test_pathlib.test_pathlib.PathTest.test_info_exists_caching) ... ok
test_info_is_dir_caching (test.test_pathlib.test_pathlib.PathTest.test_info_is_dir_caching) ... ok
test_info_is_file_caching (test.test_pathlib.test_pathlib.PathTest.test_info_is_file_caching) ... ok
test_info_is_symlink_caching (test.test_pathlib.test_pathlib.PathTest.test_info_is_symlink_caching) ... skipped 'requires symlinks'
test_is_absolute_posix (test.test_pathlib.test_pathlib.PathTest.test_is_absolute_posix) ... ok
test_is_absolute_windows (test.test_pathlib.test_pathlib.PathTest.test_is_absolute_windows) ... skipped 'requires Windows-flavoured path class'
test_is_block_device_false (test.test_pathlib.test_pathlib.PathTest.test_is_block_device_false) ... ok
test_is_char_device_false (test.test_pathlib.test_pathlib.PathTest.test_is_char_device_false) ... ok
test_is_char_device_true (test.test_pathlib.test_pathlib.PathTest.test_is_char_device_true) ... skipped 'null device required'
test_is_dir (test.test_pathlib.test_pathlib.PathTest.test_is_dir) ... ok
test_is_dir_no_follow_symlinks (test.test_pathlib.test_pathlib.PathTest.test_is_dir_no_follow_symlinks) ... ok
test_is_fifo_false (test.test_pathlib.test_pathlib.PathTest.test_is_fifo_false) ... ok
test_is_fifo_true (test.test_pathlib.test_pathlib.PathTest.test_is_fifo_true) ... skipped 'os.mkfifo() required'
test_is_file (test.test_pathlib.test_pathlib.PathTest.test_is_file) ... ok
test_is_file_no_follow_symlinks (test.test_pathlib.test_pathlib.PathTest.test_is_file_no_follow_symlinks) ... ok
test_is_junction_false (test.test_pathlib.test_pathlib.PathTest.test_is_junction_false) ... ok
test_is_junction_true (test.test_pathlib.test_pathlib.PathTest.test_is_junction_true) ... ok
test_is_mount (test.test_pathlib.test_pathlib.PathTest.test_is_mount) ... ok
test_is_relative_to_common (test.test_pathlib.test_pathlib.PathTest.test_is_relative_to_common) ... ok
test_is_relative_to_windows (test.test_pathlib.test_pathlib.PathTest.test_is_relative_to_windows) ... skipped 'requires Windows-flavoured path class'
test_is_reserved_deprecated (test.test_pathlib.test_pathlib.PathTest.test_is_reserved_deprecated) ... ok
test_is_socket_false (test.test_pathlib.test_pathlib.PathTest.test_is_socket_false) ... ok
test_is_socket_true (test.test_pathlib.test_pathlib.PathTest.test_is_socket_true) ... skipped 'Unix sockets required'
test_is_symlink (test.test_pathlib.test_pathlib.PathTest.test_is_symlink) ... ok
test_iterdir_symlink (test.test_pathlib.test_pathlib.PathTest.test_iterdir_symlink) ... skipped 'requires symlinks'
test_join_nested (test.test_pathlib.test_pathlib.PathTest.test_join_nested) ... ok
test_lstat (test.test_pathlib.test_pathlib.PathTest.test_lstat) ... skipped 'requires symlinks'
test_lstat_nosymlink (test.test_pathlib.test_pathlib.PathTest.test_lstat_nosymlink) ... ok
test_match_common (test.test_pathlib.test_pathlib.PathTest.test_match_common) ... ok
test_match_empty (test.test_pathlib.test_pathlib.PathTest.test_match_empty) ... ok
test_match_posix (test.test_pathlib.test_pathlib.PathTest.test_match_posix) ... ok
test_match_windows (test.test_pathlib.test_pathlib.PathTest.test_match_windows) ... skipped 'requires Windows-flavoured path class'
test_matches_writablepath_docstrings (test.test_pathlib.test_pathlib.PathTest.test_matches_writablepath_docstrings) ... ok
test_mkdir (test.test_pathlib.test_pathlib.PathTest.test_mkdir) ... ok
test_mkdir_concurrent_parent_creation (test.test_pathlib.test_pathlib.PathTest.test_mkdir_concurrent_parent_creation) ... ok
test_mkdir_exist_ok (test.test_pathlib.test_pathlib.PathTest.test_mkdir_exist_ok) ... ok
test_mkdir_exist_ok_root (test.test_pathlib.test_pathlib.PathTest.test_mkdir_exist_ok_root) ... ok
test_mkdir_exist_ok_with_parent (test.test_pathlib.test_pathlib.PathTest.test_mkdir_exist_ok_with_parent) ... ok
test_mkdir_no_parents_file (test.test_pathlib.test_pathlib.PathTest.test_mkdir_no_parents_file) ... ok
test_mkdir_parents (test.test_pathlib.test_pathlib.PathTest.test_mkdir_parents) ... ok
test_mkdir_with_child_file (test.test_pathlib.test_pathlib.PathTest.test_mkdir_with_child_file) ... ok
test_mkdir_with_unknown_drive (test.test_pathlib.test_pathlib.PathTest.test_mkdir_with_unknown_drive) ... skipped 'requires Windows-flavoured path class'
test_move_dangling_symlink (test.test_pathlib.test_pathlib.PathTest.test_move_dangling_symlink) ... skipped 'requires symlinks'
test_move_dangling_symlink_other_fs (test.test_pathlib.test_pathlib.PathTest.test_move_dangling_symlink_other_fs) ... skipped 'requires symlinks'
test_move_dir (test.test_pathlib.test_pathlib.PathTest.test_move_dir) ... ok
test_move_dir_into_itself (test.test_pathlib.test_pathlib.PathTest.test_move_dir_into_itself) ... ok
test_move_dir_into_itself_other_fs (test.test_pathlib.test_pathlib.PathTest.test_move_dir_into_itself_other_fs) ... ok
test_move_dir_other_fs (test.test_pathlib.test_pathlib.PathTest.test_move_dir_other_fs) ... ok
test_move_dir_symlink (test.test_pathlib.test_pathlib.PathTest.test_move_dir_symlink) ... skipped 'requires symlinks'
test_move_dir_symlink_other_fs (test.test_pathlib.test_pathlib.PathTest.test_move_dir_symlink_other_fs) ... skipped 'requires symlinks'
test_move_dir_symlink_to_itself (test.test_pathlib.test_pathlib.PathTest.test_move_dir_symlink_to_itself) ... skipped 'requires symlinks'
test_move_dir_symlink_to_itself_other_fs (test.test_pathlib.test_pathlib.PathTest.test_move_dir_symlink_to_itself_other_fs) ... skipped 'requires symlinks'
test_move_dir_to_dir (test.test_pathlib.test_pathlib.PathTest.test_move_dir_to_dir) ... ok
test_move_dir_to_dir_other_fs (test.test_pathlib.test_pathlib.PathTest.test_move_dir_to_dir_other_fs) ... ok
test_move_dir_to_itself (test.test_pathlib.test_pathlib.PathTest.test_move_dir_to_itself) ... ok
test_move_file (test.test_pathlib.test_pathlib.PathTest.test_move_file) ... ok
test_move_file_other_fs (test.test_pathlib.test_pathlib.PathTest.test_move_file_other_fs) ... ok
test_move_file_symlink (test.test_pathlib.test_pathlib.PathTest.test_move_file_symlink) ... skipped 'requires symlinks'
test_move_file_symlink_other_fs (test.test_pathlib.test_pathlib.PathTest.test_move_file_symlink_other_fs) ... skipped 'requires symlinks'
test_move_file_symlink_to_itself (test.test_pathlib.test_pathlib.PathTest.test_move_file_symlink_to_itself) ... skipped 'requires symlinks'
test_move_file_symlink_to_itself_other_fs (test.test_pathlib.test_pathlib.PathTest.test_move_file_symlink_to_itself_other_fs) ... skipped 'requires symlinks'
test_move_file_to_dir (test.test_pathlib.test_pathlib.PathTest.test_move_file_to_dir) ... ok
test_move_file_to_dir_other_fs (test.test_pathlib.test_pathlib.PathTest.test_move_file_to_dir_other_fs) ... ok
test_move_file_to_file (test.test_pathlib.test_pathlib.PathTest.test_move_file_to_file) ... ok
test_move_file_to_file_other_fs (test.test_pathlib.test_pathlib.PathTest.test_move_file_to_file_other_fs) ... ok
test_move_file_to_itself (test.test_pathlib.test_pathlib.PathTest.test_move_file_to_itself) ... ok
test_move_into (test.test_pathlib.test_pathlib.PathTest.test_move_into) ... ok
test_move_into_empty_name (test.test_pathlib.test_pathlib.PathTest.test_move_into_empty_name) ... ok
test_move_into_empty_name_other_os (test.test_pathlib.test_pathlib.PathTest.test_move_into_empty_name_other_os) ... ok
test_move_into_other_os (test.test_pathlib.test_pathlib.PathTest.test_move_into_other_os) ... ok
test_name_empty (test.test_pathlib.test_pathlib.PathTest.test_name_empty) ... ok
test_open_common (test.test_pathlib.test_pathlib.PathTest.test_open_common) ... ok
test_open_mode (test.test_pathlib.test_pathlib.PathTest.test_open_mode) ... skipped 'umask is not implemented on Emscripten/WASI.'
test_open_unbuffered (test.test_pathlib.test_pathlib.PathTest.test_open_unbuffered) ... ok
test_ordering_common (test.test_pathlib.test_pathlib.PathTest.test_ordering_common) ... ok
test_ordering_windows (test.test_pathlib.test_pathlib.PathTest.test_ordering_windows) ... skipped 'requires Windows-flavoured path class'
test_owner (test.test_pathlib.test_pathlib.PathTest.test_owner) ... skipped 'the pwd module is needed for this test'
test_owner_no_follow_symlinks (test.test_pathlib.test_pathlib.PathTest.test_owner_no_follow_symlinks) ... skipped 'the pwd module is needed for this test'
test_owner_windows (test.test_pathlib.test_pathlib.PathTest.test_owner_windows) ... skipped 'requires Windows-flavoured path class'
test_parse_path_common (test.test_pathlib.test_pathlib.PathTest.test_parse_path_common) ... ok
test_parse_path_posix (test.test_pathlib.test_pathlib.PathTest.test_parse_path_posix) ... ok
test_parse_path_windows (test.test_pathlib.test_pathlib.PathTest.test_parse_path_windows) ... skipped 'requires Windows-flavoured path class'
test_parse_windows_path (test.test_pathlib.test_pathlib.PathTest.test_parse_windows_path) ... ok
test_passing_kwargs_errors (test.test_pathlib.test_pathlib.PathTest.test_passing_kwargs_errors) ... ok
test_pickling_common (test.test_pathlib.test_pathlib.PathTest.test_pickling_common) ... ok
test_readlink (test.test_pathlib.test_pathlib.PathTest.test_readlink) ... skipped 'requires symlinks'
test_readlink_unsupported (test.test_pathlib.test_pathlib.PathTest.test_readlink_unsupported) ... skipped 'os.readlink() is present'
test_relative_to_common (test.test_pathlib.test_pathlib.PathTest.test_relative_to_common) ... ok
test_relative_to_windows (test.test_pathlib.test_pathlib.PathTest.test_relative_to_windows) ... skipped 'requires Windows-flavoured path class'
test_rename (test.test_pathlib.test_pathlib.PathTest.test_rename) ... ok
test_replace (test.test_pathlib.test_pathlib.PathTest.test_replace) ... ok
test_repr_common (test.test_pathlib.test_pathlib.PathTest.test_repr_common) ... ok
test_repr_roundtrips (test.test_pathlib.test_pathlib.PathTest.test_repr_roundtrips) ... ok
test_resolve_common (test.test_pathlib.test_pathlib.PathTest.test_resolve_common) ... skipped 'requires symlinks'
test_resolve_dot (test.test_pathlib.test_pathlib.PathTest.test_resolve_dot) ... skipped 'requires symlinks'
test_resolve_loop (test.test_pathlib.test_pathlib.PathTest.test_resolve_loop) ... skipped 'requires symlinks'
test_resolve_nonexist_relative_issue38671 (test.test_pathlib.test_pathlib.PathTest.test_resolve_nonexist_relative_issue38671) ... ok
test_resolve_root (test.test_pathlib.test_pathlib.PathTest.test_resolve_root) ... ok
test_rglob_pathlike (test.test_pathlib.test_pathlib.PathTest.test_rglob_pathlike) ... ok
test_rglob_posix (test.test_pathlib.test_pathlib.PathTest.test_rglob_posix) ... ok
test_rglob_recurse_symlinks_common (test.test_pathlib.test_pathlib.PathTest.test_rglob_recurse_symlinks_common) ... skipped 'requires symlinks'
test_rglob_recurse_symlinks_false (test.test_pathlib.test_pathlib.PathTest.test_rglob_recurse_symlinks_false) ... ok
test_rglob_symlink_loop (test.test_pathlib.test_pathlib.PathTest.test_rglob_symlink_loop) ... skipped 'requires symlinks'
test_rglob_windows (test.test_pathlib.test_pathlib.PathTest.test_rglob_windows) ... skipped 'requires Windows-flavoured path class'
test_rmdir (test.test_pathlib.test_pathlib.PathTest.test_rmdir) ... ok
test_root_common (test.test_pathlib.test_pathlib.PathTest.test_root_common) ... ok
test_root_posix (test.test_pathlib.test_pathlib.PathTest.test_root_posix) ... ok
test_root_windows (test.test_pathlib.test_pathlib.PathTest.test_root_windows) ... skipped 'requires Windows-flavoured path class'
test_samefile (test.test_pathlib.test_pathlib.PathTest.test_samefile) ... ok
test_stat (test.test_pathlib.test_pathlib.PathTest.test_stat) ... ok
test_stat_no_follow_symlinks (test.test_pathlib.test_pathlib.PathTest.test_stat_no_follow_symlinks) ... skipped 'requires symlinks'
test_stat_no_follow_symlinks_nosymlink (test.test_pathlib.test_pathlib.PathTest.test_stat_no_follow_symlinks_nosymlink) ... ok
test_stem_empty (test.test_pathlib.test_pathlib.PathTest.test_stem_empty) ... ok
test_str_common (test.test_pathlib.test_pathlib.PathTest.test_str_common) ... ok
test_str_subclass_common (test.test_pathlib.test_pathlib.PathTest.test_str_subclass_common) ... ok
test_str_subclass_windows (test.test_pathlib.test_pathlib.PathTest.test_str_subclass_windows) ... skipped 'requires Windows-flavoured path class'
test_str_windows (test.test_pathlib.test_pathlib.PathTest.test_str_windows) ... skipped 'requires Windows-flavoured path class'
test_symlink_to (test.test_pathlib.test_pathlib.PathTest.test_symlink_to) ... skipped 'requires symlinks'
test_symlink_to_unsupported (test.test_pathlib.test_pathlib.PathTest.test_symlink_to_unsupported) ... skipped 'os.symlink() is present'
test_touch_common (test.test_pathlib.test_pathlib.PathTest.test_touch_common) ... ok
test_touch_mode (test.test_pathlib.test_pathlib.PathTest.test_touch_mode) ... skipped 'umask is not implemented on Emscripten/WASI.'
test_touch_nochange (test.test_pathlib.test_pathlib.PathTest.test_touch_nochange) ... ok
test_unlink (test.test_pathlib.test_pathlib.PathTest.test_unlink) ... ok
test_unlink_missing_ok (test.test_pathlib.test_pathlib.PathTest.test_unlink_missing_ok) ... ok
test_unsupported_parser (test.test_pathlib.test_pathlib.PathTest.test_unsupported_parser) ... skipped 'path parser is supported'
test_with_name_empty (test.test_pathlib.test_pathlib.PathTest.test_with_name_empty) ... ok
test_with_name_windows (test.test_pathlib.test_pathlib.PathTest.test_with_name_windows) ... skipped 'requires Windows-flavoured path class'
test_with_segments (test.test_pathlib.test_pathlib.PathTest.test_with_segments) ... ok
test_with_stem_empty (test.test_pathlib.test_pathlib.PathTest.test_with_stem_empty) ... ok
test_with_stem_windows (test.test_pathlib.test_pathlib.PathTest.test_with_stem_windows) ... skipped 'requires Windows-flavoured path class'
test_walk_above_recursion_limit (test.test_pathlib.test_pathlib.PathWalkTest.test_walk_above_recursion_limit) ... ok
test_walk_bad_dir (test.test_pathlib.test_pathlib.PathWalkTest.test_walk_bad_dir) ... ok
test_walk_follow_symlinks (test.test_pathlib.test_pathlib.PathWalkTest.test_walk_follow_symlinks) ... skipped 'requires symlinks'
test_walk_many_open_files (test.test_pathlib.test_pathlib.PathWalkTest.test_walk_many_open_files) ... ok
test_walk_symlink_location (test.test_pathlib.test_pathlib.PathWalkTest.test_walk_symlink_location) ... skipped 'requires symlinks'
test_absolute_common (test.test_pathlib.test_pathlib.PosixPathTest.test_absolute_common) ... ok
test_absolute_posix (test.test_pathlib.test_pathlib.PosixPathTest.test_absolute_posix) ... ok
test_absolute_windows (test.test_pathlib.test_pathlib.PosixPathTest.test_absolute_windows) ... skipped 'requires Windows-flavoured path class'
test_as_bytes_common (test.test_pathlib.test_pathlib.PosixPathTest.test_as_bytes_common) ... ok
test_as_posix_common (test.test_pathlib.test_pathlib.PosixPathTest.test_as_posix_common) ... ok
test_as_uri_common (test.test_pathlib.test_pathlib.PosixPathTest.test_as_uri_common) ... ok
test_as_uri_non_ascii (test.test_pathlib.test_pathlib.PosixPathTest.test_as_uri_non_ascii) ... ok
test_as_uri_posix (test.test_pathlib.test_pathlib.PosixPathTest.test_as_uri_posix) ... ok
test_as_uri_windows (test.test_pathlib.test_pathlib.PosixPathTest.test_as_uri_windows) ... skipped 'requires Windows-flavoured path class'
test_bytes (test.test_pathlib.test_pathlib.PosixPathTest.test_bytes) ... ok
test_bytes_exc_message (test.test_pathlib.test_pathlib.PosixPathTest.test_bytes_exc_message) ... ok
test_chmod (test.test_pathlib.test_pathlib.PosixPathTest.test_chmod) ... skipped 'requires working os.chmod()'
test_chmod_follow_symlinks_true (test.test_pathlib.test_pathlib.PosixPathTest.test_chmod_follow_symlinks_true) ... skipped 'requires working os.chmod()'
test_complex_symlinks_absolute (test.test_pathlib.test_pathlib.PosixPathTest.test_complex_symlinks_absolute) ... skipped 'requires symlinks'
test_complex_symlinks_relative (test.test_pathlib.test_pathlib.PosixPathTest.test_complex_symlinks_relative) ... skipped 'requires symlinks'
test_complex_symlinks_relative_dot_dot (test.test_pathlib.test_pathlib.PosixPathTest.test_complex_symlinks_relative_dot_dot) ... skipped 'requires symlinks'
test_concrete_class (test.test_pathlib.test_pathlib.PosixPathTest.test_concrete_class) ... ok
test_concrete_parser (test.test_pathlib.test_pathlib.PosixPathTest.test_concrete_parser) ... ok
test_constructor_nested (test.test_pathlib.test_pathlib.PosixPathTest.test_constructor_nested) ... ok
test_constructor_nested_foreign_flavour (test.test_pathlib.test_pathlib.PosixPathTest.test_constructor_nested_foreign_flavour) ... skipped 'requires Windows-flavoured path class'
test_copy_dangling_symlink (test.test_pathlib.test_pathlib.PosixPathTest.test_copy_dangling_symlink) ... skipped 'requires symlinks'
test_copy_dir_no_read_permission (test.test_pathlib.test_pathlib.PosixPathTest.test_copy_dir_no_read_permission) ... skipped 'directories are always readable on Windows and WASI'
test_copy_dir_preserve_metadata (test.test_pathlib.test_pathlib.PosixPathTest.test_copy_dir_preserve_metadata) ... ok
test_copy_dir_preserve_metadata_xattrs (test.test_pathlib.test_pathlib.PosixPathTest.test_copy_dir_preserve_metadata_xattrs) ... skipped 'no non-broken extended attribute support'
test_copy_directory_symlink_follow_symlinks_false (test.test_pathlib.test_pathlib.PosixPathTest.test_copy_directory_symlink_follow_symlinks_false) ... skipped 'requires symlinks'
test_copy_directory_symlink_into_itself (test.test_pathlib.test_pathlib.PosixPathTest.test_copy_directory_symlink_into_itself) ... skipped 'requires symlinks'
test_copy_directory_symlink_to_existing_directory_symlink (test.test_pathlib.test_pathlib.PosixPathTest.test_copy_directory_symlink_to_existing_directory_symlink) ... skipped 'requires symlinks'
test_copy_directory_symlink_to_existing_symlink (test.test_pathlib.test_pathlib.PosixPathTest.test_copy_directory_symlink_to_existing_symlink) ... skipped 'requires symlinks'
test_copy_directory_symlink_to_itself (test.test_pathlib.test_pathlib.PosixPathTest.test_copy_directory_symlink_to_itself) ... skipped 'requires symlinks'
test_copy_error_handling (test.test_pathlib.test_pathlib.PosixPathTest.test_copy_error_handling) ... ok
test_copy_file_preserve_metadata (test.test_pathlib.test_pathlib.PosixPathTest.test_copy_file_preserve_metadata) ... ok
test_copy_file_preserve_metadata_xattrs (test.test_pathlib.test_pathlib.PosixPathTest.test_copy_file_preserve_metadata_xattrs) ... skipped 'no non-broken extended attribute support'
test_copy_file_to_existing_symlink (test.test_pathlib.test_pathlib.PosixPathTest.test_copy_file_to_existing_symlink) ... skipped 'requires symlinks'
test_copy_file_to_existing_symlink_follow_symlinks_false (test.test_pathlib.test_pathlib.PosixPathTest.test_copy_file_to_existing_symlink_follow_symlinks_false) ... skipped 'requires symlinks'
test_copy_link_preserve_metadata (test.test_pathlib.test_pathlib.PosixPathTest.test_copy_link_preserve_metadata) ... skipped 'requires symlinks'
test_copy_symlink_follow_symlinks_false (test.test_pathlib.test_pathlib.PosixPathTest.test_copy_symlink_follow_symlinks_false) ... skipped 'requires symlinks'
test_copy_symlink_follow_symlinks_true (test.test_pathlib.test_pathlib.PosixPathTest.test_copy_symlink_follow_symlinks_true) ... skipped 'requires symlinks'
test_copy_symlink_to_existing_directory_symlink (test.test_pathlib.test_pathlib.PosixPathTest.test_copy_symlink_to_existing_directory_symlink) ... skipped 'requires symlinks'
test_copy_symlink_to_existing_symlink (test.test_pathlib.test_pathlib.PosixPathTest.test_copy_symlink_to_existing_symlink) ... skipped 'requires symlinks'
test_copy_symlink_to_itself (test.test_pathlib.test_pathlib.PosixPathTest.test_copy_symlink_to_itself) ... skipped 'requires symlinks'
test_cwd (test.test_pathlib.test_pathlib.PosixPathTest.test_cwd) ... ok
test_delete_dir (test.test_pathlib.test_pathlib.PosixPathTest.test_delete_dir) ... ok
test_delete_does_not_choke_on_failing_lstat (test.test_pathlib.test_pathlib.PosixPathTest.test_delete_does_not_choke_on_failing_lstat) ... ok
test_delete_file (test.test_pathlib.test_pathlib.PosixPathTest.test_delete_file) ... ok
test_delete_inner_junction (test.test_pathlib.test_pathlib.PosixPathTest.test_delete_inner_junction) ... skipped 'requires Windows-flavoured path class'
test_delete_inner_symlink (test.test_pathlib.test_pathlib.PosixPathTest.test_delete_inner_symlink) ... skipped 'requires symlinks'
test_delete_missing (test.test_pathlib.test_pathlib.PosixPathTest.test_delete_missing) ... ok
test_delete_on_named_pipe (test.test_pathlib.test_pathlib.PosixPathTest.test_delete_on_named_pipe) ... skipped 'requires os.mkfifo()'
test_delete_outer_junction (test.test_pathlib.test_pathlib.PosixPathTest.test_delete_outer_junction) ... skipped 'requires Windows-flavoured path class'
test_delete_symlink (test.test_pathlib.test_pathlib.PosixPathTest.test_delete_symlink) ... skipped 'requires symlinks'
test_delete_unwritable (test.test_pathlib.test_pathlib.PosixPathTest.test_delete_unwritable) ... skipped 'requires working os.chmod()'
test_different_parsers_unequal (test.test_pathlib.test_pathlib.PosixPathTest.test_different_parsers_unequal) ... ok
test_different_parsers_unordered (test.test_pathlib.test_pathlib.PosixPathTest.test_different_parsers_unordered) ... ok
test_div_nested (test.test_pathlib.test_pathlib.PosixPathTest.test_div_nested) ... ok
test_drive_common (test.test_pathlib.test_pathlib.PosixPathTest.test_drive_common) ... ok
test_drive_windows (test.test_pathlib.test_pathlib.PosixPathTest.test_drive_windows) ... skipped 'requires Windows-flavoured path class'
test_empty_path (test.test_pathlib.test_pathlib.PosixPathTest.test_empty_path) ... ok
test_eq_common (test.test_pathlib.test_pathlib.PosixPathTest.test_eq_common) ... ok
test_eq_posix (test.test_pathlib.test_pathlib.PosixPathTest.test_eq_posix) ... ok
test_eq_windows (test.test_pathlib.test_pathlib.PosixPathTest.test_eq_windows) ... skipped 'requires Windows-flavoured path class'
test_equivalences (test.test_pathlib.test_pathlib.PosixPathTest.test_equivalences) ... ok
test_equivalences_windows (test.test_pathlib.test_pathlib.PosixPathTest.test_equivalences_windows) ... skipped 'requires Windows-flavoured path class'
test_exists (test.test_pathlib.test_pathlib.PosixPathTest.test_exists) ... ok
test_expanduser_common (test.test_pathlib.test_pathlib.PosixPathTest.test_expanduser_common) ... skipped 'WASI has no user accounts.'
test_expanduser_posix (test.test_pathlib.test_pathlib.PosixPathTest.test_expanduser_posix) ... skipped 'pwd module does not expose getpwall()'
test_expanduser_windows (test.test_pathlib.test_pathlib.PosixPathTest.test_expanduser_windows) ... skipped 'requires Windows-flavoured path class'
test_from_uri_pathname2url_posix (test.test_pathlib.test_pathlib.PosixPathTest.test_from_uri_pathname2url_posix) ... ok
test_from_uri_pathname2url_windows (test.test_pathlib.test_pathlib.PosixPathTest.test_from_uri_pathname2url_windows) ... skipped 'requires Windows-flavoured path class'
test_from_uri_posix (test.test_pathlib.test_pathlib.PosixPathTest.test_from_uri_posix) ... ok
test_from_uri_windows (test.test_pathlib.test_pathlib.PosixPathTest.test_from_uri_windows) ... skipped 'requires Windows-flavoured path class'
test_fspath_common (test.test_pathlib.test_pathlib.PosixPathTest.test_fspath_common) ... ok
test_full_match_case_sensitive (test.test_pathlib.test_pathlib.PosixPathTest.test_full_match_case_sensitive) ... ok
test_glob_above_recursion_limit (test.test_pathlib.test_pathlib.PosixPathTest.test_glob_above_recursion_limit) ... ok
test_glob_case_sensitive (test.test_pathlib.test_pathlib.PosixPathTest.test_glob_case_sensitive) ... ok
test_glob_dot (test.test_pathlib.test_pathlib.PosixPathTest.test_glob_dot) ... skipped 'requires symlinks'
test_glob_dotdot (test.test_pathlib.test_pathlib.PosixPathTest.test_glob_dotdot) ... skipped "WASI resolution of '..' parts doesn't match POSIX"
test_glob_empty_pattern (test.test_pathlib.test_pathlib.PosixPathTest.test_glob_empty_pattern) ... ok
test_glob_inaccessible (test.test_pathlib.test_pathlib.PosixPathTest.test_glob_inaccessible) ... ok
test_glob_long_symlink (test.test_pathlib.test_pathlib.PosixPathTest.test_glob_long_symlink) ... skipped 'requires symlinks'
test_glob_many_open_files (test.test_pathlib.test_pathlib.PosixPathTest.test_glob_many_open_files) ... ok
test_glob_pathlike (test.test_pathlib.test_pathlib.PosixPathTest.test_glob_pathlike) ... ok
test_glob_permissions (test.test_pathlib.test_pathlib.PosixPathTest.test_glob_permissions) ... skipped 'requires symlinks'
test_glob_posix (test.test_pathlib.test_pathlib.PosixPathTest.test_glob_posix) ... ok
test_glob_recurse_symlinks_common (test.test_pathlib.test_pathlib.PosixPathTest.test_glob_recurse_symlinks_common) ... skipped 'requires symlinks'
test_glob_windows (test.test_pathlib.test_pathlib.PosixPathTest.test_glob_windows) ... skipped 'requires Windows-flavoured path class'
test_group (test.test_pathlib.test_pathlib.PosixPathTest.test_group) ... skipped 'the grp module is needed for this test'
test_group_no_follow_symlinks (test.test_pathlib.test_pathlib.PosixPathTest.test_group_no_follow_symlinks) ... skipped 'the grp module is needed for this test'
test_group_windows (test.test_pathlib.test_pathlib.PosixPathTest.test_group_windows) ... skipped 'requires Windows-flavoured path class'
test_handling_bad_descriptor (test.test_pathlib.test_pathlib.PosixPathTest.test_handling_bad_descriptor) ... skipped 'Bad file descriptor in /dev/fd affects only macOS'
test_hardlink_to (test.test_pathlib.test_pathlib.PosixPathTest.test_hardlink_to) ... ERROR
test_hardlink_to_unsupported (test.test_pathlib.test_pathlib.PosixPathTest.test_hardlink_to_unsupported) ... skipped 'os.link() is present'
test_home (test.test_pathlib.test_pathlib.PosixPathTest.test_home) ... skipped 'Test requires pwd module to get homedir.'
test_info_exists_caching (test.test_pathlib.test_pathlib.PosixPathTest.test_info_exists_caching) ... ok
test_info_is_dir_caching (test.test_pathlib.test_pathlib.PosixPathTest.test_info_is_dir_caching) ... ok
test_info_is_file_caching (test.test_pathlib.test_pathlib.PosixPathTest.test_info_is_file_caching) ... ok
test_info_is_symlink_caching (test.test_pathlib.test_pathlib.PosixPathTest.test_info_is_symlink_caching) ... skipped 'requires symlinks'
test_is_absolute_posix (test.test_pathlib.test_pathlib.PosixPathTest.test_is_absolute_posix) ... ok
test_is_absolute_windows (test.test_pathlib.test_pathlib.PosixPathTest.test_is_absolute_windows) ... skipped 'requires Windows-flavoured path class'
test_is_block_device_false (test.test_pathlib.test_pathlib.PosixPathTest.test_is_block_device_false) ... ok
test_is_char_device_false (test.test_pathlib.test_pathlib.PosixPathTest.test_is_char_device_false) ... ok
test_is_char_device_true (test.test_pathlib.test_pathlib.PosixPathTest.test_is_char_device_true) ... skipped 'null device required'
test_is_dir (test.test_pathlib.test_pathlib.PosixPathTest.test_is_dir) ... ok
test_is_dir_no_follow_symlinks (test.test_pathlib.test_pathlib.PosixPathTest.test_is_dir_no_follow_symlinks) ... ok
test_is_fifo_false (test.test_pathlib.test_pathlib.PosixPathTest.test_is_fifo_false) ... ok
test_is_fifo_true (test.test_pathlib.test_pathlib.PosixPathTest.test_is_fifo_true) ... skipped 'os.mkfifo() required'
test_is_file (test.test_pathlib.test_pathlib.PosixPathTest.test_is_file) ... ok
test_is_file_no_follow_symlinks (test.test_pathlib.test_pathlib.PosixPathTest.test_is_file_no_follow_symlinks) ... ok
test_is_junction_false (test.test_pathlib.test_pathlib.PosixPathTest.test_is_junction_false) ... ok
test_is_junction_true (test.test_pathlib.test_pathlib.PosixPathTest.test_is_junction_true) ... ok
test_is_mount (test.test_pathlib.test_pathlib.PosixPathTest.test_is_mount) ... ok
test_is_relative_to_common (test.test_pathlib.test_pathlib.PosixPathTest.test_is_relative_to_common) ... ok
test_is_relative_to_windows (test.test_pathlib.test_pathlib.PosixPathTest.test_is_relative_to_windows) ... skipped 'requires Windows-flavoured path class'
test_is_reserved_deprecated (test.test_pathlib.test_pathlib.PosixPathTest.test_is_reserved_deprecated) ... ok
test_is_socket_false (test.test_pathlib.test_pathlib.PosixPathTest.test_is_socket_false) ... ok
test_is_socket_true (test.test_pathlib.test_pathlib.PosixPathTest.test_is_socket_true) ... skipped 'Unix sockets required'
test_is_symlink (test.test_pathlib.test_pathlib.PosixPathTest.test_is_symlink) ... ok
test_iterdir_symlink (test.test_pathlib.test_pathlib.PosixPathTest.test_iterdir_symlink) ... skipped 'requires symlinks'
test_join_nested (test.test_pathlib.test_pathlib.PosixPathTest.test_join_nested) ... ok
test_lstat (test.test_pathlib.test_pathlib.PosixPathTest.test_lstat) ... skipped 'requires symlinks'
test_lstat_nosymlink (test.test_pathlib.test_pathlib.PosixPathTest.test_lstat_nosymlink) ... ok
test_match_common (test.test_pathlib.test_pathlib.PosixPathTest.test_match_common) ... ok
test_match_empty (test.test_pathlib.test_pathlib.PosixPathTest.test_match_empty) ... ok
test_match_posix (test.test_pathlib.test_pathlib.PosixPathTest.test_match_posix) ... ok
test_match_windows (test.test_pathlib.test_pathlib.PosixPathTest.test_match_windows) ... skipped 'requires Windows-flavoured path class'
test_matches_writablepath_docstrings (test.test_pathlib.test_pathlib.PosixPathTest.test_matches_writablepath_docstrings) ... ok
test_mkdir (test.test_pathlib.test_pathlib.PosixPathTest.test_mkdir) ... ok
test_mkdir_concurrent_parent_creation (test.test_pathlib.test_pathlib.PosixPathTest.test_mkdir_concurrent_parent_creation) ... ok
test_mkdir_exist_ok (test.test_pathlib.test_pathlib.PosixPathTest.test_mkdir_exist_ok) ... ok
test_mkdir_exist_ok_root (test.test_pathlib.test_pathlib.PosixPathTest.test_mkdir_exist_ok_root) ... ok
test_mkdir_exist_ok_with_parent (test.test_pathlib.test_pathlib.PosixPathTest.test_mkdir_exist_ok_with_parent) ... ok
test_mkdir_no_parents_file (test.test_pathlib.test_pathlib.PosixPathTest.test_mkdir_no_parents_file) ... ok
test_mkdir_parents (test.test_pathlib.test_pathlib.PosixPathTest.test_mkdir_parents) ... ok
test_mkdir_with_child_file (test.test_pathlib.test_pathlib.PosixPathTest.test_mkdir_with_child_file) ... ok
test_mkdir_with_unknown_drive (test.test_pathlib.test_pathlib.PosixPathTest.test_mkdir_with_unknown_drive) ... skipped 'requires Windows-flavoured path class'
test_move_dangling_symlink (test.test_pathlib.test_pathlib.PosixPathTest.test_move_dangling_symlink) ... skipped 'requires symlinks'
test_move_dangling_symlink_other_fs (test.test_pathlib.test_pathlib.PosixPathTest.test_move_dangling_symlink_other_fs) ... skipped 'requires symlinks'
test_move_dir (test.test_pathlib.test_pathlib.PosixPathTest.test_move_dir) ... ok
test_move_dir_into_itself (test.test_pathlib.test_pathlib.PosixPathTest.test_move_dir_into_itself) ... ok
test_move_dir_into_itself_other_fs (test.test_pathlib.test_pathlib.PosixPathTest.test_move_dir_into_itself_other_fs) ... ok
test_move_dir_other_fs (test.test_pathlib.test_pathlib.PosixPathTest.test_move_dir_other_fs) ... ok
test_move_dir_symlink (test.test_pathlib.test_pathlib.PosixPathTest.test_move_dir_symlink) ... skipped 'requires symlinks'
test_move_dir_symlink_other_fs (test.test_pathlib.test_pathlib.PosixPathTest.test_move_dir_symlink_other_fs) ... skipped 'requires symlinks'
test_move_dir_symlink_to_itself (test.test_pathlib.test_pathlib.PosixPathTest.test_move_dir_symlink_to_itself) ... skipped 'requires symlinks'
test_move_dir_symlink_to_itself_other_fs (test.test_pathlib.test_pathlib.PosixPathTest.test_move_dir_symlink_to_itself_other_fs) ... skipped 'requires symlinks'
test_move_dir_to_dir (test.test_pathlib.test_pathlib.PosixPathTest.test_move_dir_to_dir) ... ok
test_move_dir_to_dir_other_fs (test.test_pathlib.test_pathlib.PosixPathTest.test_move_dir_to_dir_other_fs) ... ok
test_move_dir_to_itself (test.test_pathlib.test_pathlib.PosixPathTest.test_move_dir_to_itself) ... ok
test_move_file (test.test_pathlib.test_pathlib.PosixPathTest.test_move_file) ... ok
test_move_file_other_fs (test.test_pathlib.test_pathlib.PosixPathTest.test_move_file_other_fs) ... ok
test_move_file_symlink (test.test_pathlib.test_pathlib.PosixPathTest.test_move_file_symlink) ... skipped 'requires symlinks'
test_move_file_symlink_other_fs (test.test_pathlib.test_pathlib.PosixPathTest.test_move_file_symlink_other_fs) ... skipped 'requires symlinks'
test_move_file_symlink_to_itself (test.test_pathlib.test_pathlib.PosixPathTest.test_move_file_symlink_to_itself) ... skipped 'requires symlinks'
test_move_file_symlink_to_itself_other_fs (test.test_pathlib.test_pathlib.PosixPathTest.test_move_file_symlink_to_itself_other_fs) ... skipped 'requires symlinks'
test_move_file_to_dir (test.test_pathlib.test_pathlib.PosixPathTest.test_move_file_to_dir) ... ok
test_move_file_to_dir_other_fs (test.test_pathlib.test_pathlib.PosixPathTest.test_move_file_to_dir_other_fs) ... ok
test_move_file_to_file (test.test_pathlib.test_pathlib.PosixPathTest.test_move_file_to_file) ... ok
test_move_file_to_file_other_fs (test.test_pathlib.test_pathlib.PosixPathTest.test_move_file_to_file_other_fs) ... ok
test_move_file_to_itself (test.test_pathlib.test_pathlib.PosixPathTest.test_move_file_to_itself) ... ok
test_move_into (test.test_pathlib.test_pathlib.PosixPathTest.test_move_into) ... ok
test_move_into_empty_name (test.test_pathlib.test_pathlib.PosixPathTest.test_move_into_empty_name) ... ok
test_move_into_empty_name_other_os (test.test_pathlib.test_pathlib.PosixPathTest.test_move_into_empty_name_other_os) ... ok
test_move_into_other_os (test.test_pathlib.test_pathlib.PosixPathTest.test_move_into_other_os) ... ok
test_name_empty (test.test_pathlib.test_pathlib.PosixPathTest.test_name_empty) ... ok
test_open_common (test.test_pathlib.test_pathlib.PosixPathTest.test_open_common) ... ok
test_open_mode (test.test_pathlib.test_pathlib.PosixPathTest.test_open_mode) ... skipped 'umask is not implemented on Emscripten/WASI.'
test_open_unbuffered (test.test_pathlib.test_pathlib.PosixPathTest.test_open_unbuffered) ... ok
test_ordering_common (test.test_pathlib.test_pathlib.PosixPathTest.test_ordering_common) ... ok
test_ordering_windows (test.test_pathlib.test_pathlib.PosixPathTest.test_ordering_windows) ... skipped 'requires Windows-flavoured path class'
test_owner (test.test_pathlib.test_pathlib.PosixPathTest.test_owner) ... skipped 'the pwd module is needed for this test'
test_owner_no_follow_symlinks (test.test_pathlib.test_pathlib.PosixPathTest.test_owner_no_follow_symlinks) ... skipped 'the pwd module is needed for this test'
test_owner_windows (test.test_pathlib.test_pathlib.PosixPathTest.test_owner_windows) ... skipped 'requires Windows-flavoured path class'
test_parse_path_common (test.test_pathlib.test_pathlib.PosixPathTest.test_parse_path_common) ... ok
test_parse_path_posix (test.test_pathlib.test_pathlib.PosixPathTest.test_parse_path_posix) ... ok
test_parse_path_windows (test.test_pathlib.test_pathlib.PosixPathTest.test_parse_path_windows) ... skipped 'requires Windows-flavoured path class'
test_parse_windows_path (test.test_pathlib.test_pathlib.PosixPathTest.test_parse_windows_path) ... ok
test_passing_kwargs_errors (test.test_pathlib.test_pathlib.PosixPathTest.test_passing_kwargs_errors) ... ok
test_pickling_common (test.test_pathlib.test_pathlib.PosixPathTest.test_pickling_common) ... ok
test_readlink (test.test_pathlib.test_pathlib.PosixPathTest.test_readlink) ... skipped 'requires symlinks'
test_readlink_unsupported (test.test_pathlib.test_pathlib.PosixPathTest.test_readlink_unsupported) ... skipped 'os.readlink() is present'
test_relative_to_common (test.test_pathlib.test_pathlib.PosixPathTest.test_relative_to_common) ... ok
test_relative_to_windows (test.test_pathlib.test_pathlib.PosixPathTest.test_relative_to_windows) ... skipped 'requires Windows-flavoured path class'
test_rename (test.test_pathlib.test_pathlib.PosixPathTest.test_rename) ... ok
test_replace (test.test_pathlib.test_pathlib.PosixPathTest.test_replace) ... ok
test_repr_common (test.test_pathlib.test_pathlib.PosixPathTest.test_repr_common) ... ok
test_repr_roundtrips (test.test_pathlib.test_pathlib.PosixPathTest.test_repr_roundtrips) ... ok
test_resolve_common (test.test_pathlib.test_pathlib.PosixPathTest.test_resolve_common) ... skipped 'requires symlinks'
test_resolve_dot (test.test_pathlib.test_pathlib.PosixPathTest.test_resolve_dot) ... skipped 'requires symlinks'
test_resolve_loop (test.test_pathlib.test_pathlib.PosixPathTest.test_resolve_loop) ... skipped 'requires symlinks'
test_resolve_nonexist_relative_issue38671 (test.test_pathlib.test_pathlib.PosixPathTest.test_resolve_nonexist_relative_issue38671) ... ok
test_resolve_root (test.test_pathlib.test_pathlib.PosixPathTest.test_resolve_root) ... ok
test_rglob_pathlike (test.test_pathlib.test_pathlib.PosixPathTest.test_rglob_pathlike) ... ok
test_rglob_posix (test.test_pathlib.test_pathlib.PosixPathTest.test_rglob_posix) ... ok
test_rglob_recurse_symlinks_common (test.test_pathlib.test_pathlib.PosixPathTest.test_rglob_recurse_symlinks_common) ... skipped 'requires symlinks'
test_rglob_recurse_symlinks_false (test.test_pathlib.test_pathlib.PosixPathTest.test_rglob_recurse_symlinks_false) ... ok
test_rglob_symlink_loop (test.test_pathlib.test_pathlib.PosixPathTest.test_rglob_symlink_loop) ... skipped 'requires symlinks'
test_rglob_windows (test.test_pathlib.test_pathlib.PosixPathTest.test_rglob_windows) ... skipped 'requires Windows-flavoured path class'
test_rmdir (test.test_pathlib.test_pathlib.PosixPathTest.test_rmdir) ... ok
test_root_common (test.test_pathlib.test_pathlib.PosixPathTest.test_root_common) ... ok
test_root_posix (test.test_pathlib.test_pathlib.PosixPathTest.test_root_posix) ... ok
test_root_windows (test.test_pathlib.test_pathlib.PosixPathTest.test_root_windows) ... skipped 'requires Windows-flavoured path class'
test_samefile (test.test_pathlib.test_pathlib.PosixPathTest.test_samefile) ... ok
test_stat (test.test_pathlib.test_pathlib.PosixPathTest.test_stat) ... ok
test_stat_no_follow_symlinks (test.test_pathlib.test_pathlib.PosixPathTest.test_stat_no_follow_symlinks) ... skipped 'requires symlinks'
test_stat_no_follow_symlinks_nosymlink (test.test_pathlib.test_pathlib.PosixPathTest.test_stat_no_follow_symlinks_nosymlink) ... ok
test_stem_empty (test.test_pathlib.test_pathlib.PosixPathTest.test_stem_empty) ... ok
test_str_common (test.test_pathlib.test_pathlib.PosixPathTest.test_str_common) ... ok
test_str_subclass_common (test.test_pathlib.test_pathlib.PosixPathTest.test_str_subclass_common) ... ok
test_str_subclass_windows (test.test_pathlib.test_pathlib.PosixPathTest.test_str_subclass_windows) ... skipped 'requires Windows-flavoured path class'
test_str_windows (test.test_pathlib.test_pathlib.PosixPathTest.test_str_windows) ... skipped 'requires Windows-flavoured path class'
test_symlink_to (test.test_pathlib.test_pathlib.PosixPathTest.test_symlink_to) ... skipped 'requires symlinks'
test_symlink_to_unsupported (test.test_pathlib.test_pathlib.PosixPathTest.test_symlink_to_unsupported) ... skipped 'os.symlink() is present'
test_touch_common (test.test_pathlib.test_pathlib.PosixPathTest.test_touch_common) ... ok
test_touch_mode (test.test_pathlib.test_pathlib.PosixPathTest.test_touch_mode) ... skipped 'umask is not implemented on Emscripten/WASI.'
test_touch_nochange (test.test_pathlib.test_pathlib.PosixPathTest.test_touch_nochange) ... ok
test_unlink (test.test_pathlib.test_pathlib.PosixPathTest.test_unlink) ... ok
test_unlink_missing_ok (test.test_pathlib.test_pathlib.PosixPathTest.test_unlink_missing_ok) ... ok
test_unsupported_parser (test.test_pathlib.test_pathlib.PosixPathTest.test_unsupported_parser) ... skipped 'path parser is supported'
test_with_name_empty (test.test_pathlib.test_pathlib.PosixPathTest.test_with_name_empty) ... ok
test_with_name_windows (test.test_pathlib.test_pathlib.PosixPathTest.test_with_name_windows) ... skipped 'requires Windows-flavoured path class'
test_with_segments (test.test_pathlib.test_pathlib.PosixPathTest.test_with_segments) ... ok
test_with_stem_empty (test.test_pathlib.test_pathlib.PosixPathTest.test_with_stem_empty) ... ok
test_with_stem_windows (test.test_pathlib.test_pathlib.PosixPathTest.test_with_stem_windows) ... skipped 'requires Windows-flavoured path class'
test_as_bytes_common (test.test_pathlib.test_pathlib.PurePathSubclassTest.test_as_bytes_common) ... ok
test_as_posix_common (test.test_pathlib.test_pathlib.PurePathSubclassTest.test_as_posix_common) ... ok
test_as_uri_common (test.test_pathlib.test_pathlib.PurePathSubclassTest.test_as_uri_common) ... ok
test_as_uri_non_ascii (test.test_pathlib.test_pathlib.PurePathSubclassTest.test_as_uri_non_ascii) ... ok
test_as_uri_posix (test.test_pathlib.test_pathlib.PurePathSubclassTest.test_as_uri_posix) ... ok
test_as_uri_windows (test.test_pathlib.test_pathlib.PurePathSubclassTest.test_as_uri_windows) ... skipped 'requires Windows-flavoured path class'
test_bytes (test.test_pathlib.test_pathlib.PurePathSubclassTest.test_bytes) ... ok
test_bytes_exc_message (test.test_pathlib.test_pathlib.PurePathSubclassTest.test_bytes_exc_message) ... ok
test_concrete_class (test.test_pathlib.test_pathlib.PurePathSubclassTest.test_concrete_class) ... ok
test_concrete_parser (test.test_pathlib.test_pathlib.PurePathSubclassTest.test_concrete_parser) ... ok
test_constructor_nested (test.test_pathlib.test_pathlib.PurePathSubclassTest.test_constructor_nested) ... ok
test_constructor_nested_foreign_flavour (test.test_pathlib.test_pathlib.PurePathSubclassTest.test_constructor_nested_foreign_flavour) ... skipped 'requires Windows-flavoured path class'
test_different_parsers_unequal (test.test_pathlib.test_pathlib.PurePathSubclassTest.test_different_parsers_unequal) ... ok
test_different_parsers_unordered (test.test_pathlib.test_pathlib.PurePathSubclassTest.test_different_parsers_unordered) ... ok
test_div_nested (test.test_pathlib.test_pathlib.PurePathSubclassTest.test_div_nested) ... ok
test_drive_common (test.test_pathlib.test_pathlib.PurePathSubclassTest.test_drive_common) ... ok
test_drive_windows (test.test_pathlib.test_pathlib.PurePathSubclassTest.test_drive_windows) ... skipped 'requires Windows-flavoured path class'
test_empty_path (test.test_pathlib.test_pathlib.PurePathSubclassTest.test_empty_path) ... ok
test_eq_common (test.test_pathlib.test_pathlib.PurePathSubclassTest.test_eq_common) ... ok
test_eq_posix (test.test_pathlib.test_pathlib.PurePathSubclassTest.test_eq_posix) ... ok
test_eq_windows (test.test_pathlib.test_pathlib.PurePathSubclassTest.test_eq_windows) ... skipped 'requires Windows-flavoured path class'
test_equivalences (test.test_pathlib.test_pathlib.PurePathSubclassTest.test_equivalences) ... ok
test_equivalences_windows (test.test_pathlib.test_pathlib.PurePathSubclassTest.test_equivalences_windows) ... skipped 'requires Windows-flavoured path class'
test_fspath_common (test.test_pathlib.test_pathlib.PurePathSubclassTest.test_fspath_common) ... ok
test_full_match_case_sensitive (test.test_pathlib.test_pathlib.PurePathSubclassTest.test_full_match_case_sensitive) ... ok
test_is_absolute_posix (test.test_pathlib.test_pathlib.PurePathSubclassTest.test_is_absolute_posix) ... ok
test_is_absolute_windows (test.test_pathlib.test_pathlib.PurePathSubclassTest.test_is_absolute_windows) ... skipped 'requires Windows-flavoured path class'
test_is_relative_to_common (test.test_pathlib.test_pathlib.PurePathSubclassTest.test_is_relative_to_common) ... ok
test_is_relative_to_windows (test.test_pathlib.test_pathlib.PurePathSubclassTest.test_is_relative_to_windows) ... skipped 'requires Windows-flavoured path class'
test_is_reserved_deprecated (test.test_pathlib.test_pathlib.PurePathSubclassTest.test_is_reserved_deprecated) ... ok
test_join_nested (test.test_pathlib.test_pathlib.PurePathSubclassTest.test_join_nested) ... ok
test_match_common (test.test_pathlib.test_pathlib.PurePathSubclassTest.test_match_common) ... ok
test_match_empty (test.test_pathlib.test_pathlib.PurePathSubclassTest.test_match_empty) ... ok
test_match_posix (test.test_pathlib.test_pathlib.PurePathSubclassTest.test_match_posix) ... ok
test_match_windows (test.test_pathlib.test_pathlib.PurePathSubclassTest.test_match_windows) ... skipped 'requires Windows-flavoured path class'
test_name_empty (test.test_pathlib.test_pathlib.PurePathSubclassTest.test_name_empty) ... ok
test_ordering_common (test.test_pathlib.test_pathlib.PurePathSubclassTest.test_ordering_common) ... ok
test_ordering_windows (test.test_pathlib.test_pathlib.PurePathSubclassTest.test_ordering_windows) ... skipped 'requires Windows-flavoured path class'
test_parse_path_common (test.test_pathlib.test_pathlib.PurePathSubclassTest.test_parse_path_common) ... ok
test_parse_path_posix (test.test_pathlib.test_pathlib.PurePathSubclassTest.test_parse_path_posix) ... ok
test_parse_path_windows (test.test_pathlib.test_pathlib.PurePathSubclassTest.test_parse_path_windows) ... skipped 'requires Windows-flavoured path class'
test_parse_windows_path (test.test_pathlib.test_pathlib.PurePathSubclassTest.test_parse_windows_path) ... ok
test_pickling_common (test.test_pathlib.test_pathlib.PurePathSubclassTest.test_pickling_common) ... ok
test_relative_to_common (test.test_pathlib.test_pathlib.PurePathSubclassTest.test_relative_to_common) ... ok
test_relative_to_windows (test.test_pathlib.test_pathlib.PurePathSubclassTest.test_relative_to_windows) ... skipped 'requires Windows-flavoured path class'
test_repr_common (test.test_pathlib.test_pathlib.PurePathSubclassTest.test_repr_common) ... ok
test_root_common (test.test_pathlib.test_pathlib.PurePathSubclassTest.test_root_common) ... ok
test_root_posix (test.test_pathlib.test_pathlib.PurePathSubclassTest.test_root_posix) ... ok
test_root_windows (test.test_pathlib.test_pathlib.PurePathSubclassTest.test_root_windows) ... skipped 'requires Windows-flavoured path class'
test_stem_empty (test.test_pathlib.test_pathlib.PurePathSubclassTest.test_stem_empty) ... ok
test_str_common (test.test_pathlib.test_pathlib.PurePathSubclassTest.test_str_common) ... ok
test_str_subclass_common (test.test_pathlib.test_pathlib.PurePathSubclassTest.test_str_subclass_common) ... ok
test_str_subclass_windows (test.test_pathlib.test_pathlib.PurePathSubclassTest.test_str_subclass_windows) ... skipped 'requires Windows-flavoured path class'
test_str_windows (test.test_pathlib.test_pathlib.PurePathSubclassTest.test_str_windows) ... skipped 'requires Windows-flavoured path class'
test_with_name_empty (test.test_pathlib.test_pathlib.PurePathSubclassTest.test_with_name_empty) ... ok
test_with_name_windows (test.test_pathlib.test_pathlib.PurePathSubclassTest.test_with_name_windows) ... skipped 'requires Windows-flavoured path class'
test_with_stem_empty (test.test_pathlib.test_pathlib.PurePathSubclassTest.test_with_stem_empty) ... ok
test_with_stem_windows (test.test_pathlib.test_pathlib.PurePathSubclassTest.test_with_stem_windows) ... skipped 'requires Windows-flavoured path class'
test_as_bytes_common (test.test_pathlib.test_pathlib.PurePathTest.test_as_bytes_common) ... ok
test_as_posix_common (test.test_pathlib.test_pathlib.PurePathTest.test_as_posix_common) ... ok
test_as_uri_common (test.test_pathlib.test_pathlib.PurePathTest.test_as_uri_common) ... ok
test_as_uri_non_ascii (test.test_pathlib.test_pathlib.PurePathTest.test_as_uri_non_ascii) ... ok
test_as_uri_posix (test.test_pathlib.test_pathlib.PurePathTest.test_as_uri_posix) ... ok
test_as_uri_windows (test.test_pathlib.test_pathlib.PurePathTest.test_as_uri_windows) ... skipped 'requires Windows-flavoured path class'
test_bytes (test.test_pathlib.test_pathlib.PurePathTest.test_bytes) ... ok
test_bytes_exc_message (test.test_pathlib.test_pathlib.PurePathTest.test_bytes_exc_message) ... ok
test_concrete_class (test.test_pathlib.test_pathlib.PurePathTest.test_concrete_class) ... ok
test_concrete_parser (test.test_pathlib.test_pathlib.PurePathTest.test_concrete_parser) ... ok
test_constructor_nested (test.test_pathlib.test_pathlib.PurePathTest.test_constructor_nested) ... ok
test_constructor_nested_foreign_flavour (test.test_pathlib.test_pathlib.PurePathTest.test_constructor_nested_foreign_flavour) ... skipped 'requires Windows-flavoured path class'
test_different_parsers_unequal (test.test_pathlib.test_pathlib.PurePathTest.test_different_parsers_unequal) ... ok
test_different_parsers_unordered (test.test_pathlib.test_pathlib.PurePathTest.test_different_parsers_unordered) ... ok
test_div_nested (test.test_pathlib.test_pathlib.PurePathTest.test_div_nested) ... ok
test_drive_common (test.test_pathlib.test_pathlib.PurePathTest.test_drive_common) ... ok
test_drive_windows (test.test_pathlib.test_pathlib.PurePathTest.test_drive_windows) ... skipped 'requires Windows-flavoured path class'
test_empty_path (test.test_pathlib.test_pathlib.PurePathTest.test_empty_path) ... ok
test_eq_common (test.test_pathlib.test_pathlib.PurePathTest.test_eq_common) ... ok
test_eq_posix (test.test_pathlib.test_pathlib.PurePathTest.test_eq_posix) ... ok
test_eq_windows (test.test_pathlib.test_pathlib.PurePathTest.test_eq_windows) ... skipped 'requires Windows-flavoured path class'
test_equivalences (test.test_pathlib.test_pathlib.PurePathTest.test_equivalences) ... ok
test_equivalences_windows (test.test_pathlib.test_pathlib.PurePathTest.test_equivalences_windows) ... skipped 'requires Windows-flavoured path class'
test_fspath_common (test.test_pathlib.test_pathlib.PurePathTest.test_fspath_common) ... ok
test_full_match_case_sensitive (test.test_pathlib.test_pathlib.PurePathTest.test_full_match_case_sensitive) ... ok
test_is_absolute_posix (test.test_pathlib.test_pathlib.PurePathTest.test_is_absolute_posix) ... ok
test_is_absolute_windows (test.test_pathlib.test_pathlib.PurePathTest.test_is_absolute_windows) ... skipped 'requires Windows-flavoured path class'
test_is_relative_to_common (test.test_pathlib.test_pathlib.PurePathTest.test_is_relative_to_common) ... ok
test_is_relative_to_windows (test.test_pathlib.test_pathlib.PurePathTest.test_is_relative_to_windows) ... skipped 'requires Windows-flavoured path class'
test_is_reserved_deprecated (test.test_pathlib.test_pathlib.PurePathTest.test_is_reserved_deprecated) ... ok
test_join_nested (test.test_pathlib.test_pathlib.PurePathTest.test_join_nested) ... ok
test_match_common (test.test_pathlib.test_pathlib.PurePathTest.test_match_common) ... ok
test_match_empty (test.test_pathlib.test_pathlib.PurePathTest.test_match_empty) ... ok
test_match_posix (test.test_pathlib.test_pathlib.PurePathTest.test_match_posix) ... ok
test_match_windows (test.test_pathlib.test_pathlib.PurePathTest.test_match_windows) ... skipped 'requires Windows-flavoured path class'
test_name_empty (test.test_pathlib.test_pathlib.PurePathTest.test_name_empty) ... ok
test_ordering_common (test.test_pathlib.test_pathlib.PurePathTest.test_ordering_common) ... ok
test_ordering_windows (test.test_pathlib.test_pathlib.PurePathTest.test_ordering_windows) ... skipped 'requires Windows-flavoured path class'
test_parse_path_common (test.test_pathlib.test_pathlib.PurePathTest.test_parse_path_common) ... ok
test_parse_path_posix (test.test_pathlib.test_pathlib.PurePathTest.test_parse_path_posix) ... ok
test_parse_path_windows (test.test_pathlib.test_pathlib.PurePathTest.test_parse_path_windows) ... skipped 'requires Windows-flavoured path class'
test_parse_windows_path (test.test_pathlib.test_pathlib.PurePathTest.test_parse_windows_path) ... ok
test_pickling_common (test.test_pathlib.test_pathlib.PurePathTest.test_pickling_common) ... ok
test_relative_to_common (test.test_pathlib.test_pathlib.PurePathTest.test_relative_to_common) ... ok
test_relative_to_windows (test.test_pathlib.test_pathlib.PurePathTest.test_relative_to_windows) ... skipped 'requires Windows-flavoured path class'
test_repr_common (test.test_pathlib.test_pathlib.PurePathTest.test_repr_common) ... ok
test_repr_roundtrips (test.test_pathlib.test_pathlib.PurePathTest.test_repr_roundtrips) ... ok
test_root_common (test.test_pathlib.test_pathlib.PurePathTest.test_root_common) ... ok
test_root_posix (test.test_pathlib.test_pathlib.PurePathTest.test_root_posix) ... ok
test_root_windows (test.test_pathlib.test_pathlib.PurePathTest.test_root_windows) ... skipped 'requires Windows-flavoured path class'
test_stem_empty (test.test_pathlib.test_pathlib.PurePathTest.test_stem_empty) ... ok
test_str_common (test.test_pathlib.test_pathlib.PurePathTest.test_str_common) ... ok
test_str_subclass_common (test.test_pathlib.test_pathlib.PurePathTest.test_str_subclass_common) ... ok
test_str_subclass_windows (test.test_pathlib.test_pathlib.PurePathTest.test_str_subclass_windows) ... skipped 'requires Windows-flavoured path class'
test_str_windows (test.test_pathlib.test_pathlib.PurePathTest.test_str_windows) ... skipped 'requires Windows-flavoured path class'
test_with_name_empty (test.test_pathlib.test_pathlib.PurePathTest.test_with_name_empty) ... ok
test_with_name_windows (test.test_pathlib.test_pathlib.PurePathTest.test_with_name_windows) ... skipped 'requires Windows-flavoured path class'
test_with_stem_empty (test.test_pathlib.test_pathlib.PurePathTest.test_with_stem_empty) ... ok
test_with_stem_windows (test.test_pathlib.test_pathlib.PurePathTest.test_with_stem_windows) ... skipped 'requires Windows-flavoured path class'
test_as_bytes_common (test.test_pathlib.test_pathlib.PurePosixPathTest.test_as_bytes_common) ... ok
test_as_posix_common (test.test_pathlib.test_pathlib.PurePosixPathTest.test_as_posix_common) ... ok
test_as_uri_common (test.test_pathlib.test_pathlib.PurePosixPathTest.test_as_uri_common) ... ok
test_as_uri_non_ascii (test.test_pathlib.test_pathlib.PurePosixPathTest.test_as_uri_non_ascii) ... ok
test_as_uri_posix (test.test_pathlib.test_pathlib.PurePosixPathTest.test_as_uri_posix) ... ok
test_as_uri_windows (test.test_pathlib.test_pathlib.PurePosixPathTest.test_as_uri_windows) ... skipped 'requires Windows-flavoured path class'
test_bytes (test.test_pathlib.test_pathlib.PurePosixPathTest.test_bytes) ... ok
test_bytes_exc_message (test.test_pathlib.test_pathlib.PurePosixPathTest.test_bytes_exc_message) ... ok
test_concrete_class (test.test_pathlib.test_pathlib.PurePosixPathTest.test_concrete_class) ... ok
test_concrete_parser (test.test_pathlib.test_pathlib.PurePosixPathTest.test_concrete_parser) ... ok
test_constructor_nested (test.test_pathlib.test_pathlib.PurePosixPathTest.test_constructor_nested) ... ok
test_constructor_nested_foreign_flavour (test.test_pathlib.test_pathlib.PurePosixPathTest.test_constructor_nested_foreign_flavour) ... skipped 'requires Windows-flavoured path class'
test_different_parsers_unequal (test.test_pathlib.test_pathlib.PurePosixPathTest.test_different_parsers_unequal) ... ok
test_different_parsers_unordered (test.test_pathlib.test_pathlib.PurePosixPathTest.test_different_parsers_unordered) ... ok
test_div_nested (test.test_pathlib.test_pathlib.PurePosixPathTest.test_div_nested) ... ok
test_drive_common (test.test_pathlib.test_pathlib.PurePosixPathTest.test_drive_common) ... ok
test_drive_windows (test.test_pathlib.test_pathlib.PurePosixPathTest.test_drive_windows) ... skipped 'requires Windows-flavoured path class'
test_empty_path (test.test_pathlib.test_pathlib.PurePosixPathTest.test_empty_path) ... ok
test_eq_common (test.test_pathlib.test_pathlib.PurePosixPathTest.test_eq_common) ... ok
test_eq_posix (test.test_pathlib.test_pathlib.PurePosixPathTest.test_eq_posix) ... ok
test_eq_windows (test.test_pathlib.test_pathlib.PurePosixPathTest.test_eq_windows) ... skipped 'requires Windows-flavoured path class'
test_equivalences (test.test_pathlib.test_pathlib.PurePosixPathTest.test_equivalences) ... ok
test_equivalences_windows (test.test_pathlib.test_pathlib.PurePosixPathTest.test_equivalences_windows) ... skipped 'requires Windows-flavoured path class'
test_fspath_common (test.test_pathlib.test_pathlib.PurePosixPathTest.test_fspath_common) ... ok
test_full_match_case_sensitive (test.test_pathlib.test_pathlib.PurePosixPathTest.test_full_match_case_sensitive) ... ok
test_is_absolute_posix (test.test_pathlib.test_pathlib.PurePosixPathTest.test_is_absolute_posix) ... ok
test_is_absolute_windows (test.test_pathlib.test_pathlib.PurePosixPathTest.test_is_absolute_windows) ... skipped 'requires Windows-flavoured path class'
test_is_relative_to_common (test.test_pathlib.test_pathlib.PurePosixPathTest.test_is_relative_to_common) ... ok
test_is_relative_to_windows (test.test_pathlib.test_pathlib.PurePosixPathTest.test_is_relative_to_windows) ... skipped 'requires Windows-flavoured path class'
test_is_reserved_deprecated (test.test_pathlib.test_pathlib.PurePosixPathTest.test_is_reserved_deprecated) ... ok
test_join_nested (test.test_pathlib.test_pathlib.PurePosixPathTest.test_join_nested) ... ok
test_match_common (test.test_pathlib.test_pathlib.PurePosixPathTest.test_match_common) ... ok
test_match_empty (test.test_pathlib.test_pathlib.PurePosixPathTest.test_match_empty) ... ok
test_match_posix (test.test_pathlib.test_pathlib.PurePosixPathTest.test_match_posix) ... ok
test_match_windows (test.test_pathlib.test_pathlib.PurePosixPathTest.test_match_windows) ... skipped 'requires Windows-flavoured path class'
test_name_empty (test.test_pathlib.test_pathlib.PurePosixPathTest.test_name_empty) ... ok
test_ordering_common (test.test_pathlib.test_pathlib.PurePosixPathTest.test_ordering_common) ... ok
test_ordering_windows (test.test_pathlib.test_pathlib.PurePosixPathTest.test_ordering_windows) ... skipped 'requires Windows-flavoured path class'
test_parse_path_common (test.test_pathlib.test_pathlib.PurePosixPathTest.test_parse_path_common) ... ok
test_parse_path_posix (test.test_pathlib.test_pathlib.PurePosixPathTest.test_parse_path_posix) ... ok
test_parse_path_windows (test.test_pathlib.test_pathlib.PurePosixPathTest.test_parse_path_windows) ... skipped 'requires Windows-flavoured path class'
test_parse_windows_path (test.test_pathlib.test_pathlib.PurePosixPathTest.test_parse_windows_path) ... ok
test_pickling_common (test.test_pathlib.test_pathlib.PurePosixPathTest.test_pickling_common) ... ok
test_relative_to_common (test.test_pathlib.test_pathlib.PurePosixPathTest.test_relative_to_common) ... ok
test_relative_to_windows (test.test_pathlib.test_pathlib.PurePosixPathTest.test_relative_to_windows) ... skipped 'requires Windows-flavoured path class'
test_repr_common (test.test_pathlib.test_pathlib.PurePosixPathTest.test_repr_common) ... ok
test_repr_roundtrips (test.test_pathlib.test_pathlib.PurePosixPathTest.test_repr_roundtrips) ... ok
test_root_common (test.test_pathlib.test_pathlib.PurePosixPathTest.test_root_common) ... ok
test_root_posix (test.test_pathlib.test_pathlib.PurePosixPathTest.test_root_posix) ... ok
test_root_windows (test.test_pathlib.test_pathlib.PurePosixPathTest.test_root_windows) ... skipped 'requires Windows-flavoured path class'
test_stem_empty (test.test_pathlib.test_pathlib.PurePosixPathTest.test_stem_empty) ... ok
test_str_common (test.test_pathlib.test_pathlib.PurePosixPathTest.test_str_common) ... ok
test_str_subclass_common (test.test_pathlib.test_pathlib.PurePosixPathTest.test_str_subclass_common) ... ok
test_str_subclass_windows (test.test_pathlib.test_pathlib.PurePosixPathTest.test_str_subclass_windows) ... skipped 'requires Windows-flavoured path class'
test_str_windows (test.test_pathlib.test_pathlib.PurePosixPathTest.test_str_windows) ... skipped 'requires Windows-flavoured path class'
test_with_name_empty (test.test_pathlib.test_pathlib.PurePosixPathTest.test_with_name_empty) ... ok
test_with_name_windows (test.test_pathlib.test_pathlib.PurePosixPathTest.test_with_name_windows) ... skipped 'requires Windows-flavoured path class'
test_with_stem_empty (test.test_pathlib.test_pathlib.PurePosixPathTest.test_with_stem_empty) ... ok
test_with_stem_windows (test.test_pathlib.test_pathlib.PurePosixPathTest.test_with_stem_windows) ... skipped 'requires Windows-flavoured path class'
test_as_bytes_common (test.test_pathlib.test_pathlib.PureWindowsPathTest.test_as_bytes_common) ... ok
test_as_posix_common (test.test_pathlib.test_pathlib.PureWindowsPathTest.test_as_posix_common) ... ok
test_as_uri_common (test.test_pathlib.test_pathlib.PureWindowsPathTest.test_as_uri_common) ... ok
test_as_uri_non_ascii (test.test_pathlib.test_pathlib.PureWindowsPathTest.test_as_uri_non_ascii) ... skipped 'requires POSIX-flavoured path class'
test_as_uri_posix (test.test_pathlib.test_pathlib.PureWindowsPathTest.test_as_uri_posix) ... skipped 'requires POSIX-flavoured path class'
test_as_uri_windows (test.test_pathlib.test_pathlib.PureWindowsPathTest.test_as_uri_windows) ... ok
test_bytes (test.test_pathlib.test_pathlib.PureWindowsPathTest.test_bytes) ... ok
test_bytes_exc_message (test.test_pathlib.test_pathlib.PureWindowsPathTest.test_bytes_exc_message) ... ok
test_concrete_class (test.test_pathlib.test_pathlib.PureWindowsPathTest.test_concrete_class) ... ok
test_concrete_parser (test.test_pathlib.test_pathlib.PureWindowsPathTest.test_concrete_parser) ... ok
test_constructor_nested (test.test_pathlib.test_pathlib.PureWindowsPathTest.test_constructor_nested) ... ok
test_constructor_nested_foreign_flavour (test.test_pathlib.test_pathlib.PureWindowsPathTest.test_constructor_nested_foreign_flavour) ... ok
test_different_parsers_unequal (test.test_pathlib.test_pathlib.PureWindowsPathTest.test_different_parsers_unequal) ... ok
test_different_parsers_unordered (test.test_pathlib.test_pathlib.PureWindowsPathTest.test_different_parsers_unordered) ... ok
test_div_nested (test.test_pathlib.test_pathlib.PureWindowsPathTest.test_div_nested) ... ok
test_drive_common (test.test_pathlib.test_pathlib.PureWindowsPathTest.test_drive_common) ... ok
test_drive_windows (test.test_pathlib.test_pathlib.PureWindowsPathTest.test_drive_windows) ... ok
test_empty_path (test.test_pathlib.test_pathlib.PureWindowsPathTest.test_empty_path) ... ok
test_eq_common (test.test_pathlib.test_pathlib.PureWindowsPathTest.test_eq_common) ... ok
test_eq_posix (test.test_pathlib.test_pathlib.PureWindowsPathTest.test_eq_posix) ... skipped 'requires POSIX-flavoured path class'
test_eq_windows (test.test_pathlib.test_pathlib.PureWindowsPathTest.test_eq_windows) ... ok
test_equivalences (test.test_pathlib.test_pathlib.PureWindowsPathTest.test_equivalences) ... ok
test_equivalences_windows (test.test_pathlib.test_pathlib.PureWindowsPathTest.test_equivalences_windows) ... ok
test_fspath_common (test.test_pathlib.test_pathlib.PureWindowsPathTest.test_fspath_common) ... ok
test_full_match_case_sensitive (test.test_pathlib.test_pathlib.PureWindowsPathTest.test_full_match_case_sensitive) ... ok
test_is_absolute_posix (test.test_pathlib.test_pathlib.PureWindowsPathTest.test_is_absolute_posix) ... skipped 'requires POSIX-flavoured path class'
test_is_absolute_windows (test.test_pathlib.test_pathlib.PureWindowsPathTest.test_is_absolute_windows) ... ok
test_is_relative_to_common (test.test_pathlib.test_pathlib.PureWindowsPathTest.test_is_relative_to_common) ... ok
test_is_relative_to_windows (test.test_pathlib.test_pathlib.PureWindowsPathTest.test_is_relative_to_windows) ... ok
test_is_reserved_deprecated (test.test_pathlib.test_pathlib.PureWindowsPathTest.test_is_reserved_deprecated) ... ok
test_join_nested (test.test_pathlib.test_pathlib.PureWindowsPathTest.test_join_nested) ... ok
test_match_common (test.test_pathlib.test_pathlib.PureWindowsPathTest.test_match_common) ... ok
test_match_empty (test.test_pathlib.test_pathlib.PureWindowsPathTest.test_match_empty) ... ok
test_match_posix (test.test_pathlib.test_pathlib.PureWindowsPathTest.test_match_posix) ... skipped 'requires POSIX-flavoured path class'
test_match_windows (test.test_pathlib.test_pathlib.PureWindowsPathTest.test_match_windows) ... ok
test_name_empty (test.test_pathlib.test_pathlib.PureWindowsPathTest.test_name_empty) ... ok
test_ordering_common (test.test_pathlib.test_pathlib.PureWindowsPathTest.test_ordering_common) ... ok
test_ordering_windows (test.test_pathlib.test_pathlib.PureWindowsPathTest.test_ordering_windows) ... ok
test_parse_path_common (test.test_pathlib.test_pathlib.PureWindowsPathTest.test_parse_path_common) ... ok
test_parse_path_posix (test.test_pathlib.test_pathlib.PureWindowsPathTest.test_parse_path_posix) ... skipped 'requires POSIX-flavoured path class'
test_parse_path_windows (test.test_pathlib.test_pathlib.PureWindowsPathTest.test_parse_path_windows) ... ok
test_parse_windows_path (test.test_pathlib.test_pathlib.PureWindowsPathTest.test_parse_windows_path) ... skipped 'requires POSIX-flavoured path class'
test_pickling_common (test.test_pathlib.test_pathlib.PureWindowsPathTest.test_pickling_common) ... ok
test_relative_to_common (test.test_pathlib.test_pathlib.PureWindowsPathTest.test_relative_to_common) ... ok
test_relative_to_windows (test.test_pathlib.test_pathlib.PureWindowsPathTest.test_relative_to_windows) ... ok
test_repr_common (test.test_pathlib.test_pathlib.PureWindowsPathTest.test_repr_common) ... ok
test_repr_roundtrips (test.test_pathlib.test_pathlib.PureWindowsPathTest.test_repr_roundtrips) ... ok
test_root_common (test.test_pathlib.test_pathlib.PureWindowsPathTest.test_root_common) ... ok
test_root_posix (test.test_pathlib.test_pathlib.PureWindowsPathTest.test_root_posix) ... skipped 'requires POSIX-flavoured path class'
test_root_windows (test.test_pathlib.test_pathlib.PureWindowsPathTest.test_root_windows) ... ok
test_stem_empty (test.test_pathlib.test_pathlib.PureWindowsPathTest.test_stem_empty) ... ok
test_str_common (test.test_pathlib.test_pathlib.PureWindowsPathTest.test_str_common) ... ok
test_str_subclass_common (test.test_pathlib.test_pathlib.PureWindowsPathTest.test_str_subclass_common) ... ok
test_str_subclass_windows (test.test_pathlib.test_pathlib.PureWindowsPathTest.test_str_subclass_windows) ... ok
test_str_windows (test.test_pathlib.test_pathlib.PureWindowsPathTest.test_str_windows) ... ok
test_with_name_empty (test.test_pathlib.test_pathlib.PureWindowsPathTest.test_with_name_empty) ... ok
test_with_name_windows (test.test_pathlib.test_pathlib.PureWindowsPathTest.test_with_name_windows) ... ok
test_with_stem_empty (test.test_pathlib.test_pathlib.PureWindowsPathTest.test_with_stem_empty) ... ok
test_with_stem_windows (test.test_pathlib.test_pathlib.PureWindowsPathTest.test_with_stem_windows) ... ok
test_is_notimplemented (test.test_pathlib.test_pathlib.UnsupportedOperationTest.test_is_notimplemented) ... ok
test_absolute_common (test.test_pathlib.test_pathlib.WindowsPathTest.test_absolute_common) ... skipped 'test requires a Windows-compatible system'
test_absolute_posix (test.test_pathlib.test_pathlib.WindowsPathTest.test_absolute_posix) ... skipped 'test requires a Windows-compatible system'
test_absolute_windows (test.test_pathlib.test_pathlib.WindowsPathTest.test_absolute_windows) ... skipped 'test requires a Windows-compatible system'
test_as_bytes_common (test.test_pathlib.test_pathlib.WindowsPathTest.test_as_bytes_common) ... skipped 'test requires a Windows-compatible system'
test_as_posix_common (test.test_pathlib.test_pathlib.WindowsPathTest.test_as_posix_common) ... skipped 'test requires a Windows-compatible system'
test_as_uri_common (test.test_pathlib.test_pathlib.WindowsPathTest.test_as_uri_common) ... skipped 'test requires a Windows-compatible system'
test_as_uri_non_ascii (test.test_pathlib.test_pathlib.WindowsPathTest.test_as_uri_non_ascii) ... skipped 'test requires a Windows-compatible system'
test_as_uri_posix (test.test_pathlib.test_pathlib.WindowsPathTest.test_as_uri_posix) ... skipped 'test requires a Windows-compatible system'
test_as_uri_windows (test.test_pathlib.test_pathlib.WindowsPathTest.test_as_uri_windows) ... skipped 'test requires a Windows-compatible system'
test_bytes (test.test_pathlib.test_pathlib.WindowsPathTest.test_bytes) ... skipped 'test requires a Windows-compatible system'
test_bytes_exc_message (test.test_pathlib.test_pathlib.WindowsPathTest.test_bytes_exc_message) ... skipped 'test requires a Windows-compatible system'
test_chmod (test.test_pathlib.test_pathlib.WindowsPathTest.test_chmod) ... skipped 'test requires a Windows-compatible system'
test_chmod_follow_symlinks_true (test.test_pathlib.test_pathlib.WindowsPathTest.test_chmod_follow_symlinks_true) ... skipped 'test requires a Windows-compatible system'
test_complex_symlinks_absolute (test.test_pathlib.test_pathlib.WindowsPathTest.test_complex_symlinks_absolute) ... skipped 'test requires a Windows-compatible system'
test_complex_symlinks_relative (test.test_pathlib.test_pathlib.WindowsPathTest.test_complex_symlinks_relative) ... skipped 'test requires a Windows-compatible system'
test_complex_symlinks_relative_dot_dot (test.test_pathlib.test_pathlib.WindowsPathTest.test_complex_symlinks_relative_dot_dot) ... skipped 'test requires a Windows-compatible system'
test_concrete_class (test.test_pathlib.test_pathlib.WindowsPathTest.test_concrete_class) ... skipped 'test requires a Windows-compatible system'
test_concrete_parser (test.test_pathlib.test_pathlib.WindowsPathTest.test_concrete_parser) ... skipped 'test requires a Windows-compatible system'
test_constructor_nested (test.test_pathlib.test_pathlib.WindowsPathTest.test_constructor_nested) ... skipped 'test requires a Windows-compatible system'
test_constructor_nested_foreign_flavour (test.test_pathlib.test_pathlib.WindowsPathTest.test_constructor_nested_foreign_flavour) ... skipped 'test requires a Windows-compatible system'
test_copy_dangling_symlink (test.test_pathlib.test_pathlib.WindowsPathTest.test_copy_dangling_symlink) ... skipped 'test requires a Windows-compatible system'
test_copy_dir_no_read_permission (test.test_pathlib.test_pathlib.WindowsPathTest.test_copy_dir_no_read_permission) ... skipped 'test requires a Windows-compatible system'
test_copy_dir_preserve_metadata (test.test_pathlib.test_pathlib.WindowsPathTest.test_copy_dir_preserve_metadata) ... skipped 'test requires a Windows-compatible system'
test_copy_dir_preserve_metadata_xattrs (test.test_pathlib.test_pathlib.WindowsPathTest.test_copy_dir_preserve_metadata_xattrs) ... skipped 'test requires a Windows-compatible system'
test_copy_directory_symlink_follow_symlinks_false (test.test_pathlib.test_pathlib.WindowsPathTest.test_copy_directory_symlink_follow_symlinks_false) ... skipped 'test requires a Windows-compatible system'
test_copy_directory_symlink_into_itself (test.test_pathlib.test_pathlib.WindowsPathTest.test_copy_directory_symlink_into_itself) ... skipped 'test requires a Windows-compatible system'
test_copy_directory_symlink_to_existing_directory_symlink (test.test_pathlib.test_pathlib.WindowsPathTest.test_copy_directory_symlink_to_existing_directory_symlink) ... skipped 'test requires a Windows-compatible system'
test_copy_directory_symlink_to_existing_symlink (test.test_pathlib.test_pathlib.WindowsPathTest.test_copy_directory_symlink_to_existing_symlink) ... skipped 'test requires a Windows-compatible system'
test_copy_directory_symlink_to_itself (test.test_pathlib.test_pathlib.WindowsPathTest.test_copy_directory_symlink_to_itself) ... skipped 'test requires a Windows-compatible system'
test_copy_error_handling (test.test_pathlib.test_pathlib.WindowsPathTest.test_copy_error_handling) ... skipped 'test requires a Windows-compatible system'
test_copy_file_preserve_metadata (test.test_pathlib.test_pathlib.WindowsPathTest.test_copy_file_preserve_metadata) ... skipped 'test requires a Windows-compatible system'
test_copy_file_preserve_metadata_xattrs (test.test_pathlib.test_pathlib.WindowsPathTest.test_copy_file_preserve_metadata_xattrs) ... skipped 'test requires a Windows-compatible system'
test_copy_file_to_existing_symlink (test.test_pathlib.test_pathlib.WindowsPathTest.test_copy_file_to_existing_symlink) ... skipped 'test requires a Windows-compatible system'
test_copy_file_to_existing_symlink_follow_symlinks_false (test.test_pathlib.test_pathlib.WindowsPathTest.test_copy_file_to_existing_symlink_follow_symlinks_false) ... skipped 'test requires a Windows-compatible system'
test_copy_link_preserve_metadata (test.test_pathlib.test_pathlib.WindowsPathTest.test_copy_link_preserve_metadata) ... skipped 'test requires a Windows-compatible system'
test_copy_symlink_follow_symlinks_false (test.test_pathlib.test_pathlib.WindowsPathTest.test_copy_symlink_follow_symlinks_false) ... skipped 'test requires a Windows-compatible system'
test_copy_symlink_follow_symlinks_true (test.test_pathlib.test_pathlib.WindowsPathTest.test_copy_symlink_follow_symlinks_true) ... skipped 'test requires a Windows-compatible system'
test_copy_symlink_to_existing_directory_symlink (test.test_pathlib.test_pathlib.WindowsPathTest.test_copy_symlink_to_existing_directory_symlink) ... skipped 'test requires a Windows-compatible system'
test_copy_symlink_to_existing_symlink (test.test_pathlib.test_pathlib.WindowsPathTest.test_copy_symlink_to_existing_symlink) ... skipped 'test requires a Windows-compatible system'
test_copy_symlink_to_itself (test.test_pathlib.test_pathlib.WindowsPathTest.test_copy_symlink_to_itself) ... skipped 'test requires a Windows-compatible system'
test_cwd (test.test_pathlib.test_pathlib.WindowsPathTest.test_cwd) ... skipped 'test requires a Windows-compatible system'
test_delete_dir (test.test_pathlib.test_pathlib.WindowsPathTest.test_delete_dir) ... skipped 'test requires a Windows-compatible system'
test_delete_does_not_choke_on_failing_lstat (test.test_pathlib.test_pathlib.WindowsPathTest.test_delete_does_not_choke_on_failing_lstat) ... skipped 'test requires a Windows-compatible system'
test_delete_file (test.test_pathlib.test_pathlib.WindowsPathTest.test_delete_file) ... skipped 'test requires a Windows-compatible system'
test_delete_inner_junction (test.test_pathlib.test_pathlib.WindowsPathTest.test_delete_inner_junction) ... skipped 'test requires a Windows-compatible system'
test_delete_inner_symlink (test.test_pathlib.test_pathlib.WindowsPathTest.test_delete_inner_symlink) ... skipped 'test requires a Windows-compatible system'
test_delete_missing (test.test_pathlib.test_pathlib.WindowsPathTest.test_delete_missing) ... skipped 'test requires a Windows-compatible system'
test_delete_on_named_pipe (test.test_pathlib.test_pathlib.WindowsPathTest.test_delete_on_named_pipe) ... skipped 'test requires a Windows-compatible system'
test_delete_outer_junction (test.test_pathlib.test_pathlib.WindowsPathTest.test_delete_outer_junction) ... skipped 'test requires a Windows-compatible system'
test_delete_symlink (test.test_pathlib.test_pathlib.WindowsPathTest.test_delete_symlink) ... skipped 'test requires a Windows-compatible system'
test_delete_unwritable (test.test_pathlib.test_pathlib.WindowsPathTest.test_delete_unwritable) ... skipped 'test requires a Windows-compatible system'
test_different_parsers_unequal (test.test_pathlib.test_pathlib.WindowsPathTest.test_different_parsers_unequal) ... skipped 'test requires a Windows-compatible system'
test_different_parsers_unordered (test.test_pathlib.test_pathlib.WindowsPathTest.test_different_parsers_unordered) ... skipped 'test requires a Windows-compatible system'
test_div_nested (test.test_pathlib.test_pathlib.WindowsPathTest.test_div_nested) ... skipped 'test requires a Windows-compatible system'
test_drive_common (test.test_pathlib.test_pathlib.WindowsPathTest.test_drive_common) ... skipped 'test requires a Windows-compatible system'
test_drive_windows (test.test_pathlib.test_pathlib.WindowsPathTest.test_drive_windows) ... skipped 'test requires a Windows-compatible system'
test_empty_path (test.test_pathlib.test_pathlib.WindowsPathTest.test_empty_path) ... skipped 'test requires a Windows-compatible system'
test_eq_common (test.test_pathlib.test_pathlib.WindowsPathTest.test_eq_common) ... skipped 'test requires a Windows-compatible system'
test_eq_posix (test.test_pathlib.test_pathlib.WindowsPathTest.test_eq_posix) ... skipped 'test requires a Windows-compatible system'
test_eq_windows (test.test_pathlib.test_pathlib.WindowsPathTest.test_eq_windows) ... skipped 'test requires a Windows-compatible system'
test_equivalences (test.test_pathlib.test_pathlib.WindowsPathTest.test_equivalences) ... skipped 'test requires a Windows-compatible system'
test_equivalences_windows (test.test_pathlib.test_pathlib.WindowsPathTest.test_equivalences_windows) ... skipped 'test requires a Windows-compatible system'
test_exists (test.test_pathlib.test_pathlib.WindowsPathTest.test_exists) ... skipped 'test requires a Windows-compatible system'
test_expanduser_common (test.test_pathlib.test_pathlib.WindowsPathTest.test_expanduser_common) ... skipped 'test requires a Windows-compatible system'
test_expanduser_posix (test.test_pathlib.test_pathlib.WindowsPathTest.test_expanduser_posix) ... skipped 'test requires a Windows-compatible system'
test_expanduser_windows (test.test_pathlib.test_pathlib.WindowsPathTest.test_expanduser_windows) ... skipped 'test requires a Windows-compatible system'
test_from_uri_pathname2url_posix (test.test_pathlib.test_pathlib.WindowsPathTest.test_from_uri_pathname2url_posix) ... skipped 'test requires a Windows-compatible system'
test_from_uri_pathname2url_windows (test.test_pathlib.test_pathlib.WindowsPathTest.test_from_uri_pathname2url_windows) ... skipped 'test requires a Windows-compatible system'
test_from_uri_posix (test.test_pathlib.test_pathlib.WindowsPathTest.test_from_uri_posix) ... skipped 'test requires a Windows-compatible system'
test_from_uri_windows (test.test_pathlib.test_pathlib.WindowsPathTest.test_from_uri_windows) ... skipped 'test requires a Windows-compatible system'
test_fspath_common (test.test_pathlib.test_pathlib.WindowsPathTest.test_fspath_common) ... skipped 'test requires a Windows-compatible system'
test_full_match_case_sensitive (test.test_pathlib.test_pathlib.WindowsPathTest.test_full_match_case_sensitive) ... skipped 'test requires a Windows-compatible system'
test_glob_above_recursion_limit (test.test_pathlib.test_pathlib.WindowsPathTest.test_glob_above_recursion_limit) ... skipped 'test requires a Windows-compatible system'
test_glob_case_sensitive (test.test_pathlib.test_pathlib.WindowsPathTest.test_glob_case_sensitive) ... skipped 'test requires a Windows-compatible system'
test_glob_dot (test.test_pathlib.test_pathlib.WindowsPathTest.test_glob_dot) ... skipped 'test requires a Windows-compatible system'
test_glob_dotdot (test.test_pathlib.test_pathlib.WindowsPathTest.test_glob_dotdot) ... skipped 'test requires a Windows-compatible system'
test_glob_empty_pattern (test.test_pathlib.test_pathlib.WindowsPathTest.test_glob_empty_pattern) ... skipped 'test requires a Windows-compatible system'
test_glob_inaccessible (test.test_pathlib.test_pathlib.WindowsPathTest.test_glob_inaccessible) ... skipped 'test requires a Windows-compatible system'
test_glob_long_symlink (test.test_pathlib.test_pathlib.WindowsPathTest.test_glob_long_symlink) ... skipped 'test requires a Windows-compatible system'
test_glob_many_open_files (test.test_pathlib.test_pathlib.WindowsPathTest.test_glob_many_open_files) ... skipped 'test requires a Windows-compatible system'
test_glob_pathlike (test.test_pathlib.test_pathlib.WindowsPathTest.test_glob_pathlike) ... skipped 'test requires a Windows-compatible system'
test_glob_permissions (test.test_pathlib.test_pathlib.WindowsPathTest.test_glob_permissions) ... skipped 'test requires a Windows-compatible system'
test_glob_posix (test.test_pathlib.test_pathlib.WindowsPathTest.test_glob_posix) ... skipped 'test requires a Windows-compatible system'
test_glob_recurse_symlinks_common (test.test_pathlib.test_pathlib.WindowsPathTest.test_glob_recurse_symlinks_common) ... skipped 'test requires a Windows-compatible system'
test_glob_windows (test.test_pathlib.test_pathlib.WindowsPathTest.test_glob_windows) ... skipped 'test requires a Windows-compatible system'
test_group (test.test_pathlib.test_pathlib.WindowsPathTest.test_group) ... skipped 'test requires a Windows-compatible system'
test_group_no_follow_symlinks (test.test_pathlib.test_pathlib.WindowsPathTest.test_group_no_follow_symlinks) ... skipped 'test requires a Windows-compatible system'
test_group_windows (test.test_pathlib.test_pathlib.WindowsPathTest.test_group_windows) ... skipped 'test requires a Windows-compatible system'
test_handling_bad_descriptor (test.test_pathlib.test_pathlib.WindowsPathTest.test_handling_bad_descriptor) ... skipped 'test requires a Windows-compatible system'
test_hardlink_to (test.test_pathlib.test_pathlib.WindowsPathTest.test_hardlink_to) ... skipped 'test requires a Windows-compatible system'
test_hardlink_to_unsupported (test.test_pathlib.test_pathlib.WindowsPathTest.test_hardlink_to_unsupported) ... skipped 'test requires a Windows-compatible system'
test_home (test.test_pathlib.test_pathlib.WindowsPathTest.test_home) ... skipped 'test requires a Windows-compatible system'
test_info_exists_caching (test.test_pathlib.test_pathlib.WindowsPathTest.test_info_exists_caching) ... skipped 'test requires a Windows-compatible system'
test_info_is_dir_caching (test.test_pathlib.test_pathlib.WindowsPathTest.test_info_is_dir_caching) ... skipped 'test requires a Windows-compatible system'
test_info_is_file_caching (test.test_pathlib.test_pathlib.WindowsPathTest.test_info_is_file_caching) ... skipped 'test requires a Windows-compatible system'
test_info_is_symlink_caching (test.test_pathlib.test_pathlib.WindowsPathTest.test_info_is_symlink_caching) ... skipped 'test requires a Windows-compatible system'
test_is_absolute_posix (test.test_pathlib.test_pathlib.WindowsPathTest.test_is_absolute_posix) ... skipped 'test requires a Windows-compatible system'
test_is_absolute_windows (test.test_pathlib.test_pathlib.WindowsPathTest.test_is_absolute_windows) ... skipped 'test requires a Windows-compatible system'
test_is_block_device_false (test.test_pathlib.test_pathlib.WindowsPathTest.test_is_block_device_false) ... skipped 'test requires a Windows-compatible system'
test_is_char_device_false (test.test_pathlib.test_pathlib.WindowsPathTest.test_is_char_device_false) ... skipped 'test requires a Windows-compatible system'
test_is_char_device_true (test.test_pathlib.test_pathlib.WindowsPathTest.test_is_char_device_true) ... skipped 'test requires a Windows-compatible system'
test_is_dir (test.test_pathlib.test_pathlib.WindowsPathTest.test_is_dir) ... skipped 'test requires a Windows-compatible system'
test_is_dir_no_follow_symlinks (test.test_pathlib.test_pathlib.WindowsPathTest.test_is_dir_no_follow_symlinks) ... skipped 'test requires a Windows-compatible system'
test_is_fifo_false (test.test_pathlib.test_pathlib.WindowsPathTest.test_is_fifo_false) ... skipped 'test requires a Windows-compatible system'
test_is_fifo_true (test.test_pathlib.test_pathlib.WindowsPathTest.test_is_fifo_true) ... skipped 'test requires a Windows-compatible system'
test_is_file (test.test_pathlib.test_pathlib.WindowsPathTest.test_is_file) ... skipped 'test requires a Windows-compatible system'
test_is_file_no_follow_symlinks (test.test_pathlib.test_pathlib.WindowsPathTest.test_is_file_no_follow_symlinks) ... skipped 'test requires a Windows-compatible system'
test_is_junction_false (test.test_pathlib.test_pathlib.WindowsPathTest.test_is_junction_false) ... skipped 'test requires a Windows-compatible system'
test_is_junction_true (test.test_pathlib.test_pathlib.WindowsPathTest.test_is_junction_true) ... skipped 'test requires a Windows-compatible system'
test_is_mount (test.test_pathlib.test_pathlib.WindowsPathTest.test_is_mount) ... skipped 'test requires a Windows-compatible system'
test_is_relative_to_common (test.test_pathlib.test_pathlib.WindowsPathTest.test_is_relative_to_common) ... skipped 'test requires a Windows-compatible system'
test_is_relative_to_windows (test.test_pathlib.test_pathlib.WindowsPathTest.test_is_relative_to_windows) ... skipped 'test requires a Windows-compatible system'
test_is_reserved_deprecated (test.test_pathlib.test_pathlib.WindowsPathTest.test_is_reserved_deprecated) ... skipped 'test requires a Windows-compatible system'
test_is_socket_false (test.test_pathlib.test_pathlib.WindowsPathTest.test_is_socket_false) ... skipped 'test requires a Windows-compatible system'
test_is_socket_true (test.test_pathlib.test_pathlib.WindowsPathTest.test_is_socket_true) ... skipped 'test requires a Windows-compatible system'
test_is_symlink (test.test_pathlib.test_pathlib.WindowsPathTest.test_is_symlink) ... skipped 'test requires a Windows-compatible system'
test_iterdir_symlink (test.test_pathlib.test_pathlib.WindowsPathTest.test_iterdir_symlink) ... skipped 'test requires a Windows-compatible system'
test_join_nested (test.test_pathlib.test_pathlib.WindowsPathTest.test_join_nested) ... skipped 'test requires a Windows-compatible system'
test_lstat (test.test_pathlib.test_pathlib.WindowsPathTest.test_lstat) ... skipped 'test requires a Windows-compatible system'
test_lstat_nosymlink (test.test_pathlib.test_pathlib.WindowsPathTest.test_lstat_nosymlink) ... skipped 'test requires a Windows-compatible system'
test_match_common (test.test_pathlib.test_pathlib.WindowsPathTest.test_match_common) ... skipped 'test requires a Windows-compatible system'
test_match_empty (test.test_pathlib.test_pathlib.WindowsPathTest.test_match_empty) ... skipped 'test requires a Windows-compatible system'
test_match_posix (test.test_pathlib.test_pathlib.WindowsPathTest.test_match_posix) ... skipped 'test requires a Windows-compatible system'
test_match_windows (test.test_pathlib.test_pathlib.WindowsPathTest.test_match_windows) ... skipped 'test requires a Windows-compatible system'
test_matches_writablepath_docstrings (test.test_pathlib.test_pathlib.WindowsPathTest.test_matches_writablepath_docstrings) ... skipped 'test requires a Windows-compatible system'
test_mkdir (test.test_pathlib.test_pathlib.WindowsPathTest.test_mkdir) ... skipped 'test requires a Windows-compatible system'
test_mkdir_concurrent_parent_creation (test.test_pathlib.test_pathlib.WindowsPathTest.test_mkdir_concurrent_parent_creation) ... skipped 'test requires a Windows-compatible system'
test_mkdir_exist_ok (test.test_pathlib.test_pathlib.WindowsPathTest.test_mkdir_exist_ok) ... skipped 'test requires a Windows-compatible system'
test_mkdir_exist_ok_root (test.test_pathlib.test_pathlib.WindowsPathTest.test_mkdir_exist_ok_root) ... skipped 'test requires a Windows-compatible system'
test_mkdir_exist_ok_with_parent (test.test_pathlib.test_pathlib.WindowsPathTest.test_mkdir_exist_ok_with_parent) ... skipped 'test requires a Windows-compatible system'
test_mkdir_no_parents_file (test.test_pathlib.test_pathlib.WindowsPathTest.test_mkdir_no_parents_file) ... skipped 'test requires a Windows-compatible system'
test_mkdir_parents (test.test_pathlib.test_pathlib.WindowsPathTest.test_mkdir_parents) ... skipped 'test requires a Windows-compatible system'
test_mkdir_with_child_file (test.test_pathlib.test_pathlib.WindowsPathTest.test_mkdir_with_child_file) ... skipped 'test requires a Windows-compatible system'
test_mkdir_with_unknown_drive (test.test_pathlib.test_pathlib.WindowsPathTest.test_mkdir_with_unknown_drive) ... skipped 'test requires a Windows-compatible system'
test_move_dangling_symlink (test.test_pathlib.test_pathlib.WindowsPathTest.test_move_dangling_symlink) ... skipped 'test requires a Windows-compatible system'
test_move_dangling_symlink_other_fs (test.test_pathlib.test_pathlib.WindowsPathTest.test_move_dangling_symlink_other_fs) ... skipped 'test requires a Windows-compatible system'
test_move_dir (test.test_pathlib.test_pathlib.WindowsPathTest.test_move_dir) ... skipped 'test requires a Windows-compatible system'
test_move_dir_into_itself (test.test_pathlib.test_pathlib.WindowsPathTest.test_move_dir_into_itself) ... skipped 'test requires a Windows-compatible system'
test_move_dir_into_itself_other_fs (test.test_pathlib.test_pathlib.WindowsPathTest.test_move_dir_into_itself_other_fs) ... skipped 'test requires a Windows-compatible system'
test_move_dir_other_fs (test.test_pathlib.test_pathlib.WindowsPathTest.test_move_dir_other_fs) ... skipped 'test requires a Windows-compatible system'
test_move_dir_symlink (test.test_pathlib.test_pathlib.WindowsPathTest.test_move_dir_symlink) ... skipped 'test requires a Windows-compatible system'
test_move_dir_symlink_other_fs (test.test_pathlib.test_pathlib.WindowsPathTest.test_move_dir_symlink_other_fs) ... skipped 'test requires a Windows-compatible system'
test_move_dir_symlink_to_itself (test.test_pathlib.test_pathlib.WindowsPathTest.test_move_dir_symlink_to_itself) ... skipped 'test requires a Windows-compatible system'
test_move_dir_symlink_to_itself_other_fs (test.test_pathlib.test_pathlib.WindowsPathTest.test_move_dir_symlink_to_itself_other_fs) ... skipped 'test requires a Windows-compatible system'
test_move_dir_to_dir (test.test_pathlib.test_pathlib.WindowsPathTest.test_move_dir_to_dir) ... skipped 'test requires a Windows-compatible system'
test_move_dir_to_dir_other_fs (test.test_pathlib.test_pathlib.WindowsPathTest.test_move_dir_to_dir_other_fs) ... skipped 'test requires a Windows-compatible system'
test_move_dir_to_itself (test.test_pathlib.test_pathlib.WindowsPathTest.test_move_dir_to_itself) ... skipped 'test requires a Windows-compatible system'
test_move_file (test.test_pathlib.test_pathlib.WindowsPathTest.test_move_file) ... skipped 'test requires a Windows-compatible system'
test_move_file_other_fs (test.test_pathlib.test_pathlib.WindowsPathTest.test_move_file_other_fs) ... skipped 'test requires a Windows-compatible system'
test_move_file_symlink (test.test_pathlib.test_pathlib.WindowsPathTest.test_move_file_symlink) ... skipped 'test requires a Windows-compatible system'
test_move_file_symlink_other_fs (test.test_pathlib.test_pathlib.WindowsPathTest.test_move_file_symlink_other_fs) ... skipped 'test requires a Windows-compatible system'
test_move_file_symlink_to_itself (test.test_pathlib.test_pathlib.WindowsPathTest.test_move_file_symlink_to_itself) ... skipped 'test requires a Windows-compatible system'
test_move_file_symlink_to_itself_other_fs (test.test_pathlib.test_pathlib.WindowsPathTest.test_move_file_symlink_to_itself_other_fs) ... skipped 'test requires a Windows-compatible system'
test_move_file_to_dir (test.test_pathlib.test_pathlib.WindowsPathTest.test_move_file_to_dir) ... skipped 'test requires a Windows-compatible system'
test_move_file_to_dir_other_fs (test.test_pathlib.test_pathlib.WindowsPathTest.test_move_file_to_dir_other_fs) ... skipped 'test requires a Windows-compatible system'
test_move_file_to_file (test.test_pathlib.test_pathlib.WindowsPathTest.test_move_file_to_file) ... skipped 'test requires a Windows-compatible system'
test_move_file_to_file_other_fs (test.test_pathlib.test_pathlib.WindowsPathTest.test_move_file_to_file_other_fs) ... skipped 'test requires a Windows-compatible system'
test_move_file_to_itself (test.test_pathlib.test_pathlib.WindowsPathTest.test_move_file_to_itself) ... skipped 'test requires a Windows-compatible system'
test_move_into (test.test_pathlib.test_pathlib.WindowsPathTest.test_move_into) ... skipped 'test requires a Windows-compatible system'
test_move_into_empty_name (test.test_pathlib.test_pathlib.WindowsPathTest.test_move_into_empty_name) ... skipped 'test requires a Windows-compatible system'
test_move_into_empty_name_other_os (test.test_pathlib.test_pathlib.WindowsPathTest.test_move_into_empty_name_other_os) ... skipped 'test requires a Windows-compatible system'
test_move_into_other_os (test.test_pathlib.test_pathlib.WindowsPathTest.test_move_into_other_os) ... skipped 'test requires a Windows-compatible system'
test_name_empty (test.test_pathlib.test_pathlib.WindowsPathTest.test_name_empty) ... skipped 'test requires a Windows-compatible system'
test_open_common (test.test_pathlib.test_pathlib.WindowsPathTest.test_open_common) ... skipped 'test requires a Windows-compatible system'
test_open_mode (test.test_pathlib.test_pathlib.WindowsPathTest.test_open_mode) ... skipped 'test requires a Windows-compatible system'
test_open_unbuffered (test.test_pathlib.test_pathlib.WindowsPathTest.test_open_unbuffered) ... skipped 'test requires a Windows-compatible system'
test_ordering_common (test.test_pathlib.test_pathlib.WindowsPathTest.test_ordering_common) ... skipped 'test requires a Windows-compatible system'
test_ordering_windows (test.test_pathlib.test_pathlib.WindowsPathTest.test_ordering_windows) ... skipped 'test requires a Windows-compatible system'
test_owner (test.test_pathlib.test_pathlib.WindowsPathTest.test_owner) ... skipped 'test requires a Windows-compatible system'
test_owner_no_follow_symlinks (test.test_pathlib.test_pathlib.WindowsPathTest.test_owner_no_follow_symlinks) ... skipped 'test requires a Windows-compatible system'
test_owner_windows (test.test_pathlib.test_pathlib.WindowsPathTest.test_owner_windows) ... skipped 'test requires a Windows-compatible system'
test_parse_path_common (test.test_pathlib.test_pathlib.WindowsPathTest.test_parse_path_common) ... skipped 'test requires a Windows-compatible system'
test_parse_path_posix (test.test_pathlib.test_pathlib.WindowsPathTest.test_parse_path_posix) ... skipped 'test requires a Windows-compatible system'
test_parse_path_windows (test.test_pathlib.test_pathlib.WindowsPathTest.test_parse_path_windows) ... skipped 'test requires a Windows-compatible system'
test_parse_windows_path (test.test_pathlib.test_pathlib.WindowsPathTest.test_parse_windows_path) ... skipped 'test requires a Windows-compatible system'
test_passing_kwargs_errors (test.test_pathlib.test_pathlib.WindowsPathTest.test_passing_kwargs_errors) ... skipped 'test requires a Windows-compatible system'
test_pickling_common (test.test_pathlib.test_pathlib.WindowsPathTest.test_pickling_common) ... skipped 'test requires a Windows-compatible system'
test_readlink (test.test_pathlib.test_pathlib.WindowsPathTest.test_readlink) ... skipped 'test requires a Windows-compatible system'
test_readlink_unsupported (test.test_pathlib.test_pathlib.WindowsPathTest.test_readlink_unsupported) ... skipped 'test requires a Windows-compatible system'
test_relative_to_common (test.test_pathlib.test_pathlib.WindowsPathTest.test_relative_to_common) ... skipped 'test requires a Windows-compatible system'
test_relative_to_windows (test.test_pathlib.test_pathlib.WindowsPathTest.test_relative_to_windows) ... skipped 'test requires a Windows-compatible system'
test_rename (test.test_pathlib.test_pathlib.WindowsPathTest.test_rename) ... skipped 'test requires a Windows-compatible system'
test_replace (test.test_pathlib.test_pathlib.WindowsPathTest.test_replace) ... skipped 'test requires a Windows-compatible system'
test_repr_common (test.test_pathlib.test_pathlib.WindowsPathTest.test_repr_common) ... skipped 'test requires a Windows-compatible system'
test_repr_roundtrips (test.test_pathlib.test_pathlib.WindowsPathTest.test_repr_roundtrips) ... skipped 'test requires a Windows-compatible system'
test_resolve_common (test.test_pathlib.test_pathlib.WindowsPathTest.test_resolve_common) ... skipped 'test requires a Windows-compatible system'
test_resolve_dot (test.test_pathlib.test_pathlib.WindowsPathTest.test_resolve_dot) ... skipped 'test requires a Windows-compatible system'
test_resolve_loop (test.test_pathlib.test_pathlib.WindowsPathTest.test_resolve_loop) ... skipped 'test requires a Windows-compatible system'
test_resolve_nonexist_relative_issue38671 (test.test_pathlib.test_pathlib.WindowsPathTest.test_resolve_nonexist_relative_issue38671) ... skipped 'test requires a Windows-compatible system'
test_resolve_root (test.test_pathlib.test_pathlib.WindowsPathTest.test_resolve_root) ... skipped 'test requires a Windows-compatible system'
test_rglob_pathlike (test.test_pathlib.test_pathlib.WindowsPathTest.test_rglob_pathlike) ... skipped 'test requires a Windows-compatible system'
test_rglob_posix (test.test_pathlib.test_pathlib.WindowsPathTest.test_rglob_posix) ... skipped 'test requires a Windows-compatible system'
test_rglob_recurse_symlinks_common (test.test_pathlib.test_pathlib.WindowsPathTest.test_rglob_recurse_symlinks_common) ... skipped 'test requires a Windows-compatible system'
test_rglob_recurse_symlinks_false (test.test_pathlib.test_pathlib.WindowsPathTest.test_rglob_recurse_symlinks_false) ... skipped 'test requires a Windows-compatible system'
test_rglob_symlink_loop (test.test_pathlib.test_pathlib.WindowsPathTest.test_rglob_symlink_loop) ... skipped 'test requires a Windows-compatible system'
test_rglob_windows (test.test_pathlib.test_pathlib.WindowsPathTest.test_rglob_windows) ... skipped 'test requires a Windows-compatible system'
test_rmdir (test.test_pathlib.test_pathlib.WindowsPathTest.test_rmdir) ... skipped 'test requires a Windows-compatible system'
test_root_common (test.test_pathlib.test_pathlib.WindowsPathTest.test_root_common) ... skipped 'test requires a Windows-compatible system'
test_root_posix (test.test_pathlib.test_pathlib.WindowsPathTest.test_root_posix) ... skipped 'test requires a Windows-compatible system'
test_root_windows (test.test_pathlib.test_pathlib.WindowsPathTest.test_root_windows) ... skipped 'test requires a Windows-compatible system'
test_samefile (test.test_pathlib.test_pathlib.WindowsPathTest.test_samefile) ... skipped 'test requires a Windows-compatible system'
test_stat (test.test_pathlib.test_pathlib.WindowsPathTest.test_stat) ... skipped 'test requires a Windows-compatible system'
test_stat_no_follow_symlinks (test.test_pathlib.test_pathlib.WindowsPathTest.test_stat_no_follow_symlinks) ... skipped 'test requires a Windows-compatible system'
test_stat_no_follow_symlinks_nosymlink (test.test_pathlib.test_pathlib.WindowsPathTest.test_stat_no_follow_symlinks_nosymlink) ... skipped 'test requires a Windows-compatible system'
test_stem_empty (test.test_pathlib.test_pathlib.WindowsPathTest.test_stem_empty) ... skipped 'test requires a Windows-compatible system'
test_str_common (test.test_pathlib.test_pathlib.WindowsPathTest.test_str_common) ... skipped 'test requires a Windows-compatible system'
test_str_subclass_common (test.test_pathlib.test_pathlib.WindowsPathTest.test_str_subclass_common) ... skipped 'test requires a Windows-compatible system'
test_str_subclass_windows (test.test_pathlib.test_pathlib.WindowsPathTest.test_str_subclass_windows) ... skipped 'test requires a Windows-compatible system'
test_str_windows (test.test_pathlib.test_pathlib.WindowsPathTest.test_str_windows) ... skipped 'test requires a Windows-compatible system'
test_symlink_to (test.test_pathlib.test_pathlib.WindowsPathTest.test_symlink_to) ... skipped 'test requires a Windows-compatible system'
test_symlink_to_unsupported (test.test_pathlib.test_pathlib.WindowsPathTest.test_symlink_to_unsupported) ... skipped 'test requires a Windows-compatible system'
test_touch_common (test.test_pathlib.test_pathlib.WindowsPathTest.test_touch_common) ... skipped 'test requires a Windows-compatible system'
test_touch_mode (test.test_pathlib.test_pathlib.WindowsPathTest.test_touch_mode) ... skipped 'test requires a Windows-compatible system'
test_touch_nochange (test.test_pathlib.test_pathlib.WindowsPathTest.test_touch_nochange) ... skipped 'test requires a Windows-compatible system'
test_unlink (test.test_pathlib.test_pathlib.WindowsPathTest.test_unlink) ... skipped 'test requires a Windows-compatible system'
test_unlink_missing_ok (test.test_pathlib.test_pathlib.WindowsPathTest.test_unlink_missing_ok) ... skipped 'test requires a Windows-compatible system'
test_unsupported_parser (test.test_pathlib.test_pathlib.WindowsPathTest.test_unsupported_parser) ... skipped 'test requires a Windows-compatible system'
test_with_name_empty (test.test_pathlib.test_pathlib.WindowsPathTest.test_with_name_empty) ... skipped 'test requires a Windows-compatible system'
test_with_name_windows (test.test_pathlib.test_pathlib.WindowsPathTest.test_with_name_windows) ... skipped 'test requires a Windows-compatible system'
test_with_segments (test.test_pathlib.test_pathlib.WindowsPathTest.test_with_segments) ... skipped 'test requires a Windows-compatible system'
test_with_stem_empty (test.test_pathlib.test_pathlib.WindowsPathTest.test_with_stem_empty) ... skipped 'test requires a Windows-compatible system'
test_with_stem_windows (test.test_pathlib.test_pathlib.WindowsPathTest.test_with_stem_windows) ... skipped 'test requires a Windows-compatible system'
test_glob (test.test_pathlib.test_read.LocalPathReadTest.test_glob) ... skipped 'requires symlinks'
test_info_exists (test.test_pathlib.test_read.LocalPathReadTest.test_info_exists) ... ok
test_info_is_dir (test.test_pathlib.test_read.LocalPathReadTest.test_info_is_dir) ... ok
test_info_is_file (test.test_pathlib.test_read.LocalPathReadTest.test_info_is_file) ... ok
test_info_is_symlink (test.test_pathlib.test_read.LocalPathReadTest.test_info_is_symlink) ... ok
test_is_readable (test.test_pathlib.test_read.LocalPathReadTest.test_is_readable) ... ok
test_iterdir (test.test_pathlib.test_read.LocalPathReadTest.test_iterdir) ... ok
test_iterdir_info (test.test_pathlib.test_read.LocalPathReadTest.test_iterdir_info) ... ok
test_iterdir_nodir (test.test_pathlib.test_read.LocalPathReadTest.test_iterdir_nodir) ... ok
test_open_r (test.test_pathlib.test_read.LocalPathReadTest.test_open_r) ... ok
test_open_rb (test.test_pathlib.test_read.LocalPathReadTest.test_open_rb) ... ok
test_read_bytes (test.test_pathlib.test_read.LocalPathReadTest.test_read_bytes) ... ok
test_read_text (test.test_pathlib.test_read.LocalPathReadTest.test_read_text) ... ok
test_read_text_with_newlines (test.test_pathlib.test_read.LocalPathReadTest.test_read_text_with_newlines) ... ok
test_walk_bottom_up (test.test_pathlib.test_read.LocalPathReadTest.test_walk_bottom_up) ... ok
test_walk_prune (test.test_pathlib.test_read.LocalPathReadTest.test_walk_prune) ... ok
test_walk_top_down (test.test_pathlib.test_read.LocalPathReadTest.test_walk_top_down) ... ok
test_glob (test.test_pathlib.test_read.PathReadTest.test_glob) ... skipped 'requires symlinks'
test_info_exists (test.test_pathlib.test_read.PathReadTest.test_info_exists) ... ok
test_info_is_dir (test.test_pathlib.test_read.PathReadTest.test_info_is_dir) ... ok
test_info_is_file (test.test_pathlib.test_read.PathReadTest.test_info_is_file) ... ok
test_info_is_symlink (test.test_pathlib.test_read.PathReadTest.test_info_is_symlink) ... ok
test_is_readable (test.test_pathlib.test_read.PathReadTest.test_is_readable) ... ok
test_iterdir (test.test_pathlib.test_read.PathReadTest.test_iterdir) ... ok
test_iterdir_info (test.test_pathlib.test_read.PathReadTest.test_iterdir_info) ... ok
test_iterdir_nodir (test.test_pathlib.test_read.PathReadTest.test_iterdir_nodir) ... ok
test_open_r (test.test_pathlib.test_read.PathReadTest.test_open_r) ... ok
test_open_rb (test.test_pathlib.test_read.PathReadTest.test_open_rb) ... ok
test_read_bytes (test.test_pathlib.test_read.PathReadTest.test_read_bytes) ... ok
test_read_text (test.test_pathlib.test_read.PathReadTest.test_read_text) ... ok
test_read_text_with_newlines (test.test_pathlib.test_read.PathReadTest.test_read_text_with_newlines) ... ok
test_walk_bottom_up (test.test_pathlib.test_read.PathReadTest.test_walk_bottom_up) ... ok
test_walk_prune (test.test_pathlib.test_read.PathReadTest.test_walk_prune) ... ok
test_walk_top_down (test.test_pathlib.test_read.PathReadTest.test_walk_top_down) ... ok
test_glob (test.test_pathlib.test_read.ZipPathReadTest.test_glob) ... ok
test_info_exists (test.test_pathlib.test_read.ZipPathReadTest.test_info_exists) ... ok
test_info_is_dir (test.test_pathlib.test_read.ZipPathReadTest.test_info_is_dir) ... ok
test_info_is_file (test.test_pathlib.test_read.ZipPathReadTest.test_info_is_file) ... ok
test_info_is_symlink (test.test_pathlib.test_read.ZipPathReadTest.test_info_is_symlink) ... ok
test_is_readable (test.test_pathlib.test_read.ZipPathReadTest.test_is_readable) ... ok
test_iterdir (test.test_pathlib.test_read.ZipPathReadTest.test_iterdir) ... ok
test_iterdir_info (test.test_pathlib.test_read.ZipPathReadTest.test_iterdir_info) ... ok
test_iterdir_nodir (test.test_pathlib.test_read.ZipPathReadTest.test_iterdir_nodir) ... ok
test_open_r (test.test_pathlib.test_read.ZipPathReadTest.test_open_r) ... ok
test_open_rb (test.test_pathlib.test_read.ZipPathReadTest.test_open_rb) ... ok
test_read_bytes (test.test_pathlib.test_read.ZipPathReadTest.test_read_bytes) ... ok
test_read_text (test.test_pathlib.test_read.ZipPathReadTest.test_read_text) ... ok
test_read_text_with_newlines (test.test_pathlib.test_read.ZipPathReadTest.test_read_text_with_newlines) ... ok
test_walk_bottom_up (test.test_pathlib.test_read.ZipPathReadTest.test_walk_bottom_up) ... ok
test_walk_prune (test.test_pathlib.test_read.ZipPathReadTest.test_walk_prune) ... ok
test_walk_top_down (test.test_pathlib.test_read.ZipPathReadTest.test_walk_top_down) ... ok
test_is_writable (test.test_pathlib.test_write.LocalPathWriteTest.test_is_writable) ... ok
test_mkdir (test.test_pathlib.test_write.LocalPathWriteTest.test_mkdir) ... ok
test_open_w (test.test_pathlib.test_write.LocalPathWriteTest.test_open_w) ... ok
test_open_wb (test.test_pathlib.test_write.LocalPathWriteTest.test_open_wb) ... ok
test_symlink_to (test.test_pathlib.test_write.LocalPathWriteTest.test_symlink_to) ... skipped 'needs symlinks'
test_write_bytes (test.test_pathlib.test_write.LocalPathWriteTest.test_write_bytes) ... ok
test_write_text (test.test_pathlib.test_write.LocalPathWriteTest.test_write_text) ... ok
test_write_text_with_newlines (test.test_pathlib.test_write.LocalPathWriteTest.test_write_text_with_newlines) ... ok
test_is_writable (test.test_pathlib.test_write.PathWriteTest.test_is_writable) ... ok
test_mkdir (test.test_pathlib.test_write.PathWriteTest.test_mkdir) ... ok
test_open_w (test.test_pathlib.test_write.PathWriteTest.test_open_w) ... ok
test_open_wb (test.test_pathlib.test_write.PathWriteTest.test_open_wb) ... ok
test_symlink_to (test.test_pathlib.test_write.PathWriteTest.test_symlink_to) ... skipped 'needs symlinks'
test_write_bytes (test.test_pathlib.test_write.PathWriteTest.test_write_bytes) ... ok
test_write_text (test.test_pathlib.test_write.PathWriteTest.test_write_text) ... ok
test_write_text_with_newlines (test.test_pathlib.test_write.PathWriteTest.test_write_text_with_newlines) ... ok
test_is_writable (test.test_pathlib.test_write.ZipPathWriteTest.test_is_writable) ... ok
test_mkdir (test.test_pathlib.test_write.ZipPathWriteTest.test_mkdir) ... ok
test_open_w (test.test_pathlib.test_write.ZipPathWriteTest.test_open_w) ... ok
test_open_wb (test.test_pathlib.test_write.ZipPathWriteTest.test_open_wb) ... ok
test_symlink_to (test.test_pathlib.test_write.ZipPathWriteTest.test_symlink_to) ... ok
test_write_bytes (test.test_pathlib.test_write.ZipPathWriteTest.test_write_bytes) ... ok
test_write_text (test.test_pathlib.test_write.ZipPathWriteTest.test_write_text) ... ok
test_write_text_with_newlines (test.test_pathlib.test_write.ZipPathWriteTest.test_write_text_with_newlines) ... ok
2025-04-15T07:08:21.6352621Z
======================================================================
ERROR: test_hardlink_to (test.test_pathlib.test_pathlib.PathSubclassTest.test_hardlink_to)
----------------------------------------------------------------------
Traceback (most recent call last):
File "/Lib/test/test_pathlib/test_pathlib.py", line 2267, in test_hardlink_to
link.hardlink_to(target)
~~~~~~~~~~~~~~~~^^^^^^^^
File "/Lib/pathlib/__init__.py", line 1235, in hardlink_to
os.link(target, self)
~~~~~~~^^^^^^^^^^^^^^
OSError: [Errno 28] Invalid argument: '/build/test_python_735056Ã¦/@test_42_tmpÃ¦/fileA' -> '/build/test_python_735056Ã¦/@test_42_tmpÃ¦/dirA/fileAA'
2025-04-15T07:08:21.6356861Z
======================================================================
ERROR: test_hardlink_to (test.test_pathlib.test_pathlib.PathTest.test_hardlink_to)
----------------------------------------------------------------------
Traceback (most recent call last):
File "/Lib/test/test_pathlib/test_pathlib.py", line 2267, in test_hardlink_to
link.hardlink_to(target)
~~~~~~~~~~~~~~~~^^^^^^^^
File "/Lib/pathlib/__init__.py", line 1235, in hardlink_to
os.link(target, self)
~~~~~~~^^^^^^^^^^^^^^
OSError: [Errno 28] Invalid argument: '/build/test_python_735056Ã¦/@test_42_tmpÃ¦/fileA' -> '/build/test_python_735056Ã¦/@test_42_tmpÃ¦/dirA/fileAA'
2025-04-15T07:08:21.6360105Z
======================================================================
ERROR: test_hardlink_to (test.test_pathlib.test_pathlib.PosixPathTest.test_hardlink_to)
----------------------------------------------------------------------
Traceback (most recent call last):
File "/Lib/test/test_pathlib/test_pathlib.py", line 2267, in test_hardlink_to
link.hardlink_to(target)
~~~~~~~~~~~~~~~~^^^^^^^^
File "/Lib/pathlib/__init__.py", line 1235, in hardlink_to
os.link(target, self)
~~~~~~~^^^^^^^^^^^^^^
OSError: [Errno 28] Invalid argument: '/build/test_python_735056Ã¦/@test_42_tmpÃ¦/fileA' -> '/build/test_python_735056Ã¦/@test_42_tmpÃ¦/dirA/fileAA'
2025-04-15T07:08:21.6363481Z
----------------------------------------------------------------------
Ran 1345 tests in 5.073s
2025-04-15T07:08:21.6363869Z
FAILED (errors=3, skipped=581)
test test_pathlib failed
0:01:20 load avg: 5.25 [365/486/3] [33mtest_httplib skipped[0m
test_httplib skipped -- requires socket support
0:01:20 load avg: 5.25 [366/486/3] [33mtest_socketserver skipped (resource denied)[0m
test_socketserver skipped -- No socket support
0:01:20 load avg: 5.25 [367/486/3] [32mtest_contains passed[0m
0:01:20 load avg: 5.25 [368/486/3] [33mtest.test_asyncio.test_events skipped[0m
test.test_asyncio.test_events skipped -- requires socket support
0:01:21 load avg: 5.25 [369/486/3] [32mtest_iterlen passed[0m
0:01:21 load avg: 5.25 [370/486/3] [33mtest_compileall skipped[0m
test_compileall skipped -- No module named '_testsinglephase'
0:01:21 load avg: 5.25 [371/486/3] [33mtest_grp skipped[0m
test_grp skipped -- No module named 'grp'
0:01:21 load avg: 5.25 [372/486/3] [32mtest_setcomps passed[0m
0:01:21 load avg: 5.25 [373/486/3] [32mtest_sax passed[0m
0:01:21 load avg: 5.25 [374/486/3] [32mtest_csv passed[0m
0:01:22 load avg: 5.25 [375/486/3] [32mtest_textwrap passed[0m
0:01:22 load avg: 5.25 [376/486/4] [1;31m[1;31mtest_genericpath failed (2 errors)[0m[0m
test_path_commonprefix (test.test_genericpath.PathLikeTests.test_path_commonprefix) ... ok
test_path_exists (test.test_genericpath.PathLikeTests.test_path_exists) ... ok
test_path_getctime (test.test_genericpath.PathLikeTests.test_path_getctime) ... ok
test_path_getmtime (test.test_genericpath.PathLikeTests.test_path_getmtime) ... ok
test_path_getsize (test.test_genericpath.PathLikeTests.test_path_getsize) ... ok
test_path_isdir (test.test_genericpath.PathLikeTests.test_path_isdir) ... ok
test_path_isfile (test.test_genericpath.PathLikeTests.test_path_isfile) ... ok
test_path_samefile (test.test_genericpath.PathLikeTests.test_path_samefile) ... ok
test_commonprefix (test.test_genericpath.TestGenericTest.test_commonprefix) ... ok
test_exists (test.test_genericpath.TestGenericTest.test_exists) ... ok
test_exists_bool (test.test_genericpath.TestGenericTest.test_exists_bool) ... ok
test_exists_fd (test.test_genericpath.TestGenericTest.test_exists_fd) ... skipped 'requires os.pipe()'
test_filetime (test.test_genericpath.TestGenericTest.test_filetime) ... ok
test_getsize (test.test_genericpath.TestGenericTest.test_getsize) ... ok
test_invalid_paths (test.test_genericpath.TestGenericTest.test_invalid_paths) ... ok
test_isdir (test.test_genericpath.TestGenericTest.test_isdir) ... ok
test_isfile (test.test_genericpath.TestGenericTest.test_isfile) ... ok
test_no_argument (test.test_genericpath.TestGenericTest.test_no_argument) ... ok
test_samefile (test.test_genericpath.TestGenericTest.test_samefile) ... ok
test_samefile_on_link (test.test_genericpath.TestGenericTest.test_samefile_on_link) ... ERROR
test_samefile_on_symlink (test.test_genericpath.TestGenericTest.test_samefile_on_symlink) ... skipped 'Requires functional symlink implementation'
test_sameopenfile (test.test_genericpath.TestGenericTest.test_sameopenfile) ... ok
test_samestat (test.test_genericpath.TestGenericTest.test_samestat) ... ok
test_samestat_on_link (test.test_genericpath.TestGenericTest.test_samestat_on_link) ... ERROR
test_samestat_on_symlink (test.test_genericpath.TestGenericTest.test_samestat_on_symlink) ... skipped 'Requires functional symlink implementation'
2025-04-15T07:08:23.3227968Z
======================================================================
ERROR: test_samefile_on_link (test.test_genericpath.TestGenericTest.test_samefile_on_link)
----------------------------------------------------------------------
Traceback (most recent call last):
File "/Lib/test/test_genericpath.py", line 265, in test_samefile_on_link
self._test_samefile_on_link_func(os.link)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^
File "/Lib/test/test_genericpath.py", line 251, in _test_samefile_on_link_func
func(test_fn1, test_fn2)
~~~~^^^^^^^^^^^^^^^^^^^^
OSError: [Errno 28] Invalid argument: '@test_42_tmpÃ¦' -> '@test_42_tmpÃ¦2'
2025-04-15T07:08:23.3235744Z
======================================================================
ERROR: test_samestat_on_link (test.test_genericpath.TestGenericTest.test_samestat_on_link)
----------------------------------------------------------------------
Traceback (most recent call last):
File "/Lib/test/test_genericpath.py", line 308, in test_samestat_on_link
self._test_samestat_on_link_func(os.link)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^
File "/Lib/test/test_genericpath.py", line 292, in _test_samestat_on_link_func
func(test_fn1, test_fn2)
~~~~^^^^^^^^^^^^^^^^^^^^
OSError: [Errno 28] Invalid argument: '@test_42_tmpÃ¦1' -> '@test_42_tmpÃ¦2'
2025-04-15T07:08:23.3295384Z
----------------------------------------------------------------------
Ran 25 tests in 0.015s
2025-04-15T07:08:23.3296438Z
FAILED (errors=2, skipped=3)
test test_genericpath failed
0:01:22 load avg: 5.25 [377/486/4] [33mtest_startfile skipped[0m
test_startfile skipped -- object <module 'os' (frozen)> has no attribute 'startfile'
0:01:22 load avg: 5.25 [378/486/4] [32mtest_ucn passed[0m
0:01:22 load avg: 5.25 [379/486/4] [32mtest_nturl2path passed[0m
0:01:22 load avg: 5.25 [380/486/4] [32mtest_sundry passed[0m
0:01:23 load avg: 5.25 [381/486/5] [1;31m[1;31mtest_posix failed (3 errors)[0m[0m
test_unshare_setns (test.test_posix.NamespacesTests.test_unshare_setns) ... skipped 'needs os.unshare()'
test_initgroups (test.test_posix.PosixGroupsTester.test_initgroups) ... skipped 'test needs posix.initgroups()'
test_setgroups (test.test_posix.PosixGroupsTester.test_setgroups) ... skipped 'test needs posix.setgroups()'
testNoArgFunctions (test.test_posix.PosixTester.testNoArgFunctions) ... ok
test_access (test.test_posix.PosixTester.test_access) ... ok
test_chdir (test.test_posix.PosixTester.test_chdir) ... ok
test_chflags (test.test_posix.PosixTester.test_chflags) ... skipped 'test needs os.chflags()'
test_chmod_dir (test.test_posix.PosixTester.test_chmod_dir) ... skipped 'requires working os.chmod()'
test_chmod_dir_symlink (test.test_posix.PosixTester.test_chmod_dir_symlink) ... skipped 'Requires functional symlink implementation'
test_chmod_file (test.test_posix.PosixTester.test_chmod_file) ... skipped 'requires working os.chmod()'
test_chmod_file_symlink (test.test_posix.PosixTester.test_chmod_file_symlink) ... skipped 'Requires functional symlink implementation'
test_chown (test.test_posix.PosixTester.test_chown) ... skipped 'requires os.chown()'
test_cld_xxxx_constants (test.test_posix.PosixTester.test_cld_xxxx_constants) ... skipped 'test needs os.waitid_result'
test_confstr (test.test_posix.PosixTester.test_confstr) ... ok
test_dup (test.test_posix.PosixTester.test_dup) ... skipped 'WASI does not have dup()'
test_dup2 (test.test_posix.PosixTester.test_dup2) ... skipped 'test needs posix.dup2()'
test_environ (test.test_posix.PosixTester.test_environ) ... ok
test_fchmod_file (test.test_posix.PosixTester.test_fchmod_file) ... skipped 'requires working os.chmod()'
test_fchown (test.test_posix.PosixTester.test_fchown) ... skipped 'requires working os.chmod()'
test_fexecve (test.test_posix.PosixTester.test_fexecve) ... skipped 'test needs execve() to support the fd parameter'
test_fs_holes (test.test_posix.PosixTester.test_fs_holes) ... skipped 'test needs an OS that reports file holes'
test_fstat (test.test_posix.PosixTester.test_fstat) ... ok
test_fstatvfs (test.test_posix.PosixTester.test_fstatvfs) ... skipped 'test needs posix.fstatvfs()'
test_ftruncate (test.test_posix.PosixTester.test_ftruncate) ... ok
test_get_and_set_scheduler_and_param (test.test_posix.PosixTester.test_get_and_set_scheduler_and_param) ... skipped 'requires POSIX scheduler API'
test_getcwd_long_pathnames (test.test_posix.PosixTester.test_getcwd_long_pathnames) ... ok
test_getgrouplist (test.test_posix.PosixTester.test_getgrouplist) ... skipped 'test needs posix.getgrouplist()'
test_getgroups (test.test_posix.PosixTester.test_getgroups) ... skipped 'test needs os.getegid()'
test_getresgid (test.test_posix.PosixTester.test_getresgid) ... skipped 'test needs posix.getresgid()'
test_getresuid (test.test_posix.PosixTester.test_getresuid) ... skipped 'test needs posix.getresuid()'
test_initgroups (test.test_posix.PosixTester.test_initgroups) ... skipped 'test needs os.initgroups()'
test_lchflags_regular_file (test.test_posix.PosixTester.test_lchflags_regular_file) ... skipped 'test needs os.lchflags()'
test_lchflags_symlink (test.test_posix.PosixTester.test_lchflags_symlink) ... skipped 'test needs os.lchflags()'
test_lchmod_dir (test.test_posix.PosixTester.test_lchmod_dir) ... skipped 'test needs os.lchmod()'
test_lchmod_dir_symlink (test.test_posix.PosixTester.test_lchmod_dir_symlink) ... skipped 'test needs os.lchmod()'
test_lchmod_file (test.test_posix.PosixTester.test_lchmod_file) ... skipped 'test needs os.lchmod()'
test_lchmod_file_symlink (test.test_posix.PosixTester.test_lchmod_file_symlink) ... skipped 'test needs os.lchmod()'
test_lchown (test.test_posix.PosixTester.test_lchown) ... skipped 'requires working os.chmod()'
test_link_follow_symlinks (test.test_posix.PosixTester.test_link_follow_symlinks) ...
test_link_follow_symlinks (test.test_posix.PosixTester.test_link_follow_symlinks) [no follow_symlinks] ... ERROR
test_link_follow_symlinks (test.test_posix.PosixTester.test_link_follow_symlinks) [follow_symlinks=False] ... ERROR
test_link_follow_symlinks (test.test_posix.PosixTester.test_link_follow_symlinks) [follow_symlinks=True] ... ERROR
test_listdir (test.test_posix.PosixTester.test_listdir) ... ok
test_listdir_bytes (test.test_posix.PosixTester.test_listdir_bytes) ... ok
test_listdir_bytes_like (test.test_posix.PosixTester.test_listdir_bytes_like) ... ok
test_listdir_default (test.test_posix.PosixTester.test_listdir_default) ... ok
test_listdir_fd (test.test_posix.PosixTester.test_listdir_fd) ... skipped 'test needs fd support for posix.listdir()'
test_lockf (test.test_posix.PosixTester.test_lockf) ... skipped 'test needs posix.lockf()'
test_makedev (test.test_posix.PosixTester.test_makedev) ... skipped 'test needs posix.makedev()'
test_mkfifo (test.test_posix.PosixTester.test_mkfifo) ... skipped "don't have mkfifo()"
test_mknod (test.test_posix.PosixTester.test_mknod) ... skipped "don't have mknod()/S_IFIFO"
test_oscloexec (test.test_posix.PosixTester.test_oscloexec) ... skipped 'requires subprocess support'
test_osexlock (test.test_posix.PosixTester.test_osexlock) ... skipped 'test needs posix.O_EXLOCK'
test_osshlock (test.test_posix.PosixTester.test_osshlock) ... skipped 'test needs posix.O_SHLOCK'
test_path_error2 (test.test_posix.PosixTester.test_path_error2)
Test functions that call path_error2(), providing two filenames in their exceptions. ... ok
test_path_with_null_byte (test.test_posix.PosixTester.test_path_with_null_byte) ... ok
test_path_with_null_character (test.test_posix.PosixTester.test_path_with_null_character) ... ok
test_pidfd_open (test.test_posix.PosixTester.test_pidfd_open) ... skipped 'pidfd_open unavailable'
test_pipe (test.test_posix.PosixTester.test_pipe) ... skipped 'test needs posix.pipe()'
test_pipe2 (test.test_posix.PosixTester.test_pipe2) ... skipped 'test needs os.pipe2()'
test_pipe2_c_limits (test.test_posix.PosixTester.test_pipe2_c_limits) ... skipped 'test needs os.pipe2()'
test_posix_fadvise (test.test_posix.PosixTester.test_posix_fadvise) ... ok
test_posix_fadvise_errno (test.test_posix.PosixTester.test_posix_fadvise_errno) ... ok
test_posix_fallocate (test.test_posix.PosixTester.test_posix_fallocate) ... skipped 'test needs posix.posix_fallocate()'
test_posix_fallocate_errno (test.test_posix.PosixTester.test_posix_fallocate_errno) ... skipped 'test needs posix.posix_fallocate()'
test_pread (test.test_posix.PosixTester.test_pread) ... ok
test_preadv (test.test_posix.PosixTester.test_preadv) ... skipped 'test needs posix.preadv()'
test_preadv_flags (test.test_posix.PosixTester.test_preadv_flags) ... skipped 'test needs posix.preadv()'
test_preadv_overflow_32bits (test.test_posix.PosixTester.test_preadv_overflow_32bits) ... skipped 'test needs posix.preadv()'
test_putenv (test.test_posix.PosixTester.test_putenv) ... ok
test_pwrite (test.test_posix.PosixTester.test_pwrite) ... ok
test_pwritev (test.test_posix.PosixTester.test_pwritev) ... skipped 'test needs posix.pwritev()'
test_pwritev_flags (test.test_posix.PosixTester.test_pwritev_flags) ... skipped 'test needs posix.pwritev()'
test_pwritev_overflow_32bits (test.test_posix.PosixTester.test_pwritev_overflow_32bits) ... skipped 'test needs posix.pwritev()'
test_readv (test.test_posix.PosixTester.test_readv) ... skipped 'test needs posix.readv()'
test_readv_overflow_32bits (test.test_posix.PosixTester.test_readv_overflow_32bits) ... skipped 'test needs posix.readv()'
test_register_at_fork (test.test_posix.PosixTester.test_register_at_fork) ... skipped 'requires working os.fork()'
test_rtld_constants (test.test_posix.PosixTester.test_rtld_constants) ... skipped 'No dynamic linking on WASI'
test_sched_getaffinity (test.test_posix.PosixTester.test_sched_getaffinity) ... skipped "don't have sched affinity support"
test_sched_param (test.test_posix.PosixTester.test_sched_param) ... skipped 'requires POSIX scheduler API'
test_sched_priority (test.test_posix.PosixTester.test_sched_priority) ... skipped 'requires sched_get_priority_max()'
test_sched_rr_get_interval (test.test_posix.PosixTester.test_sched_rr_get_interval) ... skipped 'no function'
test_sched_setaffinity (test.test_posix.PosixTester.test_sched_setaffinity) ... skipped "don't have sched affinity support"
test_sched_yield (test.test_posix.PosixTester.test_sched_yield) ... ok
test_setresgid (test.test_posix.PosixTester.test_setresgid) ... skipped 'test needs posix.setresgid()'
test_setresgid_exception (test.test_posix.PosixTester.test_setresgid_exception) ... skipped 'test needs posix.setresgid()'
test_setresuid (test.test_posix.PosixTester.test_setresuid) ... skipped 'test needs posix.setresuid()'
test_setresuid_exception (test.test_posix.PosixTester.test_setresuid_exception) ... skipped 'test needs posix.setresuid()'
test_stat (test.test_posix.PosixTester.test_stat) ... ok
test_statvfs (test.test_posix.PosixTester.test_statvfs) ... skipped 'test needs posix.statvfs()'
test_strerror (test.test_posix.PosixTester.test_strerror) ... ok
test_sysconf (test.test_posix.PosixTester.test_sysconf) ... ok
test_truncate (test.test_posix.PosixTester.test_truncate) ... ok
test_umask (test.test_posix.PosixTester.test_umask) ... skipped 'test needs posix.umask()'
test_utime (test.test_posix.PosixTester.test_utime) ... ok
test_utime_nofollow_symlinks (test.test_posix.PosixTester.test_utime_nofollow_symlinks) ... ok
test_utime_with_fd (test.test_posix.PosixTester.test_utime_with_fd) ... ok
test_waitid (test.test_posix.PosixTester.test_waitid) ... skipped 'test needs posix.waitid()'
test_writev (test.test_posix.PosixTester.test_writev) ... skipped 'test needs posix.writev()'
test_writev_overflow_32bits (test.test_posix.PosixTester.test_writev_overflow_32bits) ... skipped 'test needs posix.writev()'
test_access_dir_fd (test.test_posix.TestPosixDirFd.test_access_dir_fd) ... ok
test_chmod_dir_fd (test.test_posix.TestPosixDirFd.test_chmod_dir_fd) ... skipped 'test needs dir_fd support in os.chmod()'
test_chown_dir_fd (test.test_posix.TestPosixDirFd.test_chown_dir_fd) ... skipped 'test needs dir_fd support in os.chown()'
test_link_dir_fd (test.test_posix.TestPosixDirFd.test_link_dir_fd) ... skipped 'WASI: symlink following on path_link is not supported'
test_mkdir_dir_fd (test.test_posix.TestPosixDirFd.test_mkdir_dir_fd) ... ok
test_mkfifo_dir_fd (test.test_posix.TestPosixDirFd.test_mkfifo_dir_fd) ... skipped 'test needs dir_fd support in os.mkfifo()'
test_mknod_dir_fd (test.test_posix.TestPosixDirFd.test_mknod_dir_fd) ... skipped 'test requires both stat.S_IFIFO and dir_fd support for os.mknod()'
test_open_dir_fd (test.test_posix.TestPosixDirFd.test_open_dir_fd) ... ok
test_readlink_dir_fd (test.test_posix.TestPosixDirFd.test_readlink_dir_fd) ... ok
test_rename_dir_fd (test.test_posix.TestPosixDirFd.test_rename_dir_fd) ... ok
test_stat_dir_fd (test.test_posix.TestPosixDirFd.test_stat_dir_fd) ... ok
test_symlink_dir_fd (test.test_posix.TestPosixDirFd.test_symlink_dir_fd) ... ok
test_unlink_dir_fd (test.test_posix.TestPosixDirFd.test_unlink_dir_fd) ... ok
test_utime_dir_fd (test.test_posix.TestPosixDirFd.test_utime_dir_fd) ... ok
test_bad_file_actions (test.test_posix.TestPosixSpawn.test_bad_file_actions) ... skipped 'test needs os.posix_spawn'
test_close_file (test.test_posix.TestPosixSpawn.test_close_file) ... skipped 'test needs os.posix_spawn'
test_dup2 (test.test_posix.TestPosixSpawn.test_dup2) ... skipped 'test needs os.posix_spawn'
test_empty_file_actions (test.test_posix.TestPosixSpawn.test_empty_file_actions) ... skipped 'test needs os.posix_spawn'
test_multiple_file_actions (test.test_posix.TestPosixSpawn.test_multiple_file_actions) ... skipped 'test needs os.posix_spawn'
test_no_such_executable (test.test_posix.TestPosixSpawn.test_no_such_executable) ... skipped 'test needs os.posix_spawn'
test_none_file_actions (test.test_posix.TestPosixSpawn.test_none_file_actions) ... skipped 'test needs os.posix_spawn'
test_open_file (test.test_posix.TestPosixSpawn.test_open_file) ... skipped 'test needs os.posix_spawn'
test_resetids (test.test_posix.TestPosixSpawn.test_resetids) ... skipped 'test needs os.posix_spawn'
test_resetids_explicit_default (test.test_posix.TestPosixSpawn.test_resetids_explicit_default) ... skipped 'test needs os.posix_spawn'
test_returns_pid (test.test_posix.TestPosixSpawn.test_returns_pid) ... skipped 'test needs os.posix_spawn'
test_setpgroup (test.test_posix.TestPosixSpawn.test_setpgroup) ... skipped 'test needs os.posix_spawn'
test_setpgroup_wrong_type (test.test_posix.TestPosixSpawn.test_setpgroup_wrong_type) ... skipped 'test needs os.posix_spawn'
test_setscheduler_only_param (test.test_posix.TestPosixSpawn.test_setscheduler_only_param) ... skipped 'test needs os.posix_spawn'
test_setscheduler_with_policy (test.test_posix.TestPosixSpawn.test_setscheduler_with_policy) ... skipped 'test needs os.posix_spawn'
test_setsid (test.test_posix.TestPosixSpawn.test_setsid) ... skipped 'test needs os.posix_spawn'
test_setsigdef (test.test_posix.TestPosixSpawn.test_setsigdef) ... skipped 'test needs os.posix_spawn'
test_setsigdef_wrong_type (test.test_posix.TestPosixSpawn.test_setsigdef_wrong_type) ... skipped 'test needs os.posix_spawn'
test_setsigmask (test.test_posix.TestPosixSpawn.test_setsigmask) ... skipped 'test needs os.posix_spawn'
test_setsigmask_wrong_type (test.test_posix.TestPosixSpawn.test_setsigmask_wrong_type) ... skipped 'test needs os.posix_spawn'
test_specify_environment (test.test_posix.TestPosixSpawn.test_specify_environment) ... skipped 'test needs os.posix_spawn'
test_bad_file_actions (test.test_posix.TestPosixSpawnP.test_bad_file_actions) ... skipped 'test needs os.posix_spawnp'
test_close_file (test.test_posix.TestPosixSpawnP.test_close_file) ... skipped 'test needs os.posix_spawnp'
test_dup2 (test.test_posix.TestPosixSpawnP.test_dup2) ... skipped 'test needs os.posix_spawnp'
test_empty_file_actions (test.test_posix.TestPosixSpawnP.test_empty_file_actions) ... skipped 'test needs os.posix_spawnp'
test_multiple_file_actions (test.test_posix.TestPosixSpawnP.test_multiple_file_actions) ... skipped 'test needs os.posix_spawnp'
test_no_such_executable (test.test_posix.TestPosixSpawnP.test_no_such_executable) ... skipped 'test needs os.posix_spawnp'
test_none_file_actions (test.test_posix.TestPosixSpawnP.test_none_file_actions) ... skipped 'test needs os.posix_spawnp'
test_open_file (test.test_posix.TestPosixSpawnP.test_open_file) ... skipped 'test needs os.posix_spawnp'
test_posix_spawnp (test.test_posix.TestPosixSpawnP.test_posix_spawnp) ... skipped 'test needs os.posix_spawnp'
test_resetids (test.test_posix.TestPosixSpawnP.test_resetids) ... skipped 'test needs os.posix_spawnp'
test_resetids_explicit_default (test.test_posix.TestPosixSpawnP.test_resetids_explicit_default) ... skipped 'test needs os.posix_spawnp'
test_returns_pid (test.test_posix.TestPosixSpawnP.test_returns_pid) ... skipped 'test needs os.posix_spawnp'
test_setpgroup (test.test_posix.TestPosixSpawnP.test_setpgroup) ... skipped 'test needs os.posix_spawnp'
test_setpgroup_wrong_type (test.test_posix.TestPosixSpawnP.test_setpgroup_wrong_type) ... skipped 'test needs os.posix_spawnp'
test_setscheduler_only_param (test.test_posix.TestPosixSpawnP.test_setscheduler_only_param) ... skipped 'test needs os.posix_spawnp'
test_setscheduler_with_policy (test.test_posix.TestPosixSpawnP.test_setscheduler_with_policy) ... skipped 'test needs os.posix_spawnp'
test_setsid (test.test_posix.TestPosixSpawnP.test_setsid) ... skipped 'test needs os.posix_spawnp'
test_setsigdef (test.test_posix.TestPosixSpawnP.test_setsigdef) ... skipped 'test needs os.posix_spawnp'
test_setsigdef_wrong_type (test.test_posix.TestPosixSpawnP.test_setsigdef_wrong_type) ... skipped 'test needs os.posix_spawnp'
test_setsigmask (test.test_posix.TestPosixSpawnP.test_setsigmask) ... skipped 'test needs os.posix_spawnp'
test_setsigmask_wrong_type (test.test_posix.TestPosixSpawnP.test_setsigmask_wrong_type) ... skipped 'test needs os.posix_spawnp'
test_specify_environment (test.test_posix.TestPosixSpawnP.test_specify_environment) ... skipped 'test needs os.posix_spawnp'
test_access (test.test_posix.TestPosixWeaklinking.test_access) ... skipped 'test weak linking on macOS'
test_chmod (test.test_posix.TestPosixWeaklinking.test_chmod) ... skipped 'test weak linking on macOS'
test_chown (test.test_posix.TestPosixWeaklinking.test_chown) ... skipped 'test weak linking on macOS'
test_link (test.test_posix.TestPosixWeaklinking.test_link) ... skipped 'test weak linking on macOS'
test_listdir_scandir (test.test_posix.TestPosixWeaklinking.test_listdir_scandir) ... skipped 'test weak linking on macOS'
test_mkdir (test.test_posix.TestPosixWeaklinking.test_mkdir) ... skipped 'test weak linking on macOS'
test_mkfifo (test.test_posix.TestPosixWeaklinking.test_mkfifo) ... skipped 'test weak linking on macOS'
test_mknod (test.test_posix.TestPosixWeaklinking.test_mknod) ... skipped 'test weak linking on macOS'
test_open (test.test_posix.TestPosixWeaklinking.test_open) ... skipped 'test weak linking on macOS'
test_ptsname_r (test.test_posix.TestPosixWeaklinking.test_ptsname_r) ... skipped 'test weak linking on macOS'
test_pwritev (test.test_posix.TestPosixWeaklinking.test_pwritev) ... skipped 'test weak linking on macOS'
test_readlink (test.test_posix.TestPosixWeaklinking.test_readlink) ... skipped 'test weak linking on macOS'
test_rename_replace (test.test_posix.TestPosixWeaklinking.test_rename_replace) ... skipped 'test weak linking on macOS'
test_stat (test.test_posix.TestPosixWeaklinking.test_stat) ... skipped 'test weak linking on macOS'
test_symlink (test.test_posix.TestPosixWeaklinking.test_symlink) ... skipped 'test weak linking on macOS'
test_unlink_rmdir (test.test_posix.TestPosixWeaklinking.test_unlink_rmdir) ... skipped 'test weak linking on macOS'
test_utime (test.test_posix.TestPosixWeaklinking.test_utime) ... skipped 'test weak linking on macOS'
2025-04-15T07:08:24.1296816Z
======================================================================
ERROR: test_link_follow_symlinks (test.test_posix.PosixTester.test_link_follow_symlinks) [no follow_symlinks]
----------------------------------------------------------------------
Traceback (most recent call last):
File "/Lib/test/test_posix.py", line 1537, in test_link_follow_symlinks
posix.link(symlink, link)
~~~~~~~~~~^^^^^^^^^^^^^^^
OSError: [Errno 28] Invalid argument: '@test_42_tmpÃ¦symlink' -> '@test_42_tmpÃ¦link'
2025-04-15T07:08:24.1303387Z
======================================================================
ERROR: test_link_follow_symlinks (test.test_posix.PosixTester.test_link_follow_symlinks) [follow_symlinks=False]
----------------------------------------------------------------------
Traceback (most recent call last):
File "/Lib/test/test_posix.py", line 1548, in test_link_follow_symlinks
posix.link(symlink, link, follow_symlinks=False)
~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
FileNotFoundError: [Errno 44] No such file or directory: '@test_42_tmpÃ¦symlink' -> '@test_42_tmpÃ¦link_nofollow'
2025-04-15T07:08:24.1310321Z
======================================================================
ERROR: test_link_follow_symlinks (test.test_posix.PosixTester.test_link_follow_symlinks) [follow_symlinks=True]
----------------------------------------------------------------------
Traceback (most recent call last):
File "/Lib/test/test_posix.py", line 1560, in test_link_follow_symlinks
posix.link(symlink, link, follow_symlinks=True)
~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
OSError: [Errno 28] Invalid argument: '@test_42_tmpÃ¦symlink' -> '@test_42_tmpÃ¦link_following'
2025-04-15T07:08:24.1316571Z
----------------------------------------------------------------------
Ran 171 tests in 0.047s
2025-04-15T07:08:24.1317612Z
FAILED (errors=3, skipped=133)
test test_posix failed
0:01:23 load avg: 5.25 [382/486/5] [32mtest_secrets passed[0m
0:01:23 load avg: 5.25 [383/486/5] [32mtest_exception_hierarchy passed[0m
0:01:23 load avg: 5.23 [384/486/5] [33mtest_xml_dom_xmlbuilder skipped[0m
test_xml_dom_xmlbuilder skipped -- requires socket support
0:01:23 load avg: 5.23 [385/486/5] [33mtest.test_concurrent_futures.test_deadlock skipped[0m
test.test_concurrent_futures.test_deadlock skipped -- requires threading support
0:01:23 load avg: 5.23 [386/486/5] [32mtest_unicode_file_functions passed[0m
0:01:24 load avg: 5.23 [387/486/5] [33mtest_selectors skipped[0m
test_selectors skipped -- Cannot create socketpair on Emscripten/WASI.
0:01:24 load avg: 5.23 [388/486/5] [32mtest_frame passed[0m
0:01:24 load avg: 5.23 [389/486/5] [33mtest_sqlite3 skipped[0m
test_sqlite3 skipped -- No module named '_sqlite3'
0:01:24 load avg: 5.23 [390/486/5] [33mtest.test_gdb.test_backtrace skipped[0m
test.test_gdb.test_backtrace skipped -- Couldn't find gdb program on the path: [Errno 58] wasi does not support processes.
0:01:24 load avg: 5.23 [391/486/5] [32mtest_shlex passed[0m
0:01:25 load avg: 5.23 [392/486/5] [32mtest_genericalias passed[0m
0:01:25 load avg: 5.23 [393/486/5] [32mtest_string passed[0m
0:01:25 load avg: 5.23 [394/486/5] [32mtest_zipimport_support passed[0m
0:01:25 load avg: 5.23 [395/486/5] [33mtest.test_multiprocessing_forkserver.test_threads skipped[0m
test.test_multiprocessing_forkserver.test_threads skipped -- No module named '_multiprocessing'
0:01:25 load avg: 5.23 [396/486/5] [32mtest_codeop passed[0m
0:01:25 load avg: 5.23 [397/486/5] [33mtest_curses skipped[0m
test_curses skipped -- No module named '_curses'
0:01:26 load avg: 5.23 [398/486/5] [32mtest_thread_local_bytecode passed[0m
0:01:26 load avg: 5.23 [399/486/5] [32mtest_site passed[0m
0:01:26 load avg: 5.23 [400/486/5] [33mtest.test_asyncio.test_transports skipped[0m
test.test_asyncio.test_transports skipped -- requires socket support
0:01:27 load avg: 5.23 [401/486/5] [32mtest_class passed[0m
0:01:27 load avg: 5.23 [402/486/5] [32mtest_pyexpat passed[0m
0:01:27 load avg: 5.23 [403/486/6] [1;31m[1;31mtest_os failed (4 errors)[0m[0m
test_blocking (test.test_os.BlockingTests.test_blocking) ... ok
test_compare_to_walk (test.test_os.BytesFwalkTests.test_compare_to_walk) ... skipped 'Test needs os.fwalk()'
test_dir_fd (test.test_os.BytesFwalkTests.test_dir_fd) ... skipped 'Test needs os.fwalk()'
test_fd_finalization (test.test_os.BytesFwalkTests.test_fd_finalization) ... skipped 'Test needs os.fwalk()'
test_fd_leak (test.test_os.BytesFwalkTests.test_fd_leak) ... skipped 'Test needs os.fwalk()'
test_file_like_path (test.test_os.BytesFwalkTests.test_file_like_path) ... skipped 'Test needs os.fwalk()'
test_walk_above_recursion_limit (test.test_os.BytesFwalkTests.test_walk_above_recursion_limit) ... skipped 'Test needs os.fwalk()'
test_walk_bad_dir (test.test_os.BytesFwalkTests.test_walk_bad_dir) ... skipped 'Test needs os.fwalk()'
test_walk_bad_dir2 (test.test_os.BytesFwalkTests.test_walk_bad_dir2) ... skipped 'Test needs os.fwalk()'
test_walk_bottom_up (test.test_os.BytesFwalkTests.test_walk_bottom_up) ... skipped 'Test needs os.fwalk()'
test_walk_named_pipe (test.test_os.BytesFwalkTests.test_walk_named_pipe) ... skipped 'Test needs os.fwalk()'
test_walk_named_pipe2 (test.test_os.BytesFwalkTests.test_walk_named_pipe2) ... skipped 'Test needs os.fwalk()'
test_walk_prune (test.test_os.BytesFwalkTests.test_walk_prune) ... skipped 'Test needs os.fwalk()'
test_walk_symlink (test.test_os.BytesFwalkTests.test_walk_symlink) ... skipped 'Test needs os.fwalk()'
test_walk_topdown (test.test_os.BytesFwalkTests.test_walk_topdown) ... skipped 'Test needs os.fwalk()'
test_yields_correct_dir_fd (test.test_os.BytesFwalkTests.test_yields_correct_dir_fd) ... skipped 'Test needs os.fwalk()'
test_file_like_path (test.test_os.BytesWalkTests.test_file_like_path) ... ok
test_walk_above_recursion_limit (test.test_os.BytesWalkTests.test_walk_above_recursion_limit) ... ok
test_walk_bad_dir (test.test_os.BytesWalkTests.test_walk_bad_dir) ... ok
test_walk_bad_dir2 (test.test_os.BytesWalkTests.test_walk_bad_dir2) ... ok
test_walk_bottom_up (test.test_os.BytesWalkTests.test_walk_bottom_up) ... ok
test_walk_many_open_files (test.test_os.BytesWalkTests.test_walk_many_open_files) ... ok
test_walk_named_pipe (test.test_os.BytesWalkTests.test_walk_named_pipe) ... skipped 'requires os.mkfifo()'
test_walk_named_pipe2 (test.test_os.BytesWalkTests.test_walk_named_pipe2) ... skipped 'requires os.mkfifo()'
test_walk_prune (test.test_os.BytesWalkTests.test_walk_prune) ... ok
test_walk_symlink (test.test_os.BytesWalkTests.test_walk_symlink) ... skipped 'need symlink support'
test_walk_topdown (test.test_os.BytesWalkTests.test_walk_topdown) ... ok
test_cpu_count (test.test_os.CPUCountTests.test_cpu_count) ... ok
test_process_cpu_count (test.test_os.CPUCountTests.test_process_cpu_count) ... ok
test_process_cpu_count_affinity (test.test_os.CPUCountTests.test_process_cpu_count_affinity) ... skipped "don't have sched affinity support"
test_chown_gid (test.test_os.ChownFileTests.test_chown_gid) ... skipped 'requires os.chown()'
test_chown_uid_gid_arguments_must_be_index (test.test_os.ChownFileTests.test_chown_uid_gid_arguments_must_be_index) ... skipped 'requires os.chown()'
test_chown_with_root (test.test_os.ChownFileTests.test_chown_with_root) ... skipped 'requires os.chown()'
test_chown_without_permission (test.test_os.ChownFileTests.test_chown_without_permission) ... skipped 'requires os.chown()'
test_devnull (test.test_os.DevNullTests.test_devnull) ... skipped 'WASI has no /dev/null'
test_bad_fd (test.test_os.DeviceEncodingTests.test_bad_fd) ... ok
test_device_encoding (test.test_os.DeviceEncodingTests.test_device_encoding) ... skipped 'test requires a tty and either Windows or nl_langinfo(CODESET)'
test___repr__ (test.test_os.EnvironTests.test___repr__)
Check that the repr() of os.environ looks like environ({...}). ... ok
test_bool (test.test_os.EnvironTests.test_bool) ... ok
test_constructor (test.test_os.EnvironTests.test_constructor) ... ok
test_environb (test.test_os.EnvironTests.test_environb) ... ok
test_get (test.test_os.EnvironTests.test_get) ... ok
test_get_exec_path (test.test_os.EnvironTests.test_get_exec_path) ... ok
test_getitem (test.test_os.EnvironTests.test_getitem) ... ok
test_ior_operator (test.test_os.EnvironTests.test_ior_operator) ... ok
test_ior_operator_invalid_dicts (test.test_os.EnvironTests.test_ior_operator_invalid_dicts) ... ok
test_ior_operator_key_value_iterable (test.test_os.EnvironTests.test_ior_operator_key_value_iterable) ... ok
test_items (test.test_os.EnvironTests.test_items) ... ok
test_iter_error_when_changing_os_environ (test.test_os.EnvironTests.test_iter_error_when_changing_os_environ) ... ok
test_iter_error_when_changing_os_environ_items (test.test_os.EnvironTests.test_iter_error_when_changing_os_environ_items) ... ok
test_iter_error_when_changing_os_environ_values (test.test_os.EnvironTests.test_iter_error_when_changing_os_environ_values) ... ok
test_key_type (test.test_os.EnvironTests.test_key_type) ... ok
test_keys (test.test_os.EnvironTests.test_keys) ... ok
test_keyvalue_types (test.test_os.EnvironTests.test_keyvalue_types) ... ok
test_len (test.test_os.EnvironTests.test_len) ... ok
test_or_operator (test.test_os.EnvironTests.test_or_operator) ... ok
test_os_popen_iter (test.test_os.EnvironTests.test_os_popen_iter) ... skipped 'requires a shell'
test_pop (test.test_os.EnvironTests.test_pop) ... ok
test_popitem (test.test_os.EnvironTests.test_popitem) ... ok
test_putenv_unsetenv (test.test_os.EnvironTests.test_putenv_unsetenv) ... skipped 'requires subprocess support'
test_putenv_unsetenv_error (test.test_os.EnvironTests.test_putenv_unsetenv_error) ... ok
test_read (test.test_os.EnvironTests.test_read) ... ok
test_reload_environ (test.test_os.EnvironTests.test_reload_environ) ... ok
test_ror_operator (test.test_os.EnvironTests.test_ror_operator) ... ok
test_setdefault (test.test_os.EnvironTests.test_setdefault) ... ok
test_update (test.test_os.EnvironTests.test_update) ... ok
test_update2 (test.test_os.EnvironTests.test_update2) ... skipped 'requires a shell'
test_values (test.test_os.EnvironTests.test_values) ... ok
test_write (test.test_os.EnvironTests.test_write) ... ok
test_eventfd_initval (test.test_os.EventfdTests.test_eventfd_initval) ... skipped 'requires os.eventfd'
test_eventfd_select (test.test_os.EventfdTests.test_eventfd_select) ... skipped 'requires os.eventfd'
test_eventfd_semaphore (test.test_os.EventfdTests.test_eventfd_semaphore) ... skipped 'requires os.eventfd'
test_execv_with_bad_arglist (test.test_os.ExecTests.test_execv_with_bad_arglist) ... skipped 'need os.execv()'
test_execve_invalid_env (test.test_os.ExecTests.test_execve_invalid_env) ... skipped 'need os.execv()'
test_execve_with_empty_path (test.test_os.ExecTests.test_execve_with_empty_path) ... skipped 'need os.execv()'
test_execvpe_with_bad_arglist (test.test_os.ExecTests.test_execvpe_with_bad_arglist) ... skipped 'need os.execv()'
test_execvpe_with_bad_program (test.test_os.ExecTests.test_execvpe_with_bad_program) ... skipped 'need os.execv()'
test_internal_execvpe_str (test.test_os.ExecTests.test_internal_execvpe_str) ... skipped 'need os.execv()'
test_os_all (test.test_os.ExportsTests.test_os_all) ... ok
test_fds (test.test_os.ExtendedAttributeTests.test_fds) ... skipped 'no non-broken extended attribute support'
test_lpath (test.test_os.ExtendedAttributeTests.test_lpath) ... skipped 'no non-broken extended attribute support'
test_simple (test.test_os.ExtendedAttributeTests.test_simple) ... skipped 'no non-broken extended attribute support'
test_dup (test.test_os.FDInheritanceTests.test_dup) ... skipped 'requires subprocess support'
test_dup2 (test.test_os.FDInheritanceTests.test_dup2) ... skipped 'requires subprocess support'
test_dup_nul (test.test_os.FDInheritanceTests.test_dup_nul) ... skipped 'requires subprocess support'
test_dup_standard_stream (test.test_os.FDInheritanceTests.test_dup_standard_stream) ... skipped 'requires subprocess support'
test_get_inheritable_cloexec (test.test_os.FDInheritanceTests.test_get_inheritable_cloexec) ... skipped 'requires subprocess support'
test_get_set_inheritable (test.test_os.FDInheritanceTests.test_get_set_inheritable) ... skipped 'requires subprocess support'
test_get_set_inheritable_badf (test.test_os.FDInheritanceTests.test_get_set_inheritable_badf) ... skipped 'requires subprocess support'
test_get_set_inheritable_o_path (test.test_os.FDInheritanceTests.test_get_set_inheritable_o_path) ... skipped 'requires subprocess support'
test_open (test.test_os.FDInheritanceTests.test_open) ... skipped 'requires subprocess support'
test_pipe (test.test_os.FDInheritanceTests.test_pipe) ... skipped 'requires subprocess support'
test_set_inheritable_cloexec (test.test_os.FDInheritanceTests.test_set_inheritable_cloexec) ... skipped 'requires subprocess support'
test_identity (test.test_os.FSEncodingTests.test_identity) ... ok
test_nop (test.test_os.FSEncodingTests.test_nop) ... ok
test_access (test.test_os.FileTests.test_access) ... ok
test_closerange (test.test_os.FileTests.test_closerange) ... skipped 'WASI does not support dup.'
test_copy_file_range (test.test_os.FileTests.test_copy_file_range) ... skipped 'test needs os.copy_file_range()'
test_copy_file_range_invalid_values (test.test_os.FileTests.test_copy_file_range_invalid_values) ... skipped 'test needs os.copy_file_range()'
test_copy_file_range_offset (test.test_os.FileTests.test_copy_file_range_offset) ... skipped 'test needs os.copy_file_range()'
test_fdopen (test.test_os.FileTests.test_fdopen) ... ok
test_large_read (test.test_os.FileTests.test_large_read) ... skipped 'needs INT_MAX < PY_SSIZE_T_MAX'
test_large_readinto (test.test_os.FileTests.test_large_readinto) ... skipped 'needs INT_MAX < PY_SSIZE_T_MAX'
test_open_keywords (test.test_os.FileTests.test_open_keywords) ... ok
test_read (test.test_os.FileTests.test_read) ... ok
test_readinto (test.test_os.FileTests.test_readinto) ... ok
test_readinto_badarg (test.test_os.FileTests.test_readinto_badarg) ... ok
test_readinto_non_blocking (test.test_os.FileTests.test_readinto_non_blocking) ... skipped 'requires os.pipe()'
test_rename (test.test_os.FileTests.test_rename) ... ok
test_replace (test.test_os.FileTests.test_replace) ... ok
test_splice (test.test_os.FileTests.test_splice) ... skipped 'test needs os.splice()'
test_splice_invalid_values (test.test_os.FileTests.test_splice_invalid_values) ... skipped 'test needs os.splice()'
test_splice_offset_in (test.test_os.FileTests.test_splice_offset_in) ... skipped 'test needs os.splice()'
test_splice_offset_out (test.test_os.FileTests.test_splice_offset_out) ... skipped 'test needs os.splice()'
test_symlink_keywords (test.test_os.FileTests.test_symlink_keywords) ... ok
test_write (test.test_os.FileTests.test_write) ... ok
test_write_windows_console (test.test_os.FileTests.test_write_windows_console) ... skipped 'test specific to the Windows console'
test_fork (test.test_os.ForkTests.test_fork) ... skipped 'requires working os.fork()'
test_fork_at_finalization (test.test_os.ForkTests.test_fork_at_finalization) ... skipped 'requires working os.fork()'
test_fork_warns_when_non_python_thread_exists (test.test_os.ForkTests.test_fork_warns_when_non_python_thread_exists) ... skipped 'requires working os.fork()'
test_compare_to_walk (test.test_os.FwalkTests.test_compare_to_walk) ... skipped 'Test needs os.fwalk()'
test_dir_fd (test.test_os.FwalkTests.test_dir_fd) ... skipped 'Test needs os.fwalk()'
test_fd_finalization (test.test_os.FwalkTests.test_fd_finalization) ... skipped 'Test needs os.fwalk()'
test_fd_leak (test.test_os.FwalkTests.test_fd_leak) ... skipped 'Test needs os.fwalk()'
test_file_like_path (test.test_os.FwalkTests.test_file_like_path) ... skipped 'Test needs os.fwalk()'
test_walk_above_recursion_limit (test.test_os.FwalkTests.test_walk_above_recursion_limit) ... skipped 'Test needs os.fwalk()'
test_walk_bad_dir (test.test_os.FwalkTests.test_walk_bad_dir) ... skipped 'Test needs os.fwalk()'
test_walk_bad_dir2 (test.test_os.FwalkTests.test_walk_bad_dir2) ... skipped 'Test needs os.fwalk()'
test_walk_bottom_up (test.test_os.FwalkTests.test_walk_bottom_up) ... skipped 'Test needs os.fwalk()'
test_walk_named_pipe (test.test_os.FwalkTests.test_walk_named_pipe) ... skipped 'Test needs os.fwalk()'
test_walk_named_pipe2 (test.test_os.FwalkTests.test_walk_named_pipe2) ... skipped 'Test needs os.fwalk()'
test_walk_prune (test.test_os.FwalkTests.test_walk_prune) ... skipped 'Test needs os.fwalk()'
test_walk_symlink (test.test_os.FwalkTests.test_walk_symlink) ... skipped 'Test needs os.fwalk()'
test_walk_topdown (test.test_os.FwalkTests.test_walk_topdown) ... skipped 'Test needs os.fwalk()'
test_yields_correct_dir_fd (test.test_os.FwalkTests.test_yields_correct_dir_fd) ... skipped 'Test needs os.fwalk()'
test_getrandom0 (test.test_os.GetRandomTests.test_getrandom0) ... skipped 'need os.getrandom()'
test_getrandom_nonblock (test.test_os.GetRandomTests.test_getrandom_nonblock) ... skipped 'need os.getrandom()'
test_getrandom_random (test.test_os.GetRandomTests.test_getrandom_random) ... skipped 'need os.getrandom()'
test_getrandom_type (test.test_os.GetRandomTests.test_getrandom_type) ... skipped 'need os.getrandom()'
test_getrandom_value (test.test_os.GetRandomTests.test_getrandom_value) ... skipped 'need os.getrandom()'
test_link (test.test_os.LinkTests.test_link) ... ERROR
test_link_bytes (test.test_os.LinkTests.test_link_bytes) ... ERROR
test_unicode_name (test.test_os.LinkTests.test_unicode_name) ... ERROR
test_getlogin (test.test_os.LoginTests.test_getlogin) ... skipped 'Skip due to platform/environment differences on *NIX buildbots'
test_exist_ok_existing_directory (test.test_os.MakedirTests.test_exist_ok_existing_directory) ... skipped "WASI's umask is a stub."
test_exist_ok_existing_regular_file (test.test_os.MakedirTests.test_exist_ok_existing_regular_file) ... ok
test_exist_ok_s_isgid_directory (test.test_os.MakedirTests.test_exist_ok_s_isgid_directory) ... skipped "WASI's umask is a stub."
test_makedir (test.test_os.MakedirTests.test_makedir) ... ok
test_mode (test.test_os.MakedirTests.test_mode) ... skipped "WASI's umask is a stub."
test_win32_mkdir_700 (test.test_os.MakedirTests.test_win32_mkdir_700) ... skipped 'requires Windows'
test_memfd_create (test.test_os.MemfdCreateTests.test_memfd_create) ... skipped 'requires os.memfd_create'
test_getcwd (test.test_os.MiscTests.test_getcwd) ... ok
test_getcwd_long_path (test.test_os.MiscTests.test_getcwd_long_path) ... Tested current directory length: 2000
ok
test_getcwdb (test.test_os.MiscTests.test_getcwdb) ... ok
test_directory_link_nonlocal (test.test_os.NonLocalSymlinkTests.test_directory_link_nonlocal)
The symlink target should resolve relative to the link, not relative ... skipped 'Requires functional symlink implementation'
test_oserror_filename (test.test_os.OSErrorTests.test_oserror_filename) ... ok
test_path_t_converter (test.test_os.PathTConverterTests.test_path_t_converter) ... ok
test_path_t_converter_and_custom_class (test.test_os.PathTConverterTests.test_path_t_converter_and_custom_class) ... ok
test_listdir (test.test_os.Pep383Tests.test_listdir) ... ok
test_open (test.test_os.Pep383Tests.test_open) ... ok
test_stat (test.test_os.Pep383Tests.test_stat) ... ok
test_statvfs (test.test_os.Pep383Tests.test_statvfs) ... skipped 'need os.statvfs()'
test_getppid (test.test_os.PidTests.test_getppid) ... skipped 'requires subprocess support'
test_waitpid (test.test_os.PidTests.test_waitpid) ... skipped 'requires subprocess support'
test_waitpid_windows (test.test_os.PidTests.test_waitpid_windows) ... skipped 'requires subprocess support'
test_waitstatus_to_exitcode (test.test_os.PidTests.test_waitstatus_to_exitcode) ... skipped 'requires subprocess support'
test_waitstatus_to_exitcode_kill (test.test_os.PidTests.test_waitstatus_to_exitcode_kill) ... skipped 'requires subprocess support'
test_waitstatus_to_exitcode_windows (test.test_os.PidTests.test_waitstatus_to_exitcode_windows) ... skipped 'requires subprocess support'
test_setegid (test.test_os.PosixUidGidTests.test_setegid) ... skipped 'test needs os.setegid()'
test_seteuid (test.test_os.PosixUidGidTests.test_seteuid) ... skipped 'test needs os.seteuid()'
test_setgid (test.test_os.PosixUidGidTests.test_setgid) ... skipped 'test needs os.setgid()'
test_setregid (test.test_os.PosixUidGidTests.test_setregid) ... skipped 'test needs os.setregid()'
test_setregid_neg1 (test.test_os.PosixUidGidTests.test_setregid_neg1) ... skipped 'test needs os.setregid()'
test_setreuid (test.test_os.PosixUidGidTests.test_setreuid) ... skipped 'test needs os.setreuid()'
test_setreuid_neg1 (test.test_os.PosixUidGidTests.test_setreuid_neg1) ... skipped 'test needs os.setreuid()'
test_setuid (test.test_os.PosixUidGidTests.test_setuid) ... skipped 'test needs os.setuid()'
test_set_get_priority (test.test_os.ProgramPriorityTests.test_set_get_priority) ... skipped 'needs os.getpriority and os.setpriority'
test_open_via_ptsname (test.test_os.PseudoterminalTests.test_open_via_ptsname) ... skipped 'need os.openpty()'
test_openpty (test.test_os.PseudoterminalTests.test_openpty) ... skipped 'need os.openpty()'
test_pipe_spawnl (test.test_os.PseudoterminalTests.test_pipe_spawnl) ... skipped 'need os.openpty()'
test_posix_pty_functions (test.test_os.PseudoterminalTests.test_posix_pty_functions) ... skipped 'need os.openpty()'
test_bytes (test.test_os.ReadlinkTests.test_bytes) ... skipped 'Requires functional symlink implementation'
test_missing_link (test.test_os.ReadlinkTests.test_missing_link) ... ok
test_not_symlink (test.test_os.ReadlinkTests.test_not_symlink) ... ok
test_pathlike (test.test_os.ReadlinkTests.test_pathlike) ... skipped 'Requires functional symlink implementation'
test_pathlike_bytes (test.test_os.ReadlinkTests.test_pathlike_bytes) ... skipped 'Requires functional symlink implementation'
test_remove_all (test.test_os.RemoveDirsTests.test_remove_all) ... ok
test_remove_nothing (test.test_os.RemoveDirsTests.test_remove_nothing) ... ok
test_remove_partial (test.test_os.RemoveDirsTests.test_remove_partial) ... ok
test_nowait (test.test_os.SpawnTests.test_nowait) ... skipped 'requires subprocess support'
test_spawnl (test.test_os.SpawnTests.test_spawnl) ... skipped 'requires subprocess support'
test_spawnl_noargs (test.test_os.SpawnTests.test_spawnl_noargs) ... skipped 'requires subprocess support'
test_spawnle (test.test_os.SpawnTests.test_spawnle) ... skipped 'requires subprocess support'
test_spawnle_noargs (test.test_os.SpawnTests.test_spawnle_noargs) ... skipped 'requires subprocess support'
test_spawnlp (test.test_os.SpawnTests.test_spawnlp) ... skipped 'requires subprocess support'
test_spawnlpe (test.test_os.SpawnTests.test_spawnlpe) ... skipped 'requires subprocess support'
test_spawnv (test.test_os.SpawnTests.test_spawnv) ... skipped 'requires subprocess support'
test_spawnv_noargs (test.test_os.SpawnTests.test_spawnv_noargs) ... skipped 'requires subprocess support'
test_spawnve (test.test_os.SpawnTests.test_spawnve) ... skipped 'requires subprocess support'
test_spawnve_bytes (test.test_os.SpawnTests.test_spawnve_bytes) ... skipped 'requires subprocess support'
test_spawnve_invalid_env (test.test_os.SpawnTests.test_spawnve_invalid_env) ... skipped 'requires subprocess support'
test_spawnve_noargs (test.test_os.SpawnTests.test_spawnve_noargs) ... skipped 'requires subprocess support'
test_spawnvp (test.test_os.SpawnTests.test_spawnvp) ... skipped 'requires subprocess support'
test_spawnvpe (test.test_os.SpawnTests.test_spawnvpe) ... skipped 'requires subprocess support'
test_spawnvpe_invalid_env (test.test_os.SpawnTests.test_spawnvpe_invalid_env) ... skipped 'requires subprocess support'
test_15261 (test.test_os.StatAttributeTests.test_15261) ... skipped 'Win32 specific tests'
test_1686475 (test.test_os.StatAttributeTests.test_1686475) ... skipped 'Win32 specific tests'
test_access_denied (test.test_os.StatAttributeTests.test_access_denied) ... skipped 'Win32 specific tests'
test_file_attributes (test.test_os.StatAttributeTests.test_file_attributes) ... skipped 'st_file_attributes is Win32 specific'
test_stat_attributes (test.test_os.StatAttributeTests.test_stat_attributes) ... ok
test_stat_attributes_bytes (test.test_os.StatAttributeTests.test_stat_attributes_bytes) ... ok
test_stat_block_device (test.test_os.StatAttributeTests.test_stat_block_device) ... skipped 'Win32 specific tests'
test_stat_result_pickle (test.test_os.StatAttributeTests.test_stat_result_pickle) ... ok
test_statvfs_attributes (test.test_os.StatAttributeTests.test_statvfs_attributes) ... skipped 'test needs os.statvfs()'
test_statvfs_result_pickle (test.test_os.StatAttributeTests.test_statvfs_result_pickle) ... skipped 'need os.statvfs()'
test_does_not_crash (test.test_os.TermsizeTests.test_does_not_crash)
Check if get_terminal_size() returns a meaningful value. ... skipped 'requires os.get_terminal_size'
test_stty_match (test.test_os.TermsizeTests.test_stty_match)
Check if stty returns the same results ... skipped 'requires os.get_terminal_size'
test_windows_fd (test.test_os.TermsizeTests.test_windows_fd)
Check if get_terminal_size() returns a meaningful value in Windows ... skipped 'requires os.get_terminal_size'
test_uninstantiable (test.test_os.TestDirEntry.test_uninstantiable) ... ok
test_unpickable (test.test_os.TestDirEntry.test_unpickable) ... ok
test_blocking (test.test_os.TestInvalidFD.test_blocking) ... skipped 'Cannot create invalid FD on WASI.'
test_closerange (test.test_os.TestInvalidFD.test_closerange) ... skipped 'Cannot create invalid FD on WASI.'
test_dup (test.test_os.TestInvalidFD.test_dup) ... skipped 'Cannot create invalid FD on WASI.'
test_dup2 (test.test_os.TestInvalidFD.test_dup2) ... skipped 'Cannot create invalid FD on WASI.'
test_dup2_negative_fd (test.test_os.TestInvalidFD.test_dup2_negative_fd) ... skipped 'Cannot create invalid FD on WASI.'
test_fchdir (test.test_os.TestInvalidFD.test_fchdir) ... skipped 'Cannot create invalid FD on WASI.'
test_fchmod (test.test_os.TestInvalidFD.test_fchmod) ... skipped 'Cannot create invalid FD on WASI.'
test_fchown (test.test_os.TestInvalidFD.test_fchown) ... skipped 'Cannot create invalid FD on WASI.'
test_fdatasync (test.test_os.TestInvalidFD.test_fdatasync) ... skipped 'Cannot create invalid FD on WASI.'
test_fdopen (test.test_os.TestInvalidFD.test_fdopen) ... skipped 'Cannot create invalid FD on WASI.'
test_fpathconf (test.test_os.TestInvalidFD.test_fpathconf) ... skipped 'Cannot create invalid FD on WASI.'
test_fpathconf_bad_fd (test.test_os.TestInvalidFD.test_fpathconf_bad_fd) ... skipped 'Cannot create invalid FD on WASI.'
test_fstat (test.test_os.TestInvalidFD.test_fstat) ... skipped 'Cannot create invalid FD on WASI.'
test_fstatvfs (test.test_os.TestInvalidFD.test_fstatvfs) ... skipped 'Cannot create invalid FD on WASI.'
test_fsync (test.test_os.TestInvalidFD.test_fsync) ... skipped 'Cannot create invalid FD on WASI.'
test_ftruncate (test.test_os.TestInvalidFD.test_ftruncate) ... skipped 'Cannot create invalid FD on WASI.'
test_inheritable (test.test_os.TestInvalidFD.test_inheritable) ... skipped 'Cannot create invalid FD on WASI.'
test_isatty (test.test_os.TestInvalidFD.test_isatty) ... skipped 'Cannot create invalid FD on WASI.'
test_lseek (test.test_os.TestInvalidFD.test_lseek) ... skipped 'Cannot create invalid FD on WASI.'
test_read (test.test_os.TestInvalidFD.test_read) ... skipped 'Cannot create invalid FD on WASI.'
test_readinto (test.test_os.TestInvalidFD.test_readinto) ... skipped 'Cannot create invalid FD on WASI.'
test_readv (test.test_os.TestInvalidFD.test_readv) ... skipped 'Cannot create invalid FD on WASI.'
test_tcgetpgrp (test.test_os.TestInvalidFD.test_tcgetpgrp) ... skipped 'Cannot create invalid FD on WASI.'
test_tcsetpgrpt (test.test_os.TestInvalidFD.test_tcsetpgrpt) ... skipped 'Cannot create invalid FD on WASI.'
test_ttyname (test.test_os.TestInvalidFD.test_ttyname) ... skipped 'Cannot create invalid FD on WASI.'
test_write (test.test_os.TestInvalidFD.test_write) ... skipped 'Cannot create invalid FD on WASI.'
test_writev (test.test_os.TestInvalidFD.test_writev) ... skipped 'Cannot create invalid FD on WASI.'
test_argument_required (test.test_os.TestPEP519.test_argument_required) ... ok
test_bad_pathlike (test.test_os.TestPEP519.test_bad_pathlike) ... ok
test_fsencode_fsdecode (test.test_os.TestPEP519.test_fsencode_fsdecode) ... ok
test_fspath_set_to_None (test.test_os.TestPEP519.test_fspath_set_to_None) ... ok
test_garbage_in_exception_out (test.test_os.TestPEP519.test_garbage_in_exception_out) ... ok
test_pathlike (test.test_os.TestPEP519.test_pathlike) ... ok
test_pathlike_class_getitem (test.test_os.TestPEP519.test_pathlike_class_getitem) ... ok
test_pathlike_subclass_slots (test.test_os.TestPEP519.test_pathlike_subclass_slots) ... ok
test_pathlike_subclasshook (test.test_os.TestPEP519.test_pathlike_subclasshook) ... ok
test_return_bytes (test.test_os.TestPEP519.test_return_bytes) ... ok
test_return_string (test.test_os.TestPEP519.test_return_string) ... ok
test_argument_required (test.test_os.TestPEP519PurePython.test_argument_required) ... ok
test_bad_pathlike (test.test_os.TestPEP519PurePython.test_bad_pathlike) ... ok
test_fsencode_fsdecode (test.test_os.TestPEP519PurePython.test_fsencode_fsdecode) ... ok
test_fspath_set_to_None (test.test_os.TestPEP519PurePython.test_fspath_set_to_None) ... ok
test_garbage_in_exception_out (test.test_os.TestPEP519PurePython.test_garbage_in_exception_out) ... ok
test_pathlike (test.test_os.TestPEP519PurePython.test_pathlike) ... ok
test_pathlike_class_getitem (test.test_os.TestPEP519PurePython.test_pathlike_class_getitem) ... ok
test_pathlike_subclass_slots (test.test_os.TestPEP519PurePython.test_pathlike_subclass_slots) ... ok
test_pathlike_subclasshook (test.test_os.TestPEP519PurePython.test_pathlike_subclasshook) ... ok
test_return_bytes (test.test_os.TestPEP519PurePython.test_return_bytes) ... ok
test_return_string (test.test_os.TestPEP519PurePython.test_return_string) ... ok
test_attributes (test.test_os.TestScandir.test_attributes) ... ERROR
test_attributes_junctions (test.test_os.TestScandir.test_attributes_junctions) ... skipped 'Can only test junctions with creation on win32.'
test_bad_path_type (test.test_os.TestScandir.test_bad_path_type) ... ok
test_broken_symlink (test.test_os.TestScandir.test_broken_symlink) ... skipped 'cannot create symbolic link'
test_bytes (test.test_os.TestScandir.test_bytes) ... ok
test_bytes_like (test.test_os.TestScandir.test_bytes_like) ... ok
test_close (test.test_os.TestScandir.test_close) ... ok
test_consume_iterator_twice (test.test_os.TestScandir.test_consume_iterator_twice) ... ok
test_context_manager (test.test_os.TestScandir.test_context_manager) ... ok
test_context_manager_close (test.test_os.TestScandir.test_context_manager_close) ... ok
test_context_manager_exception (test.test_os.TestScandir.test_context_manager_exception) ... ok
test_current_directory (test.test_os.TestScandir.test_current_directory) ... ok
test_empty_path (test.test_os.TestScandir.test_empty_path) ... skipped "WASI maps '' to cwd"
test_fd (test.test_os.TestScandir.test_fd) ... skipped 'fd support for listdir required for this test.'
test_fspath_protocol (test.test_os.TestScandir.test_fspath_protocol) ... ok
test_fspath_protocol_bytes (test.test_os.TestScandir.test_fspath_protocol_bytes) ... ok
test_removed_dir (test.test_os.TestScandir.test_removed_dir) ... ok
test_removed_file (test.test_os.TestScandir.test_removed_file) ... ok
test_repr (test.test_os.TestScandir.test_repr) ... ok
test_resource_warning (test.test_os.TestScandir.test_resource_warning) ... ok
test_uninstantiable (test.test_os.TestScandir.test_uninstantiable) ... ok
test_unpickable (test.test_os.TestScandir.test_unpickable) ... ok
test_flags (test.test_os.TestSendfile.test_flags) ... skipped 'test needs os.sendfile()'
test_headers (test.test_os.TestSendfile.test_headers) ... skipped 'test needs os.sendfile()'
test_headers_overflow_32bits (test.test_os.TestSendfile.test_headers_overflow_32bits) ... skipped 'test needs os.sendfile()'
test_invalid_offset (test.test_os.TestSendfile.test_invalid_offset) ... skipped 'test needs os.sendfile()'
test_keywords (test.test_os.TestSendfile.test_keywords) ... skipped 'test needs os.sendfile()'
test_offset_overflow (test.test_os.TestSendfile.test_offset_overflow) ... skipped 'test needs os.sendfile()'
test_send_at_certain_offset (test.test_os.TestSendfile.test_send_at_certain_offset) ... skipped 'test needs os.sendfile()'
test_send_whole_file (test.test_os.TestSendfile.test_send_whole_file) ... skipped 'test needs os.sendfile()'
test_trailers (test.test_os.TestSendfile.test_trailers) ... skipped 'test needs os.sendfile()'
test_trailers_overflow_32bits (test.test_os.TestSendfile.test_trailers_overflow_32bits) ... skipped 'test needs os.sendfile()'
test_timerfd_TFD_TIMER_ABSTIME (test.test_os.TimerfdTests.test_timerfd_TFD_TIMER_ABSTIME) ... skipped 'requires os.timerfd_create'
test_timerfd_initval (test.test_os.TimerfdTests.test_timerfd_initval) ... skipped 'requires os.timerfd_create'
test_timerfd_interval (test.test_os.TimerfdTests.test_timerfd_interval) ... skipped 'requires os.timerfd_create'
test_timerfd_negative (test.test_os.TimerfdTests.test_timerfd_negative) ... skipped 'requires os.timerfd_create'
test_timerfd_non_blocking (test.test_os.TimerfdTests.test_timerfd_non_blocking) ... skipped 'requires os.timerfd_create'
test_timerfd_ns_TFD_TIMER_ABSTIME (test.test_os.TimerfdTests.test_timerfd_ns_TFD_TIMER_ABSTIME) ... skipped 'requires os.timerfd_create'
test_timerfd_ns_initval (test.test_os.TimerfdTests.test_timerfd_ns_initval) ... skipped 'requires os.timerfd_create'
test_timerfd_ns_interval (test.test_os.TimerfdTests.test_timerfd_ns_interval) ... skipped 'requires os.timerfd_create'
test_timerfd_ns_poll (test.test_os.TimerfdTests.test_timerfd_ns_poll) ... skipped 'requires os.timerfd_create'
test_timerfd_ns_select (test.test_os.TimerfdTests.test_timerfd_ns_select) ... skipped 'requires os.timerfd_create'
test_timerfd_poll (test.test_os.TimerfdTests.test_timerfd_poll) ... skipped 'requires os.timerfd_create'
test_timerfd_select (test.test_os.TimerfdTests.test_timerfd_select) ... skipped 'requires os.timerfd_create'
test_times (test.test_os.TimesTests.test_times) ... ok
test_urandom_failure (test.test_os.URandomFDTests.test_urandom_failure) ... skipped 'os.random() does not use a file descriptor'
test_urandom_fd_closed (test.test_os.URandomFDTests.test_urandom_fd_closed) ... skipped 'os.random() does not use a file descriptor'
test_urandom_fd_reopened (test.test_os.URandomFDTests.test_urandom_fd_reopened) ... skipped 'os.random() does not use a file descriptor'
test_urandom_length (test.test_os.URandomTests.test_urandom_length) ... ok
test_urandom_subprocess (test.test_os.URandomTests.test_urandom_subprocess) ... skipped 'requires subprocess support'
test_urandom_value (test.test_os.URandomTests.test_urandom_value) ... ok
test_issue31577 (test.test_os.UtimeTests.test_issue31577) ... ok
test_large_time (test.test_os.UtimeTests.test_large_time) ... skipped 'requires NTFS'
test_utime (test.test_os.UtimeTests.test_utime) ... ok
test_utime_by_indexed (test.test_os.UtimeTests.test_utime_by_indexed) ... ok
test_utime_by_times (test.test_os.UtimeTests.test_utime_by_times) ... ok
test_utime_current (test.test_os.UtimeTests.test_utime_current) ... ok
test_utime_current_old (test.test_os.UtimeTests.test_utime_current_old) ... ok
test_utime_dir_fd (test.test_os.UtimeTests.test_utime_dir_fd) ... ok
test_utime_directory (test.test_os.UtimeTests.test_utime_directory) ... ok
test_utime_fd (test.test_os.UtimeTests.test_utime_fd) ... ok
test_utime_invalid_arguments (test.test_os.UtimeTests.test_utime_invalid_arguments) ... ok
test_utime_nofollow_symlinks (test.test_os.UtimeTests.test_utime_nofollow_symlinks) ... ok
test_utime_nonexistent (test.test_os.UtimeTests.test_utime_nonexistent) ... ok
test_file_like_path (test.test_os.WalkTests.test_file_like_path) ... ok
test_walk_above_recursion_limit (test.test_os.WalkTests.test_walk_above_recursion_limit) ... ok
test_walk_bad_dir (test.test_os.WalkTests.test_walk_bad_dir) ... ok
test_walk_bad_dir2 (test.test_os.WalkTests.test_walk_bad_dir2) ... ok
test_walk_bottom_up (test.test_os.WalkTests.test_walk_bottom_up) ... ok
test_walk_many_open_files (test.test_os.WalkTests.test_walk_many_open_files) ... ok
test_walk_named_pipe (test.test_os.WalkTests.test_walk_named_pipe) ... skipped 'requires os.mkfifo()'
test_walk_named_pipe2 (test.test_os.WalkTests.test_walk_named_pipe2) ... skipped 'requires os.mkfifo()'
test_walk_prune (test.test_os.WalkTests.test_walk_prune) ... ok
test_walk_symlink (test.test_os.WalkTests.test_walk_symlink) ... skipped 'need symlink support'
test_walk_topdown (test.test_os.WalkTests.test_walk_topdown) ... ok
test_chdir (test.test_os.Win32ErrorTests.test_chdir) ... skipped 'Win32 specific tests'
test_chmod (test.test_os.Win32ErrorTests.test_chmod) ... skipped 'Win32 specific tests'
test_mkdir (test.test_os.Win32ErrorTests.test_mkdir) ... skipped 'Win32 specific tests'
test_remove (test.test_os.Win32ErrorTests.test_remove) ... skipped 'Win32 specific tests'
test_rename (test.test_os.Win32ErrorTests.test_rename) ... skipped 'Win32 specific tests'
test_utime (test.test_os.Win32ErrorTests.test_utime) ... skipped 'Win32 specific tests'
test_create_junction (test.test_os.Win32JunctionTests.test_create_junction) ... skipped 'Win32 specific tests'
test_unlink_removes_junction (test.test_os.Win32JunctionTests.test_unlink_removes_junction) ... skipped 'Win32 specific tests'
test_CTRL_BREAK_EVENT (test.test_os.Win32KillTests.test_CTRL_BREAK_EVENT) ... skipped 'Win32 specific tests'
test_CTRL_C_EVENT (test.test_os.Win32KillTests.test_CTRL_C_EVENT) ... skipped 'Win32 specific tests'
test_kill_int (test.test_os.Win32KillTests.test_kill_int) ... skipped 'Win32 specific tests'
test_kill_sigterm (test.test_os.Win32KillTests.test_kill_sigterm) ... skipped 'Win32 specific tests'
test_listdir_extended_path (test.test_os.Win32ListdirTests.test_listdir_extended_path)
Test when the path starts with '\\?\'. ... skipped 'Win32 specific tests'
test_listdir_no_extended_path (test.test_os.Win32ListdirTests.test_listdir_no_extended_path)
Test when the path is not an "extended" path. ... skipped 'Win32 specific tests'
test_listdrives (test.test_os.Win32ListdriveTests.test_listdrives) ... skipped 'NT specific tests'
test_listmounts (test.test_os.Win32ListdriveTests.test_listmounts) ... skipped 'NT specific tests'
test_listvolumes (test.test_os.Win32ListdriveTests.test_listvolumes) ... skipped 'NT specific tests'
test_getfinalpathname_handles (test.test_os.Win32NtTests.test_getfinalpathname_handles) ... skipped 'Win32 specific tests'
test_stat_inaccessible_file (test.test_os.Win32NtTests.test_stat_inaccessible_file) ... skipped 'Win32 specific tests'
test_stat_unlink_race (test.test_os.Win32NtTests.test_stat_unlink_race) ... skipped 'Win32 specific tests'
test_12084 (test.test_os.Win32SymlinkTests.test_12084) ... skipped 'Win32 specific tests'
test_29248 (test.test_os.Win32SymlinkTests.test_29248) ... skipped 'Win32 specific tests'
test_appexeclink (test.test_os.Win32SymlinkTests.test_appexeclink) ... skipped 'Win32 specific tests'
test_buffer_overflow (test.test_os.Win32SymlinkTests.test_buffer_overflow) ... skipped 'Win32 specific tests'
test_directory_link (test.test_os.Win32SymlinkTests.test_directory_link) ... skipped 'Win32 specific tests'
test_file_link (test.test_os.Win32SymlinkTests.test_file_link) ... skipped 'Win32 specific tests'
test_isdir_on_directory_link_to_missing_target (test.test_os.Win32SymlinkTests.test_isdir_on_directory_link_to_missing_target) ... skipped 'Win32 specific tests'
test_remove_directory_link_to_missing_target (test.test_os.Win32SymlinkTests.test_remove_directory_link_to_missing_target) ... skipped 'Win32 specific tests'
test_rmdir_on_directory_link_to_missing_target (test.test_os.Win32SymlinkTests.test_rmdir_on_directory_link_to_missing_target) ... skipped 'Win32 specific tests'
2025-04-15T07:08:28.6913258Z
======================================================================
ERROR: test_link (test.test_os.LinkTests.test_link)
----------------------------------------------------------------------
Traceback (most recent call last):
File "/Lib/test/test_os.py", line 2639, in test_link
self._test_link(self.file1, self.file2)
~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
File "/Lib/test/test_os.py", line 2632, in _test_link
os.link(file1, file2)
~~~~~~~^^^^^^^^^^^^^^
OSError: [Errno 28] Invalid argument: '@test_42_tmpÃ¦' -> '@test_42_tmpÃ¦2'
2025-04-15T07:08:28.6919980Z
======================================================================
ERROR: test_link_bytes (test.test_os.LinkTests.test_link_bytes)
----------------------------------------------------------------------
Traceback (most recent call last):
File "/Lib/test/test_os.py", line 2642, in test_link_bytes
self._test_link(bytes(self.file1, sys.getfilesystemencoding()),
~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
bytes(self.file2, sys.getfilesystemencoding()))
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
File "/Lib/test/test_os.py", line 2632, in _test_link
os.link(file1, file2)
~~~~~~~^^^^^^^^^^^^^^
OSError: [Errno 28] Invalid argument: b'@test_42_tmp\xc3\xa6' -> b'@test_42_tmp\xc3\xa62'
2025-04-15T07:08:28.6928339Z
======================================================================
ERROR: test_unicode_name (test.test_os.LinkTests.test_unicode_name)
----------------------------------------------------------------------
Traceback (most recent call last):
File "/Lib/test/test_os.py", line 2653, in test_unicode_name
self._test_link(self.file1, self.file2)
~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
File "/Lib/test/test_os.py", line 2632, in _test_link
os.link(file1, file2)
~~~~~~~^^^^^^^^^^^^^^
OSError: [Errno 28] Invalid argument: '@test_42_tmpÃ¦Ã±' -> '@test_42_tmpÃ¦Ã±2'
2025-04-15T07:08:28.7063937Z
======================================================================
ERROR: test_attributes (test.test_os.TestScandir.test_attributes)
----------------------------------------------------------------------
Traceback (most recent call last):
File "/Lib/test/test_os.py", line 5142, in test_attributes
os.link(filename, os.path.join(self.path, "link_file.txt"))
~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
OSError: [Errno 28] Invalid argument: '/build/test_python_403095Ã¦/@test_42_tmpÃ¦/file.txt' -> '/build/test_python_403095Ã¦/@test_42_tmpÃ¦/link_file.txt'
2025-04-15T07:08:28.7070787Z
----------------------------------------------------------------------
Ran 373 tests in 2.043s
2025-04-15T07:08:28.7071870Z
FAILED (errors=4, skipped=232)
test test_os failed
0:01:27 load avg: 5.23 [404/486/6] [32mtest_isinstance passed[0m
0:01:28 load avg: 5.23 [405/486/6] [32mtest_threadsignals passed[0m
0:01:28 load avg: 5.29 [406/486/6] [32mtest.test_inspect.test_inspect passed[0m
0:01:28 load avg: 5.29 [407/486/6] [33mtest.test_multiprocessing_spawn.test_misc skipped[0m
test.test_multiprocessing_spawn.test_misc skipped -- No module named '_multiprocessing'
0:01:29 load avg: 5.29 [408/486/6] [32mtest_trace passed[0m
0:01:29 load avg: 5.29 [409/486/6] [32mtest_types passed[0m
0:01:29 load avg: 5.29 [410/486/6] [32mtest_zipapp passed[0m
0:01:30 load avg: 5.29 [411/486/6] [32mtest_difflib passed[0m
0:01:30 load avg: 5.29 [412/486/6] [32mtest_weakset passed[0m
0:01:31 load avg: 5.29 [413/486/6] [32mtest_hashlib passed[0m
0:01:31 load avg: 5.29 [414/486/6] [32mtest_dataclasses passed[0m
0:01:32 load avg: 5.29 [415/486/6] [32mtest_codecmaps_kr passed[0m
0:01:32 load avg: 5.29 [416/486/6] [32mtest_pep646_syntax passed[0m
0:01:32 load avg: 5.29 [417/486/6] [32mtest_typing passed[0m
0:01:32 load avg: 5.29 [418/486/6] [32mtest_context passed[0m
0:01:32 load avg: 5.29 [419/486/6] [32mtest_format passed[0m
0:01:33 load avg: 5.29 [420/486/6] [32mtest_funcattrs passed[0m
0:01:33 load avg: 5.29 [421/486/6] [32mtest_unary passed[0m
0:01:33 load avg: 5.35 [422/486/6] [32mtest_unparse passed[0m
0:01:33 load avg: 5.35 [423/486/6] [33mtest.test_asyncio.test_futures2 skipped[0m
test.test_asyncio.test_futures2 skipped -- requires socket support
0:01:34 load avg: 5.35 [424/486/6] [32mtest_fileinput passed[0m
0:01:34 load avg: 5.35 [425/486/6] [32mtest_codeccallbacks passed[0m
0:01:34 load avg: 5.35 [426/486/6] [32mtest_xml_etree_c passed[0m
0:01:34 load avg: 5.35 [427/486/6] [32mtest_symtable passed[0m
0:01:34 load avg: 5.35 [428/486/6] [32mtest_sys_setprofile passed[0m
0:01:34 load avg: 5.35 [429/486/6] [32mtest_cmd passed[0m
0:01:34 load avg: 5.35 [430/486/7] [1;31m[1;31mtest_ntpath failed (2 errors)[0m[0m
test_abspath (test.test_ntpath.NtCommonTest.test_abspath) ... ok
test_abspath_issue3426 (test.test_ntpath.NtCommonTest.test_abspath_issue3426) ... ok
test_commonprefix (test.test_ntpath.NtCommonTest.test_commonprefix) ... ok
test_exists (test.test_ntpath.NtCommonTest.test_exists) ... ok
test_exists_bool (test.test_ntpath.NtCommonTest.test_exists_bool) ... ok
test_exists_fd (test.test_ntpath.NtCommonTest.test_exists_fd) ... skipped 'requires os.pipe()'
test_expandvars (test.test_ntpath.NtCommonTest.test_expandvars) ... ok
test_expandvars_nonascii (test.test_ntpath.NtCommonTest.test_expandvars_nonascii) ... ok
test_filetime (test.test_ntpath.NtCommonTest.test_filetime) ... ok
test_getsize (test.test_ntpath.NtCommonTest.test_getsize) ... ok
test_import (test.test_ntpath.NtCommonTest.test_import) ... skipped 'requires subprocess support'
test_isdir (test.test_ntpath.NtCommonTest.test_isdir) ... ok
test_isfile (test.test_ntpath.NtCommonTest.test_isfile) ... ok
test_join_errors (test.test_ntpath.NtCommonTest.test_join_errors) ... ok
test_no_argument (test.test_ntpath.NtCommonTest.test_no_argument) ... ok
test_nonascii_abspath (test.test_ntpath.NtCommonTest.test_nonascii_abspath) ... ok
test_normcase (test.test_ntpath.NtCommonTest.test_normcase) ... ok
test_normpath_issue106242 (test.test_ntpath.NtCommonTest.test_normpath_issue106242) ... ok
test_normpath_issue5827 (test.test_ntpath.NtCommonTest.test_normpath_issue5827) ... ok
test_realpath (test.test_ntpath.NtCommonTest.test_realpath) ... ok
test_relpath_errors (test.test_ntpath.NtCommonTest.test_relpath_errors) ... ok
test_samefile (test.test_ntpath.NtCommonTest.test_samefile) ... ok
test_samefile_on_link (test.test_ntpath.NtCommonTest.test_samefile_on_link) ... ERROR
test_samefile_on_symlink (test.test_ntpath.NtCommonTest.test_samefile_on_symlink) ... skipped 'Requires functional symlink implementation'
test_sameopenfile (test.test_ntpath.NtCommonTest.test_sameopenfile) ... ok
test_samestat (test.test_ntpath.NtCommonTest.test_samestat) ... ok
test_samestat_on_link (test.test_ntpath.NtCommonTest.test_samestat_on_link) ... ERROR
test_samestat_on_symlink (test.test_ntpath.NtCommonTest.test_samestat_on_symlink) ... skipped 'Requires functional symlink implementation'
test_splitdrive (test.test_ntpath.NtCommonTest.test_splitdrive) ... ok
test_path_abspath (test.test_ntpath.PathLikeTests.test_path_abspath) ... ok
test_path_basename (test.test_ntpath.PathLikeTests.test_path_basename) ... ok
test_path_commonpath (test.test_ntpath.PathLikeTests.test_path_commonpath) ... ok
test_path_dirname (test.test_ntpath.PathLikeTests.test_path_dirname) ... ok
test_path_expanduser (test.test_ntpath.PathLikeTests.test_path_expanduser) ... ok
test_path_expandvars (test.test_ntpath.PathLikeTests.test_path_expandvars) ... ok
test_path_isabs (test.test_ntpath.PathLikeTests.test_path_isabs) ... ok
test_path_isdir (test.test_ntpath.PathLikeTests.test_path_isdir) ... ok
test_path_islink (test.test_ntpath.PathLikeTests.test_path_islink) ... ok
test_path_ismount (test.test_ntpath.PathLikeTests.test_path_ismount) ... ok
test_path_join (test.test_ntpath.PathLikeTests.test_path_join) ... ok
test_path_lexists (test.test_ntpath.PathLikeTests.test_path_lexists) ... ok
test_path_normcase (test.test_ntpath.PathLikeTests.test_path_normcase) ... ok
test_path_normpath (test.test_ntpath.PathLikeTests.test_path_normpath) ... ok
test_path_realpath (test.test_ntpath.PathLikeTests.test_path_realpath) ... ok
test_path_relpath (test.test_ntpath.PathLikeTests.test_path_relpath) ... ok
test_path_split (test.test_ntpath.PathLikeTests.test_path_split) ... ok
test_path_splitdrive (test.test_ntpath.PathLikeTests.test_path_splitdrive) ... ok
test_path_splitext (test.test_ntpath.PathLikeTests.test_path_splitext) ... ok
test_path_splitroot (test.test_ntpath.PathLikeTests.test_path_splitroot) ... ok
test_abspath (test.test_ntpath.TestNtpath.test_abspath) ... skipped "abspath requires 'nt' module"
test_commonpath (test.test_ntpath.TestNtpath.test_commonpath) ... ok
test_commonprefix (test.test_ntpath.TestNtpath.test_commonprefix) ... ok
test_con_device (test.test_ntpath.TestNtpath.test_con_device) ... skipped 'windows only'
test_expanduser (test.test_ntpath.TestNtpath.test_expanduser) ... ok
test_expandvars (test.test_ntpath.TestNtpath.test_expandvars) ... ok
test_expandvars_nonascii (test.test_ntpath.TestNtpath.test_expandvars_nonascii) ... ok
test_fast_paths_in_use (test.test_ntpath.TestNtpath.test_fast_paths_in_use) ... skipped 'Fast paths are only for win32'
test_isabs (test.test_ntpath.TestNtpath.test_isabs) ... ok
test_isdevdrive (test.test_ntpath.TestNtpath.test_isdevdrive) ... skipped 'Dev Drives only exist on Win32'
test_isdevdrive_fallback (test.test_ntpath.TestNtpath.test_isdevdrive_fallback) ... ok
test_isfile_anonymous_pipe (test.test_ntpath.TestNtpath.test_isfile_anonymous_pipe) ... skipped 'need os.pipe()'
test_isfile_driveletter (test.test_ntpath.TestNtpath.test_isfile_driveletter) ... skipped 'drive letters are a windows concept'
test_isfile_named_pipe (test.test_ntpath.TestNtpath.test_isfile_named_pipe) ... skipped 'windows only'
test_isjunction (test.test_ntpath.TestNtpath.test_isjunction) ... skipped 'Can only test junctions with creation on win32.'
test_ismount (test.test_ntpath.TestNtpath.test_ismount) ... ok
test_isreserved (test.test_ntpath.TestNtpath.test_isreserved) ... ok
test_join (test.test_ntpath.TestNtpath.test_join) ... ok
test_normpath (test.test_ntpath.TestNtpath.test_normpath) ... ok
test_nt_helpers (test.test_ntpath.TestNtpath.test_nt_helpers) ... skipped "OS helpers require 'nt' module"
test_realpath_basic (test.test_ntpath.TestNtpath.test_realpath_basic) ... skipped 'Requires functional symlink implementation'
test_realpath_broken_symlinks (test.test_ntpath.TestNtpath.test_realpath_broken_symlinks) ... skipped 'Requires functional symlink implementation'
test_realpath_curdir (test.test_ntpath.TestNtpath.test_realpath_curdir) ... ok
test_realpath_cwd (test.test_ntpath.TestNtpath.test_realpath_cwd) ... skipped 'need _getfinalpathname'
test_realpath_nul (test.test_ntpath.TestNtpath.test_realpath_nul) ... skipped 'need _getfinalpathname'
test_realpath_pardir (test.test_ntpath.TestNtpath.test_realpath_pardir) ... ok
test_realpath_permission (test.test_ntpath.TestNtpath.test_realpath_permission) ... skipped 'need _getfinalpathname'
test_realpath_relative (test.test_ntpath.TestNtpath.test_realpath_relative) ... skipped 'Requires functional symlink implementation'
test_realpath_strict (test.test_ntpath.TestNtpath.test_realpath_strict) ... skipped 'Requires functional symlink implementation'
test_realpath_symlink_loops (test.test_ntpath.TestNtpath.test_realpath_symlink_loops) ... skipped 'Requires functional symlink implementation'
test_realpath_symlink_loops_strict (test.test_ntpath.TestNtpath.test_realpath_symlink_loops_strict) ... skipped 'Requires functional symlink implementation'
test_realpath_symlink_prefix (test.test_ntpath.TestNtpath.test_realpath_symlink_prefix) ... skipped 'Requires functional symlink implementation'
test_relpath (test.test_ntpath.TestNtpath.test_relpath) ... ok
test_sameopenfile (test.test_ntpath.TestNtpath.test_sameopenfile) ... ok
test_split (test.test_ntpath.TestNtpath.test_split) ... ok
test_splitdrive (test.test_ntpath.TestNtpath.test_splitdrive) ... ok
test_splitext (test.test_ntpath.TestNtpath.test_splitext) ... ok
test_splitroot (test.test_ntpath.TestNtpath.test_splitroot) ... ok
2025-04-15T07:08:35.8704691Z
======================================================================
ERROR: test_samefile_on_link (test.test_ntpath.NtCommonTest.test_samefile_on_link)
----------------------------------------------------------------------
Traceback (most recent call last):
File "/Lib/test/test_genericpath.py", line 265, in test_samefile_on_link
self._test_samefile_on_link_func(os.link)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^
File "/Lib/test/test_genericpath.py", line 251, in _test_samefile_on_link_func
func(test_fn1, test_fn2)
~~~~^^^^^^^^^^^^^^^^^^^^
OSError: [Errno 28] Invalid argument: '@test_42_tmpÃ¦' -> '@test_42_tmpÃ¦2'
2025-04-15T07:08:35.8711943Z
======================================================================
ERROR: test_samestat_on_link (test.test_ntpath.NtCommonTest.test_samestat_on_link)
----------------------------------------------------------------------
Traceback (most recent call last):
File "/Lib/test/test_genericpath.py", line 308, in test_samestat_on_link
self._test_samestat_on_link_func(os.link)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^
File "/Lib/test/test_genericpath.py", line 292, in _test_samestat_on_link_func
func(test_fn1, test_fn2)
~~~~^^^^^^^^^^^^^^^^^^^^
OSError: [Errno 28] Invalid argument: '@test_42_tmpÃ¦1' -> '@test_42_tmpÃ¦2'
2025-04-15T07:08:35.8719378Z
----------------------------------------------------------------------
Ran 87 tests in 0.097s
2025-04-15T07:08:35.8720505Z
FAILED (errors=2, skipped=23)
test test_ntpath failed
0:01:35 load avg: 5.35 [431/486/7] [33mtest_optparse skipped[0m
test_optparse skipped -- test module requires subprocess
0:01:35 load avg: 5.35 [432/486/7] [33mtest.test_asyncio.test_sslproto skipped[0m
test.test_asyncio.test_sslproto skipped -- requires socket support
0:01:35 load avg: 5.35 [433/486/7] [32mtest_with passed[0m
0:01:35 load avg: 5.35 [434/486/7] [32mtest_extcall passed[0m
0:01:35 load avg: 5.35 [435/486/7] [32mtest_yield_from passed[0m
0:01:36 load avg: 5.35 [436/486/7] [32mtest_robotparser passed[0m -- running (1): test_fstring (30.2 sec)
0:01:36 load avg: 5.35 [437/486/7] [33mtest_multiprocessing_main_handling skipped[0m -- running (1): test_fstring (30.2 sec)
test_multiprocessing_main_handling skipped -- No module named '_multiprocessing'
0:01:36 load avg: 5.35 [438/486/7] [33mtest.test_asyncio.test_windows_events skipped[0m -- running (1): test_fstring (30.3 sec)
test.test_asyncio.test_windows_events skipped -- requires socket support
0:01:36 load avg: 5.35 [439/486/7] [32mtest_type_aliases passed[0m -- running (1): test_fstring (30.7 sec)
0:01:37 load avg: 5.35 [440/486/7] [32mtest_functools passed[0m -- running (1): test_fstring (31.5 sec)
0:01:37 load avg: 5.35 [441/486/7] [32mtest_builtin passed[0m -- running (1): test_fstring (31.6 sec)
0:01:38 load avg: 5.35 [442/486/7] [33mtest_cmd_line skipped[0m -- running (1): test_fstring (32.0 sec)
test_cmd_line skipped -- test module requires subprocess
0:01:38 load avg: 5.35 [443/486/8] [1;31m[1;31mtest_tarfile failed (4 errors)[0m[0m -- running (1): test_fstring (32.2 sec)
test_empty (test.test_tarfile.AppendTest.test_empty) ... ok
test_empty_fileobj (test.test_tarfile.AppendTest.test_empty_fileobj) ... ok
test_existing (test.test_tarfile.AppendTest.test_existing) ... ok
test_fileobj (test.test_tarfile.AppendTest.test_fileobj) ... ok
test_incomplete (test.test_tarfile.AppendTest.test_incomplete) ... ok
test_invalid (test.test_tarfile.AppendTest.test_invalid) ... ok
test_non_existing (test.test_tarfile.AppendTest.test_non_existing) ... ok
test_null (test.test_tarfile.AppendTest.test_null) ... ok
test_premature_eof (test.test_tarfile.AppendTest.test_premature_eof) ... ok
test_trailing_garbage (test.test_tarfile.AppendTest.test_trailing_garbage) ... ok
test_append_compressed (test.test_tarfile.Bz2AppendTest.test_append_compressed) ... skipped 'requires bz2'
test_compression_levels (test.test_tarfile.Bz2CompressStreamWriteTest.test_compression_levels) ... skipped 'requires bz2'
test_compression_levels (test.test_tarfile.Bz2CompressWriteTest.test_compression_levels) ... skipped 'requires bz2'
test_create (test.test_tarfile.Bz2CreateTest.test_create) ... skipped 'requires bz2'
test_create_existing (test.test_tarfile.Bz2CreateTest.test_create_existing) ... skipped 'requires bz2'
test_create_existing_taropen (test.test_tarfile.Bz2CreateTest.test_create_existing_taropen) ... skipped 'requires bz2'
test_create_pathlike_name (test.test_tarfile.Bz2CreateTest.test_create_pathlike_name) ... skipped 'requires bz2'
test_create_taropen (test.test_tarfile.Bz2CreateTest.test_create_taropen) ... skipped 'requires bz2'
test_create_taropen_pathlike_name (test.test_tarfile.Bz2CreateTest.test_create_taropen_pathlike_name) ... skipped 'requires bz2'
test_create_with_compresslevel (test.test_tarfile.Bz2CreateTest.test_create_with_compresslevel) ... skipped 'requires bz2'
test_eof_marker (test.test_tarfile.Bz2CreateTest.test_eof_marker) ... skipped 'requires bz2'
test_fileobj_no_close (test.test_tarfile.Bz2CreateTest.test_fileobj_no_close) ... skipped 'requires bz2'
test_detect_file (test.test_tarfile.Bz2DetectReadTest.test_detect_file) ... skipped 'requires bz2'
test_detect_fileobj (test.test_tarfile.Bz2DetectReadTest.test_detect_fileobj) ... skipped 'requires bz2'
test_detect_stream_bz2 (test.test_tarfile.Bz2DetectReadTest.test_detect_stream_bz2) ... skipped 'requires bz2'
test_list (test.test_tarfile.Bz2ListTest.test_list) ... skipped 'requires bz2'
test_list_members (test.test_tarfile.Bz2ListTest.test_list_members) ... skipped 'requires bz2'
test_list_verbose (test.test_tarfile.Bz2ListTest.test_list_verbose) ... skipped 'requires bz2'
test_bytes_name_attribute (test.test_tarfile.Bz2MiscReadTest.test_bytes_name_attribute) ... skipped 'requires bz2'
test_check_members (test.test_tarfile.Bz2MiscReadTest.test_check_members) ... skipped 'requires bz2'
test_empty_name_attribute (test.test_tarfile.Bz2MiscReadTest.test_empty_name_attribute) ... skipped 'requires bz2'
test_empty_tarfile (test.test_tarfile.Bz2MiscReadTest.test_empty_tarfile) ... skipped 'requires bz2'
test_extract_directory (test.test_tarfile.Bz2MiscReadTest.test_extract_directory) ... skipped 'requires bz2'
test_extract_hardlink (test.test_tarfile.Bz2MiscReadTest.test_extract_hardlink) ... skipped 'requires bz2'
test_extract_pathlike_dir (test.test_tarfile.Bz2MiscReadTest.test_extract_pathlike_dir) ... skipped 'requires bz2'
test_extractall (test.test_tarfile.Bz2MiscReadTest.test_extractall) ... skipped 'requires bz2'
test_extractall_default_filter (test.test_tarfile.Bz2MiscReadTest.test_extractall_default_filter) ... skipped 'requires bz2'
test_extractall_pathlike_dir (test.test_tarfile.Bz2MiscReadTest.test_extractall_pathlike_dir) ... skipped 'requires bz2'
test_extractfile_attrs (test.test_tarfile.Bz2MiscReadTest.test_extractfile_attrs) ... skipped 'requires bz2'
test_fail_comp (test.test_tarfile.Bz2MiscReadTest.test_fail_comp) ... skipped 'requires bz2'
test_fileobj_with_offset (test.test_tarfile.Bz2MiscReadTest.test_fileobj_with_offset) ... skipped 'requires bz2'
test_find_members (test.test_tarfile.Bz2MiscReadTest.test_find_members) ... skipped 'requires bz2'
test_ignore_zeros (test.test_tarfile.Bz2MiscReadTest.test_ignore_zeros) ... skipped 'requires bz2'
test_illegal_mode_arg (test.test_tarfile.Bz2MiscReadTest.test_illegal_mode_arg) ... skipped 'requires bz2'
test_init_close_fobj (test.test_tarfile.Bz2MiscReadTest.test_init_close_fobj) ... skipped 'requires bz2'
test_int_name_attribute (test.test_tarfile.Bz2MiscReadTest.test_int_name_attribute) ... skipped 'requires bz2'
test_is_tarfile_erroneous (test.test_tarfile.Bz2MiscReadTest.test_is_tarfile_erroneous) ... skipped 'requires bz2'
test_is_tarfile_keeps_position (test.test_tarfile.Bz2MiscReadTest.test_is_tarfile_keeps_position) ... skipped 'requires bz2'
test_is_tarfile_valid (test.test_tarfile.Bz2MiscReadTest.test_is_tarfile_valid) ... skipped 'requires bz2'
test_length_zero_header (test.test_tarfile.Bz2MiscReadTest.test_length_zero_header) ... skipped 'requires bz2'
test_next_on_empty_tarfile (test.test_tarfile.Bz2MiscReadTest.test_next_on_empty_tarfile) ... skipped 'requires bz2'
test_no_name_argument (test.test_tarfile.Bz2MiscReadTest.test_no_name_argument) ... skipped 'requires bz2'
test_no_name_attribute (test.test_tarfile.Bz2MiscReadTest.test_no_name_attribute) ... skipped 'requires bz2'
test_non_existent_tarfile (test.test_tarfile.Bz2MiscReadTest.test_non_existent_tarfile) ... skipped 'requires bz2'
test_null_tarfile (test.test_tarfile.Bz2MiscReadTest.test_null_tarfile) ... skipped 'requires bz2'
test_parallel_iteration (test.test_tarfile.Bz2MiscReadTest.test_parallel_iteration) ... skipped 'requires bz2'
test_pathlike_bytes_name (test.test_tarfile.Bz2MiscReadTest.test_pathlike_bytes_name) ... skipped 'requires bz2'
test_pathlike_name (test.test_tarfile.Bz2MiscReadTest.test_pathlike_name) ... skipped 'requires bz2'
test_premature_end_of_archive (test.test_tarfile.Bz2MiscReadTest.test_premature_end_of_archive) ... skipped 'requires bz2'
test_v7_dirtype (test.test_tarfile.Bz2MiscReadTest.test_v7_dirtype) ... skipped 'requires bz2'
test_xstar_type (test.test_tarfile.Bz2MiscReadTest.test_xstar_type) ... skipped 'requires bz2'
test_zlib_error_does_not_leak (test.test_tarfile.Bz2MiscReadTest.test_zlib_error_does_not_leak) ... skipped 'requires bz2'
test_partial_input (test.test_tarfile.Bz2PartialReadTest.test_partial_input) ... skipped 'requires bz2'
test_partial_input_bz2 (test.test_tarfile.Bz2PartialReadTest.test_partial_input_bz2) ... skipped 'requires bz2'
test_stream_mode_no_cache (test.test_tarfile.Bz2StreamModeReadTest.test_stream_mode_no_cache) ... skipped 'requires bz2'
test_compare_members (test.test_tarfile.Bz2StreamReadTest.test_compare_members) ... skipped 'requires bz2'
test_empty_tarfile (test.test_tarfile.Bz2StreamReadTest.test_empty_tarfile) ... skipped 'requires bz2'
test_extractfile_attrs (test.test_tarfile.Bz2StreamReadTest.test_extractfile_attrs) ... skipped 'requires bz2'
test_fileobj_regular_file (test.test_tarfile.Bz2StreamReadTest.test_fileobj_regular_file) ... skipped 'requires bz2'
test_ignore_zeros (test.test_tarfile.Bz2StreamReadTest.test_ignore_zeros) ... skipped 'requires bz2'
test_is_tarfile_erroneous (test.test_tarfile.Bz2StreamReadTest.test_is_tarfile_erroneous) ... skipped 'requires bz2'
test_is_tarfile_keeps_position (test.test_tarfile.Bz2StreamReadTest.test_is_tarfile_keeps_position) ... skipped 'requires bz2'
test_is_tarfile_valid (test.test_tarfile.Bz2StreamReadTest.test_is_tarfile_valid) ... skipped 'requires bz2'
test_length_zero_header (test.test_tarfile.Bz2StreamReadTest.test_length_zero_header) ... skipped 'requires bz2'
test_non_existent_tarfile (test.test_tarfile.Bz2StreamReadTest.test_non_existent_tarfile) ... skipped 'requires bz2'
test_null_tarfile (test.test_tarfile.Bz2StreamReadTest.test_null_tarfile) ... skipped 'requires bz2'
test_premature_end_of_archive (test.test_tarfile.Bz2StreamReadTest.test_premature_end_of_archive) ... skipped 'requires bz2'
test_provoke_stream_error (test.test_tarfile.Bz2StreamReadTest.test_provoke_stream_error) ... skipped 'requires bz2'
test_read_through (test.test_tarfile.Bz2StreamReadTest.test_read_through) ... skipped 'requires bz2'
test_eof_marker (test.test_tarfile.Bz2StreamWriteTest.test_eof_marker) ... skipped 'requires bz2'
test_file_mode (test.test_tarfile.Bz2StreamWriteTest.test_file_mode) ... skipped 'requires bz2'
test_fileobj_no_close (test.test_tarfile.Bz2StreamWriteTest.test_fileobj_no_close) ... skipped 'requires bz2'
test_stream_padding (test.test_tarfile.Bz2StreamWriteTest.test_stream_padding) ... skipped 'requires bz2'
test_add_dir_getmember (test.test_tarfile.Bz2UstarReadTest.test_add_dir_getmember) ... skipped 'requires bz2'
test_fileobj_iter (test.test_tarfile.Bz2UstarReadTest.test_fileobj_iter) ... skipped 'requires bz2'
test_fileobj_link1 (test.test_tarfile.Bz2UstarReadTest.test_fileobj_link1) ... skipped 'requires bz2'
test_fileobj_link2 (test.test_tarfile.Bz2UstarReadTest.test_fileobj_link2) ... skipped 'requires bz2'
test_fileobj_readlines (test.test_tarfile.Bz2UstarReadTest.test_fileobj_readlines) ... skipped 'requires bz2'
test_fileobj_regular_file (test.test_tarfile.Bz2UstarReadTest.test_fileobj_regular_file) ... skipped 'requires bz2'
test_fileobj_seek (test.test_tarfile.Bz2UstarReadTest.test_fileobj_seek) ... skipped 'requires bz2'
test_fileobj_symlink1 (test.test_tarfile.Bz2UstarReadTest.test_fileobj_symlink1) ... skipped 'requires bz2'
test_fileobj_symlink2 (test.test_tarfile.Bz2UstarReadTest.test_fileobj_symlink2) ... skipped 'requires bz2'
test_fileobj_text (test.test_tarfile.Bz2UstarReadTest.test_fileobj_text) ... skipped 'requires bz2'
test_issue14160 (test.test_tarfile.Bz2UstarReadTest.test_issue14160) ... skipped 'requires bz2'
test_100_char_name (test.test_tarfile.Bz2WriteTest.test_100_char_name) ... skipped 'requires bz2'
test_abs_pathnames (test.test_tarfile.Bz2WriteTest.test_abs_pathnames) ... skipped 'requires bz2'
test_add_self (test.test_tarfile.Bz2WriteTest.test_add_self) ... skipped 'requires bz2'
test_cwd (test.test_tarfile.Bz2WriteTest.test_cwd) ... skipped 'requires bz2'
test_directory_size (test.test_tarfile.Bz2WriteTest.test_directory_size) ... skipped 'requires bz2'
test_eof_marker (test.test_tarfile.Bz2WriteTest.test_eof_marker) ... skipped 'requires bz2'
test_extractall_symlinks (test.test_tarfile.Bz2WriteTest.test_extractall_symlinks) ... skipped 'requires bz2'
test_file_size (test.test_tarfile.Bz2WriteTest.test_file_size) ... skipped 'requires bz2'
test_fileobj_no_close (test.test_tarfile.Bz2WriteTest.test_fileobj_no_close) ... skipped 'requires bz2'
test_filter (test.test_tarfile.Bz2WriteTest.test_filter) ... skipped 'requires bz2'
test_gettarinfo_pathlike_name (test.test_tarfile.Bz2WriteTest.test_gettarinfo_pathlike_name) ... skipped 'requires bz2'
test_link_size (test.test_tarfile.Bz2WriteTest.test_link_size) ... skipped 'requires bz2'
test_missing_fileobj (test.test_tarfile.Bz2WriteTest.test_missing_fileobj) ... skipped 'requires bz2'
test_open_nonwritable_fileobj (test.test_tarfile.Bz2WriteTest.test_open_nonwritable_fileobj) ... skipped 'requires bz2'
test_ordered_recursion (test.test_tarfile.Bz2WriteTest.test_ordered_recursion) ... skipped 'requires bz2'
test_pathnames (test.test_tarfile.Bz2WriteTest.test_pathnames) ... skipped 'requires bz2'
test_symlink_size (test.test_tarfile.Bz2WriteTest.test_symlink_size) ... skipped 'requires bz2'
test_tar_size (test.test_tarfile.Bz2WriteTest.test_tar_size) ... skipped 'requires bz2'
test_bad_use (test.test_tarfile.CommandLineTest.test_bad_use) ... skipped 'requires subprocess support'
test_create_command (test.test_tarfile.CommandLineTest.test_create_command) ... skipped 'requires subprocess support'
test_create_command_compressed (test.test_tarfile.CommandLineTest.test_create_command_compressed) ... ok
test_create_command_dot_started_filename (test.test_tarfile.CommandLineTest.test_create_command_dot_started_filename) ... skipped 'requires subprocess support'
test_create_command_dotless_filename (test.test_tarfile.CommandLineTest.test_create_command_dotless_filename) ... skipped 'requires subprocess support'
test_create_command_verbose (test.test_tarfile.CommandLineTest.test_create_command_verbose) ... skipped 'requires subprocess support'
test_extract_command (test.test_tarfile.CommandLineTest.test_extract_command) ... skipped 'requires subprocess support'
test_extract_command_different_directory (test.test_tarfile.CommandLineTest.test_extract_command_different_directory) ... skipped 'requires subprocess support'
test_extract_command_filter (test.test_tarfile.CommandLineTest.test_extract_command_filter) ... skipped 'requires subprocess support'
test_extract_command_invalid_file (test.test_tarfile.CommandLineTest.test_extract_command_invalid_file) ... skipped 'requires subprocess support'
test_extract_command_verbose (test.test_tarfile.CommandLineTest.test_extract_command_verbose) ... skipped 'requires subprocess support'
test_list_command (test.test_tarfile.CommandLineTest.test_list_command) ... skipped 'requires subprocess support'
test_list_command_invalid_file (test.test_tarfile.CommandLineTest.test_list_command_invalid_file) ... skipped 'requires subprocess support'
test_list_command_verbose (test.test_tarfile.CommandLineTest.test_list_command_verbose) ... skipped 'requires subprocess support'
test_test_command (test.test_tarfile.CommandLineTest.test_test_command) ... skipped 'requires subprocess support'
test_test_command_invalid_file (test.test_tarfile.CommandLineTest.test_test_command_invalid_file) ... skipped 'requires subprocess support'
test_test_command_verbose (test.test_tarfile.CommandLineTest.test_test_command_verbose) ... skipped 'requires subprocess support'
test_compresslevel_wrong_modes (test.test_tarfile.CompressLevelRaises.test_compresslevel_wrong_modes) ... ok
test_wrong_compresslevels (test.test_tarfile.CompressLevelRaises.test_wrong_compresslevels) ... skipped 'requires bz2'
test_basic (test.test_tarfile.ContextManagerTest.test_basic) ... ok
test_closed (test.test_tarfile.ContextManagerTest.test_closed) ... ok
test_eof (test.test_tarfile.ContextManagerTest.test_eof) ... ok
test_exception (test.test_tarfile.ContextManagerTest.test_exception) ... ok
test_fileobj (test.test_tarfile.ContextManagerTest.test_fileobj) ... ok
test_no_eof (test.test_tarfile.ContextManagerTest.test_no_eof) ... ok
test_create (test.test_tarfile.CreateTest.test_create) ... ok
test_create_existing (test.test_tarfile.CreateTest.test_create_existing) ... ok
test_create_existing_taropen (test.test_tarfile.CreateTest.test_create_existing_taropen) ... ok
test_create_pathlike_name (test.test_tarfile.CreateTest.test_create_pathlike_name) ... ok
test_create_taropen (test.test_tarfile.CreateTest.test_create_taropen) ... ok
test_create_taropen_pathlike_name (test.test_tarfile.CreateTest.test_create_taropen_pathlike_name) ... ok
test_eof_marker (test.test_tarfile.CreateTest.test_eof_marker) ... ok
test_fileobj_no_close (test.test_tarfile.CreateTest.test_fileobj_no_close) ... ok
test_create (test.test_tarfile.CreateWithXModeTest.test_create) ... ok
test_create_existing (test.test_tarfile.CreateWithXModeTest.test_create_existing) ... ok
test_create_pathlike_name (test.test_tarfile.CreateWithXModeTest.test_create_pathlike_name) ... ok
test_create_taropen_pathlike_name (test.test_tarfile.CreateWithXModeTest.test_create_taropen_pathlike_name) ... ok
test_eof_marker (test.test_tarfile.CreateWithXModeTest.test_eof_marker) ... ok
test_fileobj_no_close (test.test_tarfile.CreateWithXModeTest.test_fileobj_no_close) ... ok
test_detect_file (test.test_tarfile.DetectReadTest.test_detect_file) ... ok
test_detect_fileobj (test.test_tarfile.DetectReadTest.test_detect_fileobj) ... ok
test_eof_marker (test.test_tarfile.DeviceHeaderTest.test_eof_marker) ... ok
test_fileobj_no_close (test.test_tarfile.DeviceHeaderTest.test_fileobj_no_close) ... ok
test_headers_written_only_for_device_files (test.test_tarfile.DeviceHeaderTest.test_headers_written_only_for_device_files) ... ok
test_header_offset (test.test_tarfile.GNUReadTest.test_header_offset) ... ok
test_longname_directory (test.test_tarfile.GNUReadTest.test_longname_directory) ... ok
test_read_longlink (test.test_tarfile.GNUReadTest.test_read_longlink) ... ok
test_read_longname (test.test_tarfile.GNUReadTest.test_read_longname) ... ok
test_sparse_file_00 (test.test_tarfile.GNUReadTest.test_sparse_file_00) ... ok
test_sparse_file_01 (test.test_tarfile.GNUReadTest.test_sparse_file_01) ... ok
test_sparse_file_10 (test.test_tarfile.GNUReadTest.test_sparse_file_10) ... ok
test_sparse_file_old (test.test_tarfile.GNUReadTest.test_sparse_file_old) ... ok
test_truncated_longname (test.test_tarfile.GNUReadTest.test_truncated_longname) ... ok
test_bad_pax_header (test.test_tarfile.GNUUnicodeTest.test_bad_pax_header) ... ok
test_iso8859_1_filename (test.test_tarfile.GNUUnicodeTest.test_iso8859_1_filename) ... ok
test_uname_unicode (test.test_tarfile.GNUUnicodeTest.test_uname_unicode) ... ok
test_unicode_argument (test.test_tarfile.GNUUnicodeTest.test_unicode_argument) ... ok
test_unicode_filename_error (test.test_tarfile.GNUUnicodeTest.test_unicode_filename_error) ... ok
test_utf7_filename (test.test_tarfile.GNUUnicodeTest.test_utf7_filename) ... ok
test_utf8_filename (test.test_tarfile.GNUUnicodeTest.test_utf8_filename) ... ok
test_longlink_1023 (test.test_tarfile.GNUWriteTest.test_longlink_1023) ... ok
test_longlink_1024 (test.test_tarfile.GNUWriteTest.test_longlink_1024) ... ok
test_longlink_1025 (test.test_tarfile.GNUWriteTest.test_longlink_1025) ... ok
test_longname_1023 (test.test_tarfile.GNUWriteTest.test_longname_1023) ... ok
test_longname_1024 (test.test_tarfile.GNUWriteTest.test_longname_1024) ... ok
test_longname_1025 (test.test_tarfile.GNUWriteTest.test_longname_1025) ... ok
test_longnamelink_1023 (test.test_tarfile.GNUWriteTest.test_longnamelink_1023) ... ok
test_longnamelink_1024 (test.test_tarfile.GNUWriteTest.test_longnamelink_1024) ... ok
test_longnamelink_1025 (test.test_tarfile.GNUWriteTest.test_longnamelink_1025) ... ok
test_compression_levels (test.test_tarfile.GzCompressStreamWriteTest.test_compression_levels) ... skipped 'requires gzip'
test_compression_levels (test.test_tarfile.GzCompressWriteTest.test_compression_levels) ... skipped 'requires gzip'
test_append_compressed (test.test_tarfile.GzipAppendTest.test_append_compressed) ... skipped 'requires gzip'
runTest (test.test_tarfile.GzipBrokenHeaderCorrectException.runTest) ... skipped 'requires gzip'
test_create (test.test_tarfile.GzipCreateTest.test_create) ... skipped 'requires gzip'
test_create_existing (test.test_tarfile.GzipCreateTest.test_create_existing) ... skipped 'requires gzip'
test_create_existing_taropen (test.test_tarfile.GzipCreateTest.test_create_existing_taropen) ... skipped 'requires gzip'
test_create_pathlike_name (test.test_tarfile.GzipCreateTest.test_create_pathlike_name) ... skipped 'requires gzip'
test_create_taropen (test.test_tarfile.GzipCreateTest.test_create_taropen) ... skipped 'requires gzip'
test_create_taropen_pathlike_name (test.test_tarfile.GzipCreateTest.test_create_taropen_pathlike_name) ... skipped 'requires gzip'
test_create_with_compresslevel (test.test_tarfile.GzipCreateTest.test_create_with_compresslevel) ... skipped 'requires gzip'
test_eof_marker (test.test_tarfile.GzipCreateTest.test_eof_marker) ... skipped 'requires gzip'
test_fileobj_no_close (test.test_tarfile.GzipCreateTest.test_fileobj_no_close) ... skipped 'requires gzip'
test_detect_file (test.test_tarfile.GzipDetectReadTest.test_detect_file) ... skipped 'requires gzip'
test_detect_fileobj (test.test_tarfile.GzipDetectReadTest.test_detect_fileobj) ... skipped 'requires gzip'
test_list (test.test_tarfile.GzipListTest.test_list) ... skipped 'requires gzip'
test_list_members (test.test_tarfile.GzipListTest.test_list_members) ... skipped 'requires gzip'
test_list_verbose (test.test_tarfile.GzipListTest.test_list_verbose) ... skipped 'requires gzip'
test_bytes_name_attribute (test.test_tarfile.GzipMiscReadTest.test_bytes_name_attribute) ... skipped 'requires gzip'
test_check_members (test.test_tarfile.GzipMiscReadTest.test_check_members) ... skipped 'requires gzip'
test_empty_name_attribute (test.test_tarfile.GzipMiscReadTest.test_empty_name_attribute) ... skipped 'requires gzip'
test_empty_tarfile (test.test_tarfile.GzipMiscReadTest.test_empty_tarfile) ... skipped 'requires gzip'
test_extract_directory (test.test_tarfile.GzipMiscReadTest.test_extract_directory) ... skipped 'requires gzip'
test_extract_hardlink (test.test_tarfile.GzipMiscReadTest.test_extract_hardlink) ... skipped 'requires gzip'
test_extract_pathlike_dir (test.test_tarfile.GzipMiscReadTest.test_extract_pathlike_dir) ... skipped 'requires gzip'
test_extractall (test.test_tarfile.GzipMiscReadTest.test_extractall) ... skipped 'requires gzip'
test_extractall_default_filter (test.test_tarfile.GzipMiscReadTest.test_extractall_default_filter) ... skipped 'requires gzip'
test_extractall_pathlike_dir (test.test_tarfile.GzipMiscReadTest.test_extractall_pathlike_dir) ... skipped 'requires gzip'
test_extractfile_attrs (test.test_tarfile.GzipMiscReadTest.test_extractfile_attrs) ... skipped 'requires gzip'
test_fail_comp (test.test_tarfile.GzipMiscReadTest.test_fail_comp) ... skipped 'requires gzip'
test_fileobj_with_offset (test.test_tarfile.GzipMiscReadTest.test_fileobj_with_offset) ... skipped 'requires gzip'
test_find_members (test.test_tarfile.GzipMiscReadTest.test_find_members) ... skipped 'requires gzip'
test_ignore_zeros (test.test_tarfile.GzipMiscReadTest.test_ignore_zeros) ... skipped 'requires gzip'
test_illegal_mode_arg (test.test_tarfile.GzipMiscReadTest.test_illegal_mode_arg) ... skipped 'requires gzip'
test_init_close_fobj (test.test_tarfile.GzipMiscReadTest.test_init_close_fobj) ... skipped 'requires gzip'
test_int_name_attribute (test.test_tarfile.GzipMiscReadTest.test_int_name_attribute) ... skipped 'requires gzip'
test_is_tarfile_erroneous (test.test_tarfile.GzipMiscReadTest.test_is_tarfile_erroneous) ... skipped 'requires gzip'
test_is_tarfile_keeps_position (test.test_tarfile.GzipMiscReadTest.test_is_tarfile_keeps_position) ... skipped 'requires gzip'
test_is_tarfile_valid (test.test_tarfile.GzipMiscReadTest.test_is_tarfile_valid) ... skipped 'requires gzip'
test_length_zero_header (test.test_tarfile.GzipMiscReadTest.test_length_zero_header) ... skipped 'requires gzip'
test_next_on_empty_tarfile (test.test_tarfile.GzipMiscReadTest.test_next_on_empty_tarfile) ... skipped 'requires gzip'
test_no_name_argument (test.test_tarfile.GzipMiscReadTest.test_no_name_argument) ... skipped 'requires gzip'
test_no_name_attribute (test.test_tarfile.GzipMiscReadTest.test_no_name_attribute) ... skipped 'requires gzip'
test_non_existent_tarfile (test.test_tarfile.GzipMiscReadTest.test_non_existent_tarfile) ... skipped 'requires gzip'
test_null_tarfile (test.test_tarfile.GzipMiscReadTest.test_null_tarfile) ... skipped 'requires gzip'
test_parallel_iteration (test.test_tarfile.GzipMiscReadTest.test_parallel_iteration) ... skipped 'requires gzip'
test_pathlike_bytes_name (test.test_tarfile.GzipMiscReadTest.test_pathlike_bytes_name) ... skipped 'requires gzip'
test_pathlike_name (test.test_tarfile.GzipMiscReadTest.test_pathlike_name) ... skipped 'requires gzip'
test_premature_end_of_archive (test.test_tarfile.GzipMiscReadTest.test_premature_end_of_archive) ... skipped 'requires gzip'
test_v7_dirtype (test.test_tarfile.GzipMiscReadTest.test_v7_dirtype) ... skipped 'requires gzip'
test_xstar_type (test.test_tarfile.GzipMiscReadTest.test_xstar_type) ... skipped 'requires gzip'
test_zlib_error_does_not_leak (test.test_tarfile.GzipMiscReadTest.test_zlib_error_does_not_leak) ... skipped 'requires gzip'
test_stream_mode_no_cache (test.test_tarfile.GzipStreamModeReadTest.test_stream_mode_no_cache) ... skipped 'requires gzip'
test_compare_members (test.test_tarfile.GzipStreamReadTest.test_compare_members) ... skipped 'requires gzip'
test_empty_tarfile (test.test_tarfile.GzipStreamReadTest.test_empty_tarfile) ... skipped 'requires gzip'
test_extractfile_attrs (test.test_tarfile.GzipStreamReadTest.test_extractfile_attrs) ... skipped 'requires gzip'
test_fileobj_regular_file (test.test_tarfile.GzipStreamReadTest.test_fileobj_regular_file) ... skipped 'requires gzip'
test_ignore_zeros (test.test_tarfile.GzipStreamReadTest.test_ignore_zeros) ... skipped 'requires gzip'
test_is_tarfile_erroneous (test.test_tarfile.GzipStreamReadTest.test_is_tarfile_erroneous) ... skipped 'requires gzip'
test_is_tarfile_keeps_position (test.test_tarfile.GzipStreamReadTest.test_is_tarfile_keeps_position) ... skipped 'requires gzip'
test_is_tarfile_valid (test.test_tarfile.GzipStreamReadTest.test_is_tarfile_valid) ... skipped 'requires gzip'
test_length_zero_header (test.test_tarfile.GzipStreamReadTest.test_length_zero_header) ... skipped 'requires gzip'
test_non_existent_tarfile (test.test_tarfile.GzipStreamReadTest.test_non_existent_tarfile) ... skipped 'requires gzip'
test_null_tarfile (test.test_tarfile.GzipStreamReadTest.test_null_tarfile) ... skipped 'requires gzip'
test_premature_end_of_archive (test.test_tarfile.GzipStreamReadTest.test_premature_end_of_archive) ... skipped 'requires gzip'
test_provoke_stream_error (test.test_tarfile.GzipStreamReadTest.test_provoke_stream_error) ... skipped 'requires gzip'
test_read_through (test.test_tarfile.GzipStreamReadTest.test_read_through) ... skipped 'requires gzip'
test_eof_marker (test.test_tarfile.GzipStreamWriteTest.test_eof_marker) ... skipped 'requires gzip'
test_file_mode (test.test_tarfile.GzipStreamWriteTest.test_file_mode) ... skipped 'requires gzip'
test_fileobj_no_close (test.test_tarfile.GzipStreamWriteTest.test_fileobj_no_close) ... skipped 'requires gzip'
test_source_directory_not_leaked (test.test_tarfile.GzipStreamWriteTest.test_source_directory_not_leaked)
Ensure the source directory is not included in the tar header ... skipped 'requires gzip'
test_stream_padding (test.test_tarfile.GzipStreamWriteTest.test_stream_padding) ... skipped 'requires gzip'
test_add_dir_getmember (test.test_tarfile.GzipUstarReadTest.test_add_dir_getmember) ... skipped 'requires gzip'
test_fileobj_iter (test.test_tarfile.GzipUstarReadTest.test_fileobj_iter) ... skipped 'requires gzip'
test_fileobj_link1 (test.test_tarfile.GzipUstarReadTest.test_fileobj_link1) ... skipped 'requires gzip'
test_fileobj_link2 (test.test_tarfile.GzipUstarReadTest.test_fileobj_link2) ... skipped 'requires gzip'
test_fileobj_readlines (test.test_tarfile.GzipUstarReadTest.test_fileobj_readlines) ... skipped 'requires gzip'
test_fileobj_regular_file (test.test_tarfile.GzipUstarReadTest.test_fileobj_regular_file) ... skipped 'requires gzip'
test_fileobj_seek (test.test_tarfile.GzipUstarReadTest.test_fileobj_seek) ... skipped 'requires gzip'
test_fileobj_symlink1 (test.test_tarfile.GzipUstarReadTest.test_fileobj_symlink1) ... skipped 'requires gzip'
test_fileobj_symlink2 (test.test_tarfile.GzipUstarReadTest.test_fileobj_symlink2) ... skipped 'requires gzip'
test_fileobj_text (test.test_tarfile.GzipUstarReadTest.test_fileobj_text) ... skipped 'requires gzip'
test_issue14160 (test.test_tarfile.GzipUstarReadTest.test_issue14160) ... skipped 'requires gzip'
test_100_char_name (test.test_tarfile.GzipWriteTest.test_100_char_name) ... skipped 'requires gzip'
test_abs_pathnames (test.test_tarfile.GzipWriteTest.test_abs_pathnames) ... skipped 'requires gzip'
test_add_self (test.test_tarfile.GzipWriteTest.test_add_self) ... skipped 'requires gzip'
test_cwd (test.test_tarfile.GzipWriteTest.test_cwd) ... skipped 'requires gzip'
test_directory_size (test.test_tarfile.GzipWriteTest.test_directory_size) ... skipped 'requires gzip'
test_eof_marker (test.test_tarfile.GzipWriteTest.test_eof_marker) ... skipped 'requires gzip'
test_extractall_symlinks (test.test_tarfile.GzipWriteTest.test_extractall_symlinks) ... skipped 'requires gzip'
test_file_size (test.test_tarfile.GzipWriteTest.test_file_size) ... skipped 'requires gzip'
test_fileobj_no_close (test.test_tarfile.GzipWriteTest.test_fileobj_no_close) ... skipped 'requires gzip'
test_filter (test.test_tarfile.GzipWriteTest.test_filter) ... skipped 'requires gzip'
test_gettarinfo_pathlike_name (test.test_tarfile.GzipWriteTest.test_gettarinfo_pathlike_name) ... skipped 'requires gzip'
test_link_size (test.test_tarfile.GzipWriteTest.test_link_size) ... skipped 'requires gzip'
test_missing_fileobj (test.test_tarfile.GzipWriteTest.test_missing_fileobj) ... skipped 'requires gzip'
test_open_nonwritable_fileobj (test.test_tarfile.GzipWriteTest.test_open_nonwritable_fileobj) ... skipped 'requires gzip'
test_ordered_recursion (test.test_tarfile.GzipWriteTest.test_ordered_recursion) ... skipped 'requires gzip'
test_pathnames (test.test_tarfile.GzipWriteTest.test_pathnames) ... skipped 'requires gzip'
test_symlink_size (test.test_tarfile.GzipWriteTest.test_symlink_size) ... skipped 'requires gzip'
test_tar_size (test.test_tarfile.GzipWriteTest.test_tar_size) ... skipped 'requires gzip'
test_add_hardlink (test.test_tarfile.HardlinkTest.test_add_hardlink) ... ERROR
test_add_twice (test.test_tarfile.HardlinkTest.test_add_twice) ... ERROR
test_dereference_hardlink (test.test_tarfile.HardlinkTest.test_dereference_hardlink) ... ERROR
test_gnu_limits (test.test_tarfile.LimitsTest.test_gnu_limits) ... ok
test_pax_limits (test.test_tarfile.LimitsTest.test_pax_limits) ... ok
test_ustar_limits (test.test_tarfile.LimitsTest.test_ustar_limits) ... ok
test_hardlink_extraction1 (test.test_tarfile.LinkEmulationTest.test_hardlink_extraction1) ... skipped 'requires os.link to be missing'
test_hardlink_extraction2 (test.test_tarfile.LinkEmulationTest.test_hardlink_extraction2) ... skipped 'requires os.link to be missing'
test_symlink_extraction1 (test.test_tarfile.LinkEmulationTest.test_symlink_extraction1) ... skipped 'requires os.link to be missing'
test_symlink_extraction2 (test.test_tarfile.LinkEmulationTest.test_symlink_extraction2) ... skipped 'requires os.link to be missing'
test_list (test.test_tarfile.ListTest.test_list) ... ok
test_list_members (test.test_tarfile.ListTest.test_list_members) ... ok
test_list_verbose (test.test_tarfile.ListTest.test_list_verbose) ... ok
test_append_compressed (test.test_tarfile.LzmaAppendTest.test_append_compressed) ... skipped 'requires lzma'
test_create (test.test_tarfile.LzmaCreateTest.test_create) ... skipped 'requires lzma'
test_create_existing (test.test_tarfile.LzmaCreateTest.test_create_existing) ... skipped 'requires lzma'
test_create_existing_taropen (test.test_tarfile.LzmaCreateTest.test_create_existing_taropen) ... skipped 'requires lzma'
test_create_pathlike_name (test.test_tarfile.LzmaCreateTest.test_create_pathlike_name) ... skipped 'requires lzma'
test_create_taropen (test.test_tarfile.LzmaCreateTest.test_create_taropen) ... skipped 'requires lzma'
test_create_taropen_pathlike_name (test.test_tarfile.LzmaCreateTest.test_create_taropen_pathlike_name) ... skipped 'requires lzma'
test_create_with_preset (test.test_tarfile.LzmaCreateTest.test_create_with_preset) ... skipped 'requires lzma'
test_eof_marker (test.test_tarfile.LzmaCreateTest.test_eof_marker) ... skipped 'requires lzma'
test_fileobj_no_close (test.test_tarfile.LzmaCreateTest.test_fileobj_no_close) ... skipped 'requires lzma'
test_detect_file (test.test_tarfile.LzmaDetectReadTest.test_detect_file) ... skipped 'requires lzma'
test_detect_fileobj (test.test_tarfile.LzmaDetectReadTest.test_detect_fileobj) ... skipped 'requires lzma'
test_list (test.test_tarfile.LzmaListTest.test_list) ... skipped 'requires lzma'
test_list_members (test.test_tarfile.LzmaListTest.test_list_members) ... skipped 'requires lzma'
test_list_verbose (test.test_tarfile.LzmaListTest.test_list_verbose) ... skipped 'requires lzma'
test_bytes_name_attribute (test.test_tarfile.LzmaMiscReadTest.test_bytes_name_attribute) ... skipped 'requires lzma'
test_check_members (test.test_tarfile.LzmaMiscReadTest.test_check_members) ... skipped 'requires lzma'
test_empty_name_attribute (test.test_tarfile.LzmaMiscReadTest.test_empty_name_attribute) ... skipped 'requires lzma'
test_empty_tarfile (test.test_tarfile.LzmaMiscReadTest.test_empty_tarfile) ... skipped 'requires lzma'
test_extract_directory (test.test_tarfile.LzmaMiscReadTest.test_extract_directory) ... skipped 'requires lzma'
test_extract_hardlink (test.test_tarfile.LzmaMiscReadTest.test_extract_hardlink) ... skipped 'requires lzma'
test_extract_pathlike_dir (test.test_tarfile.LzmaMiscReadTest.test_extract_pathlike_dir) ... skipped 'requires lzma'
test_extractall (test.test_tarfile.LzmaMiscReadTest.test_extractall) ... skipped 'requires lzma'
test_extractall_default_filter (test.test_tarfile.LzmaMiscReadTest.test_extractall_default_filter) ... skipped 'requires lzma'
test_extractall_pathlike_dir (test.test_tarfile.LzmaMiscReadTest.test_extractall_pathlike_dir) ... skipped 'requires lzma'
test_extractfile_attrs (test.test_tarfile.LzmaMiscReadTest.test_extractfile_attrs) ... skipped 'requires lzma'
test_fail_comp (test.test_tarfile.LzmaMiscReadTest.test_fail_comp) ... skipped 'requires lzma'
test_fileobj_with_offset (test.test_tarfile.LzmaMiscReadTest.test_fileobj_with_offset) ... skipped 'requires lzma'
test_find_members (test.test_tarfile.LzmaMiscReadTest.test_find_members) ... skipped 'requires lzma'
test_ignore_zeros (test.test_tarfile.LzmaMiscReadTest.test_ignore_zeros) ... skipped 'requires lzma'
test_illegal_mode_arg (test.test_tarfile.LzmaMiscReadTest.test_illegal_mode_arg) ... skipped 'requires lzma'
test_init_close_fobj (test.test_tarfile.LzmaMiscReadTest.test_init_close_fobj) ... skipped 'requires lzma'
test_int_name_attribute (test.test_tarfile.LzmaMiscReadTest.test_int_name_attribute) ... skipped 'requires lzma'
test_is_tarfile_erroneous (test.test_tarfile.LzmaMiscReadTest.test_is_tarfile_erroneous) ... skipped 'requires lzma'
test_is_tarfile_keeps_position (test.test_tarfile.LzmaMiscReadTest.test_is_tarfile_keeps_position) ... skipped 'requires lzma'
test_is_tarfile_valid (test.test_tarfile.LzmaMiscReadTest.test_is_tarfile_valid) ... skipped 'requires lzma'
test_length_zero_header (test.test_tarfile.LzmaMiscReadTest.test_length_zero_header) ... skipped 'requires lzma'
test_next_on_empty_tarfile (test.test_tarfile.LzmaMiscReadTest.test_next_on_empty_tarfile) ... skipped 'requires lzma'
test_no_name_argument (test.test_tarfile.LzmaMiscReadTest.test_no_name_argument) ... skipped 'requires lzma'
test_no_name_attribute (test.test_tarfile.LzmaMiscReadTest.test_no_name_attribute) ... skipped 'requires lzma'
test_non_existent_tarfile (test.test_tarfile.LzmaMiscReadTest.test_non_existent_tarfile) ... skipped 'requires lzma'
test_null_tarfile (test.test_tarfile.LzmaMiscReadTest.test_null_tarfile) ... skipped 'requires lzma'
test_parallel_iteration (test.test_tarfile.LzmaMiscReadTest.test_parallel_iteration) ... skipped 'requires lzma'
test_pathlike_bytes_name (test.test_tarfile.LzmaMiscReadTest.test_pathlike_bytes_name) ... skipped 'requires lzma'
test_pathlike_name (test.test_tarfile.LzmaMiscReadTest.test_pathlike_name) ... skipped 'requires lzma'
test_premature_end_of_archive (test.test_tarfile.LzmaMiscReadTest.test_premature_end_of_archive) ... skipped 'requires lzma'
test_v7_dirtype (test.test_tarfile.LzmaMiscReadTest.test_v7_dirtype) ... skipped 'requires lzma'
test_xstar_type (test.test_tarfile.LzmaMiscReadTest.test_xstar_type) ... skipped 'requires lzma'
test_zlib_error_does_not_leak (test.test_tarfile.LzmaMiscReadTest.test_zlib_error_does_not_leak) ... skipped 'requires lzma'
test_stream_mode_no_cache (test.test_tarfile.LzmaStreamModeReadTest.test_stream_mode_no_cache) ... skipped 'requires lzma'
test_compare_members (test.test_tarfile.LzmaStreamReadTest.test_compare_members) ... skipped 'requires lzma'
test_empty_tarfile (test.test_tarfile.LzmaStreamReadTest.test_empty_tarfile) ... skipped 'requires lzma'
test_extractfile_attrs (test.test_tarfile.LzmaStreamReadTest.test_extractfile_attrs) ... skipped 'requires lzma'
test_fileobj_regular_file (test.test_tarfile.LzmaStreamReadTest.test_fileobj_regular_file) ... skipped 'requires lzma'
test_ignore_zeros (test.test_tarfile.LzmaStreamReadTest.test_ignore_zeros) ... skipped 'requires lzma'
test_is_tarfile_erroneous (test.test_tarfile.LzmaStreamReadTest.test_is_tarfile_erroneous) ... skipped 'requires lzma'
test_is_tarfile_keeps_position (test.test_tarfile.LzmaStreamReadTest.test_is_tarfile_keeps_position) ... skipped 'requires lzma'
test_is_tarfile_valid (test.test_tarfile.LzmaStreamReadTest.test_is_tarfile_valid) ... skipped 'requires lzma'
test_length_zero_header (test.test_tarfile.LzmaStreamReadTest.test_length_zero_header) ... skipped 'requires lzma'
test_non_existent_tarfile (test.test_tarfile.LzmaStreamReadTest.test_non_existent_tarfile) ... skipped 'requires lzma'
test_null_tarfile (test.test_tarfile.LzmaStreamReadTest.test_null_tarfile) ... skipped 'requires lzma'
test_premature_end_of_archive (test.test_tarfile.LzmaStreamReadTest.test_premature_end_of_archive) ... skipped 'requires lzma'
test_provoke_stream_error (test.test_tarfile.LzmaStreamReadTest.test_provoke_stream_error) ... skipped 'requires lzma'
test_read_through (test.test_tarfile.LzmaStreamReadTest.test_read_through) ... skipped 'requires lzma'
test_eof_marker (test.test_tarfile.LzmaStreamWriteTest.test_eof_marker) ... skipped 'requires lzma'
test_file_mode (test.test_tarfile.LzmaStreamWriteTest.test_file_mode) ... skipped 'requires lzma'
test_fileobj_no_close (test.test_tarfile.LzmaStreamWriteTest.test_fileobj_no_close) ... skipped 'requires lzma'
test_stream_padding (test.test_tarfile.LzmaStreamWriteTest.test_stream_padding) ... skipped 'requires lzma'
test_add_dir_getmember (test.test_tarfile.LzmaUstarReadTest.test_add_dir_getmember) ... skipped 'requires lzma'
test_fileobj_iter (test.test_tarfile.LzmaUstarReadTest.test_fileobj_iter) ... skipped 'requires lzma'
test_fileobj_link1 (test.test_tarfile.LzmaUstarReadTest.test_fileobj_link1) ... skipped 'requires lzma'
test_fileobj_link2 (test.test_tarfile.LzmaUstarReadTest.test_fileobj_link2) ... skipped 'requires lzma'
test_fileobj_readlines (test.test_tarfile.LzmaUstarReadTest.test_fileobj_readlines) ... skipped 'requires lzma'
test_fileobj_regular_file (test.test_tarfile.LzmaUstarReadTest.test_fileobj_regular_file) ... skipped 'requires lzma'
test_fileobj_seek (test.test_tarfile.LzmaUstarReadTest.test_fileobj_seek) ... skipped 'requires lzma'
test_fileobj_symlink1 (test.test_tarfile.LzmaUstarReadTest.test_fileobj_symlink1) ... skipped 'requires lzma'
test_fileobj_symlink2 (test.test_tarfile.LzmaUstarReadTest.test_fileobj_symlink2) ... skipped 'requires lzma'
test_fileobj_text (test.test_tarfile.LzmaUstarReadTest.test_fileobj_text) ... skipped 'requires lzma'
test_issue14160 (test.test_tarfile.LzmaUstarReadTest.test_issue14160) ... skipped 'requires lzma'
test_100_char_name (test.test_tarfile.LzmaWriteTest.test_100_char_name) ... skipped 'requires lzma'
test_abs_pathnames (test.test_tarfile.LzmaWriteTest.test_abs_pathnames) ... skipped 'requires lzma'
test_add_self (test.test_tarfile.LzmaWriteTest.test_add_self) ... skipped 'requires lzma'
test_cwd (test.test_tarfile.LzmaWriteTest.test_cwd) ... skipped 'requires lzma'
test_directory_size (test.test_tarfile.LzmaWriteTest.test_directory_size) ... skipped 'requires lzma'
test_eof_marker (test.test_tarfile.LzmaWriteTest.test_eof_marker) ... skipped 'requires lzma'
test_extractall_symlinks (test.test_tarfile.LzmaWriteTest.test_extractall_symlinks) ... skipped 'requires lzma'
test_file_size (test.test_tarfile.LzmaWriteTest.test_file_size) ... skipped 'requires lzma'
test_fileobj_no_close (test.test_tarfile.LzmaWriteTest.test_fileobj_no_close) ... skipped 'requires lzma'
test_filter (test.test_tarfile.LzmaWriteTest.test_filter) ... skipped 'requires lzma'
test_gettarinfo_pathlike_name (test.test_tarfile.LzmaWriteTest.test_gettarinfo_pathlike_name) ... skipped 'requires lzma'
test_link_size (test.test_tarfile.LzmaWriteTest.test_link_size) ... skipped 'requires lzma'
test_missing_fileobj (test.test_tarfile.LzmaWriteTest.test_missing_fileobj) ... skipped 'requires lzma'
test_open_nonwritable_fileobj (test.test_tarfile.LzmaWriteTest.test_open_nonwritable_fileobj) ... skipped 'requires lzma'
test_ordered_recursion (test.test_tarfile.LzmaWriteTest.test_ordered_recursion) ... skipped 'requires lzma'
test_pathnames (test.test_tarfile.LzmaWriteTest.test_pathnames) ... skipped 'requires lzma'
test_symlink_size (test.test_tarfile.LzmaWriteTest.test_symlink_size) ... skipped 'requires lzma'
test_tar_size (test.test_tarfile.LzmaWriteTest.test_tar_size) ... skipped 'requires lzma'
test_find_blktype (test.test_tarfile.MemberReadTest.test_find_blktype) ... ok
test_find_chrtype (test.test_tarfile.MemberReadTest.test_find_chrtype) ... ok
test_find_conttype (test.test_tarfile.MemberReadTest.test_find_conttype) ... ok
test_find_dirtype (test.test_tarfile.MemberReadTest.test_find_dirtype) ... ok
test_find_dirtype_with_size (test.test_tarfile.MemberReadTest.test_find_dirtype_with_size) ... ok
test_find_fifotype (test.test_tarfile.MemberReadTest.test_find_fifotype) ... ok
test_find_gnusparse (test.test_tarfile.MemberReadTest.test_find_gnusparse) ... ok
test_find_gnusparse_00 (test.test_tarfile.MemberReadTest.test_find_gnusparse_00) ... ok
test_find_gnusparse_01 (test.test_tarfile.MemberReadTest.test_find_gnusparse_01) ... ok
test_find_gnusparse_10 (test.test_tarfile.MemberReadTest.test_find_gnusparse_10) ... ok
test_find_lnktype (test.test_tarfile.MemberReadTest.test_find_lnktype) ... ok
test_find_pax_umlauts (test.test_tarfile.MemberReadTest.test_find_pax_umlauts) ... ok
test_find_regtype (test.test_tarfile.MemberReadTest.test_find_regtype) ... ok
test_find_regtype_oldv7 (test.test_tarfile.MemberReadTest.test_find_regtype_oldv7) ... ok
test_find_sparse (test.test_tarfile.MemberReadTest.test_find_sparse) ... ok
test_find_symtype (test.test_tarfile.MemberReadTest.test_find_symtype) ... ok
test_find_umlauts (test.test_tarfile.MemberReadTest.test_find_umlauts) ... ok
test_find_ustar_longname (test.test_tarfile.MemberReadTest.test_find_ustar_longname) ... ok
test_bytes_name_attribute (test.test_tarfile.MiscReadTest.test_bytes_name_attribute) ... ok
test_check_members (test.test_tarfile.MiscReadTest.test_check_members) ... ok
test_empty_name_attribute (test.test_tarfile.MiscReadTest.test_empty_name_attribute) ... ok
test_empty_tarfile (test.test_tarfile.MiscReadTest.test_empty_tarfile) ... ok
test_extract_directory (test.test_tarfile.MiscReadTest.test_extract_directory) ... skipped 'requires working os.chmod()'
test_extract_hardlink (test.test_tarfile.MiscReadTest.test_extract_hardlink) ... skipped 'Requires functional symlink implementation'
test_extract_pathlike_dir (test.test_tarfile.MiscReadTest.test_extract_pathlike_dir) ... ok
test_extractall (test.test_tarfile.MiscReadTest.test_extractall) ... skipped 'requires working os.chmod()'
test_extractall_default_filter (test.test_tarfile.MiscReadTest.test_extractall_default_filter) ... ok
test_extractall_pathlike_dir (test.test_tarfile.MiscReadTest.test_extractall_pathlike_dir) ... ok
test_extractfile_attrs (test.test_tarfile.MiscReadTest.test_extractfile_attrs) ... ok
test_fileobj_with_offset (test.test_tarfile.MiscReadTest.test_fileobj_with_offset) ... ok
test_find_members (test.test_tarfile.MiscReadTest.test_find_members) ... ok
test_ignore_zeros (test.test_tarfile.MiscReadTest.test_ignore_zeros) ... ok
test_illegal_mode_arg (test.test_tarfile.MiscReadTest.test_illegal_mode_arg) ... ok
test_init_close_fobj (test.test_tarfile.MiscReadTest.test_init_close_fobj) ... ok
test_int_name_attribute (test.test_tarfile.MiscReadTest.test_int_name_attribute) ... ok
test_is_tarfile_erroneous (test.test_tarfile.MiscReadTest.test_is_tarfile_erroneous) ... ok
test_is_tarfile_keeps_position (test.test_tarfile.MiscReadTest.test_is_tarfile_keeps_position) ... ok
test_is_tarfile_valid (test.test_tarfile.MiscReadTest.test_is_tarfile_valid) ... ok
test_length_zero_header (test.test_tarfile.MiscReadTest.test_length_zero_header) ... ok
test_next_on_empty_tarfile (test.test_tarfile.MiscReadTest.test_next_on_empty_tarfile) ... ok
test_no_name_argument (test.test_tarfile.MiscReadTest.test_no_name_argument) ... ok
test_no_name_attribute (test.test_tarfile.MiscReadTest.test_no_name_attribute) ... ok
test_non_existent_tarfile (test.test_tarfile.MiscReadTest.test_non_existent_tarfile) ... ok
test_null_tarfile (test.test_tarfile.MiscReadTest.test_null_tarfile) ... ok
test_parallel_iteration (test.test_tarfile.MiscReadTest.test_parallel_iteration) ... ok
test_pathlike_bytes_name (test.test_tarfile.MiscReadTest.test_pathlike_bytes_name) ... ok
test_pathlike_name (test.test_tarfile.MiscReadTest.test_pathlike_name) ... ok
test_premature_end_of_archive (test.test_tarfile.MiscReadTest.test_premature_end_of_archive) ... ok
test_v7_dirtype (test.test_tarfile.MiscReadTest.test_v7_dirtype) ... ok
test_xstar_type (test.test_tarfile.MiscReadTest.test_xstar_type) ... ok
test_zlib_error_does_not_leak (test.test_tarfile.MiscReadTest.test_zlib_error_does_not_leak) ... skipped 'requires zlib'
test__all__ (test.test_tarfile.MiscTest.test__all__) ... ok
test_char_fields (test.test_tarfile.MiscTest.test_char_fields) ... ok
test_number_field_limits (test.test_tarfile.MiscTest.test_number_field_limits) ... ok
test_read_number_fields (test.test_tarfile.MiscTest.test_read_number_fields) ... ok
test_useful_error_message_when_modules_missing (test.test_tarfile.MiscTest.test_useful_error_message_when_modules_missing) ... ok
test_write_number_fields (test.test_tarfile.MiscTest.test_write_number_fields) ... ok
test_extractall_none_gid (test.test_tarfile.NoneInfoExtractTests_Data.test_extractall_none_gid) ... ok
test_extractall_none_gname (test.test_tarfile.NoneInfoExtractTests_Data.test_extractall_none_gname) ... ok
test_extractall_none_mode (test.test_tarfile.NoneInfoExtractTests_Data.test_extractall_none_mode) ... ok
test_extractall_none_mtime (test.test_tarfile.NoneInfoExtractTests_Data.test_extractall_none_mtime) ... ok
test_extractall_none_ownership (test.test_tarfile.NoneInfoExtractTests_Data.test_extractall_none_ownership) ... ok
test_extractall_none_uid (test.test_tarfile.NoneInfoExtractTests_Data.test_extractall_none_uid) ... ok
test_extractall_none_uname (test.test_tarfile.NoneInfoExtractTests_Data.test_extractall_none_uname) ... ok
test_extractall_none_gid (test.test_tarfile.NoneInfoExtractTests_Default.test_extractall_none_gid) ... ok
test_extractall_none_gname (test.test_tarfile.NoneInfoExtractTests_Default.test_extractall_none_gname) ... ok
test_extractall_none_mode (test.test_tarfile.NoneInfoExtractTests_Default.test_extractall_none_mode) ... ok
test_extractall_none_mtime (test.test_tarfile.NoneInfoExtractTests_Default.test_extractall_none_mtime) ... ok
test_extractall_none_ownership (test.test_tarfile.NoneInfoExtractTests_Default.test_extractall_none_ownership) ... ok
test_extractall_none_uid (test.test_tarfile.NoneInfoExtractTests_Default.test_extractall_none_uid) ... ok
test_extractall_none_uname (test.test_tarfile.NoneInfoExtractTests_Default.test_extractall_none_uname) ... ok
test_extractall_none_gid (test.test_tarfile.NoneInfoExtractTests_FullyTrusted.test_extractall_none_gid) ... ok
test_extractall_none_gname (test.test_tarfile.NoneInfoExtractTests_FullyTrusted.test_extractall_none_gname) ... ok
test_extractall_none_mode (test.test_tarfile.NoneInfoExtractTests_FullyTrusted.test_extractall_none_mode) ... ok
test_extractall_none_mtime (test.test_tarfile.NoneInfoExtractTests_FullyTrusted.test_extractall_none_mtime) ... ok
test_extractall_none_ownership (test.test_tarfile.NoneInfoExtractTests_FullyTrusted.test_extractall_none_ownership) ... ok
test_extractall_none_uid (test.test_tarfile.NoneInfoExtractTests_FullyTrusted.test_extractall_none_uid) ... ok
test_extractall_none_uname (test.test_tarfile.NoneInfoExtractTests_FullyTrusted.test_extractall_none_uname) ... ok
test_extractall_none_gid (test.test_tarfile.NoneInfoExtractTests_Tar.test_extractall_none_gid) ... ok
test_extractall_none_gname (test.test_tarfile.NoneInfoExtractTests_Tar.test_extractall_none_gname) ... ok
test_extractall_none_mode (test.test_tarfile.NoneInfoExtractTests_Tar.test_extractall_none_mode) ... ok
test_extractall_none_mtime (test.test_tarfile.NoneInfoExtractTests_Tar.test_extractall_none_mtime) ... ok
test_extractall_none_ownership (test.test_tarfile.NoneInfoExtractTests_Tar.test_extractall_none_ownership) ... ok
test_extractall_none_uid (test.test_tarfile.NoneInfoExtractTests_Tar.test_extractall_none_uid) ... ok
test_extractall_none_uname (test.test_tarfile.NoneInfoExtractTests_Tar.test_extractall_none_uname) ... ok
test_add (test.test_tarfile.NoneInfoTests_Misc.test_add) ... ok
test_list (test.test_tarfile.NoneInfoTests_Misc.test_list) ... ok
test_extract_with_numeric_owner (test.test_tarfile.NumericOwnerTest.test_extract_with_numeric_owner) ... skipped 'missing os.chown'
test_extract_without_numeric_owner (test.test_tarfile.NumericOwnerTest.test_extract_without_numeric_owner) ... skipped 'missing os.chown'
test_extractall_with_numeric_owner (test.test_tarfile.NumericOwnerTest.test_extractall_with_numeric_owner) ... skipped 'missing os.chown'
test_keyword_only (test.test_tarfile.NumericOwnerTest.test_keyword_only) ... skipped 'missing os.chown'
test_concurrent_extract_dir (test.test_tarfile.OverwriteTests.test_concurrent_extract_dir) ... ok
test_concurrent_extract_implicit_dir (test.test_tarfile.OverwriteTests.test_concurrent_extract_implicit_dir) ... ok
test_overwrite_broken_dir_symlink_as_dir (test.test_tarfile.OverwriteTests.test_overwrite_broken_dir_symlink_as_dir) ... skipped 'Requires functional symlink implementation'
test_overwrite_broken_dir_symlink_as_implicit_dir (test.test_tarfile.OverwriteTests.test_overwrite_broken_dir_symlink_as_implicit_dir) ... skipped 'Requires functional symlink implementation'
test_overwrite_broken_file_symlink_as_file (test.test_tarfile.OverwriteTests.test_overwrite_broken_file_symlink_as_file) ... skipped 'Requires functional symlink implementation'
test_overwrite_dir_as_dir (test.test_tarfile.OverwriteTests.test_overwrite_dir_as_dir) ... ok
test_overwrite_dir_as_file (test.test_tarfile.OverwriteTests.test_overwrite_dir_as_file) ... ok
test_overwrite_dir_as_implicit_dir (test.test_tarfile.OverwriteTests.test_overwrite_dir_as_implicit_dir) ... ok
test_overwrite_dir_symlink_as_dir (test.test_tarfile.OverwriteTests.test_overwrite_dir_symlink_as_dir) ... skipped 'Requires functional symlink implementation'
test_overwrite_dir_symlink_as_implicit_dir (test.test_tarfile.OverwriteTests.test_overwrite_dir_symlink_as_implicit_dir) ... skipped 'Requires functional symlink implementation'
test_overwrite_file_as_dir (test.test_tarfile.OverwriteTests.test_overwrite_file_as_dir) ... ok
test_overwrite_file_as_file (test.test_tarfile.OverwriteTests.test_overwrite_file_as_file) ... ok
test_overwrite_file_as_implicit_dir (test.test_tarfile.OverwriteTests.test_overwrite_file_as_implicit_dir) ... ok
test_overwrite_file_symlink_as_file (test.test_tarfile.OverwriteTests.test_overwrite_file_symlink_as_file) ... skipped 'Requires functional symlink implementation'
test_binary_header (test.test_tarfile.PAXUnicodeTest.test_binary_header) ... ok
test_iso8859_1_filename (test.test_tarfile.PAXUnicodeTest.test_iso8859_1_filename) ... ok
test_uname_unicode (test.test_tarfile.PAXUnicodeTest.test_uname_unicode) ... ok
test_unicode_argument (test.test_tarfile.PAXUnicodeTest.test_unicode_argument) ... ok
test_utf7_filename (test.test_tarfile.PAXUnicodeTest.test_utf7_filename) ... ok
test_utf8_filename (test.test_tarfile.PAXUnicodeTest.test_utf8_filename) ... ok
test_header_offset (test.test_tarfile.PaxReadTest.test_header_offset) ... ok
test_longname_directory (test.test_tarfile.PaxReadTest.test_longname_directory) ... ok
test_pax_global_headers (test.test_tarfile.PaxReadTest.test_pax_global_headers) ... ok
test_pax_header_bad_formats (test.test_tarfile.PaxReadTest.test_pax_header_bad_formats) ... ok
test_pax_number_fields (test.test_tarfile.PaxReadTest.test_pax_number_fields) ... ok
test_read_longlink (test.test_tarfile.PaxReadTest.test_read_longlink) ... ok
test_read_longname (test.test_tarfile.PaxReadTest.test_read_longname) ... ok
test_truncated_longname (test.test_tarfile.PaxReadTest.test_truncated_longname) ... ok
test_create_pax_header (test.test_tarfile.PaxWriteTest.test_create_pax_header) ... ok
test_longlink_1023 (test.test_tarfile.PaxWriteTest.test_longlink_1023) ... ok
test_longlink_1024 (test.test_tarfile.PaxWriteTest.test_longlink_1024) ... ok
test_longlink_1025 (test.test_tarfile.PaxWriteTest.test_longlink_1025) ... ok
test_longname_1023 (test.test_tarfile.PaxWriteTest.test_longname_1023) ... ok
test_longname_1024 (test.test_tarfile.PaxWriteTest.test_longname_1024) ... ok
test_longname_1025 (test.test_tarfile.PaxWriteTest.test_longname_1025) ... ok
test_longnamelink_1023 (test.test_tarfile.PaxWriteTest.test_longnamelink_1023) ... ok
test_longnamelink_1024 (test.test_tarfile.PaxWriteTest.test_longnamelink_1024) ... ok
test_longnamelink_1025 (test.test_tarfile.PaxWriteTest.test_longnamelink_1025) ... ok
test_pax_extended_header (test.test_tarfile.PaxWriteTest.test_pax_extended_header) ... ok
test_pax_global_header (test.test_tarfile.PaxWriteTest.test_pax_global_header) ... ok
test_replace_all (test.test_tarfile.ReplaceTests.test_replace_all) ... ok
test_replace_deep (test.test_tarfile.ReplaceTests.test_replace_deep) ... ok
test_replace_internal (test.test_tarfile.ReplaceTests.test_replace_internal) ... ok
test_replace_name (test.test_tarfile.ReplaceTests.test_replace_name) ... ok
test_replace_shallow (test.test_tarfile.ReplaceTests.test_replace_shallow) ... ok
test_compare_members (test.test_tarfile.StreamReadTest.test_compare_members) ... ok
test_empty_tarfile (test.test_tarfile.StreamReadTest.test_empty_tarfile) ... ok
test_extractfile_attrs (test.test_tarfile.StreamReadTest.test_extractfile_attrs) ... ok
test_fileobj_regular_file (test.test_tarfile.StreamReadTest.test_fileobj_regular_file) ... ok
test_ignore_zeros (test.test_tarfile.StreamReadTest.test_ignore_zeros) ... ok
test_is_tarfile_erroneous (test.test_tarfile.StreamReadTest.test_is_tarfile_erroneous) ... ok
test_is_tarfile_keeps_position (test.test_tarfile.StreamReadTest.test_is_tarfile_keeps_position) ... ok
test_is_tarfile_valid (test.test_tarfile.StreamReadTest.test_is_tarfile_valid) ... ok
test_length_zero_header (test.test_tarfile.StreamReadTest.test_length_zero_header) ... ok
test_non_existent_tarfile (test.test_tarfile.StreamReadTest.test_non_existent_tarfile) ... ok
test_null_tarfile (test.test_tarfile.StreamReadTest.test_null_tarfile) ... ok
test_premature_end_of_archive (test.test_tarfile.StreamReadTest.test_premature_end_of_archive) ... ok
test_provoke_stream_error (test.test_tarfile.StreamReadTest.test_provoke_stream_error) ... ok
test_read_through (test.test_tarfile.StreamReadTest.test_read_through) ... ok
test_eof_marker (test.test_tarfile.StreamWriteTest.test_eof_marker) ... ok
test_file_mode (test.test_tarfile.StreamWriteTest.test_file_mode) ... skipped 'Missing umask implementation'
test_fileobj_no_close (test.test_tarfile.StreamWriteTest.test_fileobj_no_close) ... ok
test_stream_padding (test.test_tarfile.StreamWriteTest.test_stream_padding) ... ok
test_stream_mode_no_cache (test.test_tarfile.TarStreamModeReadTest.test_stream_mode_no_cache) ... ok
test_absolute (test.test_tarfile.TestExtractionFilters.test_absolute) ... ok
test_absolute_hardlink (test.test_tarfile.TestExtractionFilters.test_absolute_hardlink) ... ok
test_absolute_symlink (test.test_tarfile.TestExtractionFilters.test_absolute_symlink) ... skipped 'WASI: Skip symlink test for now'
test_bad_filter_name (test.test_tarfile.TestExtractionFilters.test_bad_filter_name) ... ok
test_benign_file (test.test_tarfile.TestExtractionFilters.test_benign_file) ... ok
test_chains (test.test_tarfile.TestExtractionFilters.test_chains) ... skipped 'WASI: Skip symlink test for now'
test_change_default_filter_on_class (test.test_tarfile.TestExtractionFilters.test_change_default_filter_on_class) ... ok
test_change_default_filter_on_instance (test.test_tarfile.TestExtractionFilters.test_change_default_filter_on_instance) ... ok
test_change_default_filter_on_subclass (test.test_tarfile.TestExtractionFilters.test_change_default_filter_on_subclass) ... ok
test_change_default_filter_to_string (test.test_tarfile.TestExtractionFilters.test_change_default_filter_to_string) ... ok
test_custom_filter (test.test_tarfile.TestExtractionFilters.test_custom_filter) ... ok
test_data_filter (test.test_tarfile.TestExtractionFilters.test_data_filter) ... ok
test_deep_symlink (test.test_tarfile.TestExtractionFilters.test_deep_symlink) ... skipped 'WASI: Skip symlink test for now'
test_errorlevel (test.test_tarfile.TestExtractionFilters.test_errorlevel) ... ok
test_fully_trusted_filter (test.test_tarfile.TestExtractionFilters.test_fully_trusted_filter) ... ok
test_modes (test.test_tarfile.TestExtractionFilters.test_modes) ... ok
test_parent_symlink (test.test_tarfile.TestExtractionFilters.test_parent_symlink) ... skipped 'WASI: Skip symlink test for now'
test_parent_symlink2 (test.test_tarfile.TestExtractionFilters.test_parent_symlink2) ... skipped 'WASI: Skip symlink test for now'
test_pipe (test.test_tarfile.TestExtractionFilters.test_pipe) ... ok
test_sly_relative0 (test.test_tarfile.TestExtractionFilters.test_sly_relative0) ... skipped 'WASI: Skip symlink test for now'
test_sly_relative2 (test.test_tarfile.TestExtractionFilters.test_sly_relative2) ... skipped 'WASI: Skip symlink test for now'
test_special_files (test.test_tarfile.TestExtractionFilters.test_special_files) ... ok
test_stateful_filter (test.test_tarfile.TestExtractionFilters.test_stateful_filter) ... ok
test_tar_filter (test.test_tarfile.TestExtractionFilters.test_tar_filter) ... ok
test_add_dir_getmember (test.test_tarfile.UstarReadTest.test_add_dir_getmember) ... skipped 'Missing getuid or getgid implementation'
test_fileobj_iter (test.test_tarfile.UstarReadTest.test_fileobj_iter) ... ok
test_fileobj_link1 (test.test_tarfile.UstarReadTest.test_fileobj_link1) ... ok
test_fileobj_link2 (test.test_tarfile.UstarReadTest.test_fileobj_link2) ... ok
test_fileobj_readlines (test.test_tarfile.UstarReadTest.test_fileobj_readlines) ... ok
test_fileobj_regular_file (test.test_tarfile.UstarReadTest.test_fileobj_regular_file) ... ok
test_fileobj_seek (test.test_tarfile.UstarReadTest.test_fileobj_seek) ... ok
test_fileobj_symlink1 (test.test_tarfile.UstarReadTest.test_fileobj_symlink1) ... ok
test_fileobj_symlink2 (test.test_tarfile.UstarReadTest.test_fileobj_symlink2) ... ok
test_fileobj_text (test.test_tarfile.UstarReadTest.test_fileobj_text) ... ok
test_issue14160 (test.test_tarfile.UstarReadTest.test_issue14160) ... ok
test_iso8859_1_filename (test.test_tarfile.UstarUnicodeTest.test_iso8859_1_filename) ... ok
test_uname_unicode (test.test_tarfile.UstarUnicodeTest.test_uname_unicode) ... ok
test_unicode_argument (test.test_tarfile.UstarUnicodeTest.test_unicode_argument) ... ok
test_unicode_filename_error (test.test_tarfile.UstarUnicodeTest.test_unicode_filename_error) ... ok
test_unicode_link1 (test.test_tarfile.UstarUnicodeTest.test_unicode_link1) ... ok
test_unicode_link2 (test.test_tarfile.UstarUnicodeTest.test_unicode_link2) ... ok
test_unicode_longname1 (test.test_tarfile.UstarUnicodeTest.test_unicode_longname1) ... ok
test_unicode_longname2 (test.test_tarfile.UstarUnicodeTest.test_unicode_longname2) ... ok
test_unicode_longname3 (test.test_tarfile.UstarUnicodeTest.test_unicode_longname3) ... ok
test_unicode_longname4 (test.test_tarfile.UstarUnicodeTest.test_unicode_longname4) ... ok
test_unicode_name1 (test.test_tarfile.UstarUnicodeTest.test_unicode_name1) ... ok
test_unicode_name2 (test.test_tarfile.UstarUnicodeTest.test_unicode_name2) ... ok
test_utf7_filename (test.test_tarfile.UstarUnicodeTest.test_utf7_filename) ... ok
test_utf8_filename (test.test_tarfile.UstarUnicodeTest.test_utf8_filename) ... ok
test_100_char_name (test.test_tarfile.WriteTest.test_100_char_name) ... ok
test_abs_pathnames (test.test_tarfile.WriteTest.test_abs_pathnames) ... ok
test_add_self (test.test_tarfile.WriteTest.test_add_self) ... ok
test_cwd (test.test_tarfile.WriteTest.test_cwd) ... ok
test_directory_size (test.test_tarfile.WriteTest.test_directory_size) ... ok
test_eof_marker (test.test_tarfile.WriteTest.test_eof_marker) ... ok
test_extractall_symlinks (test.test_tarfile.WriteTest.test_extractall_symlinks) ... skipped 'Requires functional symlink implementation'
test_file_size (test.test_tarfile.WriteTest.test_file_size) ... ok
test_fileobj_no_close (test.test_tarfile.WriteTest.test_fileobj_no_close) ... ok
test_filter (test.test_tarfile.WriteTest.test_filter) ... ok
test_gettarinfo_pathlike_name (test.test_tarfile.WriteTest.test_gettarinfo_pathlike_name) ... ok
test_link_size (test.test_tarfile.WriteTest.test_link_size) ... ERROR
test_missing_fileobj (test.test_tarfile.WriteTest.test_missing_fileobj) ... ok
test_open_nonwritable_fileobj (test.test_tarfile.WriteTest.test_open_nonwritable_fileobj) ... ok
test_ordered_recursion (test.test_tarfile.WriteTest.test_ordered_recursion) ... ok
test_pathnames (test.test_tarfile.WriteTest.test_pathnames) ... ok
test_symlink_size (test.test_tarfile.WriteTest.test_symlink_size) ... skipped 'Requires functional symlink implementation'
test_tar_size (test.test_tarfile.WriteTest.test_tar_size) ... ok
2025-04-15T07:08:39.3779361Z
======================================================================
ERROR: test_add_hardlink (test.test_tarfile.HardlinkTest.test_add_hardlink)
----------------------------------------------------------------------
Traceback (most recent call last):
File "/Lib/test/test_tarfile.py", line 2065, in setUp
os.link(self.foo, self.bar)
~~~~~~~^^^^^^^^^^^^^^^^^^^^
OSError: [Errno 28] Invalid argument: '/build/test_python_359501Ã¦/@test_42_tmpÃ¦-tardir/foo' -> '/build/test_python_359501Ã¦/@test_42_tmpÃ¦-tardir/bar'
2025-04-15T07:08:39.3814771Z
======================================================================
ERROR: test_add_twice (test.test_tarfile.HardlinkTest.test_add_twice)
----------------------------------------------------------------------
Traceback (most recent call last):
File "/Lib/test/test_tarfile.py", line 2065, in setUp
os.link(self.foo, self.bar)
~~~~~~~^^^^^^^^^^^^^^^^^^^^
OSError: [Errno 28] Invalid argument: '/build/test_python_359501Ã¦/@test_42_tmpÃ¦-tardir/foo' -> '/build/test_python_359501Ã¦/@test_42_tmpÃ¦-tardir/bar'
2025-04-15T07:08:39.3821214Z
======================================================================
ERROR: test_dereference_hardlink (test.test_tarfile.HardlinkTest.test_dereference_hardlink)
----------------------------------------------------------------------
Traceback (most recent call last):
File "/Lib/test/test_tarfile.py", line 2065, in setUp
os.link(self.foo, self.bar)
~~~~~~~^^^^^^^^^^^^^^^^^^^^
OSError: [Errno 28] Invalid argument: '/build/test_python_359501Ã¦/@test_42_tmpÃ¦-tardir/foo' -> '/build/test_python_359501Ã¦/@test_42_tmpÃ¦-tardir/bar'
2025-04-15T07:08:39.3827354Z
======================================================================
ERROR: test_link_size (test.test_tarfile.WriteTest.test_link_size)
----------------------------------------------------------------------
Traceback (most recent call last):
File "/Lib/test/test_tarfile.py", line 1447, in test_link_size
os.link(target, link)
~~~~~~~^^^^^^^^^^^^^^
OSError: [Errno 28] Invalid argument: '/build/test_python_359501Ã¦/@test_42_tmpÃ¦-tardir/link_target' -> '/build/test_python_359501Ã¦/@test_42_tmpÃ¦-tardir/link'
2025-04-15T07:08:39.3833672Z
----------------------------------------------------------------------
Ran 614 tests in 22.127s
2025-04-15T07:08:39.3835022Z
FAILED (errors=4, skipped=346)
test test_tarfile failed
0:01:38 load avg: 5.35 [444/486/8] [32mtest_linecache passed[0m -- running (1): test_fstring (32.2 sec)
0:01:38 load avg: 5.48 [445/486/8] [33mtest_pyclbr skipped[0m -- running (1): test_fstring (32.8 sec)
test_pyclbr skipped -- No module named '_testsinglephase'
0:01:38 load avg: 5.48 [446/486/8] [32mtest_fileutils passed[0m -- running (1): test_fstring (32.8 sec)
0:01:38 load avg: 5.48 [447/486/8] [32mtest_charmapcodec passed[0m -- running (1): test_fstring (32.9 sec)
0:01:39 load avg: 5.48 [448/486/8] [32mtest_deque passed[0m -- running (1): test_fstring (33.3 sec)
0:01:39 load avg: 5.48 [449/486/8] [33mtest.test_multiprocessing_spawn.test_manager skipped[0m -- running (1): test_fstring (33.4 sec)
test.test_multiprocessing_spawn.test_manager skipped -- No module named '_multiprocessing'
0:01:39 load avg: 5.48 [450/486/8] [33mtest_android skipped[0m -- running (1): test_fstring (33.4 sec)
test_android skipped -- Android-specific
0:01:39 load avg: 5.48 [451/486/8] [32mtest_base64 passed[0m -- running (1): test_fstring (33.6 sec)
0:01:39 load avg: 5.48 [452/486/8] [32mtest_atexit passed[0m -- running (1): test_fstring (33.8 sec)
0:01:40 load avg: 5.48 [453/486/8] [32mtest_script_helper passed[0m -- running (1): test_fstring (34.0 sec)
0:01:40 load avg: 5.48 [454/486/8] [33mtest_urllibnet skipped (resource denied)[0m -- running (1): test_fstring (34.3 sec)
test_urllibnet skipped -- No socket support
0:01:40 load avg: 5.48 [455/486/8] [33mtest_httpservers skipped[0m -- running (1): test_fstring (34.5 sec)
test_httpservers skipped -- requires socket support
0:01:40 load avg: 5.48 [456/486/8] [32mtest_shelve passed[0m -- running (1): test_fstring (34.9 sec)
0:01:41 load avg: 5.48 [457/486/8] [32mtest_decorators passed[0m -- running (1): test_fstring (35.1 sec)
0:01:41 load avg: 5.48 [458/486/8] [32mtest_typechecks passed[0m -- running (1): test_fstring (35.6 sec)
0:01:41 load avg: 5.48 [459/486/8] [32mtest_runpy passed[0m -- running (1): test_fstring (35.9 sec)
0:01:42 load avg: 5.48 [460/486/8] [33mtest.test_multiprocessing_fork.test_processes skipped[0m -- running (1): test_fstring (36.1 sec)
test.test_multiprocessing_fork.test_processes skipped -- No module named '_multiprocessing'
0:01:42 load avg: 5.48 [461/486/8] [32mtest_stringprep passed[0m -- running (1): test_fstring (36.5 sec)
0:01:42 load avg: 5.48 [462/486/8] [32mtest_pprint passed[0m -- running (1): test_fstring (36.6 sec)
0:01:43 load avg: 5.48 [463/486/8] [32mtest_modulefinder passed[0m -- running (1): test_fstring (37.1 sec)
0:01:43 load avg: 5.48 [464/486/8] [32mtest_picklebuffer passed[0m -- running (1): test_fstring (37.2 sec)
0:01:43 load avg: 5.44 [465/486/8] [33mtest_dbm_sqlite3 skipped[0m -- running (1): test_fstring (37.5 sec)
test_dbm_sqlite3 skipped -- No module named '_sqlite3'
0:01:43 load avg: 5.44 [466/486/8] [33mtest_urllib_response skipped[0m -- running (1): test_fstring (37.6 sec)
test_urllib_response skipped -- Cannot create socket on WASI
0:01:43 load avg: 5.44 [467/486/8] [32mtest_urlparse passed[0m -- running (1): test_fstring (37.8 sec)
0:01:44 load avg: 5.44 [468/486/8] [32mtest_named_expressions passed[0m -- running (1): test_fstring (38.1 sec)
0:01:44 load avg: 5.44 [469/486/8] [33mtest_xmlrpc skipped[0m -- running (1): test_fstring (38.2 sec)
test_xmlrpc skipped -- requires socket support
0:01:44 load avg: 5.44 [470/486/8] [32mtest_cppext passed[0m -- running (1): test_fstring (38.6 sec)
0:01:45 load avg: 5.44 [471/486/8] [33mtest.test_asyncio.test_sendfile skipped[0m -- running (1): test_fstring (39.0 sec)
test.test_asyncio.test_sendfile skipped -- requires socket support
0:01:45 load avg: 5.44 [472/486/8] [32mtest_exception_group passed[0m -- running (1): test_fstring (39.4 sec)
0:01:45 load avg: 5.44 [473/486/8] [32mtest_logging passed[0m -- running (1): test_fstring (39.9 sec)
0:01:46 load avg: 5.44 [474/486/8] [32mtest_marshal passed[0m -- running (1): test_fstring (40.0 sec)
0:01:46 load avg: 5.44 [475/486/8] [32mtest_pdb passed[0m -- running (1): test_fstring (40.1 sec)
0:01:46 load avg: 5.44 [476/486/8] [32mtest_bdb passed[0m -- running (1): test_fstring (40.3 sec)
0:01:46 load avg: 5.44 [477/486/8] [32mtest_global passed[0m -- running (1): test_fstring (40.4 sec)
0:01:46 load avg: 5.44 [478/486/8] [33mtest_devpoll skipped[0m -- running (1): test_fstring (40.7 sec)
test_devpoll skipped -- test works only on Solaris OS family
0:01:46 load avg: 5.44 [479/486/8] [32mtest_bisect passed[0m -- running (1): test_fstring (40.7 sec)
0:01:47 load avg: 5.44 [480/486/8] [32mtest_coroutines passed[0m -- running (1): test_fstring (41.2 sec)
0:01:47 load avg: 5.44 [481/486/8] [32mtest_opcodes passed[0m -- running (1): test_fstring (41.3 sec)
0:01:47 load avg: 5.44 [482/486/8] [33mtest.test_asyncio.test_proactor_events skipped[0m -- running (1): test_fstring (41.3 sec)
test.test_asyncio.test_proactor_events skipped -- requires socket support
0:01:47 load avg: 5.44 [483/486/8] [32mtest_copyreg passed[0m -- running (1): test_fstring (41.6 sec)
0:01:47 load avg: 5.44 [484/486/8] [32mtest_weakref passed[0m -- running (1): test_fstring (41.8 sec)
0:01:49 load avg: 5.17 [485/486/8] [32mtest_fstring passed[0m (43.5 sec)
0:01:51 load avg: 5.17 [486/486/8] [32mtest_decimal passed[0m
2025-04-15T07:08:52.3655404Z
== Tests result: [1;31mFAILURE[0m ==
2025-04-15T07:08:52.3657986Z
[33m10 slowest tests:[0m
- test_fstring: 43.5 sec
- test_tarfile: 23.1 sec
- test_pickle: 18.8 sec
- test_zipfile: 17.0 sec
- test_capi: 16.4 sec
- test_decimal: 16.0 sec
- test_statistics: 15.1 sec
- test_set: 11.1 sec
- test_collections: 10.8 sec
- test_io: 9.8 sec
2025-04-15T07:08:52.3663831Z
[33m160 tests skipped:[0m
test.test_asyncio.test_base_events
test.test_asyncio.test_buffered_proto
test.test_asyncio.test_context
test.test_asyncio.test_eager_task_factory
test.test_asyncio.test_events
test.test_asyncio.test_free_threading
test.test_asyncio.test_futures test.test_asyncio.test_futures2
test.test_asyncio.test_graph test.test_asyncio.test_locks
test.test_asyncio.test_pep492
test.test_asyncio.test_proactor_events
test.test_asyncio.test_protocols test.test_asyncio.test_queues
test.test_asyncio.test_runners
test.test_asyncio.test_selector_events
test.test_asyncio.test_sendfile test.test_asyncio.test_server
test.test_asyncio.test_sock_lowlevel test.test_asyncio.test_ssl
test.test_asyncio.test_sslproto test.test_asyncio.test_staggered
test.test_asyncio.test_streams test.test_asyncio.test_subprocess
test.test_asyncio.test_taskgroups test.test_asyncio.test_tasks
test.test_asyncio.test_threads test.test_asyncio.test_timeouts
test.test_asyncio.test_transports
test.test_asyncio.test_unix_events test.test_asyncio.test_waitfor
test.test_asyncio.test_windows_events
test.test_asyncio.test_windows_utils
test.test_concurrent_futures.test_as_completed
test.test_concurrent_futures.test_deadlock
test.test_concurrent_futures.test_future
test.test_concurrent_futures.test_init
test.test_concurrent_futures.test_interpreter_pool
test.test_concurrent_futures.test_process_pool
test.test_concurrent_futures.test_shutdown
test.test_concurrent_futures.test_thread_pool
test.test_concurrent_futures.test_wait
test.test_gdb.test_backtrace test.test_gdb.test_cfunction
test.test_gdb.test_cfunction_full test.test_gdb.test_misc
test.test_gdb.test_pretty_print
test.test_multiprocessing_fork.test_manager
test.test_multiprocessing_fork.test_misc
test.test_multiprocessing_fork.test_processes
test.test_multiprocessing_fork.test_threads
test.test_multiprocessing_forkserver.test_manager
test.test_multiprocessing_forkserver.test_misc
test.test_multiprocessing_forkserver.test_processes
test.test_multiprocessing_forkserver.test_threads
test.test_multiprocessing_spawn.test_manager
test.test_multiprocessing_spawn.test_misc
test.test_multiprocessing_spawn.test_processes
test.test_multiprocessing_spawn.test_threads test__interpchannels
test__interpreters test_android test_apple test_argparse
test_asyncgen test_bz2 test_clinic test_cmd_line test_compileall
test_ctypes test_curses test_dbm_gnu test_dbm_ndbm
test_dbm_sqlite3 test_devpoll test_docxmlrpc test_dtrace
test_embed test_epoll test_external_inspection test_faulthandler
test_fcntl test_file_eintr test_fork1 test_free_threading
test_ftplib test_generated_cases test_getopt test_grp test_gzip
test_httplib test_httpservers test_idle test_imaplib test_import
test_ioctl test_kqueue test_launcher test_lzma test_mailbox
test_mmap test_msvcrt test_multiprocessing_main_handling
test_openpty test_optparse test_perf_profiler test_perfmaps
test_pkgutil test_poll test_poplib test_pty test_pwd test_pyclbr
test_pyrepl test_queue test_readline test_regrtest test_repl
test_resource test_select test_selectors test_smtplib test_smtpnet
test_socket test_sqlite3 test_ssl test_stable_abi_ctypes
test_startfile test_subprocess test_syslog test_tcl test_termios
test_thread test_threadedtempfile test_threading
test_threading_local test_tkinter test_tools test_ttk
test_ttk_textonly test_tty test_turtle test_urllib test_urllib2
test_urllib2_localnet test_urllib_response test_venv test_wait3
test_wait4 test_webbrowser test_winapi test_winconsoleio
test_winreg test_winsound test_wmi test_wsgiref
test_xml_dom_xmlbuilder test_xmlrpc test_xxlimited test_zlib
2025-04-15T07:08:52.3716490Z
[33m5 tests skipped (resource denied):[0m
test_peg_generator test_socketserver test_urllib2net
test_urllibnet test_zipfile64
2025-04-15T07:08:52.3718179Z
[1;31m8 tests failed:[0m
test_genericpath test_ntpath test_os test_pathlib test_posix
test_posixpath test_shutil test_tarfile
2025-04-15T07:08:52.3719643Z
[32m313 tests OK.[0m
2025-04-15T07:08:52.3719994Z
Total duration: 1 min 51 sec
Total tests: run=30,821 [33mskipped=3,386[0m
Total test files: run=481/486 [31mfailed=8[0m [33mskipped=160[0m [33mresource_denied=5[0m
Result: [1;31mFAILURE[0m
make: *** [Makefile:2337: test] Error 2
make: Leaving directory '/home/runner/work/cpython/cpython/cross-build/wasm32-wasip1'
##[error]Process completed with exit code 2.
