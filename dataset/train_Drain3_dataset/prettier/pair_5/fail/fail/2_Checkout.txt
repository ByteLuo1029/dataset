2025-04-14T15:09:25.8773979Z ##[group]Run actions/checkout@v4
2025-04-14T15:09:25.8775425Z with:
2025-04-14T15:09:25.8776299Z   repository: prettier/prettier
2025-04-14T15:09:25.8777569Z   token: ***
2025-04-14T15:09:25.8778465Z   ssh-strict: true
2025-04-14T15:09:25.8779454Z   ssh-user: git
2025-04-14T15:09:25.8780553Z   persist-credentials: true
2025-04-14T15:09:25.8781646Z   clean: true
2025-04-14T15:09:25.8782528Z   sparse-checkout-cone-mode: true
2025-04-14T15:09:25.8783752Z   fetch-depth: 1
2025-04-14T15:09:25.8784885Z   fetch-tags: false
2025-04-14T15:09:25.8785868Z   show-progress: true
2025-04-14T15:09:25.8786797Z   lfs: false
2025-04-14T15:09:25.8787573Z   submodules: false
2025-04-14T15:09:25.8788422Z   set-safe-directory: true
2025-04-14T15:09:25.8789743Z ##[endgroup]
2025-04-14T15:09:26.0558565Z Syncing repository: prettier/prettier
2025-04-14T15:09:26.0560961Z ##[group]Getting Git version info
2025-04-14T15:09:26.0562747Z Working directory is '/home/runner/work/prettier/prettier'
2025-04-14T15:09:26.0564851Z [command]/usr/bin/git version
2025-04-14T15:09:26.0606157Z git version 2.49.0
2025-04-14T15:09:26.0633982Z ##[endgroup]
2025-04-14T15:09:26.0649762Z Temporarily overriding HOME='/home/runner/work/_temp/e2406430-669f-496f-ba41-a6579c62e1d5' before making global git config changes
2025-04-14T15:09:26.0652534Z Adding repository directory to the temporary git global config as a safe directory
2025-04-14T15:09:26.0656498Z [command]/usr/bin/git config --global --add safe.directory /home/runner/work/prettier/prettier
2025-04-14T15:09:26.0689826Z Deleting the contents of '/home/runner/work/prettier/prettier'
2025-04-14T15:09:26.0694308Z ##[group]Initializing the repository
2025-04-14T15:09:26.0699229Z [command]/usr/bin/git init /home/runner/work/prettier/prettier
2025-04-14T15:09:26.0757074Z hint: Using 'master' as the name for the initial branch. This default branch name
2025-04-14T15:09:26.0759319Z hint: is subject to change. To configure the initial branch name to use in all
2025-04-14T15:09:26.0761133Z hint: of your new repositories, which will suppress this warning, call:
2025-04-14T15:09:26.0762423Z hint:
2025-04-14T15:09:26.0763450Z hint: 	git config --global init.defaultBranch <name>
2025-04-14T15:09:26.0764283Z hint:
2025-04-14T15:09:26.0764893Z hint: Names commonly chosen instead of 'master' are 'main', 'trunk' and
2025-04-14T15:09:26.0765835Z hint: 'development'. The just-created branch can be renamed via this command:
2025-04-14T15:09:26.0766588Z hint:
2025-04-14T15:09:26.0767033Z hint: 	git branch -m <name>
2025-04-14T15:09:26.0768300Z Initialized empty Git repository in /home/runner/work/prettier/prettier/.git/
2025-04-14T15:09:26.0773077Z [command]/usr/bin/git remote add origin https://github.com/prettier/prettier
2025-04-14T15:09:26.0804565Z ##[endgroup]
2025-04-14T15:09:26.0805416Z ##[group]Disabling automatic garbage collection
2025-04-14T15:09:26.0808218Z [command]/usr/bin/git config --local gc.auto 0
2025-04-14T15:09:26.0836357Z ##[endgroup]
2025-04-14T15:09:26.0837123Z ##[group]Setting up auth
2025-04-14T15:09:26.0842692Z [command]/usr/bin/git config --local --name-only --get-regexp core\.sshCommand
2025-04-14T15:09:26.0873577Z [command]/usr/bin/git submodule foreach --recursive sh -c "git config --local --name-only --get-regexp 'core\.sshCommand' && git config --local --unset-all 'core.sshCommand' || :"
2025-04-14T15:09:26.1152872Z [command]/usr/bin/git config --local --name-only --get-regexp http\.https\:\/\/github\.com\/\.extraheader
2025-04-14T15:09:26.1187131Z [command]/usr/bin/git submodule foreach --recursive sh -c "git config --local --name-only --get-regexp 'http\.https\:\/\/github\.com\/\.extraheader' && git config --local --unset-all 'http.https://github.com/.extraheader' || :"
2025-04-14T15:09:26.1410755Z [command]/usr/bin/git config --local http.https://github.com/.extraheader AUTHORIZATION: basic ***
2025-04-14T15:09:26.1447788Z ##[endgroup]
2025-04-14T15:09:26.1448631Z ##[group]Fetching the repository
2025-04-14T15:09:26.1456921Z [command]/usr/bin/git -c protocol.version=2 fetch --no-tags --prune --no-recurse-submodules --depth=1 origin +d55fc8b1c000461a8544a5867a01d59477bba9bd:refs/remotes/pull/17151/merge
2025-04-14T15:09:27.3535788Z From https://github.com/prettier/prettier
2025-04-14T15:09:27.3538207Z  * [new ref]         d55fc8b1c000461a8544a5867a01d59477bba9bd -> pull/17151/merge
2025-04-14T15:09:27.3578660Z ##[endgroup]
2025-04-14T15:09:27.3618489Z ##[group]Determining the checkout info
2025-04-14T15:09:27.3620659Z ##[endgroup]
2025-04-14T15:09:27.3621934Z [command]/usr/bin/git sparse-checkout disable
2025-04-14T15:09:27.3631627Z [command]/usr/bin/git config --local --unset-all extensions.worktreeConfig
2025-04-14T15:09:27.3659993Z ##[group]Checking out the ref
2025-04-14T15:09:27.3664063Z [command]/usr/bin/git checkout --progress --force refs/remotes/pull/17151/merge
2025-04-14T15:09:27.7945677Z Note: switching to 'refs/remotes/pull/17151/merge'.
2025-04-14T15:09:27.7946475Z 
2025-04-14T15:09:27.7946884Z You are in 'detached HEAD' state. You can look around, make experimental
2025-04-14T15:09:27.7947850Z changes and commit them, and you can discard any commits you make in this
2025-04-14T15:09:27.7948789Z state without impacting any branches by switching back to a branch.
2025-04-14T15:09:27.7949388Z 
2025-04-14T15:09:27.7949795Z If you want to create a new branch to retain commits you create, you may
2025-04-14T15:09:27.7950650Z do so (now or later) by using -c with the switch command. Example:
2025-04-14T15:09:27.7951154Z 
2025-04-14T15:09:27.7951389Z   git switch -c <new-branch-name>
2025-04-14T15:09:27.7951756Z 
2025-04-14T15:09:27.7951991Z Or undo this operation with:
2025-04-14T15:09:27.7952341Z 
2025-04-14T15:09:27.7952534Z   git switch -
2025-04-14T15:09:27.7952832Z 
2025-04-14T15:09:27.7953599Z Turn off this advice by setting config variable advice.detachedHead to false
2025-04-14T15:09:27.7954253Z 
2025-04-14T15:09:27.7955418Z HEAD is now at d55fc8b Merge 0a0a16cb97b259a54da10121e5946912cecaafa7 into c93393c0be9698f3fd303057b114084cf3970fb1
2025-04-14T15:09:27.7959217Z ##[endgroup]
2025-04-14T15:09:27.7997788Z [command]/usr/bin/git log -1 --format=%H
2025-04-14T15:09:27.8019819Z d55fc8b1c000461a8544a5867a01d59477bba9bd
