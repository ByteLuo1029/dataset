2025-04-14T17:06:45.0082250Z ##[group]Run actions/checkout@v4
2025-04-14T17:06:45.0083331Z with:
2025-04-14T17:06:45.0084065Z   repository: django/django
2025-04-14T17:06:45.0084814Z   token: ***
2025-04-14T17:06:45.0085265Z   ssh-strict: true
2025-04-14T17:06:45.0085721Z   ssh-user: git
2025-04-14T17:06:45.0086187Z   persist-credentials: true
2025-04-14T17:06:45.0086715Z   clean: true
2025-04-14T17:06:45.0087175Z   sparse-checkout-cone-mode: true
2025-04-14T17:06:45.0087725Z   fetch-depth: 1
2025-04-14T17:06:45.0088186Z   fetch-tags: false
2025-04-14T17:06:45.0088654Z   show-progress: true
2025-04-14T17:06:45.0089119Z   lfs: false
2025-04-14T17:06:45.0089541Z   submodules: false
2025-04-14T17:06:45.0090004Z   set-safe-directory: true
2025-04-14T17:06:45.0090787Z ##[endgroup]
2025-04-14T17:06:45.2628143Z Syncing repository: django/django
2025-04-14T17:06:45.2631015Z ##[group]Getting Git version info
2025-04-14T17:06:45.2632448Z Working directory is '/home/runner/work/django/django'
2025-04-14T17:06:45.2634920Z [command]/usr/bin/git version
2025-04-14T17:06:45.2704225Z git version 2.49.0
2025-04-14T17:06:45.2733134Z ##[endgroup]
2025-04-14T17:06:45.2747964Z Temporarily overriding HOME='/home/runner/work/_temp/11e2a354-2305-4a3b-aac6-812a825e35e9' before making global git config changes
2025-04-14T17:06:45.2751989Z Adding repository directory to the temporary git global config as a safe directory
2025-04-14T17:06:45.2755113Z [command]/usr/bin/git config --global --add safe.directory /home/runner/work/django/django
2025-04-14T17:06:45.2796878Z Deleting the contents of '/home/runner/work/django/django'
2025-04-14T17:06:45.2802017Z ##[group]Initializing the repository
2025-04-14T17:06:45.2808113Z [command]/usr/bin/git init /home/runner/work/django/django
2025-04-14T17:06:45.2907471Z hint: Using 'master' as the name for the initial branch. This default branch name
2025-04-14T17:06:45.2909443Z hint: is subject to change. To configure the initial branch name to use in all
2025-04-14T17:06:45.2911179Z hint: of your new repositories, which will suppress this warning, call:
2025-04-14T17:06:45.2912275Z hint:
2025-04-14T17:06:45.2912949Z hint: 	git config --global init.defaultBranch <name>
2025-04-14T17:06:45.2914331Z hint:
2025-04-14T17:06:45.2915744Z hint: Names commonly chosen instead of 'master' are 'main', 'trunk' and
2025-04-14T17:06:45.2918038Z hint: 'development'. The just-created branch can be renamed via this command:
2025-04-14T17:06:45.2919445Z hint:
2025-04-14T17:06:45.2919990Z hint: 	git branch -m <name>
2025-04-14T17:06:45.2921065Z Initialized empty Git repository in /home/runner/work/django/django/.git/
2025-04-14T17:06:45.2934078Z [command]/usr/bin/git remote add origin https://github.com/django/django
2025-04-14T17:06:45.2978784Z ##[endgroup]
2025-04-14T17:06:45.2979843Z ##[group]Disabling automatic garbage collection
2025-04-14T17:06:45.2984574Z [command]/usr/bin/git config --local gc.auto 0
2025-04-14T17:06:45.3017999Z ##[endgroup]
2025-04-14T17:06:45.3018940Z ##[group]Setting up auth
2025-04-14T17:06:45.3028700Z [command]/usr/bin/git config --local --name-only --get-regexp core\.sshCommand
2025-04-14T17:06:45.3063686Z [command]/usr/bin/git submodule foreach --recursive sh -c "git config --local --name-only --get-regexp 'core\.sshCommand' && git config --local --unset-all 'core.sshCommand' || :"
2025-04-14T17:06:45.3408765Z [command]/usr/bin/git config --local --name-only --get-regexp http\.https\:\/\/github\.com\/\.extraheader
2025-04-14T17:06:45.3442880Z [command]/usr/bin/git submodule foreach --recursive sh -c "git config --local --name-only --get-regexp 'http\.https\:\/\/github\.com\/\.extraheader' && git config --local --unset-all 'http.https://github.com/.extraheader' || :"
2025-04-14T17:06:45.3681656Z [command]/usr/bin/git config --local http.https://github.com/.extraheader AUTHORIZATION: basic ***
2025-04-14T17:06:45.3719782Z ##[endgroup]
2025-04-14T17:06:45.3720917Z ##[group]Fetching the repository
2025-04-14T17:06:45.3732179Z [command]/usr/bin/git -c protocol.version=2 fetch --no-tags --prune --no-recurse-submodules --depth=1 origin +1f6c2a7b94df49566fcf433435e1da2a5ef6ab0f:refs/remotes/pull/19380/merge
2025-04-14T17:06:47.2173240Z From https://github.com/django/django
2025-04-14T17:06:47.2176109Z  * [new ref]         1f6c2a7b94df49566fcf433435e1da2a5ef6ab0f -> pull/19380/merge
2025-04-14T17:06:47.2244155Z ##[endgroup]
2025-04-14T17:06:47.2245466Z ##[group]Determining the checkout info
2025-04-14T17:06:47.2246990Z ##[endgroup]
2025-04-14T17:06:47.2251002Z [command]/usr/bin/git sparse-checkout disable
2025-04-14T17:06:47.2305280Z [command]/usr/bin/git config --local --unset-all extensions.worktreeConfig
2025-04-14T17:06:47.2332222Z ##[group]Checking out the ref
2025-04-14T17:06:47.2335785Z [command]/usr/bin/git checkout --progress --force refs/remotes/pull/19380/merge
2025-04-14T17:06:47.7202279Z Note: switching to 'refs/remotes/pull/19380/merge'.
2025-04-14T17:06:47.7202870Z 
2025-04-14T17:06:47.7203221Z You are in 'detached HEAD' state. You can look around, make experimental
2025-04-14T17:06:47.7204300Z changes and commit them, and you can discard any commits you make in this
2025-04-14T17:06:47.7205136Z state without impacting any branches by switching back to a branch.
2025-04-14T17:06:47.7206341Z 
2025-04-14T17:06:47.7206720Z If you want to create a new branch to retain commits you create, you may
2025-04-14T17:06:47.7207466Z do so (now or later) by using -c with the switch command. Example:
2025-04-14T17:06:47.7207888Z 
2025-04-14T17:06:47.7208076Z   git switch -c <new-branch-name>
2025-04-14T17:06:47.7208379Z 
2025-04-14T17:06:47.7208583Z Or undo this operation with:
2025-04-14T17:06:47.7208875Z 
2025-04-14T17:06:47.7209040Z   git switch -
2025-04-14T17:06:47.7209287Z 
2025-04-14T17:06:47.7209653Z Turn off this advice by setting config variable advice.detachedHead to false
2025-04-14T17:06:47.7210210Z 
2025-04-14T17:06:47.7210851Z HEAD is now at 1f6c2a7 Merge a57a8163cdd431db953476e6d664c59b7eb86641 into ab1b9cc1b38e8735979c817f42e8f54a5795c4f7
2025-04-14T17:06:47.7221716Z ##[endgroup]
2025-04-14T17:06:47.7260566Z [command]/usr/bin/git log -1 --format=%H
2025-04-14T17:06:47.7283652Z 1f6c2a7b94df49566fcf433435e1da2a5ef6ab0f
