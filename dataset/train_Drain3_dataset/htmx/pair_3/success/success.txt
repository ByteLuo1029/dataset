2025-01-25T15:28:40.8826262Z Requested labels: ubuntu-22.04
2025-01-25T15:28:40.8826555Z Job defined at: bigskysoftware/htmx/.github/workflows/ci.yml@refs/heads/master
2025-01-25T15:28:40.8826695Z Waiting for a runner to pick up this job...
2025-01-25T15:28:41.1190644Z Job is waiting for a hosted runner to come online.
2025-01-25T15:28:44.5699253Z Job is about to start running on the hosted runner: GitHub Actions 42 (hosted)
2025-01-25T15:28:46.3120028Z Current runner version: '2.321.0'
2025-01-25T15:28:46.3145995Z ##[group]Operating System
2025-01-25T15:28:46.3146751Z Ubuntu
2025-01-25T15:28:46.3147357Z 22.04.5
2025-01-25T15:28:46.3147870Z LTS
2025-01-25T15:28:46.3148319Z ##[endgroup]
2025-01-25T15:28:46.3148947Z ##[group]Runner Image
2025-01-25T15:28:46.3149521Z Image: ubuntu-22.04
2025-01-25T15:28:46.3150001Z Version: 20250120.2.0
2025-01-25T15:28:46.3151076Z Included Software: https://github.com/actions/runner-images/blob/ubuntu22/20250120.2/images/ubuntu/Ubuntu2204-Readme.md
2025-01-25T15:28:46.3152431Z Image Release: https://github.com/actions/runner-images/releases/tag/ubuntu22%2F20250120.2
2025-01-25T15:28:46.3153287Z ##[endgroup]
2025-01-25T15:28:46.3153883Z ##[group]Runner Image Provisioner
2025-01-25T15:28:46.3154463Z 2.0.417.1
2025-01-25T15:28:46.3154893Z ##[endgroup]
2025-01-25T15:28:46.3157142Z ##[group]GITHUB_TOKEN Permissions
2025-01-25T15:28:46.3159915Z Actions: write
2025-01-25T15:28:46.3160719Z Attestations: write
2025-01-25T15:28:46.3161343Z Checks: write
2025-01-25T15:28:46.3161923Z Contents: write
2025-01-25T15:28:46.3162449Z Deployments: write
2025-01-25T15:28:46.3162932Z Discussions: write
2025-01-25T15:28:46.3163502Z Issues: write
2025-01-25T15:28:46.3164015Z Metadata: read
2025-01-25T15:28:46.3164485Z Packages: write
2025-01-25T15:28:46.3165051Z Pages: write
2025-01-25T15:28:46.3165567Z PullRequests: write
2025-01-25T15:28:46.3166090Z RepositoryProjects: write
2025-01-25T15:28:46.3166707Z SecurityEvents: write
2025-01-25T15:28:46.3167248Z Statuses: write
2025-01-25T15:28:46.3167714Z ##[endgroup]
2025-01-25T15:28:46.3170885Z Secret source: Actions
2025-01-25T15:28:46.3171920Z Prepare workflow directory
2025-01-25T15:28:46.3499160Z Prepare all required actions
2025-01-25T15:28:46.3536042Z Getting action download info
2025-01-25T15:28:46.5067525Z Download action repository 'actions/checkout@v4' (SHA:11bd71901bbe5b1630ceea73d27597364c9af683)
2025-01-25T15:28:46.6245496Z Download action repository 'actions/setup-node@v4' (SHA:39370e3970a6d050c480ffad4ff0ed4d3fdee5af)
2025-01-25T15:28:46.7856374Z Complete job name: test_suite
2025-01-25T15:28:46.8669613Z ##[group]Run actions/checkout@v4
2025-01-25T15:28:46.8670685Z with:
2025-01-25T15:28:46.8671220Z   repository: bigskysoftware/htmx
2025-01-25T15:28:46.8671984Z   token: ***
2025-01-25T15:28:46.8672534Z   ssh-strict: true
2025-01-25T15:28:46.8673070Z   ssh-user: git
2025-01-25T15:28:46.8673535Z   persist-credentials: true
2025-01-25T15:28:46.8674129Z   clean: true
2025-01-25T15:28:46.8674658Z   sparse-checkout-cone-mode: true
2025-01-25T15:28:46.8675196Z   fetch-depth: 1
2025-01-25T15:28:46.8675737Z   fetch-tags: false
2025-01-25T15:28:46.8676234Z   show-progress: true
2025-01-25T15:28:46.8676751Z   lfs: false
2025-01-25T15:28:46.8677264Z   submodules: false
2025-01-25T15:28:46.8677769Z   set-safe-directory: true
2025-01-25T15:28:46.8678599Z ##[endgroup]
2025-01-25T15:28:47.1978357Z Syncing repository: bigskysoftware/htmx
2025-01-25T15:28:47.1980590Z ##[group]Getting Git version info
2025-01-25T15:28:47.1981501Z Working directory is '/home/runner/work/htmx/htmx'
2025-01-25T15:28:47.1982773Z [command]/usr/bin/git version
2025-01-25T15:28:47.2046573Z git version 2.48.1
2025-01-25T15:28:47.2075164Z ##[endgroup]
2025-01-25T15:28:47.2090853Z Temporarily overriding HOME='/home/runner/work/_temp/42189c01-b71d-4063-9434-9d0b8cca59e6' before making global git config changes
2025-01-25T15:28:47.2093413Z Adding repository directory to the temporary git global config as a safe directory
2025-01-25T15:28:47.2103887Z [command]/usr/bin/git config --global --add safe.directory /home/runner/work/htmx/htmx
2025-01-25T15:28:47.2140141Z Deleting the contents of '/home/runner/work/htmx/htmx'
2025-01-25T15:28:47.2144044Z ##[group]Initializing the repository
2025-01-25T15:28:47.2148630Z [command]/usr/bin/git init /home/runner/work/htmx/htmx
2025-01-25T15:28:47.2226010Z hint: Using 'master' as the name for the initial branch. This default branch name
2025-01-25T15:28:47.2227596Z hint: is subject to change. To configure the initial branch name to use in all
2025-01-25T15:28:47.2228943Z hint: of your new repositories, which will suppress this warning, call:
2025-01-25T15:28:47.2229696Z hint:
2025-01-25T15:28:47.2230343Z hint: 	git config --global init.defaultBranch <name>
2025-01-25T15:28:47.2231024Z hint:
2025-01-25T15:28:47.2231636Z hint: Names commonly chosen instead of 'master' are 'main', 'trunk' and
2025-01-25T15:28:47.2233017Z hint: 'development'. The just-created branch can be renamed via this command:
2025-01-25T15:28:47.2234178Z hint:
2025-01-25T15:28:47.2234823Z hint: 	git branch -m <name>
2025-01-25T15:28:47.2236346Z Initialized empty Git repository in /home/runner/work/htmx/htmx/.git/
2025-01-25T15:28:47.2245464Z [command]/usr/bin/git remote add origin https://github.com/bigskysoftware/htmx
2025-01-25T15:28:47.2281422Z ##[endgroup]
2025-01-25T15:28:47.2282950Z ##[group]Disabling automatic garbage collection
2025-01-25T15:28:47.2285957Z [command]/usr/bin/git config --local gc.auto 0
2025-01-25T15:28:47.2316923Z ##[endgroup]
2025-01-25T15:28:47.2318447Z ##[group]Setting up auth
2025-01-25T15:28:47.2325509Z [command]/usr/bin/git config --local --name-only --get-regexp core\.sshCommand
2025-01-25T15:28:47.2355968Z [command]/usr/bin/git submodule foreach --recursive sh -c "git config --local --name-only --get-regexp 'core\.sshCommand' && git config --local --unset-all 'core.sshCommand' || :"
2025-01-25T15:28:47.2680827Z [command]/usr/bin/git config --local --name-only --get-regexp http\.https\:\/\/github\.com\/\.extraheader
2025-01-25T15:28:47.2711115Z [command]/usr/bin/git submodule foreach --recursive sh -c "git config --local --name-only --get-regexp 'http\.https\:\/\/github\.com\/\.extraheader' && git config --local --unset-all 'http.https://github.com/.extraheader' || :"
2025-01-25T15:28:47.2945636Z [command]/usr/bin/git config --local http.https://github.com/.extraheader AUTHORIZATION: basic ***
2025-01-25T15:28:47.2982246Z ##[endgroup]
2025-01-25T15:28:47.2983194Z ##[group]Fetching the repository
2025-01-25T15:28:47.2990520Z [command]/usr/bin/git -c protocol.version=2 fetch --no-tags --prune --no-recurse-submodules --depth=1 origin +8ed85cdb2259d2dc3466efb0da5f52e864e984bb:refs/remotes/origin/master
2025-01-25T15:28:48.9881817Z From https://github.com/bigskysoftware/htmx
2025-01-25T15:28:48.9883989Z  * [new ref]         8ed85cdb2259d2dc3466efb0da5f52e864e984bb -> origin/master
2025-01-25T15:28:48.9912958Z ##[endgroup]
2025-01-25T15:28:48.9914631Z ##[group]Determining the checkout info
2025-01-25T15:28:48.9916468Z ##[endgroup]
2025-01-25T15:28:48.9921152Z [command]/usr/bin/git sparse-checkout disable
2025-01-25T15:28:48.9974002Z [command]/usr/bin/git config --local --unset-all extensions.worktreeConfig
2025-01-25T15:28:49.0006214Z ##[group]Checking out the ref
2025-01-25T15:28:49.0013601Z [command]/usr/bin/git checkout --progress --force -B master refs/remotes/origin/master
2025-01-25T15:28:49.2739136Z Reset branch 'master'
2025-01-25T15:28:49.2740558Z branch 'master' set up to track 'origin/master'.
2025-01-25T15:28:49.2780646Z ##[endgroup]
2025-01-25T15:28:49.2820518Z [command]/usr/bin/git log -1 --format=%H
2025-01-25T15:28:49.2844609Z 8ed85cdb2259d2dc3466efb0da5f52e864e984bb
2025-01-25T15:28:49.3150683Z ##[group]Run actions/setup-node@v4
2025-01-25T15:28:49.3151954Z with:
2025-01-25T15:28:49.3152907Z   node-version: 20.x
2025-01-25T15:28:49.3153992Z   always-auth: false
2025-01-25T15:28:49.3155011Z   check-latest: false
2025-01-25T15:28:49.3156344Z   token: ***
2025-01-25T15:28:49.3157346Z ##[endgroup]
2025-01-25T15:28:49.4799897Z Found in cache @ /opt/hostedtoolcache/node/20.18.1/x64
2025-01-25T15:28:49.4805180Z ##[group]Environment details
2025-01-25T15:28:49.8464292Z node: v20.18.1
2025-01-25T15:28:49.8465524Z npm: 10.8.2
2025-01-25T15:28:49.8466083Z yarn: 1.22.22
2025-01-25T15:28:49.8467134Z ##[endgroup]
2025-01-25T15:28:49.8576905Z ##[group]Run npm ci
2025-01-25T15:28:49.8577471Z [36;1mnpm ci[0m
2025-01-25T15:28:49.8690272Z shell: /usr/bin/bash -e {0}
2025-01-25T15:28:49.8690727Z ##[endgroup]
2025-01-25T15:28:50.6803565Z npm warn skipping integrity check for git dependency ssh://git@github.com/Telroshan/mocha-chrome.git
2025-01-25T15:28:51.9925604Z npm warn deprecated rimraf@3.0.2: Rimraf versions prior to v4 are no longer supported
2025-01-25T15:28:52.3016475Z npm warn deprecated inflight@1.0.6: This module is not supported, and leaks memory. Do not use it. Check out lru-cache if you want a good and tested way to coalesce async requests by a key value, which is much more comprehensive and powerful.
2025-01-25T15:28:52.4117312Z npm warn deprecated glob@7.2.3: Glob versions prior to v9 are no longer supported
2025-01-25T15:28:52.5641757Z npm warn deprecated deep-assign@3.0.0: Check out `lodash.merge` or `merge-options` instead.
2025-01-25T15:28:52.7543365Z npm warn deprecated @humanwhocodes/config-array@0.11.14: Use @eslint/config-array instead
2025-01-25T15:28:52.7911050Z npm warn deprecated @humanwhocodes/object-schema@2.0.3: Use @eslint/object-schema instead
2025-01-25T15:28:52.8776148Z npm warn deprecated glob@7.2.0: Glob versions prior to v9 are no longer supported
2025-01-25T15:28:52.8970517Z npm warn deprecated glob@8.1.0: Glob versions prior to v9 are no longer supported
2025-01-25T15:28:53.5188155Z npm warn deprecated sinon@9.2.4: 16.1.1
2025-01-25T15:28:54.1144755Z 
2025-01-25T15:28:54.1145941Z added 406 packages, and audited 407 packages in 4s
2025-01-25T15:28:54.1146715Z 
2025-01-25T15:28:54.1147069Z 133 packages are looking for funding
2025-01-25T15:28:54.1147799Z   run `npm fund` for details
2025-01-25T15:28:54.1218609Z 
2025-01-25T15:28:54.1219277Z 4 vulnerabilities (2 moderate, 2 high)
2025-01-25T15:28:54.1220303Z 
2025-01-25T15:28:54.1221073Z To address issues that do not require attention, run:
2025-01-25T15:28:54.1221768Z   npm audit fix
2025-01-25T15:28:54.1222006Z 
2025-01-25T15:28:54.1222435Z To address all issues, run:
2025-01-25T15:28:54.1223012Z   npm audit fix --force
2025-01-25T15:28:54.1223286Z 
2025-01-25T15:28:54.1223593Z Run `npm audit` for details.
2025-01-25T15:28:54.1533595Z ##[group]Run npm test
2025-01-25T15:28:54.1534123Z [36;1mnpm test[0m
2025-01-25T15:28:54.1571700Z shell: /usr/bin/bash -e {0}
2025-01-25T15:28:54.1572043Z ##[endgroup]
2025-01-25T15:28:54.2666079Z 
2025-01-25T15:28:54.2666929Z > htmx.org@2.0.4 test
2025-01-25T15:28:54.2667831Z > npm run lint && npm run types-check && mocha-chrome test/index.html
2025-01-25T15:28:54.2668325Z 
2025-01-25T15:28:54.3789042Z 
2025-01-25T15:28:54.3789571Z > htmx.org@2.0.4 lint
2025-01-25T15:28:54.3790420Z > eslint src/htmx.js test/attributes/ test/core/ test/util/
2025-01-25T15:28:54.3790935Z 
2025-01-25T15:28:57.0027143Z 
2025-01-25T15:28:57.0027982Z > htmx.org@2.0.4 types-check
2025-01-25T15:28:57.0029222Z > tsc src/htmx.js --noEmit --checkJs --target es6 --lib dom,dom.iterable
2025-01-25T15:28:57.0029868Z 
2025-01-25T15:29:01.1724184Z [chrome-exception] {
2025-01-25T15:29:01.1724800Z   timestamp: 1737818941170.118,
2025-01-25T15:29:01.1725458Z   exceptionDetails: {
2025-01-25T15:29:01.1726167Z     exceptionId: 2,
2025-01-25T15:29:01.1726620Z     text: 'Uncaught',
2025-01-25T15:29:01.1727152Z     lineNumber: 0,
2025-01-25T15:29:01.1727723Z     columnNumber: 0,
2025-01-25T15:29:01.1728213Z     scriptId: '12',
2025-01-25T15:29:01.1729042Z     url: 'file:///home/runner/work/htmx/htmx/node_modules/mocha-webdriver/dist/index.js',
2025-01-25T15:29:01.1729927Z     exception: {
2025-01-25T15:29:01.1730412Z       type: 'object',
2025-01-25T15:29:01.1730808Z       subtype: 'error',
2025-01-25T15:29:01.1731401Z       className: 'SyntaxError',
2025-01-25T15:29:01.1732258Z       description: "SyntaxError: Identifier 'chrome' has already been declared",
2025-01-25T15:29:01.1733011Z       objectId: '3543313633937690718.2.3',
2025-01-25T15:29:01.1733654Z       preview: [Object]
2025-01-25T15:29:01.1734164Z     },
2025-01-25T15:29:01.1734545Z     executionContextId: 2
2025-01-25T15:29:01.1735088Z   }
2025-01-25T15:29:01.1735554Z }
2025-01-25T15:29:01.2489334Z 
2025-01-25T15:29:01.2497162Z 
2025-01-25T15:29:01.2504868Z   Core htmx internals Tests
2025-01-25T15:29:01.2570488Z     ✅ makeFragment works with janky stuff
2025-01-25T15:29:01.2582686Z     ✅ makeFragment works with template wrapping
2025-01-25T15:29:01.2588345Z     ✅ makeFragment works with template wrapping and funky combos
2025-01-25T15:29:01.2599567Z     ✅ set header works with non-ASCII values
2025-01-25T15:29:01.2608957Z     ✅ handles parseInterval correctly
2025-01-25T15:29:01.2625234Z     ✅ tokenizes correctly
2025-01-25T15:29:01.2661033Z     ✅ tags respond correctly to shouldCancel
2025-01-25T15:29:01.2667644Z     ✅ unset properly unsets a given attribute
2025-01-25T15:29:01.2673396Z     ✅ unset properly unsets a given attribute on a parent
2025-01-25T15:29:01.2679929Z     ✅ unset does not unset a value below it in the hierarchy
2025-01-25T15:29:01.2686980Z     ✅ encoding values respects enctype on forms
2025-01-25T15:29:01.2689839Z 
2025-01-25T15:29:01.2693684Z   Core htmx API test
2025-01-25T15:29:01.2697482Z     ✅ should find properly
2025-01-25T15:29:01.2703038Z     ✅ should find properly from elt
2025-01-25T15:29:01.2708110Z     ✅ should find all properly
2025-01-25T15:29:01.2713227Z     ✅ should find all properly from elt
2025-01-25T15:29:01.2717803Z     ✅ should find closest element properly
2025-01-25T15:29:01.2723500Z     ✅ should remove element properly
2025-01-25T15:29:01.2728834Z     ✅ should remove element properly w/ selector
2025-01-25T15:29:01.2733859Z     ✅ should add class properly
2025-01-25T15:29:01.2738697Z     ✅ should add class properly w/ selector
2025-01-25T15:29:01.2947223Z     ✅ should add class properly after delay
2025-01-25T15:29:01.2954476Z     ✅ should remove class properly
2025-01-25T15:29:01.2959735Z     ✅ should remove class properly w/ selector
2025-01-25T15:29:01.3167418Z     ✅ should add class properly after delay
2025-01-25T15:29:01.3214548Z     ✅ should toggle class properly
2025-01-25T15:29:01.3220198Z     ✅ should toggle class properly w/ selector
2025-01-25T15:29:01.3226745Z     ✅ should take class properly
2025-01-25T15:29:01.3234531Z     ✅ should take class properly w/ selector
2025-01-25T15:29:01.3242911Z htmx:evalDisallowedError
2025-01-25T15:29:01.3246886Z     ✅ eval can be suppressed
2025-01-25T15:29:01.3320091Z     ✅ ajax api works
2025-01-25T15:29:01.3335015Z     ✅ ajax api works by ID
2025-01-25T15:29:01.3344625Z htmx:targetError
2025-01-25T15:29:01.3348433Z     ✅ ajax api does not fall back to body when target invalid
2025-01-25T15:29:01.3354105Z htmx:targetError
2025-01-25T15:29:01.3357068Z     ✅ ajax api fails when target invalid
2025-01-25T15:29:01.3363103Z [chrome-exception] {
2025-01-25T15:29:01.3363905Z   timestamp: 1737818941335.764,
2025-01-25T15:29:01.3364435Z   exceptionDetails: {
2025-01-25T15:29:01.3364807Z     exceptionId: 3,
2025-01-25T15:29:01.3365414Z     text: 'Uncaught (in promise)',
2025-01-25T15:29:01.3365941Z     lineNumber: 631,
2025-01-25T15:29:01.3366322Z     columnNumber: 6,
2025-01-25T15:29:01.3366816Z     scriptId: '15',
2025-01-25T15:29:01.3367338Z     url: 'file:///home/runner/work/htmx/htmx/src/htmx.js',
2025-01-25T15:29:01.3367840Z     stackTrace: { callFrames: [Array] },
2025-01-25T15:29:01.3368213Z     exception: { type: 'undefined' },
2025-01-25T15:29:01.3368549Z     executionContextId: 2
2025-01-25T15:29:01.3368887Z   }
2025-01-25T15:29:01.3369175Z }
2025-01-25T15:29:01.3403616Z htmx:targetError
2025-01-25T15:29:01.3406428Z     ✅ ajax api fails when target invalid even if source set
2025-01-25T15:29:01.3454390Z htmx:targetError
2025-01-25T15:29:01.3456131Z     ✅ ajax api fails when source invalid and no target set
2025-01-25T15:29:01.3512598Z     ✅ ajax api falls back to targeting source if target not set
2025-01-25T15:29:01.3530706Z     ✅ ajax api works with swapSpec
2025-01-25T15:29:01.3547041Z     ✅ ajax api works with select
2025-01-25T15:29:01.3563547Z     ✅ ajax api works with Hx-Select overrides select
2025-01-25T15:29:01.3577627Z     ✅ ajax returns a promise
2025-01-25T15:29:01.3642736Z     ✅ ajax api can pass parameters
2025-01-25T15:29:01.3654585Z     ✅ ajax api Content-Type header is application/x-www-form-urlencoded
2025-01-25T15:29:01.3668272Z     ✅ ajax api Content-Type header override to application/json
2025-01-25T15:29:01.3695078Z     ✅ can re-init with new attributes
2025-01-25T15:29:01.3712429Z     ✅ does not trigger load on re-init of an existing element
2025-01-25T15:29:01.3727898Z     ✅ onLoad is called... onLoad
2025-01-25T15:29:01.3733605Z     ✅ triggers properly
2025-01-25T15:29:01.3748615Z     ✅ triggers properly w/ selector
2025-01-25T15:29:01.3753402Z     ✅ triggers with no details properly
2025-01-25T15:29:01.3760600Z     ✅ swaps content properly (basic)
2025-01-25T15:29:01.3768470Z     ✅ swaps content properly (with select)
2025-01-25T15:29:01.3780992Z     ✅ swaps content properly (with oob)
2025-01-25T15:29:01.3789905Z     ✅ swaps content properly (with select oob)
2025-01-25T15:29:01.3802880Z     ✅ swap delete works when parent is removed
2025-01-25T15:29:01.3816824Z     ✅ swap outerHTML works when parent is removed
2025-01-25T15:29:01.3817279Z 
2025-01-25T15:29:01.3822718Z   Core htmx AJAX Tests
2025-01-25T15:29:01.3833095Z     ✅ issues a GET request on click and swaps content
2025-01-25T15:29:01.3860707Z     ✅ processes inner content properly
2025-01-25T15:29:01.3877445Z     ✅ handles swap outerHTML properly
2025-01-25T15:29:01.3916516Z     ✅ handles beforebegin properly
2025-01-25T15:29:01.3938956Z     ✅ handles afterbegin properly
2025-01-25T15:29:01.3965983Z     ✅ handles afterbegin properly with no initial content
2025-01-25T15:29:01.3995493Z     ✅ handles afterend properly
2025-01-25T15:29:01.4015482Z     ✅ handles beforeend properly
2025-01-25T15:29:01.4035478Z     ✅ handles beforeend properly with no initial content
2025-01-25T15:29:01.4048277Z     ✅ handles hx-target properly
2025-01-25T15:29:01.4059486Z     ✅ handles 204 NO CONTENT responses properly
2025-01-25T15:29:01.4090676Z     ✅ handles 304 NOT MODIFIED responses properly
2025-01-25T15:29:01.4103144Z     ✅ handles hx-trigger with non-default value
2025-01-25T15:29:01.4113020Z     ✅ handles hx-trigger with load event
2025-01-25T15:29:01.4142995Z     ✅ sets the content type of the request properly
2025-01-25T15:29:01.4156189Z     ✅ issues two requests when clicked twice before response
2025-01-25T15:29:01.4168875Z     ✅ issues two requests when clicked three times before response
2025-01-25T15:29:01.4185981Z     ✅ properly handles hx-select for basic situation
2025-01-25T15:29:01.4196052Z     ✅ properly handles hx-select for full html document situation
2025-01-25T15:29:01.4408331Z     ✅ properly settles attributes on interior elements
2025-01-25T15:29:01.4664403Z     ✅ properly settles attributes elements with single quotes in id
2025-01-25T15:29:01.4920154Z     ✅ properly settles attributes elements with double quotes in id
2025-01-25T15:29:01.5008170Z     ✅ properly handles multiple select input
2025-01-25T15:29:01.5030389Z     ✅ properly handles multiple select input when "multiple" attribute is empty string
2025-01-25T15:29:01.5053924Z     ✅ properly handles two multiple select inputs w/ same name
2025-01-25T15:29:01.5084494Z     ✅ properly handles multiple email input
2025-01-25T15:29:01.5133366Z     ✅ properly handles checkbox inputs
2025-01-25T15:29:01.5155298Z     ✅ properly handles radio inputs
2025-01-25T15:29:01.5171617Z     ✅ text nodes dont screw up settling via variable capture
2025-01-25T15:29:01.5184697Z     ✅ script nodes evaluate
2025-01-25T15:29:01.5196800Z     ✅ stand alone script nodes evaluate
2025-01-25T15:29:01.5208801Z     ✅ script nodes can define global functions
2025-01-25T15:29:01.5220015Z     ✅ child script nodes evaluate when children
2025-01-25T15:29:01.5231518Z     ✅ child script nodes evaluate when first child
2025-01-25T15:29:01.5242490Z     ✅ child script nodes evaluate when not explicitly marked javascript
2025-01-25T15:29:01.5253155Z     ✅ script nodes do not evaluate when explicitly marked as something other than javascript
2025-01-25T15:29:01.5270623Z Here...
2025-01-25T15:29:01.5276326Z     ✅ script nodes evaluate after swap
2025-01-25T15:29:01.5281502Z     - script node exceptions do not break rendering
2025-01-25T15:29:01.5292265Z Response Status Error Code 404 from file:///home/runner/work/htmx/htmx/test/index.html
2025-01-25T15:29:01.5295097Z     ✅ allows empty verb values
2025-01-25T15:29:01.5306763Z Response Status Error Code 404 from file:///home/runner/work/htmx/htmx/test/index.html
2025-01-25T15:29:01.5307765Z     ✅ allows blank verb values
2025-01-25T15:29:01.5319041Z     ✅ input values are not settle swapped (causes flicker)
2025-01-25T15:29:01.5359964Z     ✅ autofocus attribute works properly
2025-01-25T15:29:01.5378208Z     ✅ autofocus attribute works properly w/ child
2025-01-25T15:29:01.5396863Z     ✅ autofocus attribute works properly w/ true value
2025-01-25T15:29:01.5411920Z     ✅ multipart/form-data encoding works
2025-01-25T15:29:01.5417294Z     ✅ removed elements do not issue requests
2025-01-25T15:29:01.5436858Z     ✅ title tags update title
2025-01-25T15:29:01.5466868Z     ✅ svg title tags do not update title
2025-01-25T15:29:01.5481436Z     ✅ first title tag outside svg title tags updates title
2025-01-25T15:29:01.5493334Z     ✅ title update does not URL escape
2025-01-25T15:29:01.5502483Z Response Status Error Code 400 from /test
2025-01-25T15:29:01.5506102Z     ✅ by default 400 content is not swapped
2025-01-25T15:29:01.5516945Z Response Status Error Code 400 from /test
2025-01-25T15:29:01.5520845Z     ✅ 400 content can be swapped if configured to do so
2025-01-25T15:29:01.5531484Z Response Status Error Code 400 from /test
2025-01-25T15:29:01.5535460Z     ✅ 400 content can be retargeted if configured to do so
2025-01-25T15:29:01.5547714Z Response Status Error Code 400 from /test2
2025-01-25T15:29:01.5552153Z     ✅ errors are triggered only on 400+
2025-01-25T15:29:01.5561626Z Response Status Error Code 400 from /test
2025-01-25T15:29:01.5565678Z     ✅ content can be modified if configured to do so
2025-01-25T15:29:01.5613696Z     ✅ scripts w/ src attribute are properly loaded
2025-01-25T15:29:01.5626539Z     ✅ should load tags with colon in their names
2025-01-25T15:29:01.5659963Z     ✅ properly handles clicked submit button with a value inside a htmx form
2025-01-25T15:29:01.5662733Z     ✅ properly handles clicked submit input with a value inside a htmx form
2025-01-25T15:29:01.5670817Z     ✅ properly handles clicked submit button with a value inside a non-htmx form
2025-01-25T15:29:01.5682126Z     ✅ properly handles clicked submit input with a value inside a non-htmx form
2025-01-25T15:29:01.5694449Z     ✅ properly handles clicked submit button with a value outside a htmx form
2025-01-25T15:29:01.5708295Z     ✅ properly handles clicked submit input with a value outside a htmx form
2025-01-25T15:29:01.5729630Z     ✅ properly handles clicked submit button with a value stacking with regular input
2025-01-25T15:29:01.5749220Z     ✅ properly handles clicked submit input with a value stacking with regular input
2025-01-25T15:29:01.5765075Z     ✅ properly handles clicked submit button with a value inside a form, referencing another form
2025-01-25T15:29:01.5779408Z     ✅ properly handles clicked submit input with a value inside a form, referencing another form
2025-01-25T15:29:01.5797353Z     ✅ properly handles inputs external to form
2025-01-25T15:29:01.5812144Z     ✅ handles form post with button formmethod dialog properly
2025-01-25T15:29:01.5824876Z     ✅ handles form get with button formmethod dialog properly
2025-01-25T15:29:01.5858845Z     ✅ can associate submit buttons from outside a form with the current version of the form after swap
2025-01-25T15:29:01.5862446Z 
2025-01-25T15:29:01.5864602Z   htmx config test
2025-01-25T15:29:01.5886509Z Response Status Error Code 400 from /test
2025-01-25T15:29:01.5894870Z Response Status Error Code 500 from /test
2025-01-25T15:29:01.5896714Z     ✅ swaps normally with no config update
2025-01-25T15:29:01.5927020Z     ✅ swap all config should swap everything
2025-01-25T15:29:01.5937855Z     ✅ can change the target of a given response code
2025-01-25T15:29:01.5948818Z     ✅ can change the swap type of a given response code
2025-01-25T15:29:01.5961132Z     ✅ can change the select of a given response code
2025-01-25T15:29:01.5970345Z     ✅ can change if the title is ignored for a given response code
2025-01-25T15:29:01.5980810Z     ✅ can change if error for a given response code
2025-01-25T15:29:01.5989457Z     ✅ can trigger an event for a given response code
2025-01-25T15:29:01.5993982Z 
2025-01-25T15:29:01.5994782Z   Core htmx AJAX Verbs
2025-01-25T15:29:01.6003268Z     ✅ handles basic posts properly
2025-01-25T15:29:01.6013843Z     ✅ handles basic put properly
2025-01-25T15:29:01.6023848Z     ✅ handles basic patch properly
2025-01-25T15:29:01.6034058Z     ✅ handles basic delete properly
2025-01-25T15:29:01.6036621Z 
2025-01-25T15:29:01.6038508Z   Core htmx Parameter Handling
2025-01-25T15:29:01.6043539Z     ✅ Input includes value
2025-01-25T15:29:01.6049066Z     ✅ Input includes value on get
2025-01-25T15:29:01.6055164Z     ✅ Input includes form
2025-01-25T15:29:01.6061341Z     ✅ Input doesnt include form on get
2025-01-25T15:29:01.6066366Z     ✅ non-input includes form
2025-01-25T15:29:01.6071566Z     ✅ non-input doesnt include form on get
2025-01-25T15:29:01.6076758Z     ✅ Basic form works on get
2025-01-25T15:29:01.6093154Z     ✅ Basic form works on non-get
2025-01-25T15:29:01.6100735Z     ✅ Double values are included as array
2025-01-25T15:29:01.6106252Z     ✅ Double values are included as array in correct order
2025-01-25T15:29:01.6111798Z     ✅ Double empty values are included as array in correct order
2025-01-25T15:29:01.6118413Z     ✅ hx-include works with form
2025-01-25T15:29:01.6124660Z     ✅ hx-include works with input
2025-01-25T15:29:01.6131459Z     ✅ hx-include works with two inputs
2025-01-25T15:29:01.6138076Z     ✅ hx-include works with two inputs, plus form
2025-01-25T15:29:01.6144343Z     ✅ correctly URL escapes values
2025-01-25T15:29:01.6168290Z     ✅ form includes last focused button
2025-01-25T15:29:01.6180207Z     ✅ form includes last focused submit
2025-01-25T15:29:01.6193118Z     ✅ form does not include button when focus is lost
2025-01-25T15:29:01.6204207Z     ✅ form does not include button when focus is lost outside of form
2025-01-25T15:29:01.6216746Z     ✅ form includes button name and value if button has nested elements when clicked
2025-01-25T15:29:01.6228944Z     ✅ it puts GET params in the URL by default
2025-01-25T15:29:01.6240170Z     ✅ it puts GET params in the body if methodsThatUseUrlParams is empty
2025-01-25T15:29:01.6250993Z     ✅ it puts DELETE params in the body by default
2025-01-25T15:29:01.6262412Z     ✅ it puts DELETE params in the URL if methodsThatUseUrlParams contains "delete"
2025-01-25T15:29:01.6268562Z     ✅ Input within disabled fieldset is excluded
2025-01-25T15:29:01.6279806Z     ✅ formdata works along web components
2025-01-25T15:29:01.6287687Z     ✅ formdata works with null values
2025-01-25T15:29:01.6295925Z     ✅ formdata can be used to construct a URLSearchParams instance
2025-01-25T15:29:01.6312517Z     ✅ order of parameters follows order of input elements
2025-01-25T15:29:01.6330904Z     ✅ order of parameters follows order of input elements with POST
2025-01-25T15:29:01.6372961Z     ✅ file is correctly uploaded with file input
2025-01-25T15:29:01.6385211Z     ✅ file is correctly uploaded with htmx.ajax
2025-01-25T15:29:01.6385908Z 
2025-01-25T15:29:01.6388060Z   Core htmx AJAX headers
2025-01-25T15:29:01.6397500Z     ✅ should include the HX-Request header
2025-01-25T15:29:01.6406928Z     ✅ should include the HX-Trigger header
2025-01-25T15:29:01.6416806Z Response Status Error Code 404 from /test
2025-01-25T15:29:01.6417936Z     ✅ should include the HX-Trigger-Name header
2025-01-25T15:29:01.6423254Z     ✅ should include the HX-Target header
2025-01-25T15:29:01.6434610Z     ✅ should handle simple string HX-Trigger response header properly
2025-01-25T15:29:01.6445540Z     ✅ should handle dot path HX-Trigger response header properly
2025-01-25T15:29:01.6455512Z     ✅ should handle simple string HX-Trigger response header in different case properly
2025-01-25T15:29:01.6465634Z     ✅ should handle a namespaced HX-Trigger response header properly
2025-01-25T15:29:01.6478578Z     ✅ should handle basic JSON HX-Trigger response header properly
2025-01-25T15:29:01.6490063Z     ✅ should handle JSON with array arg HX-Trigger response header properly
2025-01-25T15:29:01.6499659Z     ✅ should handle JSON with array arg HX-Trigger response header properly
2025-01-25T15:29:01.6510499Z     ✅ should handle JSON with target array arg HX-Trigger response header properly
2025-01-25T15:29:01.6521948Z {}
2025-01-25T15:29:01.6526088Z     ✅ should survive malformed JSON in HX-Trigger response header
2025-01-25T15:29:01.6536274Z     ✅ should handle simple string HX-Trigger response header properly w/ outerHTML swap
2025-01-25T15:29:01.6546867Z     ✅ should handle simple comma separated list HX-Trigger response header properly
2025-01-25T15:29:01.6570305Z     ✅ should handle simple comma separated list without space HX-Trigger response header properly
2025-01-25T15:29:01.6580531Z     ✅ should handle dot path in comma separated list HX-Trigger response header properly
2025-01-25T15:29:01.6589529Z     ✅ should handle a namespaced comma separated list HX-Trigger response header properly
2025-01-25T15:29:01.6598675Z     ✅ should handle HX-Retarget
2025-01-25T15:29:01.6607996Z     ✅ should handle HX-Reswap
2025-01-25T15:29:01.6617599Z     ✅ should handle HX-Reselect
2025-01-25T15:29:01.6636687Z     ✅ should handle simple string HX-Trigger-After-Swap response header properly w/ outerHTML swap
2025-01-25T15:29:01.6647384Z     ✅ should handle simple comma separated list HX-Trigger-After-Swap response header properly w/ outerHTML swap
2025-01-25T15:29:01.6658158Z     ✅ should handle simple string HX-Trigger-After-Settle response header properly w/ outerHTML swap
2025-01-25T15:29:01.6668375Z     ✅ should handle simple comma separated list HX-Trigger-After-Settle response header properly w/ outerHTML swap
2025-01-25T15:29:01.6706311Z     ✅ should change body content on HX-Location
2025-01-25T15:29:01.6715198Z     ✅ request to restore history should include the HX-Request header
2025-01-25T15:29:01.6720714Z     ✅ request to restore history should include the HX-History-Restore-Request header
2025-01-25T15:29:01.6730202Z     ✅ request to restore history should include the HX-Current-URL header
2025-01-25T15:29:01.6731860Z 
2025-01-25T15:29:01.6732100Z   Core htmx Regression Tests
2025-01-25T15:29:01.6736580Z     ✅ SVGs process properly in IE11
2025-01-25T15:29:01.6751983Z     ✅ Handles https://github.com/bigskysoftware/htmx/issues/4 properly
2025-01-25T15:29:01.6765994Z     ✅ Handles https://github.com/bigskysoftware/htmx/issues/33 "empty values" properly
2025-01-25T15:29:01.6797218Z     ✅ name=id doesnt cause an error
2025-01-25T15:29:01.6808773Z     ✅ empty id doesnt cause an error
2025-01-25T15:29:01.6821857Z     ✅ id with dot in value doesnt cause an error
2025-01-25T15:29:01.6835862Z     ✅ @ symbol in attributes does not break requests
2025-01-25T15:29:01.6851049Z     ✅ @ symbol in attributes does not break attribute settling requests
2025-01-25T15:29:01.6870486Z     ✅ selected element with ID does not cause NPE when it disappears
2025-01-25T15:29:01.6877520Z     ✅ does not submit with a false condition on a form
2025-01-25T15:29:01.6900027Z     ✅ two elements can listen for the same event on another element
2025-01-25T15:29:01.6964736Z     ✅ a form can reset based on the htmx:afterRequest event
2025-01-25T15:29:01.6980412Z     ✅ supports image maps
2025-01-25T15:29:01.6999463Z     ✅ supports unset on hx-select
2025-01-25T15:29:01.7034326Z     ✅ can trigger swaps from fields that don't support setSelectionRange
2025-01-25T15:29:01.7049543Z console.trace
2025-01-25T15:29:01.7557599Z     ✅ script tags only execute once (51ms)
2025-01-25T15:29:01.7571717Z console.trace
2025-01-25T15:29:01.8076147Z     ✅ script tags only execute once when nested (52ms)
2025-01-25T15:29:01.8632982Z     ✅ htmx.config.allowScriptTags properly disables script tags (51ms)
2025-01-25T15:29:01.9191593Z     ✅ htmx.config.allowScriptTags properly disables script tags when nested (51ms)
2025-01-25T15:29:01.9235650Z 
2025-01-25T15:29:01.9240018Z   security options
2025-01-25T15:29:01.9246099Z     ✅ can disable a single elt
2025-01-25T15:29:01.9251420Z     ✅ can disable a parent elt
2025-01-25T15:29:01.9269146Z     ✅ can disable a single elt dynamically
2025-01-25T15:29:01.9286863Z     ✅ can disable a single elt dynamically & enable it back
2025-01-25T15:29:01.9300142Z     ✅ can disable a single parent elt dynamically
2025-01-25T15:29:01.9316467Z     ✅ can disable a single parent elt dynamically & enable it back
2025-01-25T15:29:02.1159897Z htmx:afterRequest
2025-01-25T15:29:02.1161391Z htmx:sendError
2025-01-25T15:29:02.1162852Z     ✅ can make egress cross site requests when htmx.config.selfRequestsOnly is disabled (184ms)
2025-01-25T15:29:02.1170318Z Resource Failed to Load: {
2025-01-25T15:29:02.1171398Z   url: 'https://hypermedia.systems/www/test',
2025-01-25T15:29:02.1171958Z   method: 'GET',
2025-01-25T15:29:02.1172661Z   reason: 'net::ERR_FAILED'
2025-01-25T15:29:02.1173101Z }
2025-01-25T15:29:02.1202147Z     ✅ can disable hx-on on a single elt
2025-01-25T15:29:02.1217193Z     ✅ can disable hx-on on a parent elt
2025-01-25T15:29:02.1218069Z     ✅ can disable hx-on on a single elt dynamically
2025-01-25T15:29:02.1222155Z     ✅ can disable hx-on on a parent elt dynamically
2025-01-25T15:29:02.1231626Z htmx:invalidPath
2025-01-25T15:29:02.1232635Z     ✅ can't make egress cross site requests when htmx.config.selfRequestsOnly is true
2025-01-25T15:29:02.1240400Z htmx:invalidPath
2025-01-25T15:29:02.1243760Z     ✅ can cancel egress request based on htmx:validateUrl event
2025-01-25T15:29:02.1250736Z htmx:invalidPath
2025-01-25T15:29:02.1253124Z     ✅ can cancel egress request based on htmx:validateUrl event, sameHost is false
2025-01-25T15:29:02.1260822Z htmx:invalidPath
2025-01-25T15:29:02.1264422Z     ✅ can disable script tag support with htmx.config.allowScriptTags
2025-01-25T15:29:02.1268833Z 
2025-01-25T15:29:02.1269075Z   Core htmx Shadow DOM Tests
2025-01-25T15:29:02.1280950Z     ✅ properly retrieves shadow root for extended selector
2025-01-25T15:29:02.1286947Z     ✅ properly escapes shadow root for extended selector
2025-01-25T15:29:02.1293066Z     ✅ properly retrives shadow root host for extended selector
2025-01-25T15:29:02.1303658Z     ✅ issues a GET request on click and swaps content
2025-01-25T15:29:02.1335375Z     ✅ processes inner content properly
2025-01-25T15:29:02.1355579Z     ✅ handles swap outerHTML properly
2025-01-25T15:29:02.1395125Z     ✅ handles beforebegin properly
2025-01-25T15:29:02.1418273Z     ✅ handles afterbegin properly
2025-01-25T15:29:02.1441358Z     ✅ handles afterbegin properly with no initial content
2025-01-25T15:29:02.1475918Z     ✅ handles afterend properly
2025-01-25T15:29:02.1499400Z     ✅ handles beforeend properly
2025-01-25T15:29:02.1521673Z     ✅ handles beforeend properly with no initial content
2025-01-25T15:29:02.1536431Z     ✅ handles hx-target properly
2025-01-25T15:29:02.1565693Z     ✅ handles 204 NO CONTENT responses properly
2025-01-25T15:29:02.1607293Z     ✅ handles 304 NOT MODIFIED responses properly
2025-01-25T15:29:02.1621954Z     ✅ handles hx-trigger with non-default value
2025-01-25T15:29:02.1635983Z     ✅ handles hx-trigger with load event
2025-01-25T15:29:02.1647469Z     ✅ sets the content type of the request properly
2025-01-25T15:29:02.1664393Z     ✅ issues two requests when clicked twice before response
2025-01-25T15:29:02.1677969Z     ✅ issues two requests when clicked three times before response
2025-01-25T15:29:02.1729254Z     ✅ properly handles hx-select for basic situation
2025-01-25T15:29:02.1743837Z     ✅ properly handles hx-select for full html document situation
2025-01-25T15:29:02.1957553Z     ✅ properly settles attributes on interior elements
2025-01-25T15:29:02.2171639Z     ✅ properly settles attributes elements with single quotes in id
2025-01-25T15:29:02.2427462Z     ✅ properly settles attributes elements with double quotes in id
2025-01-25T15:29:02.2487239Z     ✅ properly handles multiple select input
2025-01-25T15:29:02.2503230Z     ✅ properly handles multiple select input when "multiple" attribute is empty string
2025-01-25T15:29:02.2520167Z     ✅ properly handles two multiple select inputs w/ same name
2025-01-25T15:29:02.2535536Z     ✅ properly handles multiple email input
2025-01-25T15:29:02.2567006Z     ✅ properly handles checkbox inputs
2025-01-25T15:29:02.2581832Z     ✅ text nodes dont screw up settling via variable capture
2025-01-25T15:29:02.2592513Z     ✅ script nodes evaluate
2025-01-25T15:29:02.2603629Z     ✅ stand alone script nodes evaluate
2025-01-25T15:29:02.2613295Z     ✅ script nodes can define global functions
2025-01-25T15:29:02.2622983Z     ✅ child script nodes evaluate when children
2025-01-25T15:29:02.2633035Z     ✅ child script nodes evaluate when first child
2025-01-25T15:29:02.2642493Z     ✅ child script nodes evaluate when not explicitly marked javascript
2025-01-25T15:29:02.2659548Z     ✅ script nodes do not evaluate when explicitly marked as something other than javascript
2025-01-25T15:29:02.2663775Z Here...
2025-01-25T15:29:02.2668162Z     ✅ script nodes evaluate after swap
2025-01-25T15:29:02.2673147Z     - script node exceptions do not break rendering
2025-01-25T15:29:02.2683280Z Response Status Error Code 404 from file:///home/runner/work/htmx/htmx/test/index.html
2025-01-25T15:29:02.2684743Z     ✅ allows empty verb values
2025-01-25T15:29:02.2692909Z Response Status Error Code 404 from file:///home/runner/work/htmx/htmx/test/index.html
2025-01-25T15:29:02.2694154Z     ✅ allows blank verb values
2025-01-25T15:29:02.2704895Z     ✅ input values are not settle swapped (causes flicker)
2025-01-25T15:29:02.2720117Z     ✅ autofocus attribute works properly
2025-01-25T15:29:02.2735564Z     ✅ autofocus attribute works properly w/ child
2025-01-25T15:29:02.2751009Z     ✅ autofocus attribute works properly w/ true value
2025-01-25T15:29:02.2762664Z     ✅ multipart/form-data encoding works
2025-01-25T15:29:02.2768054Z     ✅ removed elements do not issue requests
2025-01-25T15:29:02.2778973Z     ✅ title tags update title
2025-01-25T15:29:02.2788739Z     ✅ svg title tags do not update title
2025-01-25T15:29:02.2800947Z     ✅ first title tag outside svg title tags updates title
2025-01-25T15:29:02.2810698Z     ✅ title update does not URL escape
2025-01-25T15:29:02.2818970Z Response Status Error Code 400 from /test
2025-01-25T15:29:02.2821430Z     ✅ by default 400 content is not swapped
2025-01-25T15:29:02.2832274Z Response Status Error Code 400 from /test
2025-01-25T15:29:02.2834491Z     ✅ 400 content can be swapped if configured to do so
2025-01-25T15:29:02.2857815Z Response Status Error Code 400 from /test
2025-01-25T15:29:02.2861211Z     ✅ 400 content can be retargeted if configured to do so
2025-01-25T15:29:02.2871928Z Response Status Error Code 400 from /test2
2025-01-25T15:29:02.2874040Z     ✅ errors are triggered only on 400+
2025-01-25T15:29:02.2884143Z Response Status Error Code 400 from /test
2025-01-25T15:29:02.2888339Z     ✅ content can be modified if configured to do so
2025-01-25T15:29:02.2889368Z     - scripts w/ src attribute are properly loaded
2025-01-25T15:29:02.2898606Z     ✅ should load tags with colon in their names
2025-01-25T15:29:02.2913008Z     ✅ properly handles clicked submit button with a value inside a htmx form
2025-01-25T15:29:02.2925514Z     ✅ properly handles clicked submit input with a value inside a htmx form
2025-01-25T15:29:02.2936898Z     ✅ properly handles clicked submit button with a value inside a non-htmx form
2025-01-25T15:29:02.2946652Z     ✅ properly handles clicked submit input with a value inside a non-htmx form
2025-01-25T15:29:02.2959354Z     ✅ properly handles clicked submit button with a value outside a htmx form
2025-01-25T15:29:02.2972283Z     ✅ properly handles clicked submit input with a value outside a htmx form
2025-01-25T15:29:02.2994018Z     ✅ properly handles clicked submit button with a value stacking with regular input
2025-01-25T15:29:02.3011187Z     ✅ properly handles clicked submit input with a value stacking with regular input
2025-01-25T15:29:02.3026384Z     ✅ properly handles clicked submit button with a value inside a form, referencing another form
2025-01-25T15:29:02.3041537Z     ✅ properly handles clicked submit input with a value inside a form, referencing another form
2025-01-25T15:29:02.3054700Z     ✅ properly handles inputs external to form
2025-01-25T15:29:02.3066814Z     ✅ handles form post with button formmethod dialog properly
2025-01-25T15:29:02.3077180Z     ✅ handles form get with button formmethod dialog properly
2025-01-25T15:29:02.3107314Z     ✅ can associate submit buttons from outside a form with the current version of the form after swap
2025-01-25T15:29:02.3113716Z     ✅ can handle basic events w/ no other attributes
2025-01-25T15:29:02.3118707Z     ✅ can handle basic events w/ no other attributes in child
2025-01-25T15:29:02.3128943Z     ✅ can target shadow DOM Host and place content below web component
2025-01-25T15:29:02.3138691Z     ✅ can target global id outside shadow DOM and place content
2025-01-25T15:29:02.3148736Z     ✅ can target shadow DOM Host with outerHTML swap and replace it
2025-01-25T15:29:02.3152761Z 
2025-01-25T15:29:02.3153619Z   Core htmx perf Tests
2025-01-25T15:29:02.3431238Z     ✅ history implementation should be fast
2025-01-25T15:29:02.3532235Z     ✅ history snapshot cleaning should be fast
2025-01-25T15:29:02.4218975Z 
2025-01-25T15:29:02.4220671Z   Core htmx client side validation tests
2025-01-25T15:29:02.4237156Z     ✅ HTML5 required validation error prevents request
2025-01-25T15:29:02.4249586Z     ✅ Novalidate skips form validation
2025-01-25T15:29:02.4263767Z     ✅ Validation skipped for indirect form submission
2025-01-25T15:29:02.4293137Z     ✅ Formnovalidate skips form validation
2025-01-25T15:29:02.4310793Z     ✅ HTML5 pattern validation error prevents request
2025-01-25T15:29:02.4322781Z     ✅ Custom validation error prevents request
2025-01-25T15:29:02.4335340Z     ✅ Custom validation error prevents request for unticked checkboxes
2025-01-25T15:29:02.4347502Z     ✅ Custom validation error prevents request for unselected radiogroups
2025-01-25T15:29:02.4373996Z     ✅ hyperscript validation error prevents request
2025-01-25T15:29:02.4380649Z     ✅ calls htmx:validation:failed on failure
2025-01-25T15:29:02.4386950Z     ✅ calls htmx:validation:halted on failure
2025-01-25T15:29:02.4402975Z     ✅ hx-validate can prevent a single input from submitting
2025-01-25T15:29:02.4405248Z 
2025-01-25T15:29:02.4406384Z   Core htmx tokenizer tests
2025-01-25T15:29:02.4411597Z     ✅ tokenizes properly
2025-01-25T15:29:02.4417782Z     ✅ generates conditionals property
2025-01-25T15:29:02.4419627Z 
2025-01-25T15:29:02.4422512Z   Core htmx extension tests
2025-01-25T15:29:02.4429238Z     ✅ should support event cancellation by returning false
2025-01-25T15:29:02.4437402Z     ✅ should support event cancellation with preventDefault
2025-01-25T15:29:02.4439100Z 
2025-01-25T15:29:02.4440129Z   default extensions behavior
2025-01-25T15:29:02.4452203Z     ✅ handleSwap: afterSwap and afterSettle triggered if extension defined on parent
2025-01-25T15:29:02.4472513Z     ✅ handleSwap: new content is handled by htmx
2025-01-25T15:29:02.4473941Z 
2025-01-25T15:29:02.4476234Z   hx-boost attribute
2025-01-25T15:29:02.4496046Z     ✅ handles basic anchor properly
2025-01-25T15:29:02.4514090Z     ✅ handles basic form post properly
2025-01-25T15:29:02.4531905Z     ✅ handles basic form post with button formaction properly
2025-01-25T15:29:02.4549013Z     ✅ handles basic form post with button formmethod properly
2025-01-25T15:29:02.4565300Z     ✅ handles basic form post properly w/ explicit action
2025-01-25T15:29:02.4582188Z     ✅ handles basic form get properly
2025-01-25T15:29:02.4599534Z     ✅ handles basic form with no explicit method property
2025-01-25T15:29:02.4605690Z     ✅ does not boost forms with method="dialog"
2025-01-25T15:29:02.4620437Z     ✅ handles basic anchor properly w/ data-* prefix
2025-01-25T15:29:02.4635498Z     ✅ overriding default swap style does not effect boosting
2025-01-25T15:29:02.4640866Z     ✅ anchors w/ explicit targets are not boosted
2025-01-25T15:29:02.4655165Z     ✅ includes an HX-Boosted Header
2025-01-25T15:29:02.4676046Z     ✅ form get w/ search params in action property excludes search params
2025-01-25T15:29:02.4692796Z     ✅ form post w/ query params in action property uses full url
2025-01-25T15:29:02.4711071Z     ✅ form get with an unset action properly submits
2025-01-25T15:29:02.4748812Z     ✅ form get with no action properly clears existing parameters on submit
2025-01-25T15:29:02.4790178Z     ✅ form get with an empty action properly clears existing parameters on submit
2025-01-25T15:29:02.4800140Z 
2025-01-25T15:29:02.4800415Z   hx-confirm attribute
2025-01-25T15:29:02.4816338Z     ✅ prompts using window.confirm when hx-confirm is set
2025-01-25T15:29:02.4824724Z     ✅ stops the request if confirm is cancelled
2025-01-25T15:29:02.4836334Z     ✅ uses the value of hx-confirm as the prompt
2025-01-25T15:29:02.4845831Z     ✅ should prompt when htmx:confirm handler calls issueRequest
2025-01-25T15:29:02.4857409Z     ✅ should include the question in htmx:confirm event
2025-01-25T15:29:02.4871377Z     ✅ should allow skipping built-in window.confirm when using issueRequest
2025-01-25T15:29:02.4884556Z     ✅ should allow skipping built-in window.confirm when using issueRequest
2025-01-25T15:29:02.4903030Z     ✅ should allow htmx:confirm even when no hx-confirm is set
2025-01-25T15:29:02.4914348Z 
2025-01-25T15:29:02.4914613Z   hx-delete attribute
2025-01-25T15:29:02.4915449Z     ✅ issues a DELETE request
2025-01-25T15:29:02.4927418Z     ✅ issues a DELETE request w/ data-* prefix
2025-01-25T15:29:02.4932680Z 
2025-01-25T15:29:02.4932907Z   hx-ext attribute
2025-01-25T15:29:02.4944776Z     ✅ A simple extension is invoked properly
2025-01-25T15:29:02.4964799Z     ✅ Extensions are merged properly
2025-01-25T15:29:02.4977250Z     ✅ supports comma separated lists
2025-01-25T15:29:02.4991643Z     ✅ A simple extension is invoked properly  w/ data-* prefix
2025-01-25T15:29:02.5008277Z     ✅ A simple extension is invoked properly when an HX-Trigger event w/ a namespace fires
2025-01-25T15:29:02.5015391Z     ✅ A simple extension is invoked properly for elements it specified in getSelectors
2025-01-25T15:29:02.5044411Z     ✅ Extensions are ignored properly
2025-01-25T15:29:02.5045657Z 
2025-01-25T15:29:02.5047088Z   hx-get attribute
2025-01-25T15:29:02.5059227Z     ✅ issues a GET request on click and swaps content
2025-01-25T15:29:02.5074624Z     ✅ GET does not include surrounding data by default
2025-01-25T15:29:02.5091894Z     ✅ GET on form includes its own data by default
2025-01-25T15:29:02.5107120Z     ✅ GET on form with existing parameters works properly
2025-01-25T15:29:02.5122782Z     ✅ GET on form with anchor works properly
2025-01-25T15:29:02.5137723Z     ✅ issues a GET request on click and swaps content w/ data-* prefix
2025-01-25T15:29:02.5148534Z     ✅ does not include a cache-busting parameter when not enabled
2025-01-25T15:29:02.5158580Z     ✅ includes a cache-busting parameter when enabled w/ value "true" if no id on target
2025-01-25T15:29:02.5170749Z     ✅ includes a cache-busting parameter when enabled w/ the id of the target if there is one
2025-01-25T15:29:02.5171528Z 
2025-01-25T15:29:02.5173198Z   hx-headers attribute
2025-01-25T15:29:02.5181857Z     ✅ basic hx-headers works
2025-01-25T15:29:02.5647718Z     ✅ basic hx-headers works with braces
2025-01-25T15:29:02.5650634Z     ✅ multiple hx-headers works
2025-01-25T15:29:02.5654109Z     ✅ hx-headers can be on parents
2025-01-25T15:29:02.5657401Z     ✅ hx-headers can override parents
2025-01-25T15:29:02.5676919Z     ✅ hx-headers overrides inputs
2025-01-25T15:29:02.5687611Z     ✅ basic hx-headers javascript: works
2025-01-25T15:29:02.5699031Z     ✅ hx-headers works with braces
2025-01-25T15:29:02.5709785Z     ✅ multiple hx-headers works
2025-01-25T15:29:02.5718889Z     ✅ hx-headers can be on parents
2025-01-25T15:29:02.5730289Z     ✅ hx-headers can override parents
2025-01-25T15:29:02.5740417Z     ✅ hx-headers overrides inputs
2025-01-25T15:29:02.5744667Z 
2025-01-25T15:29:02.5745767Z   hx-history attribute
2025-01-25T15:29:02.5806267Z     ✅ history cache should not contain embargoed content
2025-01-25T15:29:02.5814787Z 
2025-01-25T15:29:02.5815373Z   hx-include attribute
2025-01-25T15:29:02.5826838Z     ✅ By default an input includes itself
2025-01-25T15:29:02.5841094Z     ✅ non-GET includes closest form
2025-01-25T15:29:02.5860247Z     ✅ non-GET includes closest form and overrides values included that exist outside the form
2025-01-25T15:29:02.5874379Z     ✅ GET does not include closest form by default
2025-01-25T15:29:02.5884884Z     ✅ Single input not included twice when in form
2025-01-25T15:29:02.5898647Z     ✅ Two inputs are included twice when they have the same name
2025-01-25T15:29:02.5909728Z     ✅ Two inputs are included twice when in form when they have the same name
2025-01-25T15:29:02.5919937Z     ✅ Input not included twice when it explicitly refers to parent form
2025-01-25T15:29:02.5929495Z     ✅ Input can be referred to externally
2025-01-25T15:29:02.5938874Z     ✅ Two inputs can be referred to externally
2025-01-25T15:29:02.5947861Z     ✅ A form can be referred to externally
2025-01-25T15:29:02.5958345Z     ✅ By default an input includes itself w/ data-* prefix
2025-01-25T15:29:02.5968189Z     ✅ If the element is not includeable, its descendant inputs are included
2025-01-25T15:29:02.5977630Z     ✅ The `closest` modifier can be used in the hx-include selector
2025-01-25T15:29:02.5986497Z     ✅ The `this` modifier can be used in the hx-include selector
2025-01-25T15:29:02.5998341Z     ✅ Multiple extended selectors can be used in hx-include
2025-01-25T15:29:02.6009337Z     ✅ hx-include processes extended selector in between standard selectors
2025-01-25T15:29:02.6020795Z     ✅ hx-include processes nested standard selectors correctly
2025-01-25T15:29:02.6032111Z     ✅ hx-include processes wrapped next/previous selectors correctly
2025-01-25T15:29:02.6043886Z     ✅ hx-include processes wrapped closest selector correctly
2025-01-25T15:29:02.6044527Z 
2025-01-25T15:29:02.6049785Z   hx-indicator attribute
2025-01-25T15:29:02.6059581Z     ✅ Indicator classes are properly put on element with no explicit indicator
2025-01-25T15:29:02.6072278Z     ✅ Indicator classes are properly put on element with explicit indicator
2025-01-25T15:29:02.6084032Z     ✅ Indicator classes are properly put on element with relative indicator
2025-01-25T15:29:02.6095145Z     ✅ Indicator classes are properly put on element with explicit indicator w/ data-* prefix
2025-01-25T15:29:02.6104396Z     ✅ allows closest syntax in hx-indicator
2025-01-25T15:29:02.6114073Z     ✅ is removed when initiating element is removed from the DOM
2025-01-25T15:29:02.6124257Z     ✅ allows this syntax in hx-indicator
2025-01-25T15:29:02.6139755Z     ✅ multiple requests with same indicator are handled properly
2025-01-25T15:29:02.6143600Z 
2025-01-25T15:29:02.6144844Z   hx-disabled-elt attribute
2025-01-25T15:29:02.6155095Z     ✅ single element can be disabled w/ hx-disabled elts
2025-01-25T15:29:02.6164168Z     ✅ single element can be disabled w/ data-hx-disabled elts
2025-01-25T15:29:02.6174614Z     ✅ single element can be disabled w/ closest syntax
2025-01-25T15:29:02.6189593Z     ✅ multiple requests with same disabled elt are handled properly
2025-01-25T15:29:02.6201233Z     ✅ multiple elts can be disabled
2025-01-25T15:29:02.6216585Z     ✅ load trigger does not prevent disabled element working
2025-01-25T15:29:02.6230557Z     ✅ hx-disabled-elt supports multiple extended selectors
2025-01-25T15:29:02.6239003Z The selector "closest input" on hx-disabled-elt returned no matches!
2025-01-25T15:29:02.6245913Z The selector "find input" on hx-disabled-elt returned no matches!
2025-01-25T15:29:02.6252203Z The selector "next input" on hx-disabled-elt returned no matches!
2025-01-25T15:29:02.6259553Z The selector "previous input" on hx-disabled-elt returned no matches!
2025-01-25T15:29:02.6266722Z     ✅ closest/find/next/previous handle nothing to find without exception
2025-01-25T15:29:02.6267591Z 
2025-01-25T15:29:02.6269635Z   hx-inherit attribute
2025-01-25T15:29:02.6281490Z     ✅ can disable inheritance
2025-01-25T15:29:02.6293501Z     ✅ can enable inheritance for all
2025-01-25T15:29:02.6304965Z     ✅ can enable inheritance by name
2025-01-25T15:29:02.6315523Z     ✅ can enable inheritance by name (bad name, no inheritance)
2025-01-25T15:29:02.6326139Z     ✅ can enable inheritance by name with multiple attributes
2025-01-25T15:29:02.6329353Z 
2025-01-25T15:29:02.6331180Z   hx-disinherit attribute
2025-01-25T15:29:02.6342240Z     ✅ basic inheritance sanity-check
2025-01-25T15:29:02.6354555Z     ✅ disinherit exclude single attribute
2025-01-25T15:29:02.6369820Z <span id="cta" class=""><div id="unique"><div id="snowflake">Hello world</div></div></span>
2025-01-25T15:29:02.6370769Z <div id="unique"><div id="snowflake">Hello world</div></div>
2025-01-25T15:29:02.6371337Z     ✅ disinherit exclude multiple attributes
2025-01-25T15:29:02.6381595Z     ✅ disinherit exclude all attributes
2025-01-25T15:29:02.6392801Z     ✅ same-element inheritance disable
2025-01-25T15:29:02.6403942Z     ✅ same-element inheritance disable with child nodes
2025-01-25T15:29:02.6410952Z     ✅ boosted element hx-disinherit sanity check
2025-01-25T15:29:02.6415455Z     ✅ boosted element inheritance manual unset
2025-01-25T15:29:02.6425475Z     ✅ nested htmx-node with boosting parent
2025-01-25T15:29:02.6426083Z 
2025-01-25T15:29:02.6426289Z   hx-on:* attribute
2025-01-25T15:29:02.6429350Z     ✅ can handle basic events w/ no other attributes
2025-01-25T15:29:02.6434141Z     ✅ can use dashes rather than colons
2025-01-25T15:29:02.6448727Z     ✅ can modify a parameter via htmx:configRequest
2025-01-25T15:29:02.6461032Z     ✅ can modify a parameter via htmx:configRequest with dashes
2025-01-25T15:29:02.6473090Z     ✅ expands :: shorthand into htmx:
2025-01-25T15:29:02.6486205Z     ✅ expands -- shorthand into htmx:
2025-01-25T15:29:02.6493742Z     ✅ can cancel an event via preventDefault for htmx:config-request
2025-01-25T15:29:02.6504658Z     ✅ can respond to data-hx-on
2025-01-25T15:29:02.6514735Z     ✅ has the this symbol set to the element
2025-01-25T15:29:02.6534038Z     ✅ can handle multi-line JSON
2025-01-25T15:29:02.6539955Z     ✅ can handle multiple event handlers in the presence of multi-line JSON
2025-01-25T15:29:02.6559733Z     ✅ de-initializes hx-on-* content properly
2025-01-25T15:29:02.6654619Z htmx:evalDisallowedError
2025-01-25T15:29:02.6659195Z     ✅ is not evaluated when allowEval is false
2025-01-25T15:29:02.6670427Z     ✅ can handle being swapped using innerHTML
2025-01-25T15:29:02.6676809Z     ✅ cleans up all handlers when the DOM updates
2025-01-25T15:29:02.6679627Z 
2025-01-25T15:29:02.6681221Z   hx-params attribute
2025-01-25T15:29:02.6692805Z     ✅ none excludes all params
2025-01-25T15:29:02.6703234Z     ✅ "*" includes all params
2025-01-25T15:29:02.6716733Z     ✅ named includes works
2025-01-25T15:29:02.6728002Z     ✅ named exclude works
2025-01-25T15:29:02.6738372Z     ✅ named exclude works  w/ data-* prefix
2025-01-25T15:29:02.6741875Z 
2025-01-25T15:29:02.6742717Z   hx-patch attribute
2025-01-25T15:29:02.6750992Z     ✅ issues a PATCH request
2025-01-25T15:29:02.6762965Z     ✅ issues a PATCH request w/ data-* prefix
2025-01-25T15:29:02.6763695Z 
2025-01-25T15:29:02.6766117Z   hx-post attribute
2025-01-25T15:29:02.6774547Z     ✅ issues a POST request with proper headers
2025-01-25T15:29:02.6785150Z     ✅ issues a POST request with proper headers  w/ data-* prefix
2025-01-25T15:29:02.6788920Z 
2025-01-25T15:29:02.6790888Z   hx-preserve attribute
2025-01-25T15:29:02.6800737Z     ✅ handles basic response properly
2025-01-25T15:29:02.6814105Z     ✅ handles preserved element that might not be existing
2025-01-25T15:29:02.6827363Z     ✅ preserved element should not be swapped if it lies outside of hx-select
2025-01-25T15:29:02.6840856Z     ✅ preserved element should not be swapped if it is part of a oob swap
2025-01-25T15:29:02.6852308Z     ✅ preserved element should not be swapped if it is part of a hx-select-oob swap
2025-01-25T15:29:02.6864945Z     ✅ preserved element should relocated unchanged if it is part of a oob swap targeting a different loction
2025-01-25T15:29:02.6866459Z 
2025-01-25T15:29:02.6868300Z   hx-push-url attribute
2025-01-25T15:29:02.6889162Z     ✅ navigation should push an element into the cache when true
2025-01-25T15:29:02.6909326Z     ✅ navigation should push an element into the cache when string
2025-01-25T15:29:02.6937579Z     ✅ restore should return old value
2025-01-25T15:29:02.6964468Z     ✅ history restore should not have htmx support classes in content
2025-01-25T15:29:02.7112804Z     ✅ cache should only store 10 entries
2025-01-25T15:29:02.7145096Z     ✅ cache miss should issue another GET
2025-01-25T15:29:02.7160199Z     ✅ navigation should push an element into the cache  w/ data-* prefix
2025-01-25T15:29:02.7166689Z {}
2025-01-25T15:29:02.7168337Z     ✅ deals with malformed JSON in history cache when getting
2025-01-25T15:29:02.7176535Z {}
2025-01-25T15:29:02.7178159Z     ✅ deals with malformed JSON in history cache when saving
2025-01-25T15:29:02.7190390Z     ✅ does not blow out cache when saving a URL twice
2025-01-25T15:29:02.7205298Z     ✅ history cache is LRU
2025-01-25T15:29:02.7216162Z     ✅ htmx:afterSettle is called when replacing outerHTML
2025-01-25T15:29:02.7230879Z     ✅ should include parameters on a get
2025-01-25T15:29:03.2350804Z htmx:historyCacheError
2025-01-25T15:29:03.2352032Z     ✅ saveToHistoryCache should not throw (511ms)
2025-01-25T15:29:03.3011527Z 
2025-01-25T15:29:03.3014422Z   hx-put attribute
2025-01-25T15:29:03.3027486Z     ✅ issues a PUT request
2025-01-25T15:29:03.3040815Z     ✅ issues a PUT request w/ data-* prefix
2025-01-25T15:29:03.3049405Z 
2025-01-25T15:29:03.3054147Z   hx-request attribute
2025-01-25T15:29:03.7054270Z     ✅ basic hx-request timeout works (401ms)
2025-01-25T15:29:03.7105242Z     ✅ hx-request header works
2025-01-25T15:29:03.7106603Z 
2025-01-25T15:29:03.7110845Z   BOOTSTRAP - htmx AJAX Tests
2025-01-25T15:29:03.7121068Z     ✅ properly handles a partial of HTML
2025-01-25T15:29:03.7131512Z     ✅ properly handles a full HTML document
2025-01-25T15:29:03.7142089Z     ✅ properly handles a full HTML document  w/ data-* prefix
2025-01-25T15:29:03.7143860Z 
2025-01-25T15:29:03.7146210Z   hx-select-oob attribute
2025-01-25T15:29:03.7156935Z     ✅ basic hx-select-oob works
2025-01-25T15:29:03.7169643Z     ✅ multiple hx-select-oobs works
2025-01-25T15:29:03.7179360Z     ✅ basic hx-select-oob ignores bad selector
2025-01-25T15:29:03.7181073Z 
2025-01-25T15:29:03.7184478Z   hx-swap-oob attribute
2025-01-25T15:29:03.7195453Z     ✅ handles basic response properly with config {"allowNestedOobSwaps":true}
2025-01-25T15:29:03.7206336Z     ✅ handles basic response properly with config {"allowNestedOobSwaps":false}
2025-01-25T15:29:03.7218079Z     ✅ oob swap works when the response has a body tag with config {"allowNestedOobSwaps":true}
2025-01-25T15:29:03.7229482Z     ✅ oob swap works when the response has a body tag with config {"allowNestedOobSwaps":false}
2025-01-25T15:29:03.7241096Z     ✅ oob swap works when the response has html and body tags with config {"allowNestedOobSwaps":true}
2025-01-25T15:29:03.7252933Z     ✅ oob swap works when the response has html and body tags with config {"allowNestedOobSwaps":false}
2025-01-25T15:29:03.7268149Z     ✅ handles more than one oob swap properly with config {"allowNestedOobSwaps":true}
2025-01-25T15:29:03.7279969Z     ✅ handles more than one oob swap properly with config {"allowNestedOobSwaps":false}
2025-01-25T15:29:03.7290820Z     ✅ handles remvoing hx-swap-oob tag
2025-01-25T15:29:03.7304233Z     ✅ handles remvoing data-hx-swap-oob tag
2025-01-25T15:29:03.7319764Z     ✅ handles no id match properly
2025-01-25T15:29:03.7334226Z     ✅ handles basic response properly w/ data-* prefix
2025-01-25T15:29:03.7348355Z     ✅ handles outerHTML response properly
2025-01-25T15:29:03.7357832Z     ✅ handles innerHTML response properly
2025-01-25T15:29:03.7369539Z     ✅ oob swaps can be nested in content with config {"allowNestedOobSwaps": true}
2025-01-25T15:29:03.7381456Z     ✅ oob swaps in nested content are ignored and stripped with config {"allowNestedOobSwaps": false}
2025-01-25T15:29:03.7394196Z     ✅ oob swaps can use selectors to match up
2025-01-25T15:29:03.7409170Z     ✅ swaps into all targets that match the selector (innerHTML)
2025-01-25T15:29:03.7426645Z     ✅ swaps into all targets that match the selector (outerHTML)
2025-01-25T15:29:03.7437697Z     ✅ oob swap delete works properly
2025-01-25T15:29:03.7450178Z     ✅ oob swap removes templates used for oob encapsulation only properly
2025-01-25T15:29:03.7463406Z     ✅ oob swap keeps templates not used for oob swap encapsulation
2025-01-25T15:29:03.7484458Z     ✅ oob swap supports table row in fragment along other oob swap elements with config {"allowNestedOobSwaps":true}
2025-01-25T15:29:03.7500734Z     ✅ oob swap supports table row in fragment along other oob swap elements with config {"allowNestedOobSwaps":false}
2025-01-25T15:29:03.7512196Z     ✅ handles oob target in web components with both inside shadow root and config {"allowNestedOobSwaps":true}
2025-01-25T15:29:03.7522835Z     ✅ handles oob target in web components with both inside shadow root and config {"allowNestedOobSwaps":false}
2025-01-25T15:29:03.7534101Z     ✅ handles oob target in web components with main target outside web component config {"allowNestedOobSwaps":true}
2025-01-25T15:29:03.7544387Z     ✅ handles oob target in web components with main target outside web component config {"allowNestedOobSwaps":false}
2025-01-25T15:29:03.7554962Z     ✅ handles global oob target in web components with main target inside web component config {"allowNestedOobSwaps":true}
2025-01-25T15:29:03.7565349Z     ✅ handles global oob target in web components with main target inside web component config {"allowNestedOobSwaps":false}
2025-01-25T15:29:03.7566150Z 
2025-01-25T15:29:03.7569806Z   hx-swap attribute
2025-01-25T15:29:03.7586047Z     ✅ swap innerHTML properly
2025-01-25T15:29:03.7594958Z     ✅ swap textContent properly with HTML tags
2025-01-25T15:29:03.7602789Z     ✅ swap textContent properly with HTML tags and text
2025-01-25T15:29:03.7610353Z     ✅ swap textContent ignores OOB swaps
2025-01-25T15:29:03.7617876Z     ✅ swap textContent properly with text
2025-01-25T15:29:03.7633048Z     ✅ swap outerHTML properly
2025-01-25T15:29:03.7656891Z     ✅ swap beforebegin properly
2025-01-25T15:29:03.7672087Z     ✅ swap afterbegin properly
2025-01-25T15:29:03.7687505Z     ✅ swap afterbegin properly with no initial content
2025-01-25T15:29:03.7710449Z     ✅ swap afterend properly
2025-01-25T15:29:03.7725401Z     ✅ handles beforeend properly
2025-01-25T15:29:03.7740376Z     ✅ handles beforeend properly with no initial content
2025-01-25T15:29:03.7761481Z Unknown modifier in hx-swap: nonsense
2025-01-25T15:29:03.7765786Z Unknown modifier in hx-swap: nonsense
2025-01-25T15:29:03.7775473Z     ✅ properly parses various swap specifications
2025-01-25T15:29:03.8086753Z     ✅ works with a swap delay
2025-01-25T15:29:03.8140011Z     ✅ works immediately with no swap delay
2025-01-25T15:29:03.8451583Z     ✅ works with a settle delay
2025-01-25T15:29:03.8803661Z     ✅ works with no settle delay
2025-01-25T15:29:03.8859525Z     ✅ swap outerHTML properly  w/ data-* prefix
2025-01-25T15:29:03.8867861Z     ✅ swap none works properly
2025-01-25T15:29:03.8880933Z     ✅ swap outerHTML does not trigger htmx:afterSwap on original element
2025-01-25T15:29:03.8889185Z     ✅ swap delete works properly
2025-01-25T15:29:03.8900043Z     ✅ in presence of bad swap spec, it uses the default swap strategy
2025-01-25T15:29:03.8913851Z     ✅ hx-swap ignoreTitle works
2025-01-25T15:29:03.8914151Z 
2025-01-25T15:29:03.8914257Z   hx-sync attribute
2025-01-25T15:29:03.8922642Z     ✅ can use drop strategy
2025-01-25T15:29:03.8932237Z     ✅ defaults to the drop strategy
2025-01-25T15:29:03.8942282Z htmx:afterRequest
2025-01-25T15:29:03.8945111Z htmx:sendAbort
2025-01-25T15:29:03.8950236Z     ✅ can use replace strategy
2025-01-25T15:29:03.8967867Z     ✅ can use queue all strategy
2025-01-25T15:29:03.8982013Z     ✅ can use queue last strategy
2025-01-25T15:29:03.8998210Z     ✅ can use queue first strategy
2025-01-25T15:29:03.9008995Z htmx:afterRequest
2025-01-25T15:29:03.9010132Z htmx:sendAbort
2025-01-25T15:29:03.9016627Z     ✅ can use abort strategy to end existing abortable request
2025-01-25T15:29:03.9028858Z     ✅ can use abort strategy to drop abortable request when one is in flight
2025-01-25T15:29:03.9040529Z htmx:afterRequest
2025-01-25T15:29:03.9043410Z htmx:sendAbort
2025-01-25T15:29:03.9049006Z     ✅ can abort a request programmatically
2025-01-25T15:29:03.9051905Z 
2025-01-25T15:29:03.9052217Z   hx-target attribute
2025-01-25T15:29:03.9061924Z     ✅ targets an adjacent element properly
2025-01-25T15:29:03.9073201Z     ✅ targets a parent element properly
2025-01-25T15:29:03.9086178Z     ✅ targets a `this` element properly
2025-01-25T15:29:03.9101217Z     ✅ targets a `closest` element properly
2025-01-25T15:29:03.9111862Z     ✅ targets a `closest` element properly w/ hyperscript syntax
2025-01-25T15:29:03.9121125Z     ✅ targets a `find` element properly
2025-01-25T15:29:03.9131063Z     ✅ targets a `find` element properly w/ hyperscript syntax
2025-01-25T15:29:03.9139530Z     ✅ targets an inner element properly
2025-01-25T15:29:03.9149291Z     ✅ targets an inner element properly w/ hyperscript syntax
2025-01-25T15:29:03.9153533Z htmx:targetError
2025-01-25T15:29:03.9156214Z     ✅ handles bad target gracefully
2025-01-25T15:29:03.9166144Z     ✅ targets an adjacent element properly w/ data-* prefix
2025-01-25T15:29:03.9175405Z     ✅ targets a `next` element properly
2025-01-25T15:29:03.9185391Z     ✅ targets a `next` element properly w/ hyperscript syntax
2025-01-25T15:29:03.9194490Z     ✅ targets a `previous` element properly
2025-01-25T15:29:03.9204876Z     ✅ targets a `previous` element properly w/ hyperscript syntax
2025-01-25T15:29:03.9214421Z     ✅ targets a `next` element properly without selector
2025-01-25T15:29:03.9225166Z     ✅ targets a `previous` element properly without selector
2025-01-25T15:29:03.9227582Z 
2025-01-25T15:29:03.9228261Z   hx-trigger attribute
2025-01-25T15:29:03.9238341Z     ✅ non-default value works
2025-01-25T15:29:03.9256027Z     ✅ changed modifier works
2025-01-25T15:29:03.9263450Z     ✅ changed modifier works along from clause with single input
2025-01-25T15:29:03.9278231Z     ✅ changed modifier works along from clause with two inputs
2025-01-25T15:29:03.9300229Z     ✅ changed modifier counts each triggerspec separately
2025-01-25T15:29:03.9316334Z     ✅ separate changed modifier works along from clause with two inputs
2025-01-25T15:29:03.9326905Z     ✅ once modifier works
2025-01-25T15:29:03.9340112Z     ✅ once modifier works with multiple triggers
2025-01-25T15:29:04.0080412Z     ✅ polling works (74ms)
2025-01-25T15:29:04.0133577Z     ✅ non-default value works w/ data-* prefix
2025-01-25T15:29:04.0146443Z     ✅ works with multiple events
2025-01-25T15:29:04.0179061Z htmx:syntax:error
2025-01-25T15:29:04.0184049Z htmx:syntax:error
2025-01-25T15:29:04.0184638Z htmx:syntax:error
2025-01-25T15:29:04.0187478Z htmx:syntax:error
2025-01-25T15:29:04.0187915Z     ✅ parses spec strings
2025-01-25T15:29:04.0192991Z     ✅ sets default trigger for forms
2025-01-25T15:29:04.0197624Z     ✅ sets default trigger for form elements
2025-01-25T15:29:04.0203293Z     ✅ filters properly with false filter spec
2025-01-25T15:29:04.0213475Z     ✅ filters properly with true filter spec
2025-01-25T15:29:04.0222730Z     ✅ filters properly compound filter spec
2025-01-25T15:29:04.0232782Z     ✅ can refer to target element in condition
2025-01-25T15:29:04.0243328Z     ✅ can refer to target element in condition w/ equality
2025-01-25T15:29:04.0252373Z     ✅ negative condition
2025-01-25T15:29:04.0261875Z     ✅ global function call works
2025-01-25T15:29:04.0271780Z     ✅ global property event filter works
2025-01-25T15:29:04.0280862Z     ✅ global variable filter works
2025-01-25T15:29:04.1357491Z     ✅ can filter polling (106ms)
2025-01-25T15:29:04.1404617Z {}
2025-01-25T15:29:04.1406275Z  return (function(event){ return (((event.a) ? (event.a) : (window.a)).b)})
2025-01-25T15:29:04.1411115Z     ✅ bad condition issues error
2025-01-25T15:29:04.1418384Z     ✅ from clause works
2025-01-25T15:29:04.1426992Z     ✅ from clause works with body selector
2025-01-25T15:29:04.1434851Z     ✅ from clause works with document selector
2025-01-25T15:29:04.1443354Z     ✅ from clause works with window selector
2025-01-25T15:29:04.1452493Z     ✅ from clause works with closest clause
2025-01-25T15:29:04.1461059Z     ✅ from clause works with find clause
2025-01-25T15:29:04.1470051Z     ✅ from clause works with next
2025-01-25T15:29:04.1478417Z     ✅ from clause works with previous
2025-01-25T15:29:04.1493933Z     ✅ event listeners on other elements are removed when an element is swapped out
2025-01-25T15:29:04.1509486Z     ✅ multiple triggers with from clauses mixed in work
2025-01-25T15:29:04.1522545Z     ✅ from clause works with multiple extended selectors
2025-01-25T15:29:04.1533491Z     ✅ event listeners can filter on target
2025-01-25T15:29:04.1543877Z     ✅ consume prevents event propagation
2025-01-25T15:29:04.2063197Z     ✅ throttle prevents multiple requests from happening (51ms)
2025-01-25T15:29:04.2126577Z     ✅ A throttle of 0 does not prevent multiple requests from happening
2025-01-25T15:29:04.2643971Z     ✅ delay delays the request (51ms)
2025-01-25T15:29:04.2707977Z     ✅ A 0 delay does not delay the request
2025-01-25T15:29:04.2721122Z     ✅ requests are queued with last one winning by default
2025-01-25T15:29:04.2738909Z     ✅ queue:all queues all requests
2025-01-25T15:29:04.2752082Z     ✅ queue:first queues first request
2025-01-25T15:29:04.2761552Z     ✅ queue:none queues no requests
2025-01-25T15:29:04.2771279Z     ✅ load event works w/ positive filters
2025-01-25T15:29:04.2776016Z     ✅ load event works w/ negative filters
2025-01-25T15:29:04.2801343Z     ✅ reveal event works on two elements
2025-01-25T15:29:04.2812437Z     ✅ reveal event works when triggered by window
2025-01-25T15:29:04.2825478Z     ✅ revealed can be paired w/ other events
2025-01-25T15:29:04.2829209Z     ✅ revealed doesnt cause other events to trigger
2025-01-25T15:29:04.2836407Z     ✅ fires the htmx:trigger event when an AJAX attribute is specified
2025-01-25T15:29:04.2842062Z     ✅ fires the htmx:trigger event when no AJAX attribute is specified
2025-01-25T15:29:04.3350564Z     ✅ fires the htmx:trigger event for delayed triggers (51ms)
2025-01-25T15:29:04.4410253Z     ✅ fires the htmx:trigger event when the trigger is a load (101ms)
2025-01-25T15:29:04.4463021Z     ✅ filters support "this" reference to the current element
2025-01-25T15:29:04.4478326Z     ✅ correctly handles CSS descendant combinators
2025-01-25T15:29:04.4488029Z     ✅ correctly handles CSS descendant combinators in modifier target
2025-01-25T15:29:04.4494332Z     ✅ correctly handles CSS descendant combinators in modifier root
2025-01-25T15:29:04.4511732Z     ✅ uses trigger specs cache if defined
2025-01-25T15:29:04.4517789Z     ✅ correctly reuses trigger specs from the cache if defined
2025-01-25T15:29:04.4535281Z     ✅ handles spaces at the end of trigger specs
2025-01-25T15:29:04.4535780Z 
2025-01-25T15:29:04.4539519Z   hx-vals attribute
2025-01-25T15:29:04.4547369Z     ✅ basic hx-vals works
2025-01-25T15:29:04.4557800Z     ✅ basic hx-vals works with braces
2025-01-25T15:29:04.4568788Z     ✅ multiple hx-vals works
2025-01-25T15:29:04.4577607Z     ✅ Dynamic hx-vals using spread operator works
2025-01-25T15:29:04.4586473Z     ✅ hx-vals can be on parents
2025-01-25T15:29:04.4595460Z     ✅ hx-vals can override parents
2025-01-25T15:29:04.4605184Z     ✅ hx-vals overrides inputs
2025-01-25T15:29:04.4614173Z     ✅ hx-vals overrides hx-vars
2025-01-25T15:29:04.4622783Z     ✅ basic hx-vals javascript: works
2025-01-25T15:29:04.4630549Z     ✅ hx-vals works with braces
2025-01-25T15:29:04.4638358Z     ✅ multiple hx-vals works
2025-01-25T15:29:04.4647100Z     ✅ hx-vals can be on parents
2025-01-25T15:29:04.4655137Z     ✅ hx-vals can override parents
2025-01-25T15:29:04.4664673Z     ✅ hx-vals overrides inputs
2025-01-25T15:29:04.4673090Z     ✅ hx-vals treats objects as JSON
2025-01-25T15:29:04.4682717Z     ✅ basic hx-vals can be unset
2025-01-25T15:29:04.4691656Z     ✅ basic hx-vals with braces can be unset
2025-01-25T15:29:04.4700484Z     ✅ multiple hx-vals can be unset
2025-01-25T15:29:04.4710312Z     ✅ unsetting hx-vals maintains input values
2025-01-25T15:29:04.4717584Z htmx:evalDisallowedError
2025-01-25T15:29:04.4723621Z     ✅ javascript: is not evaluated when allowEval is false
2025-01-25T15:29:04.4729999Z htmx:evalDisallowedError
2025-01-25T15:29:04.4736240Z     ✅ js: is not evaluated when allowEval is false
2025-01-25T15:29:04.4747261Z     ✅ hx-vals works with null values
2025-01-25T15:29:04.4748800Z 
2025-01-25T15:29:04.4750271Z   hx-vars attribute
2025-01-25T15:29:04.4758868Z     ✅ basic hx-vars works
2025-01-25T15:29:04.4767737Z     ✅ hx-vars works with braces
2025-01-25T15:29:04.4776833Z     ✅ multiple hx-vars works
2025-01-25T15:29:04.4786015Z     ✅ hx-vars can be on parents
2025-01-25T15:29:04.4796749Z     ✅ hx-vars can override parents
2025-01-25T15:29:04.4806274Z     ✅ hx-vars overrides inputs
2025-01-25T15:29:04.4837060Z     ✅ basic hx-vars can be unset
2025-01-25T15:29:04.4847655Z     ✅ basic hx-vars with braces can be unset
2025-01-25T15:29:04.4858365Z     ✅ multiple hx-vars can be unset
2025-01-25T15:29:04.4869351Z     ✅ unsetting hx-vars maintains input values
2025-01-25T15:29:04.4875772Z htmx:evalDisallowedError
2025-01-25T15:29:04.4881870Z     ✅ is not evaluated when allowEval is false
2025-01-25T15:29:04.4884347Z 
2025-01-25T15:29:04.4885885Z   Core htmx Events
2025-01-25T15:29:04.4894202Z     ✅ htmx:load fires properly
2025-01-25T15:29:04.4903002Z     ✅ htmx:configRequest allows attribute addition
2025-01-25T15:29:04.4911289Z     ✅ htmx:configRequest is also dispatched in kebab-case
2025-01-25T15:29:04.4915990Z     ✅ events are only dispatched once if kebab and camel case match
2025-01-25T15:29:04.4920832Z     ✅ events accept an options argument and the result works as expected
2025-01-25T15:29:04.4930966Z     ✅ htmx:configRequest allows attribute removal
2025-01-25T15:29:04.4939900Z     ✅ htmx:configRequest allows header tweaking
2025-01-25T15:29:04.4957946Z     ✅ htmx:configRequest on form gives access to submit event
2025-01-25T15:29:04.4967805Z     ✅ htmx:afterSwap is called when replacing outerHTML
2025-01-25T15:29:04.4976765Z     ✅ htmx:afterSwap is called when replacing outerHTML, new line content
2025-01-25T15:29:04.4987598Z     ✅ htmx:oobBeforeSwap is called before swap
2025-01-25T15:29:04.4998456Z     ✅ htmx:oobBeforeSwap can abort a swap
2025-01-25T15:29:04.5007343Z     ✅ htmx:oobBeforeSwap is not called on an oob miss
2025-01-25T15:29:04.5022025Z     ✅ htmx:oobAfterSwap is called after swap
2025-01-25T15:29:04.5032757Z     ✅ htmx:oobAfterSwap is not called on an oob miss
2025-01-25T15:29:04.5042871Z     ✅ htmx:afterSettle is called once when replacing outerHTML
2025-01-25T15:29:04.5053388Z     ✅ htmx:afterSettle is called once when replacing outerHTML with whitespace
2025-01-25T15:29:04.5064582Z     ✅ htmx:afterSettle is called twice when replacing outerHTML with whitespace separated elements
2025-01-25T15:29:04.5077714Z     ✅ htmx:afterSettle is called multiple times when doing OOB outerHTML swaps
2025-01-25T15:29:04.5085929Z     ✅ htmx:afterRequest is called after a successful request
2025-01-25T15:29:04.5094237Z     ✅ htmx:afterOnLoad is called after a successful request
2025-01-25T15:29:04.5103570Z Response Status Error Code 500 from /test
2025-01-25T15:29:04.5105451Z     ✅ htmx:afterRequest is called after a failed request
2025-01-25T15:29:04.5126128Z htmx:afterRequest
2025-01-25T15:29:04.5126616Z htmx:sendError
2025-01-25T15:29:04.5129502Z Resource Failed to Load: { url: 'file://foo/', method: 'POST', reason: 'net::ERR_FAILED' }
2025-01-25T15:29:04.5415581Z     ✅ htmx:sendError is called after a failed request
2025-01-25T15:29:04.5468923Z     ✅ htmx:afterRequest is called when replacing outerHTML
2025-01-25T15:29:04.5476874Z     ✅ htmx:afterOnLoad is called when replacing outerHTML
2025-01-25T15:29:04.5485809Z     ✅ htmx:beforeProcessNode is called when replacing outerHTML
2025-01-25T15:29:04.5495930Z     ✅ htmx:beforeProcessNode allows htmx attribute tweaking
2025-01-25T15:29:04.5505180Z     ✅ htmx:afterProcessNode is called after replacing outerHTML
2025-01-25T15:29:04.5516837Z     ✅ htmx:afterRequest is called when targeting a parent div
2025-01-25T15:29:04.5522184Z     ✅ adding an error in htmx:configRequest stops the request
2025-01-25T15:29:04.5527609Z     ✅ preventDefault() in htmx:configRequest stops the request
2025-01-25T15:29:04.5534119Z     ✅ preventDefault() in the htmx:beforeRequest event cancels the request
2025-01-25T15:29:04.5542706Z     ✅ preventDefault() in the htmx:beforeOnLoad event cancels the swap
2025-01-25T15:29:04.5551966Z     ✅ htmx:afterRequest event contains 'successful' and 'failed' properties indicating success after successful request
2025-01-25T15:29:04.5561795Z Response Status Error Code 500 from /test
2025-01-25T15:29:04.5566484Z     ✅ htmx:afterRequest event contains 'successful' and 'failed' properties indicating failure after failed request
2025-01-25T15:29:04.5572853Z     ✅ htmx:confirm can cancel request
2025-01-25T15:29:04.5582963Z beforeSwap {"htmx-internal-data":{"initHash":3227304,"firstInitCompleted":true}} {"htmx-internal-data":{"initHash":3227305,"firstInitCompleted":true}}
2025-01-25T15:29:04.5588858Z afterSwap {"htmx-internal-data":{"initHash":3227305,"firstInitCompleted":true}} {"htmx-internal-data":{"initHash":3227305,"firstInitCompleted":true}}
2025-01-25T15:29:04.5591015Z     ✅ has updated target available when target set via htmx:beforeSwap
2025-01-25T15:29:04.5604838Z afterSwap look at me. i’m the innerHTML now.
2025-01-25T15:29:04.5606755Z     ✅ htmx:beforeSwap can override swap style using evt.detail.swapOverride and has final say on it
2025-01-25T15:29:04.5607546Z 
2025-01-25T15:29:04.5612755Z 
2025-01-25T15:29:04.5613263Z   702 passing (3s)
2025-01-25T15:29:04.5614380Z   3 pending
2025-01-25T15:29:04.5614884Z 
2025-01-25T15:29:04.5992446Z Post job cleanup.
2025-01-25T15:29:04.7574518Z Post job cleanup.
2025-01-25T15:29:04.8504829Z [command]/usr/bin/git version
2025-01-25T15:29:04.8540742Z git version 2.48.1
2025-01-25T15:29:04.8581759Z Temporarily overriding HOME='/home/runner/work/_temp/fa19595e-6f1d-4e9e-a195-73e9f4e38866' before making global git config changes
2025-01-25T15:29:04.8582717Z Adding repository directory to the temporary git global config as a safe directory
2025-01-25T15:29:04.8593607Z [command]/usr/bin/git config --global --add safe.directory /home/runner/work/htmx/htmx
2025-01-25T15:29:04.8627701Z [command]/usr/bin/git config --local --name-only --get-regexp core\.sshCommand
2025-01-25T15:29:04.8660736Z [command]/usr/bin/git submodule foreach --recursive sh -c "git config --local --name-only --get-regexp 'core\.sshCommand' && git config --local --unset-all 'core.sshCommand' || :"
2025-01-25T15:29:04.8898519Z [command]/usr/bin/git config --local --name-only --get-regexp http\.https\:\/\/github\.com\/\.extraheader
2025-01-25T15:29:04.8919549Z http.https://github.com/.extraheader
2025-01-25T15:29:04.8932415Z [command]/usr/bin/git config --local --unset-all http.https://github.com/.extraheader
2025-01-25T15:29:04.8967908Z [command]/usr/bin/git submodule foreach --recursive sh -c "git config --local --name-only --get-regexp 'http\.https\:\/\/github\.com\/\.extraheader' && git config --local --unset-all 'http.https://github.com/.extraheader' || :"
2025-01-25T15:29:04.9311704Z Cleaning up orphan processes
