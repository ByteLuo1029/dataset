2025-01-25T15:28:54.1533581Z ##[group]Run npm test
2025-01-25T15:28:54.1534119Z [36;1mnpm test[0m
2025-01-25T15:28:54.1571692Z shell: /usr/bin/bash -e {0}
2025-01-25T15:28:54.1572040Z ##[endgroup]
2025-01-25T15:28:54.2666036Z 
2025-01-25T15:28:54.2666923Z > htmx.org@2.0.4 test
2025-01-25T15:28:54.2667825Z > npm run lint && npm run types-check && mocha-chrome test/index.html
2025-01-25T15:28:54.2668322Z 
2025-01-25T15:28:54.3789023Z 
2025-01-25T15:28:54.3789565Z > htmx.org@2.0.4 lint
2025-01-25T15:28:54.3790414Z > eslint src/htmx.js test/attributes/ test/core/ test/util/
2025-01-25T15:28:54.3790930Z 
2025-01-25T15:28:57.0027096Z 
2025-01-25T15:28:57.0027970Z > htmx.org@2.0.4 types-check
2025-01-25T15:28:57.0029208Z > tsc src/htmx.js --noEmit --checkJs --target es6 --lib dom,dom.iterable
2025-01-25T15:28:57.0029860Z 
2025-01-25T15:29:01.1724147Z [chrome-exception] {
2025-01-25T15:29:01.1724796Z   timestamp: 1737818941170.118,
2025-01-25T15:29:01.1725452Z   exceptionDetails: {
2025-01-25T15:29:01.1725896Z     exceptionId: 2,
2025-01-25T15:29:01.1726614Z     text: 'Uncaught',
2025-01-25T15:29:01.1727148Z     lineNumber: 0,
2025-01-25T15:29:01.1727718Z     columnNumber: 0,
2025-01-25T15:29:01.1728207Z     scriptId: '12',
2025-01-25T15:29:01.1729034Z     url: 'file:///home/runner/work/htmx/htmx/node_modules/mocha-webdriver/dist/index.js',
2025-01-25T15:29:01.1729920Z     exception: {
2025-01-25T15:29:01.1730405Z       type: 'object',
2025-01-25T15:29:01.1730805Z       subtype: 'error',
2025-01-25T15:29:01.1731395Z       className: 'SyntaxError',
2025-01-25T15:29:01.1732252Z       description: "SyntaxError: Identifier 'chrome' has already been declared",
2025-01-25T15:29:01.1733006Z       objectId: '3543313633937690718.2.3',
2025-01-25T15:29:01.1733648Z       preview: [Object]
2025-01-25T15:29:01.1734157Z     },
2025-01-25T15:29:01.1734541Z     executionContextId: 2
2025-01-25T15:29:01.1735084Z   }
2025-01-25T15:29:01.1735549Z }
2025-01-25T15:29:01.2489278Z 
2025-01-25T15:29:01.2497142Z 
2025-01-25T15:29:01.2504820Z   Core htmx internals Tests
2025-01-25T15:29:01.2570472Z     âœ… makeFragment works with janky stuff
2025-01-25T15:29:01.2582671Z     âœ… makeFragment works with template wrapping
2025-01-25T15:29:01.2588329Z     âœ… makeFragment works with template wrapping and funky combos
2025-01-25T15:29:01.2599552Z     âœ… set header works with non-ASCII values
2025-01-25T15:29:01.2608941Z     âœ… handles parseInterval correctly
2025-01-25T15:29:01.2625218Z     âœ… tokenizes correctly
2025-01-25T15:29:01.2661014Z     âœ… tags respond correctly to shouldCancel
2025-01-25T15:29:01.2667629Z     âœ… unset properly unsets a given attribute
2025-01-25T15:29:01.2673382Z     âœ… unset properly unsets a given attribute on a parent
2025-01-25T15:29:01.2679914Z     âœ… unset does not unset a value below it in the hierarchy
2025-01-25T15:29:01.2686967Z     âœ… encoding values respects enctype on forms
2025-01-25T15:29:01.2689826Z 
2025-01-25T15:29:01.2693664Z   Core htmx API test
2025-01-25T15:29:01.2697466Z     âœ… should find properly
2025-01-25T15:29:01.2702985Z     âœ… should find properly from elt
2025-01-25T15:29:01.2708093Z     âœ… should find all properly
2025-01-25T15:29:01.2713209Z     âœ… should find all properly from elt
2025-01-25T15:29:01.2717786Z     âœ… should find closest element properly
2025-01-25T15:29:01.2723484Z     âœ… should remove element properly
2025-01-25T15:29:01.2728818Z     âœ… should remove element properly w/ selector
2025-01-25T15:29:01.2733843Z     âœ… should add class properly
2025-01-25T15:29:01.2738682Z     âœ… should add class properly w/ selector
2025-01-25T15:29:01.2947186Z     âœ… should add class properly after delay
2025-01-25T15:29:01.2954460Z     âœ… should remove class properly
2025-01-25T15:29:01.2959721Z     âœ… should remove class properly w/ selector
2025-01-25T15:29:01.3167395Z     âœ… should add class properly after delay
2025-01-25T15:29:01.3214530Z     âœ… should toggle class properly
2025-01-25T15:29:01.3220183Z     âœ… should toggle class properly w/ selector
2025-01-25T15:29:01.3226733Z     âœ… should take class properly
2025-01-25T15:29:01.3233939Z     âœ… should take class properly w/ selector
2025-01-25T15:29:01.3242897Z htmx:evalDisallowedError
2025-01-25T15:29:01.3246872Z     âœ… eval can be suppressed
2025-01-25T15:29:01.3320060Z     âœ… ajax api works
2025-01-25T15:29:01.3334995Z     âœ… ajax api works by ID
2025-01-25T15:29:01.3344610Z htmx:targetError
2025-01-25T15:29:01.3348418Z     âœ… ajax api does not fall back to body when target invalid
2025-01-25T15:29:01.3354093Z htmx:targetError
2025-01-25T15:29:01.3357056Z     âœ… ajax api fails when target invalid
2025-01-25T15:29:01.3363087Z [chrome-exception] {
2025-01-25T15:29:01.3363899Z   timestamp: 1737818941335.764,
2025-01-25T15:29:01.3364430Z   exceptionDetails: {
2025-01-25T15:29:01.3364803Z     exceptionId: 3,
2025-01-25T15:29:01.3365410Z     text: 'Uncaught (in promise)',
2025-01-25T15:29:01.3365937Z     lineNumber: 631,
2025-01-25T15:29:01.3366318Z     columnNumber: 6,
2025-01-25T15:29:01.3366813Z     scriptId: '15',
2025-01-25T15:29:01.3367303Z     url: 'file:///home/runner/work/htmx/htmx/src/htmx.js',
2025-01-25T15:29:01.3367836Z     stackTrace: { callFrames: [Array] },
2025-01-25T15:29:01.3368210Z     exception: { type: 'undefined' },
2025-01-25T15:29:01.3368546Z     executionContextId: 2
2025-01-25T15:29:01.3368884Z   }
2025-01-25T15:29:01.3369138Z }
2025-01-25T15:29:01.3403601Z htmx:targetError
2025-01-25T15:29:01.3406411Z     âœ… ajax api fails when target invalid even if source set
2025-01-25T15:29:01.3454373Z htmx:targetError
2025-01-25T15:29:01.3456122Z     âœ… ajax api fails when source invalid and no target set
2025-01-25T15:29:01.3512569Z     âœ… ajax api falls back to targeting source if target not set
2025-01-25T15:29:01.3530686Z     âœ… ajax api works with swapSpec
2025-01-25T15:29:01.3547023Z     âœ… ajax api works with select
2025-01-25T15:29:01.3563531Z     âœ… ajax api works with Hx-Select overrides select
2025-01-25T15:29:01.3577609Z     âœ… ajax returns a promise
2025-01-25T15:29:01.3642713Z     âœ… ajax api can pass parameters
2025-01-25T15:29:01.3654517Z     âœ… ajax api Content-Type header is application/x-www-form-urlencoded
2025-01-25T15:29:01.3668255Z     âœ… ajax api Content-Type header override to application/json
2025-01-25T15:29:01.3695055Z     âœ… can re-init with new attributes
2025-01-25T15:29:01.3712408Z     âœ… does not trigger load on re-init of an existing element
2025-01-25T15:29:01.3727885Z     âœ… onLoad is called... onLoad
2025-01-25T15:29:01.3733592Z     âœ… triggers properly
2025-01-25T15:29:01.3748599Z     âœ… triggers properly w/ selector
2025-01-25T15:29:01.3753389Z     âœ… triggers with no details properly
2025-01-25T15:29:01.3760586Z     âœ… swaps content properly (basic)
2025-01-25T15:29:01.3768456Z     âœ… swaps content properly (with select)
2025-01-25T15:29:01.3780977Z     âœ… swaps content properly (with oob)
2025-01-25T15:29:01.3789684Z     âœ… swaps content properly (with select oob)
2025-01-25T15:29:01.3802864Z     âœ… swap delete works when parent is removed
2025-01-25T15:29:01.3816808Z     âœ… swap outerHTML works when parent is removed
2025-01-25T15:29:01.3817271Z 
2025-01-25T15:29:01.3822666Z   Core htmx AJAX Tests
2025-01-25T15:29:01.3833077Z     âœ… issues a GET request on click and swaps content
2025-01-25T15:29:01.3860690Z     âœ… processes inner content properly
2025-01-25T15:29:01.3877429Z     âœ… handles swap outerHTML properly
2025-01-25T15:29:01.3916500Z     âœ… handles beforebegin properly
2025-01-25T15:29:01.3938892Z     âœ… handles afterbegin properly
2025-01-25T15:29:01.3965963Z     âœ… handles afterbegin properly with no initial content
2025-01-25T15:29:01.3995477Z     âœ… handles afterend properly
2025-01-25T15:29:01.4015466Z     âœ… handles beforeend properly
2025-01-25T15:29:01.4035457Z     âœ… handles beforeend properly with no initial content
2025-01-25T15:29:01.4048251Z     âœ… handles hx-target properly
2025-01-25T15:29:01.4059469Z     âœ… handles 204 NO CONTENT responses properly
2025-01-25T15:29:01.4090654Z     âœ… handles 304 NOT MODIFIED responses properly
2025-01-25T15:29:01.4103126Z     âœ… handles hx-trigger with non-default value
2025-01-25T15:29:01.4112616Z     âœ… handles hx-trigger with load event
2025-01-25T15:29:01.4142979Z     âœ… sets the content type of the request properly
2025-01-25T15:29:01.4156174Z     âœ… issues two requests when clicked twice before response
2025-01-25T15:29:01.4168860Z     âœ… issues two requests when clicked three times before response
2025-01-25T15:29:01.4185967Z     âœ… properly handles hx-select for basic situation
2025-01-25T15:29:01.4196034Z     âœ… properly handles hx-select for full html document situation
2025-01-25T15:29:01.4408310Z     âœ… properly settles attributes on interior elements
2025-01-25T15:29:01.4664371Z     âœ… properly settles attributes elements with single quotes in id
2025-01-25T15:29:01.4920122Z     âœ… properly settles attributes elements with double quotes in id
2025-01-25T15:29:01.5008144Z     âœ… properly handles multiple select input
2025-01-25T15:29:01.5030369Z     âœ… properly handles multiple select input when "multiple" attribute is empty string
2025-01-25T15:29:01.5053880Z     âœ… properly handles two multiple select inputs w/ same name
2025-01-25T15:29:01.5084472Z     âœ… properly handles multiple email input
2025-01-25T15:29:01.5133345Z     âœ… properly handles checkbox inputs
2025-01-25T15:29:01.5155279Z     âœ… properly handles radio inputs
2025-01-25T15:29:01.5171599Z     âœ… text nodes dont screw up settling via variable capture
2025-01-25T15:29:01.5184682Z     âœ… script nodes evaluate
2025-01-25T15:29:01.5196787Z     âœ… stand alone script nodes evaluate
2025-01-25T15:29:01.5208787Z     âœ… script nodes can define global functions
2025-01-25T15:29:01.5219999Z     âœ… child script nodes evaluate when children
2025-01-25T15:29:01.5231504Z     âœ… child script nodes evaluate when first child
2025-01-25T15:29:01.5242477Z     âœ… child script nodes evaluate when not explicitly marked javascript
2025-01-25T15:29:01.5253142Z     âœ… script nodes do not evaluate when explicitly marked as something other than javascript
2025-01-25T15:29:01.5270611Z Here...
2025-01-25T15:29:01.5276314Z     âœ… script nodes evaluate after swap
2025-01-25T15:29:01.5281448Z     - script node exceptions do not break rendering
2025-01-25T15:29:01.5292252Z Response Status Error Code 404 from file:///home/runner/work/htmx/htmx/test/index.html
2025-01-25T15:29:01.5295084Z     âœ… allows empty verb values
2025-01-25T15:29:01.5306745Z Response Status Error Code 404 from file:///home/runner/work/htmx/htmx/test/index.html
2025-01-25T15:29:01.5307756Z     âœ… allows blank verb values
2025-01-25T15:29:01.5319024Z     âœ… input values are not settle swapped (causes flicker)
2025-01-25T15:29:01.5359948Z     âœ… autofocus attribute works properly
2025-01-25T15:29:01.5378191Z     âœ… autofocus attribute works properly w/ child
2025-01-25T15:29:01.5396843Z     âœ… autofocus attribute works properly w/ true value
2025-01-25T15:29:01.5411902Z     âœ… multipart/form-data encoding works
2025-01-25T15:29:01.5417278Z     âœ… removed elements do not issue requests
2025-01-25T15:29:01.5436841Z     âœ… title tags update title
2025-01-25T15:29:01.5466850Z     âœ… svg title tags do not update title
2025-01-25T15:29:01.5481382Z     âœ… first title tag outside svg title tags updates title
2025-01-25T15:29:01.5493251Z     âœ… title update does not URL escape
2025-01-25T15:29:01.5502469Z Response Status Error Code 400 from /test
2025-01-25T15:29:01.5506084Z     âœ… by default 400 content is not swapped
2025-01-25T15:29:01.5516926Z Response Status Error Code 400 from /test
2025-01-25T15:29:01.5520830Z     âœ… 400 content can be swapped if configured to do so
2025-01-25T15:29:01.5531468Z Response Status Error Code 400 from /test
2025-01-25T15:29:01.5535443Z     âœ… 400 content can be retargeted if configured to do so
2025-01-25T15:29:01.5547698Z Response Status Error Code 400 from /test2
2025-01-25T15:29:01.5552070Z     âœ… errors are triggered only on 400+
2025-01-25T15:29:01.5561611Z Response Status Error Code 400 from /test
2025-01-25T15:29:01.5565663Z     âœ… content can be modified if configured to do so
2025-01-25T15:29:01.5613665Z     âœ… scripts w/ src attribute are properly loaded
2025-01-25T15:29:01.5626078Z     âœ… should load tags with colon in their names
2025-01-25T15:29:01.5659945Z     âœ… properly handles clicked submit button with a value inside a htmx form
2025-01-25T15:29:01.5662719Z     âœ… properly handles clicked submit input with a value inside a htmx form
2025-01-25T15:29:01.5670801Z     âœ… properly handles clicked submit button with a value inside a non-htmx form
2025-01-25T15:29:01.5682111Z     âœ… properly handles clicked submit input with a value inside a non-htmx form
2025-01-25T15:29:01.5694433Z     âœ… properly handles clicked submit button with a value outside a htmx form
2025-01-25T15:29:01.5708280Z     âœ… properly handles clicked submit input with a value outside a htmx form
2025-01-25T15:29:01.5729614Z     âœ… properly handles clicked submit button with a value stacking with regular input
2025-01-25T15:29:01.5749204Z     âœ… properly handles clicked submit input with a value stacking with regular input
2025-01-25T15:29:01.5765058Z     âœ… properly handles clicked submit button with a value inside a form, referencing another form
2025-01-25T15:29:01.5779366Z     âœ… properly handles clicked submit input with a value inside a form, referencing another form
2025-01-25T15:29:01.5797338Z     âœ… properly handles inputs external to form
2025-01-25T15:29:01.5812127Z     âœ… handles form post with button formmethod dialog properly
2025-01-25T15:29:01.5824859Z     âœ… handles form get with button formmethod dialog properly
2025-01-25T15:29:01.5858823Z     âœ… can associate submit buttons from outside a form with the current version of the form after swap
2025-01-25T15:29:01.5862430Z 
2025-01-25T15:29:01.5864586Z   htmx config test
2025-01-25T15:29:01.5886493Z Response Status Error Code 400 from /test
2025-01-25T15:29:01.5894850Z Response Status Error Code 500 from /test
2025-01-25T15:29:01.5896705Z     âœ… swaps normally with no config update
2025-01-25T15:29:01.5927001Z     âœ… swap all config should swap everything
2025-01-25T15:29:01.5937841Z     âœ… can change the target of a given response code
2025-01-25T15:29:01.5948768Z     âœ… can change the swap type of a given response code
2025-01-25T15:29:01.5961118Z     âœ… can change the select of a given response code
2025-01-25T15:29:01.5970333Z     âœ… can change if the title is ignored for a given response code
2025-01-25T15:29:01.5980793Z     âœ… can change if error for a given response code
2025-01-25T15:29:01.5989441Z     âœ… can trigger an event for a given response code
2025-01-25T15:29:01.5993854Z 
2025-01-25T15:29:01.5994768Z   Core htmx AJAX Verbs
2025-01-25T15:29:01.6003254Z     âœ… handles basic posts properly
2025-01-25T15:29:01.6013831Z     âœ… handles basic put properly
2025-01-25T15:29:01.6023835Z     âœ… handles basic patch properly
2025-01-25T15:29:01.6034045Z     âœ… handles basic delete properly
2025-01-25T15:29:01.6036610Z 
2025-01-25T15:29:01.6038500Z   Core htmx Parameter Handling
2025-01-25T15:29:01.6043527Z     âœ… Input includes value
2025-01-25T15:29:01.6049054Z     âœ… Input includes value on get
2025-01-25T15:29:01.6055153Z     âœ… Input includes form
2025-01-25T15:29:01.6061328Z     âœ… Input doesnt include form on get
2025-01-25T15:29:01.6066330Z     âœ… non-input includes form
2025-01-25T15:29:01.6071553Z     âœ… non-input doesnt include form on get
2025-01-25T15:29:01.6076745Z     âœ… Basic form works on get
2025-01-25T15:29:01.6093139Z     âœ… Basic form works on non-get
2025-01-25T15:29:01.6100721Z     âœ… Double values are included as array
2025-01-25T15:29:01.6106239Z     âœ… Double values are included as array in correct order
2025-01-25T15:29:01.6111785Z     âœ… Double empty values are included as array in correct order
2025-01-25T15:29:01.6118400Z     âœ… hx-include works with form
2025-01-25T15:29:01.6124647Z     âœ… hx-include works with input
2025-01-25T15:29:01.6131444Z     âœ… hx-include works with two inputs
2025-01-25T15:29:01.6138061Z     âœ… hx-include works with two inputs, plus form
2025-01-25T15:29:01.6144328Z     âœ… correctly URL escapes values
2025-01-25T15:29:01.6168275Z     âœ… form includes last focused button
2025-01-25T15:29:01.6180136Z     âœ… form includes last focused submit
2025-01-25T15:29:01.6192698Z     âœ… form does not include button when focus is lost
2025-01-25T15:29:01.6204193Z     âœ… form does not include button when focus is lost outside of form
2025-01-25T15:29:01.6216732Z     âœ… form includes button name and value if button has nested elements when clicked
2025-01-25T15:29:01.6228929Z     âœ… it puts GET params in the URL by default
2025-01-25T15:29:01.6240152Z     âœ… it puts GET params in the body if methodsThatUseUrlParams is empty
2025-01-25T15:29:01.6250974Z     âœ… it puts DELETE params in the body by default
2025-01-25T15:29:01.6262399Z     âœ… it puts DELETE params in the URL if methodsThatUseUrlParams contains "delete"
2025-01-25T15:29:01.6268546Z     âœ… Input within disabled fieldset is excluded
2025-01-25T15:29:01.6279790Z     âœ… formdata works along web components
2025-01-25T15:29:01.6287672Z     âœ… formdata works with null values
2025-01-25T15:29:01.6295911Z     âœ… formdata can be used to construct a URLSearchParams instance
2025-01-25T15:29:01.6312502Z     âœ… order of parameters follows order of input elements
2025-01-25T15:29:01.6330843Z     âœ… order of parameters follows order of input elements with POST
2025-01-25T15:29:01.6372945Z     âœ… file is correctly uploaded with file input
2025-01-25T15:29:01.6385098Z     âœ… file is correctly uploaded with htmx.ajax
2025-01-25T15:29:01.6385899Z 
2025-01-25T15:29:01.6388046Z   Core htmx AJAX headers
2025-01-25T15:29:01.6397483Z     âœ… should include the HX-Request header
2025-01-25T15:29:01.6406912Z     âœ… should include the HX-Trigger header
2025-01-25T15:29:01.6416791Z Response Status Error Code 404 from /test
2025-01-25T15:29:01.6417870Z     âœ… should include the HX-Trigger-Name header
2025-01-25T15:29:01.6423237Z     âœ… should include the HX-Target header
2025-01-25T15:29:01.6434593Z     âœ… should handle simple string HX-Trigger response header properly
2025-01-25T15:29:01.6445524Z     âœ… should handle dot path HX-Trigger response header properly
2025-01-25T15:29:01.6455494Z     âœ… should handle simple string HX-Trigger response header in different case properly
2025-01-25T15:29:01.6465579Z     âœ… should handle a namespaced HX-Trigger response header properly
2025-01-25T15:29:01.6478560Z     âœ… should handle basic JSON HX-Trigger response header properly
2025-01-25T15:29:01.6490047Z     âœ… should handle JSON with array arg HX-Trigger response header properly
2025-01-25T15:29:01.6499646Z     âœ… should handle JSON with array arg HX-Trigger response header properly
2025-01-25T15:29:01.6510486Z     âœ… should handle JSON with target array arg HX-Trigger response header properly
2025-01-25T15:29:01.6521932Z {}
2025-01-25T15:29:01.6526070Z     âœ… should survive malformed JSON in HX-Trigger response header
2025-01-25T15:29:01.6536256Z     âœ… should handle simple string HX-Trigger response header properly w/ outerHTML swap
2025-01-25T15:29:01.6546849Z     âœ… should handle simple comma separated list HX-Trigger response header properly
2025-01-25T15:29:01.6570292Z     âœ… should handle simple comma separated list without space HX-Trigger response header properly
2025-01-25T15:29:01.6580494Z     âœ… should handle dot path in comma separated list HX-Trigger response header properly
2025-01-25T15:29:01.6589515Z     âœ… should handle a namespaced comma separated list HX-Trigger response header properly
2025-01-25T15:29:01.6598662Z     âœ… should handle HX-Retarget
2025-01-25T15:29:01.6607983Z     âœ… should handle HX-Reswap
2025-01-25T15:29:01.6617585Z     âœ… should handle HX-Reselect
2025-01-25T15:29:01.6636673Z     âœ… should handle simple string HX-Trigger-After-Swap response header properly w/ outerHTML swap
2025-01-25T15:29:01.6647366Z     âœ… should handle simple comma separated list HX-Trigger-After-Swap response header properly w/ outerHTML swap
2025-01-25T15:29:01.6658141Z     âœ… should handle simple string HX-Trigger-After-Settle response header properly w/ outerHTML swap
2025-01-25T15:29:01.6668357Z     âœ… should handle simple comma separated list HX-Trigger-After-Settle response header properly w/ outerHTML swap
2025-01-25T15:29:01.6706293Z     âœ… should change body content on HX-Location
2025-01-25T15:29:01.6714763Z     âœ… request to restore history should include the HX-Request header
2025-01-25T15:29:01.6720696Z     âœ… request to restore history should include the HX-History-Restore-Request header
2025-01-25T15:29:01.6730184Z     âœ… request to restore history should include the HX-Current-URL header
2025-01-25T15:29:01.6731848Z 
2025-01-25T15:29:01.6732096Z   Core htmx Regression Tests
2025-01-25T15:29:01.6736563Z     âœ… SVGs process properly in IE11
2025-01-25T15:29:01.6751965Z     âœ… Handles https://github.com/bigskysoftware/htmx/issues/4 properly
2025-01-25T15:29:01.6765975Z     âœ… Handles https://github.com/bigskysoftware/htmx/issues/33 "empty values" properly
2025-01-25T15:29:01.6797201Z     âœ… name=id doesnt cause an error
2025-01-25T15:29:01.6808759Z     âœ… empty id doesnt cause an error
2025-01-25T15:29:01.6821841Z     âœ… id with dot in value doesnt cause an error
2025-01-25T15:29:01.6835792Z     âœ… @ symbol in attributes does not break requests
2025-01-25T15:29:01.6851004Z     âœ… @ symbol in attributes does not break attribute settling requests
2025-01-25T15:29:01.6870471Z     âœ… selected element with ID does not cause NPE when it disappears
2025-01-25T15:29:01.6877505Z     âœ… does not submit with a false condition on a form
2025-01-25T15:29:01.6900009Z     âœ… two elements can listen for the same event on another element
2025-01-25T15:29:01.6964719Z     âœ… a form can reset based on the htmx:afterRequest event
2025-01-25T15:29:01.6980397Z     âœ… supports image maps
2025-01-25T15:29:01.6999447Z     âœ… supports unset on hx-select
2025-01-25T15:29:01.7034310Z     âœ… can trigger swaps from fields that don't support setSelectionRange
2025-01-25T15:29:01.7049529Z console.trace
2025-01-25T15:29:01.7557549Z     âœ… script tags only execute once (51ms)
2025-01-25T15:29:01.7571698Z console.trace
2025-01-25T15:29:01.8076110Z     âœ… script tags only execute once when nested (52ms)
2025-01-25T15:29:01.8632949Z     âœ… htmx.config.allowScriptTags properly disables script tags (51ms)
2025-01-25T15:29:01.9191532Z     âœ… htmx.config.allowScriptTags properly disables script tags when nested (51ms)
2025-01-25T15:29:01.9235632Z 
2025-01-25T15:29:01.9239999Z   security options
2025-01-25T15:29:01.9246085Z     âœ… can disable a single elt
2025-01-25T15:29:01.9251405Z     âœ… can disable a parent elt
2025-01-25T15:29:01.9269127Z     âœ… can disable a single elt dynamically
2025-01-25T15:29:01.9286844Z     âœ… can disable a single elt dynamically & enable it back
2025-01-25T15:29:01.9300128Z     âœ… can disable a single parent elt dynamically
2025-01-25T15:29:01.9316455Z     âœ… can disable a single parent elt dynamically & enable it back
2025-01-25T15:29:02.1159848Z htmx:afterRequest
2025-01-25T15:29:02.1161378Z htmx:sendError
2025-01-25T15:29:02.1162840Z     âœ… can make egress cross site requests when htmx.config.selfRequestsOnly is disabled (184ms)
2025-01-25T15:29:02.1170302Z Resource Failed to Load: {
2025-01-25T15:29:02.1171389Z   url: 'https://hypermedia.systems/www/test',
2025-01-25T15:29:02.1171953Z   method: 'GET',
2025-01-25T15:29:02.1172450Z   reason: 'net::ERR_FAILED'
2025-01-25T15:29:02.1173097Z }
2025-01-25T15:29:02.1202127Z     âœ… can disable hx-on on a single elt
2025-01-25T15:29:02.1217176Z     âœ… can disable hx-on on a parent elt
2025-01-25T15:29:02.1218059Z     âœ… can disable hx-on on a single elt dynamically
2025-01-25T15:29:02.1222140Z     âœ… can disable hx-on on a parent elt dynamically
2025-01-25T15:29:02.1231611Z htmx:invalidPath
2025-01-25T15:29:02.1232625Z     âœ… can't make egress cross site requests when htmx.config.selfRequestsOnly is true
2025-01-25T15:29:02.1240385Z htmx:invalidPath
2025-01-25T15:29:02.1243742Z     âœ… can cancel egress request based on htmx:validateUrl event
2025-01-25T15:29:02.1250722Z htmx:invalidPath
2025-01-25T15:29:02.1253108Z     âœ… can cancel egress request based on htmx:validateUrl event, sameHost is false
2025-01-25T15:29:02.1260806Z htmx:invalidPath
2025-01-25T15:29:02.1264404Z     âœ… can disable script tag support with htmx.config.allowScriptTags
2025-01-25T15:29:02.1268739Z 
2025-01-25T15:29:02.1269071Z   Core htmx Shadow DOM Tests
2025-01-25T15:29:02.1280486Z     âœ… properly retrieves shadow root for extended selector
2025-01-25T15:29:02.1286930Z     âœ… properly escapes shadow root for extended selector
2025-01-25T15:29:02.1293049Z     âœ… properly retrives shadow root host for extended selector
2025-01-25T15:29:02.1303643Z     âœ… issues a GET request on click and swaps content
2025-01-25T15:29:02.1335360Z     âœ… processes inner content properly
2025-01-25T15:29:02.1355560Z     âœ… handles swap outerHTML properly
2025-01-25T15:29:02.1395110Z     âœ… handles beforebegin properly
2025-01-25T15:29:02.1418258Z     âœ… handles afterbegin properly
2025-01-25T15:29:02.1441341Z     âœ… handles afterbegin properly with no initial content
2025-01-25T15:29:02.1475903Z     âœ… handles afterend properly
2025-01-25T15:29:02.1499386Z     âœ… handles beforeend properly
2025-01-25T15:29:02.1521658Z     âœ… handles beforeend properly with no initial content
2025-01-25T15:29:02.1536417Z     âœ… handles hx-target properly
2025-01-25T15:29:02.1565648Z     âœ… handles 204 NO CONTENT responses properly
2025-01-25T15:29:02.1607275Z     âœ… handles 304 NOT MODIFIED responses properly
2025-01-25T15:29:02.1621936Z     âœ… handles hx-trigger with non-default value
2025-01-25T15:29:02.1635967Z     âœ… handles hx-trigger with load event
2025-01-25T15:29:02.1647452Z     âœ… sets the content type of the request properly
2025-01-25T15:29:02.1664375Z     âœ… issues two requests when clicked twice before response
2025-01-25T15:29:02.1677953Z     âœ… issues two requests when clicked three times before response
2025-01-25T15:29:02.1729218Z     âœ… properly handles hx-select for basic situation
2025-01-25T15:29:02.1743817Z     âœ… properly handles hx-select for full html document situation
2025-01-25T15:29:02.1957529Z     âœ… properly settles attributes on interior elements
2025-01-25T15:29:02.2171615Z     âœ… properly settles attributes elements with single quotes in id
2025-01-25T15:29:02.2427424Z     âœ… properly settles attributes elements with double quotes in id
2025-01-25T15:29:02.2487161Z     âœ… properly handles multiple select input
2025-01-25T15:29:02.2503211Z     âœ… properly handles multiple select input when "multiple" attribute is empty string
2025-01-25T15:29:02.2520142Z     âœ… properly handles two multiple select inputs w/ same name
2025-01-25T15:29:02.2535518Z     âœ… properly handles multiple email input
2025-01-25T15:29:02.2566987Z     âœ… properly handles checkbox inputs
2025-01-25T15:29:02.2581815Z     âœ… text nodes dont screw up settling via variable capture
2025-01-25T15:29:02.2592496Z     âœ… script nodes evaluate
2025-01-25T15:29:02.2603612Z     âœ… stand alone script nodes evaluate
2025-01-25T15:29:02.2613278Z     âœ… script nodes can define global functions
2025-01-25T15:29:02.2622966Z     âœ… child script nodes evaluate when children
2025-01-25T15:29:02.2633018Z     âœ… child script nodes evaluate when first child
2025-01-25T15:29:02.2642474Z     âœ… child script nodes evaluate when not explicitly marked javascript
2025-01-25T15:29:02.2659492Z     âœ… script nodes do not evaluate when explicitly marked as something other than javascript
2025-01-25T15:29:02.2663759Z Here...
2025-01-25T15:29:02.2668146Z     âœ… script nodes evaluate after swap
2025-01-25T15:29:02.2673134Z     - script node exceptions do not break rendering
2025-01-25T15:29:02.2683262Z Response Status Error Code 404 from file:///home/runner/work/htmx/htmx/test/index.html
2025-01-25T15:29:02.2684728Z     âœ… allows empty verb values
2025-01-25T15:29:02.2692893Z Response Status Error Code 404 from file:///home/runner/work/htmx/htmx/test/index.html
2025-01-25T15:29:02.2694142Z     âœ… allows blank verb values
2025-01-25T15:29:02.2704878Z     âœ… input values are not settle swapped (causes flicker)
2025-01-25T15:29:02.2720097Z     âœ… autofocus attribute works properly
2025-01-25T15:29:02.2735545Z     âœ… autofocus attribute works properly w/ child
2025-01-25T15:29:02.2750992Z     âœ… autofocus attribute works properly w/ true value
2025-01-25T15:29:02.2762646Z     âœ… multipart/form-data encoding works
2025-01-25T15:29:02.2768037Z     âœ… removed elements do not issue requests
2025-01-25T15:29:02.2778498Z     âœ… title tags update title
2025-01-25T15:29:02.2788722Z     âœ… svg title tags do not update title
2025-01-25T15:29:02.2800929Z     âœ… first title tag outside svg title tags updates title
2025-01-25T15:29:02.2810681Z     âœ… title update does not URL escape
2025-01-25T15:29:02.2818953Z Response Status Error Code 400 from /test
2025-01-25T15:29:02.2821415Z     âœ… by default 400 content is not swapped
2025-01-25T15:29:02.2832256Z Response Status Error Code 400 from /test
2025-01-25T15:29:02.2834481Z     âœ… 400 content can be swapped if configured to do so
2025-01-25T15:29:02.2857797Z Response Status Error Code 400 from /test
2025-01-25T15:29:02.2861194Z     âœ… 400 content can be retargeted if configured to do so
2025-01-25T15:29:02.2871715Z Response Status Error Code 400 from /test2
2025-01-25T15:29:02.2874022Z     âœ… errors are triggered only on 400+
2025-01-25T15:29:02.2884125Z Response Status Error Code 400 from /test
2025-01-25T15:29:02.2888290Z     âœ… content can be modified if configured to do so
2025-01-25T15:29:02.2889358Z     - scripts w/ src attribute are properly loaded
2025-01-25T15:29:02.2898591Z     âœ… should load tags with colon in their names
2025-01-25T15:29:02.2912990Z     âœ… properly handles clicked submit button with a value inside a htmx form
2025-01-25T15:29:02.2925495Z     âœ… properly handles clicked submit input with a value inside a htmx form
2025-01-25T15:29:02.2936880Z     âœ… properly handles clicked submit button with a value inside a non-htmx form
2025-01-25T15:29:02.2946634Z     âœ… properly handles clicked submit input with a value inside a non-htmx form
2025-01-25T15:29:02.2959112Z     âœ… properly handles clicked submit button with a value outside a htmx form
2025-01-25T15:29:02.2972267Z     âœ… properly handles clicked submit input with a value outside a htmx form
2025-01-25T15:29:02.2994001Z     âœ… properly handles clicked submit button with a value stacking with regular input
2025-01-25T15:29:02.3011134Z     âœ… properly handles clicked submit input with a value stacking with regular input
2025-01-25T15:29:02.3026368Z     âœ… properly handles clicked submit button with a value inside a form, referencing another form
2025-01-25T15:29:02.3041515Z     âœ… properly handles clicked submit input with a value inside a form, referencing another form
2025-01-25T15:29:02.3054686Z     âœ… properly handles inputs external to form
2025-01-25T15:29:02.3066795Z     âœ… handles form post with button formmethod dialog properly
2025-01-25T15:29:02.3077165Z     âœ… handles form get with button formmethod dialog properly
2025-01-25T15:29:02.3107291Z     âœ… can associate submit buttons from outside a form with the current version of the form after swap
2025-01-25T15:29:02.3113697Z     âœ… can handle basic events w/ no other attributes
2025-01-25T15:29:02.3118691Z     âœ… can handle basic events w/ no other attributes in child
2025-01-25T15:29:02.3128925Z     âœ… can target shadow DOM Host and place content below web component
2025-01-25T15:29:02.3138640Z     âœ… can target global id outside shadow DOM and place content
2025-01-25T15:29:02.3148665Z     âœ… can target shadow DOM Host with outerHTML swap and replace it
2025-01-25T15:29:02.3152746Z 
2025-01-25T15:29:02.3153610Z   Core htmx perf Tests
2025-01-25T15:29:02.3431189Z     âœ… history implementation should be fast
2025-01-25T15:29:02.3532194Z     âœ… history snapshot cleaning should be fast
2025-01-25T15:29:02.4218921Z 
2025-01-25T15:29:02.4220659Z   Core htmx client side validation tests
2025-01-25T15:29:02.4237134Z     âœ… HTML5 required validation error prevents request
2025-01-25T15:29:02.4249571Z     âœ… Novalidate skips form validation
2025-01-25T15:29:02.4263755Z     âœ… Validation skipped for indirect form submission
2025-01-25T15:29:02.4293116Z     âœ… Formnovalidate skips form validation
2025-01-25T15:29:02.4310778Z     âœ… HTML5 pattern validation error prevents request
2025-01-25T15:29:02.4322766Z     âœ… Custom validation error prevents request
2025-01-25T15:29:02.4335324Z     âœ… Custom validation error prevents request for unticked checkboxes
2025-01-25T15:29:02.4347083Z     âœ… Custom validation error prevents request for unselected radiogroups
2025-01-25T15:29:02.4373981Z     âœ… hyperscript validation error prevents request
2025-01-25T15:29:02.4380633Z     âœ… calls htmx:validation:failed on failure
2025-01-25T15:29:02.4386935Z     âœ… calls htmx:validation:halted on failure
2025-01-25T15:29:02.4402953Z     âœ… hx-validate can prevent a single input from submitting
2025-01-25T15:29:02.4405233Z 
2025-01-25T15:29:02.4406369Z   Core htmx tokenizer tests
2025-01-25T15:29:02.4411580Z     âœ… tokenizes properly
2025-01-25T15:29:02.4417766Z     âœ… generates conditionals property
2025-01-25T15:29:02.4419609Z 
2025-01-25T15:29:02.4422496Z   Core htmx extension tests
2025-01-25T15:29:02.4429221Z     âœ… should support event cancellation by returning false
2025-01-25T15:29:02.4437384Z     âœ… should support event cancellation with preventDefault
2025-01-25T15:29:02.4439084Z 
2025-01-25T15:29:02.4440034Z   default extensions behavior
2025-01-25T15:29:02.4452161Z     âœ… handleSwap: afterSwap and afterSettle triggered if extension defined on parent
2025-01-25T15:29:02.4472494Z     âœ… handleSwap: new content is handled by htmx
2025-01-25T15:29:02.4473928Z 
2025-01-25T15:29:02.4476224Z   hx-boost attribute
2025-01-25T15:29:02.4496029Z     âœ… handles basic anchor properly
2025-01-25T15:29:02.4514075Z     âœ… handles basic form post properly
2025-01-25T15:29:02.4531889Z     âœ… handles basic form post with button formaction properly
2025-01-25T15:29:02.4548998Z     âœ… handles basic form post with button formmethod properly
2025-01-25T15:29:02.4565284Z     âœ… handles basic form post properly w/ explicit action
2025-01-25T15:29:02.4582173Z     âœ… handles basic form get properly
2025-01-25T15:29:02.4599517Z     âœ… handles basic form with no explicit method property
2025-01-25T15:29:02.4605674Z     âœ… does not boost forms with method="dialog"
2025-01-25T15:29:02.4620422Z     âœ… handles basic anchor properly w/ data-* prefix
2025-01-25T15:29:02.4635484Z     âœ… overriding default swap style does not effect boosting
2025-01-25T15:29:02.4640815Z     âœ… anchors w/ explicit targets are not boosted
2025-01-25T15:29:02.4655106Z     âœ… includes an HX-Boosted Header
2025-01-25T15:29:02.4676025Z     âœ… form get w/ search params in action property excludes search params
2025-01-25T15:29:02.4692779Z     âœ… form post w/ query params in action property uses full url
2025-01-25T15:29:02.4711054Z     âœ… form get with an unset action properly submits
2025-01-25T15:29:02.4748779Z     âœ… form get with no action properly clears existing parameters on submit
2025-01-25T15:29:02.4790152Z     âœ… form get with an empty action properly clears existing parameters on submit
2025-01-25T15:29:02.4800124Z 
2025-01-25T15:29:02.4800409Z   hx-confirm attribute
2025-01-25T15:29:02.4816318Z     âœ… prompts using window.confirm when hx-confirm is set
2025-01-25T15:29:02.4824706Z     âœ… stops the request if confirm is cancelled
2025-01-25T15:29:02.4836318Z     âœ… uses the value of hx-confirm as the prompt
2025-01-25T15:29:02.4845777Z     âœ… should prompt when htmx:confirm handler calls issueRequest
2025-01-25T15:29:02.4857394Z     âœ… should include the question in htmx:confirm event
2025-01-25T15:29:02.4871364Z     âœ… should allow skipping built-in window.confirm when using issueRequest
2025-01-25T15:29:02.4884541Z     âœ… should allow skipping built-in window.confirm when using issueRequest
2025-01-25T15:29:02.4903011Z     âœ… should allow htmx:confirm even when no hx-confirm is set
2025-01-25T15:29:02.4914330Z 
2025-01-25T15:29:02.4914606Z   hx-delete attribute
2025-01-25T15:29:02.4915438Z     âœ… issues a DELETE request
2025-01-25T15:29:02.4927400Z     âœ… issues a DELETE request w/ data-* prefix
2025-01-25T15:29:02.4932666Z 
2025-01-25T15:29:02.4932902Z   hx-ext attribute
2025-01-25T15:29:02.4944759Z     âœ… A simple extension is invoked properly
2025-01-25T15:29:02.4964779Z     âœ… Extensions are merged properly
2025-01-25T15:29:02.4977230Z     âœ… supports comma separated lists
2025-01-25T15:29:02.4991627Z     âœ… A simple extension is invoked properly  w/ data-* prefix
2025-01-25T15:29:02.5007599Z     âœ… A simple extension is invoked properly when an HX-Trigger event w/ a namespace fires
2025-01-25T15:29:02.5015336Z     âœ… A simple extension is invoked properly for elements it specified in getSelectors
2025-01-25T15:29:02.5044391Z     âœ… Extensions are ignored properly
2025-01-25T15:29:02.5045644Z 
2025-01-25T15:29:02.5047073Z   hx-get attribute
2025-01-25T15:29:02.5059213Z     âœ… issues a GET request on click and swaps content
2025-01-25T15:29:02.5074608Z     âœ… GET does not include surrounding data by default
2025-01-25T15:29:02.5091879Z     âœ… GET on form includes its own data by default
2025-01-25T15:29:02.5107105Z     âœ… GET on form with existing parameters works properly
2025-01-25T15:29:02.5122764Z     âœ… GET on form with anchor works properly
2025-01-25T15:29:02.5137704Z     âœ… issues a GET request on click and swaps content w/ data-* prefix
2025-01-25T15:29:02.5148516Z     âœ… does not include a cache-busting parameter when not enabled
2025-01-25T15:29:02.5158529Z     âœ… includes a cache-busting parameter when enabled w/ value "true" if no id on target
2025-01-25T15:29:02.5170723Z     âœ… includes a cache-busting parameter when enabled w/ the id of the target if there is one
2025-01-25T15:29:02.5171519Z 
2025-01-25T15:29:02.5173186Z   hx-headers attribute
2025-01-25T15:29:02.5181842Z     âœ… basic hx-headers works
2025-01-25T15:29:02.5647666Z     âœ… basic hx-headers works with braces
2025-01-25T15:29:02.5650621Z     âœ… multiple hx-headers works
2025-01-25T15:29:02.5654096Z     âœ… hx-headers can be on parents
2025-01-25T15:29:02.5657388Z     âœ… hx-headers can override parents
2025-01-25T15:29:02.5676897Z     âœ… hx-headers overrides inputs
2025-01-25T15:29:02.5687596Z     âœ… basic hx-headers javascript: works
2025-01-25T15:29:02.5699012Z     âœ… hx-headers works with braces
2025-01-25T15:29:02.5709766Z     âœ… multiple hx-headers works
2025-01-25T15:29:02.5718873Z     âœ… hx-headers can be on parents
2025-01-25T15:29:02.5730273Z     âœ… hx-headers can override parents
2025-01-25T15:29:02.5740352Z     âœ… hx-headers overrides inputs
2025-01-25T15:29:02.5744647Z 
2025-01-25T15:29:02.5745757Z   hx-history attribute
2025-01-25T15:29:02.5806238Z     âœ… history cache should not contain embargoed content
2025-01-25T15:29:02.5814758Z 
2025-01-25T15:29:02.5815365Z   hx-include attribute
2025-01-25T15:29:02.5826822Z     âœ… By default an input includes itself
2025-01-25T15:29:02.5841077Z     âœ… non-GET includes closest form
2025-01-25T15:29:02.5860230Z     âœ… non-GET includes closest form and overrides values included that exist outside the form
2025-01-25T15:29:02.5874362Z     âœ… GET does not include closest form by default
2025-01-25T15:29:02.5884866Z     âœ… Single input not included twice when in form
2025-01-25T15:29:02.5898630Z     âœ… Two inputs are included twice when they have the same name
2025-01-25T15:29:02.5909711Z     âœ… Two inputs are included twice when in form when they have the same name
2025-01-25T15:29:02.5919917Z     âœ… Input not included twice when it explicitly refers to parent form
2025-01-25T15:29:02.5929438Z     âœ… Input can be referred to externally
2025-01-25T15:29:02.5938859Z     âœ… Two inputs can be referred to externally
2025-01-25T15:29:02.5947846Z     âœ… A form can be referred to externally
2025-01-25T15:29:02.5958330Z     âœ… By default an input includes itself w/ data-* prefix
2025-01-25T15:29:02.5968174Z     âœ… If the element is not includeable, its descendant inputs are included
2025-01-25T15:29:02.5977614Z     âœ… The `closest` modifier can be used in the hx-include selector
2025-01-25T15:29:02.5986436Z     âœ… The `this` modifier can be used in the hx-include selector
2025-01-25T15:29:02.5998325Z     âœ… Multiple extended selectors can be used in hx-include
2025-01-25T15:29:02.6009324Z     âœ… hx-include processes extended selector in between standard selectors
2025-01-25T15:29:02.6020779Z     âœ… hx-include processes nested standard selectors correctly
2025-01-25T15:29:02.6032097Z     âœ… hx-include processes wrapped next/previous selectors correctly
2025-01-25T15:29:02.6043378Z     âœ… hx-include processes wrapped closest selector correctly
2025-01-25T15:29:02.6044521Z 
2025-01-25T15:29:02.6049770Z   hx-indicator attribute
2025-01-25T15:29:02.6059564Z     âœ… Indicator classes are properly put on element with no explicit indicator
2025-01-25T15:29:02.6072191Z     âœ… Indicator classes are properly put on element with explicit indicator
2025-01-25T15:29:02.6084017Z     âœ… Indicator classes are properly put on element with relative indicator
2025-01-25T15:29:02.6095131Z     âœ… Indicator classes are properly put on element with explicit indicator w/ data-* prefix
2025-01-25T15:29:02.6104380Z     âœ… allows closest syntax in hx-indicator
2025-01-25T15:29:02.6114058Z     âœ… is removed when initiating element is removed from the DOM
2025-01-25T15:29:02.6124243Z     âœ… allows this syntax in hx-indicator
2025-01-25T15:29:02.6139740Z     âœ… multiple requests with same indicator are handled properly
2025-01-25T15:29:02.6143588Z 
2025-01-25T15:29:02.6144836Z   hx-disabled-elt attribute
2025-01-25T15:29:02.6155039Z     âœ… single element can be disabled w/ hx-disabled elts
2025-01-25T15:29:02.6164154Z     âœ… single element can be disabled w/ data-hx-disabled elts
2025-01-25T15:29:02.6174601Z     âœ… single element can be disabled w/ closest syntax
2025-01-25T15:29:02.6189580Z     âœ… multiple requests with same disabled elt are handled properly
2025-01-25T15:29:02.6201219Z     âœ… multiple elts can be disabled
2025-01-25T15:29:02.6216568Z     âœ… load trigger does not prevent disabled element working
2025-01-25T15:29:02.6230539Z     âœ… hx-disabled-elt supports multiple extended selectors
2025-01-25T15:29:02.6238985Z The selector "closest input" on hx-disabled-elt returned no matches!
2025-01-25T15:29:02.6245898Z The selector "find input" on hx-disabled-elt returned no matches!
2025-01-25T15:29:02.6252188Z The selector "next input" on hx-disabled-elt returned no matches!
2025-01-25T15:29:02.6259538Z The selector "previous input" on hx-disabled-elt returned no matches!
2025-01-25T15:29:02.6266704Z     âœ… closest/find/next/previous handle nothing to find without exception
2025-01-25T15:29:02.6267548Z 
2025-01-25T15:29:02.6269625Z   hx-inherit attribute
2025-01-25T15:29:02.6281476Z     âœ… can disable inheritance
2025-01-25T15:29:02.6293487Z     âœ… can enable inheritance for all
2025-01-25T15:29:02.6304946Z     âœ… can enable inheritance by name
2025-01-25T15:29:02.6315506Z     âœ… can enable inheritance by name (bad name, no inheritance)
2025-01-25T15:29:02.6326121Z     âœ… can enable inheritance by name with multiple attributes
2025-01-25T15:29:02.6329337Z 
2025-01-25T15:29:02.6331166Z   hx-disinherit attribute
2025-01-25T15:29:02.6342225Z     âœ… basic inheritance sanity-check
2025-01-25T15:29:02.6354540Z     âœ… disinherit exclude single attribute
2025-01-25T15:29:02.6369801Z <span id="cta" class=""><div id="unique"><div id="snowflake">Hello world</div></div></span>
2025-01-25T15:29:02.6370764Z <div id="unique"><div id="snowflake">Hello world</div></div>
2025-01-25T15:29:02.6371333Z     âœ… disinherit exclude multiple attributes
2025-01-25T15:29:02.6381580Z     âœ… disinherit exclude all attributes
2025-01-25T15:29:02.6392753Z     âœ… same-element inheritance disable
2025-01-25T15:29:02.6403925Z     âœ… same-element inheritance disable with child nodes
2025-01-25T15:29:02.6410937Z     âœ… boosted element hx-disinherit sanity check
2025-01-25T15:29:02.6415440Z     âœ… boosted element inheritance manual unset
2025-01-25T15:29:02.6425458Z     âœ… nested htmx-node with boosting parent
2025-01-25T15:29:02.6425997Z 
2025-01-25T15:29:02.6426283Z   hx-on:* attribute
2025-01-25T15:29:02.6429335Z     âœ… can handle basic events w/ no other attributes
2025-01-25T15:29:02.6434126Z     âœ… can use dashes rather than colons
2025-01-25T15:29:02.6448712Z     âœ… can modify a parameter via htmx:configRequest
2025-01-25T15:29:02.6461017Z     âœ… can modify a parameter via htmx:configRequest with dashes
2025-01-25T15:29:02.6473075Z     âœ… expands :: shorthand into htmx:
2025-01-25T15:29:02.6486192Z     âœ… expands -- shorthand into htmx:
2025-01-25T15:29:02.6493724Z     âœ… can cancel an event via preventDefault for htmx:config-request
2025-01-25T15:29:02.6504165Z     âœ… can respond to data-hx-on
2025-01-25T15:29:02.6514720Z     âœ… has the this symbol set to the element
2025-01-25T15:29:02.6534015Z     âœ… can handle multi-line JSON
2025-01-25T15:29:02.6539936Z     âœ… can handle multiple event handlers in the presence of multi-line JSON
2025-01-25T15:29:02.6559717Z     âœ… de-initializes hx-on-* content properly
2025-01-25T15:29:02.6654573Z htmx:evalDisallowedError
2025-01-25T15:29:02.6659176Z     âœ… is not evaluated when allowEval is false
2025-01-25T15:29:02.6670412Z     âœ… can handle being swapped using innerHTML
2025-01-25T15:29:02.6676792Z     âœ… cleans up all handlers when the DOM updates
2025-01-25T15:29:02.6679612Z 
2025-01-25T15:29:02.6681214Z   hx-params attribute
2025-01-25T15:29:02.6692789Z     âœ… none excludes all params
2025-01-25T15:29:02.6703222Z     âœ… "*" includes all params
2025-01-25T15:29:02.6716719Z     âœ… named includes works
2025-01-25T15:29:02.6727987Z     âœ… named exclude works
2025-01-25T15:29:02.6738336Z     âœ… named exclude works  w/ data-* prefix
2025-01-25T15:29:02.6741857Z 
2025-01-25T15:29:02.6742712Z   hx-patch attribute
2025-01-25T15:29:02.6750974Z     âœ… issues a PATCH request
2025-01-25T15:29:02.6762946Z     âœ… issues a PATCH request w/ data-* prefix
2025-01-25T15:29:02.6763685Z 
2025-01-25T15:29:02.6766102Z   hx-post attribute
2025-01-25T15:29:02.6774531Z     âœ… issues a POST request with proper headers
2025-01-25T15:29:02.6785132Z     âœ… issues a POST request with proper headers  w/ data-* prefix
2025-01-25T15:29:02.6788905Z 
2025-01-25T15:29:02.6790876Z   hx-preserve attribute
2025-01-25T15:29:02.6800721Z     âœ… handles basic response properly
2025-01-25T15:29:02.6814091Z     âœ… handles preserved element that might not be existing
2025-01-25T15:29:02.6827348Z     âœ… preserved element should not be swapped if it lies outside of hx-select
2025-01-25T15:29:02.6840834Z     âœ… preserved element should not be swapped if it is part of a oob swap
2025-01-25T15:29:02.6852261Z     âœ… preserved element should not be swapped if it is part of a hx-select-oob swap
2025-01-25T15:29:02.6864924Z     âœ… preserved element should relocated unchanged if it is part of a oob swap targeting a different loction
2025-01-25T15:29:02.6866447Z 
2025-01-25T15:29:02.6868286Z   hx-push-url attribute
2025-01-25T15:29:02.6889143Z     âœ… navigation should push an element into the cache when true
2025-01-25T15:29:02.6909307Z     âœ… navigation should push an element into the cache when string
2025-01-25T15:29:02.6937561Z     âœ… restore should return old value
2025-01-25T15:29:02.6964450Z     âœ… history restore should not have htmx support classes in content
2025-01-25T15:29:02.7112765Z     âœ… cache should only store 10 entries
2025-01-25T15:29:02.7145071Z     âœ… cache miss should issue another GET
2025-01-25T15:29:02.7160181Z     âœ… navigation should push an element into the cache  w/ data-* prefix
2025-01-25T15:29:02.7166673Z {}
2025-01-25T15:29:02.7168322Z     âœ… deals with malformed JSON in history cache when getting
2025-01-25T15:29:02.7176520Z {}
2025-01-25T15:29:02.7178100Z     âœ… deals with malformed JSON in history cache when saving
2025-01-25T15:29:02.7190373Z     âœ… does not blow out cache when saving a URL twice
2025-01-25T15:29:02.7205282Z     âœ… history cache is LRU
2025-01-25T15:29:02.7216148Z     âœ… htmx:afterSettle is called when replacing outerHTML
2025-01-25T15:29:02.7230864Z     âœ… should include parameters on a get
2025-01-25T15:29:03.2350758Z htmx:historyCacheError
2025-01-25T15:29:03.2352020Z     âœ… saveToHistoryCache should not throw (511ms)
2025-01-25T15:29:03.3011474Z 
2025-01-25T15:29:03.3014408Z   hx-put attribute
2025-01-25T15:29:03.3027470Z     âœ… issues a PUT request
2025-01-25T15:29:03.3040796Z     âœ… issues a PUT request w/ data-* prefix
2025-01-25T15:29:03.3049390Z 
2025-01-25T15:29:03.3054132Z   hx-request attribute
2025-01-25T15:29:03.7054231Z     âœ… basic hx-request timeout works (401ms)
2025-01-25T15:29:03.7105225Z     âœ… hx-request header works
2025-01-25T15:29:03.7106590Z 
2025-01-25T15:29:03.7110830Z   BOOTSTRAP - htmx AJAX Tests
2025-01-25T15:29:03.7120560Z     âœ… properly handles a partial of HTML
2025-01-25T15:29:03.7131496Z     âœ… properly handles a full HTML document
2025-01-25T15:29:03.7142073Z     âœ… properly handles a full HTML document  w/ data-* prefix
2025-01-25T15:29:03.7143846Z 
2025-01-25T15:29:03.7146195Z   hx-select-oob attribute
2025-01-25T15:29:03.7156918Z     âœ… basic hx-select-oob works
2025-01-25T15:29:03.7169627Z     âœ… multiple hx-select-oobs works
2025-01-25T15:29:03.7179342Z     âœ… basic hx-select-oob ignores bad selector
2025-01-25T15:29:03.7181057Z 
2025-01-25T15:29:03.7184462Z   hx-swap-oob attribute
2025-01-25T15:29:03.7195377Z     âœ… handles basic response properly with config {"allowNestedOobSwaps":true}
2025-01-25T15:29:03.7206317Z     âœ… handles basic response properly with config {"allowNestedOobSwaps":false}
2025-01-25T15:29:03.7218060Z     âœ… oob swap works when the response has a body tag with config {"allowNestedOobSwaps":true}
2025-01-25T15:29:03.7229443Z     âœ… oob swap works when the response has a body tag with config {"allowNestedOobSwaps":false}
2025-01-25T15:29:03.7241031Z     âœ… oob swap works when the response has html and body tags with config {"allowNestedOobSwaps":true}
2025-01-25T15:29:03.7252921Z     âœ… oob swap works when the response has html and body tags with config {"allowNestedOobSwaps":false}
2025-01-25T15:29:03.7268132Z     âœ… handles more than one oob swap properly with config {"allowNestedOobSwaps":true}
2025-01-25T15:29:03.7279951Z     âœ… handles more than one oob swap properly with config {"allowNestedOobSwaps":false}
2025-01-25T15:29:03.7290805Z     âœ… handles remvoing hx-swap-oob tag
2025-01-25T15:29:03.7304218Z     âœ… handles remvoing data-hx-swap-oob tag
2025-01-25T15:29:03.7319751Z     âœ… handles no id match properly
2025-01-25T15:29:03.7334211Z     âœ… handles basic response properly w/ data-* prefix
2025-01-25T15:29:03.7348337Z     âœ… handles outerHTML response properly
2025-01-25T15:29:03.7357814Z     âœ… handles innerHTML response properly
2025-01-25T15:29:03.7369506Z     âœ… oob swaps can be nested in content with config {"allowNestedOobSwaps": true}
2025-01-25T15:29:03.7381441Z     âœ… oob swaps in nested content are ignored and stripped with config {"allowNestedOobSwaps": false}
2025-01-25T15:29:03.7394182Z     âœ… oob swaps can use selectors to match up
2025-01-25T15:29:03.7409156Z     âœ… swaps into all targets that match the selector (innerHTML)
2025-01-25T15:29:03.7426629Z     âœ… swaps into all targets that match the selector (outerHTML)
2025-01-25T15:29:03.7437680Z     âœ… oob swap delete works properly
2025-01-25T15:29:03.7450162Z     âœ… oob swap removes templates used for oob encapsulation only properly
2025-01-25T15:29:03.7463390Z     âœ… oob swap keeps templates not used for oob swap encapsulation
2025-01-25T15:29:03.7484439Z     âœ… oob swap supports table row in fragment along other oob swap elements with config {"allowNestedOobSwaps":true}
2025-01-25T15:29:03.7500715Z     âœ… oob swap supports table row in fragment along other oob swap elements with config {"allowNestedOobSwaps":false}
2025-01-25T15:29:03.7511818Z     âœ… handles oob target in web components with both inside shadow root and config {"allowNestedOobSwaps":true}
2025-01-25T15:29:03.7522816Z     âœ… handles oob target in web components with both inside shadow root and config {"allowNestedOobSwaps":false}
2025-01-25T15:29:03.7534083Z     âœ… handles oob target in web components with main target outside web component config {"allowNestedOobSwaps":true}
2025-01-25T15:29:03.7544373Z     âœ… handles oob target in web components with main target outside web component config {"allowNestedOobSwaps":false}
2025-01-25T15:29:03.7554914Z     âœ… handles global oob target in web components with main target inside web component config {"allowNestedOobSwaps":true}
2025-01-25T15:29:03.7565335Z     âœ… handles global oob target in web components with main target inside web component config {"allowNestedOobSwaps":false}
2025-01-25T15:29:03.7566143Z 
2025-01-25T15:29:03.7569791Z   hx-swap attribute
2025-01-25T15:29:03.7586032Z     âœ… swap innerHTML properly
2025-01-25T15:29:03.7594922Z     âœ… swap textContent properly with HTML tags
2025-01-25T15:29:03.7602775Z     âœ… swap textContent properly with HTML tags and text
2025-01-25T15:29:03.7610337Z     âœ… swap textContent ignores OOB swaps
2025-01-25T15:29:03.7617858Z     âœ… swap textContent properly with text
2025-01-25T15:29:03.7633033Z     âœ… swap outerHTML properly
2025-01-25T15:29:03.7656876Z     âœ… swap beforebegin properly
2025-01-25T15:29:03.7672073Z     âœ… swap afterbegin properly
2025-01-25T15:29:03.7687490Z     âœ… swap afterbegin properly with no initial content
2025-01-25T15:29:03.7710432Z     âœ… swap afterend properly
2025-01-25T15:29:03.7725338Z     âœ… handles beforeend properly
2025-01-25T15:29:03.7740362Z     âœ… handles beforeend properly with no initial content
2025-01-25T15:29:03.7761467Z Unknown modifier in hx-swap: nonsense
2025-01-25T15:29:03.7765769Z Unknown modifier in hx-swap: nonsense
2025-01-25T15:29:03.7775457Z     âœ… properly parses various swap specifications
2025-01-25T15:29:03.8086727Z     âœ… works with a swap delay
2025-01-25T15:29:03.8139957Z     âœ… works immediately with no swap delay
2025-01-25T15:29:03.8451561Z     âœ… works with a settle delay
2025-01-25T15:29:03.8803640Z     âœ… works with no settle delay
2025-01-25T15:29:03.8859508Z     âœ… swap outerHTML properly  w/ data-* prefix
2025-01-25T15:29:03.8867848Z     âœ… swap none works properly
2025-01-25T15:29:03.8880914Z     âœ… swap outerHTML does not trigger htmx:afterSwap on original element
2025-01-25T15:29:03.8889169Z     âœ… swap delete works properly
2025-01-25T15:29:03.8900026Z     âœ… in presence of bad swap spec, it uses the default swap strategy
2025-01-25T15:29:03.8913837Z     âœ… hx-swap ignoreTitle works
2025-01-25T15:29:03.8914147Z 
2025-01-25T15:29:03.8914254Z   hx-sync attribute
2025-01-25T15:29:03.8922626Z     âœ… can use drop strategy
2025-01-25T15:29:03.8932223Z     âœ… defaults to the drop strategy
2025-01-25T15:29:03.8942268Z htmx:afterRequest
2025-01-25T15:29:03.8945097Z htmx:sendAbort
2025-01-25T15:29:03.8950222Z     âœ… can use replace strategy
2025-01-25T15:29:03.8967815Z     âœ… can use queue all strategy
2025-01-25T15:29:03.8981996Z     âœ… can use queue last strategy
2025-01-25T15:29:03.8998195Z     âœ… can use queue first strategy
2025-01-25T15:29:03.9008978Z htmx:afterRequest
2025-01-25T15:29:03.9010122Z htmx:sendAbort
2025-01-25T15:29:03.9016612Z     âœ… can use abort strategy to end existing abortable request
2025-01-25T15:29:03.9028843Z     âœ… can use abort strategy to drop abortable request when one is in flight
2025-01-25T15:29:03.9040513Z htmx:afterRequest
2025-01-25T15:29:03.9043396Z htmx:sendAbort
2025-01-25T15:29:03.9048990Z     âœ… can abort a request programmatically
2025-01-25T15:29:03.9051888Z 
2025-01-25T15:29:03.9052211Z   hx-target attribute
2025-01-25T15:29:03.9061907Z     âœ… targets an adjacent element properly
2025-01-25T15:29:03.9073178Z     âœ… targets a parent element properly
2025-01-25T15:29:03.9086163Z     âœ… targets a `this` element properly
2025-01-25T15:29:03.9101198Z     âœ… targets a `closest` element properly
2025-01-25T15:29:03.9111424Z     âœ… targets a `closest` element properly w/ hyperscript syntax
2025-01-25T15:29:03.9121111Z     âœ… targets a `find` element properly
2025-01-25T15:29:03.9131046Z     âœ… targets a `find` element properly w/ hyperscript syntax
2025-01-25T15:29:03.9139513Z     âœ… targets an inner element properly
2025-01-25T15:29:03.9149275Z     âœ… targets an inner element properly w/ hyperscript syntax
2025-01-25T15:29:03.9153518Z htmx:targetError
2025-01-25T15:29:03.9156198Z     âœ… handles bad target gracefully
2025-01-25T15:29:03.9166129Z     âœ… targets an adjacent element properly w/ data-* prefix
2025-01-25T15:29:03.9175394Z     âœ… targets a `next` element properly
2025-01-25T15:29:03.9185378Z     âœ… targets a `next` element properly w/ hyperscript syntax
2025-01-25T15:29:03.9194479Z     âœ… targets a `previous` element properly
2025-01-25T15:29:03.9204856Z     âœ… targets a `previous` element properly w/ hyperscript syntax
2025-01-25T15:29:03.9214405Z     âœ… targets a `next` element properly without selector
2025-01-25T15:29:03.9225124Z     âœ… targets a `previous` element properly without selector
2025-01-25T15:29:03.9227567Z 
2025-01-25T15:29:03.9228250Z   hx-trigger attribute
2025-01-25T15:29:03.9238324Z     âœ… non-default value works
2025-01-25T15:29:03.9256011Z     âœ… changed modifier works
2025-01-25T15:29:03.9263433Z     âœ… changed modifier works along from clause with single input
2025-01-25T15:29:03.9278215Z     âœ… changed modifier works along from clause with two inputs
2025-01-25T15:29:03.9300210Z     âœ… changed modifier counts each triggerspec separately
2025-01-25T15:29:03.9316318Z     âœ… separate changed modifier works along from clause with two inputs
2025-01-25T15:29:03.9326888Z     âœ… once modifier works
2025-01-25T15:29:03.9340095Z     âœ… once modifier works with multiple triggers
2025-01-25T15:29:04.0080373Z     âœ… polling works (74ms)
2025-01-25T15:29:04.0133560Z     âœ… non-default value works w/ data-* prefix
2025-01-25T15:29:04.0146427Z     âœ… works with multiple events
2025-01-25T15:29:04.0179045Z htmx:syntax:error
2025-01-25T15:29:04.0183996Z htmx:syntax:error
2025-01-25T15:29:04.0184631Z htmx:syntax:error
2025-01-25T15:29:04.0187467Z htmx:syntax:error
2025-01-25T15:29:04.0187910Z     âœ… parses spec strings
2025-01-25T15:29:04.0192976Z     âœ… sets default trigger for forms
2025-01-25T15:29:04.0197609Z     âœ… sets default trigger for form elements
2025-01-25T15:29:04.0203279Z     âœ… filters properly with false filter spec
2025-01-25T15:29:04.0213461Z     âœ… filters properly with true filter spec
2025-01-25T15:29:04.0222715Z     âœ… filters properly compound filter spec
2025-01-25T15:29:04.0232768Z     âœ… can refer to target element in condition
2025-01-25T15:29:04.0243124Z     âœ… can refer to target element in condition w/ equality
2025-01-25T15:29:04.0252359Z     âœ… negative condition
2025-01-25T15:29:04.0261860Z     âœ… global function call works
2025-01-25T15:29:04.0271764Z     âœ… global property event filter works
2025-01-25T15:29:04.0280847Z     âœ… global variable filter works
2025-01-25T15:29:04.1357448Z     âœ… can filter polling (106ms)
2025-01-25T15:29:04.1404545Z {}
2025-01-25T15:29:04.1406261Z  return (function(event){ return (((event.a) ? (event.a) : (window.a)).b)})
2025-01-25T15:29:04.1411097Z     âœ… bad condition issues error
2025-01-25T15:29:04.1418369Z     âœ… from clause works
2025-01-25T15:29:04.1426978Z     âœ… from clause works with body selector
2025-01-25T15:29:04.1434839Z     âœ… from clause works with document selector
2025-01-25T15:29:04.1443339Z     âœ… from clause works with window selector
2025-01-25T15:29:04.1452480Z     âœ… from clause works with closest clause
2025-01-25T15:29:04.1461005Z     âœ… from clause works with find clause
2025-01-25T15:29:04.1470035Z     âœ… from clause works with next
2025-01-25T15:29:04.1478401Z     âœ… from clause works with previous
2025-01-25T15:29:04.1493917Z     âœ… event listeners on other elements are removed when an element is swapped out
2025-01-25T15:29:04.1509468Z     âœ… multiple triggers with from clauses mixed in work
2025-01-25T15:29:04.1522528Z     âœ… from clause works with multiple extended selectors
2025-01-25T15:29:04.1533051Z     âœ… event listeners can filter on target
2025-01-25T15:29:04.1543864Z     âœ… consume prevents event propagation
2025-01-25T15:29:04.2063173Z     âœ… throttle prevents multiple requests from happening (51ms)
2025-01-25T15:29:04.2126560Z     âœ… A throttle of 0 does not prevent multiple requests from happening
2025-01-25T15:29:04.2643931Z     âœ… delay delays the request (51ms)
2025-01-25T15:29:04.2707957Z     âœ… A 0 delay does not delay the request
2025-01-25T15:29:04.2721104Z     âœ… requests are queued with last one winning by default
2025-01-25T15:29:04.2738893Z     âœ… queue:all queues all requests
2025-01-25T15:29:04.2752065Z     âœ… queue:first queues first request
2025-01-25T15:29:04.2761535Z     âœ… queue:none queues no requests
2025-01-25T15:29:04.2771263Z     âœ… load event works w/ positive filters
2025-01-25T15:29:04.2776001Z     âœ… load event works w/ negative filters
2025-01-25T15:29:04.2801326Z     âœ… reveal event works on two elements
2025-01-25T15:29:04.2812374Z     âœ… reveal event works when triggered by window
2025-01-25T15:29:04.2825461Z     âœ… revealed can be paired w/ other events
2025-01-25T15:29:04.2829194Z     âœ… revealed doesnt cause other events to trigger
2025-01-25T15:29:04.2836391Z     âœ… fires the htmx:trigger event when an AJAX attribute is specified
2025-01-25T15:29:04.2842045Z     âœ… fires the htmx:trigger event when no AJAX attribute is specified
2025-01-25T15:29:04.3350528Z     âœ… fires the htmx:trigger event for delayed triggers (51ms)
2025-01-25T15:29:04.4410220Z     âœ… fires the htmx:trigger event when the trigger is a load (101ms)
2025-01-25T15:29:04.4463006Z     âœ… filters support "this" reference to the current element
2025-01-25T15:29:04.4478310Z     âœ… correctly handles CSS descendant combinators
2025-01-25T15:29:04.4488016Z     âœ… correctly handles CSS descendant combinators in modifier target
2025-01-25T15:29:04.4494314Z     âœ… correctly handles CSS descendant combinators in modifier root
2025-01-25T15:29:04.4511715Z     âœ… uses trigger specs cache if defined
2025-01-25T15:29:04.4517741Z     âœ… correctly reuses trigger specs from the cache if defined
2025-01-25T15:29:04.4535264Z     âœ… handles spaces at the end of trigger specs
2025-01-25T15:29:04.4535772Z 
2025-01-25T15:29:04.4539504Z   hx-vals attribute
2025-01-25T15:29:04.4547354Z     âœ… basic hx-vals works
2025-01-25T15:29:04.4557714Z     âœ… basic hx-vals works with braces
2025-01-25T15:29:04.4568772Z     âœ… multiple hx-vals works
2025-01-25T15:29:04.4577594Z     âœ… Dynamic hx-vals using spread operator works
2025-01-25T15:29:04.4586455Z     âœ… hx-vals can be on parents
2025-01-25T15:29:04.4595442Z     âœ… hx-vals can override parents
2025-01-25T15:29:04.4605168Z     âœ… hx-vals overrides inputs
2025-01-25T15:29:04.4614157Z     âœ… hx-vals overrides hx-vars
2025-01-25T15:29:04.4622767Z     âœ… basic hx-vals javascript: works
2025-01-25T15:29:04.4630534Z     âœ… hx-vals works with braces
2025-01-25T15:29:04.4638344Z     âœ… multiple hx-vals works
2025-01-25T15:29:04.4647087Z     âœ… hx-vals can be on parents
2025-01-25T15:29:04.4655098Z     âœ… hx-vals can override parents
2025-01-25T15:29:04.4664660Z     âœ… hx-vals overrides inputs
2025-01-25T15:29:04.4673077Z     âœ… hx-vals treats objects as JSON
2025-01-25T15:29:04.4682700Z     âœ… basic hx-vals can be unset
2025-01-25T15:29:04.4691640Z     âœ… basic hx-vals with braces can be unset
2025-01-25T15:29:04.4700469Z     âœ… multiple hx-vals can be unset
2025-01-25T15:29:04.4710296Z     âœ… unsetting hx-vals maintains input values
2025-01-25T15:29:04.4717570Z htmx:evalDisallowedError
2025-01-25T15:29:04.4723606Z     âœ… javascript: is not evaluated when allowEval is false
2025-01-25T15:29:04.4729988Z htmx:evalDisallowedError
2025-01-25T15:29:04.4736223Z     âœ… js: is not evaluated when allowEval is false
2025-01-25T15:29:04.4747246Z     âœ… hx-vals works with null values
2025-01-25T15:29:04.4748786Z 
2025-01-25T15:29:04.4750262Z   hx-vars attribute
2025-01-25T15:29:04.4758855Z     âœ… basic hx-vars works
2025-01-25T15:29:04.4767723Z     âœ… hx-vars works with braces
2025-01-25T15:29:04.4776817Z     âœ… multiple hx-vars works
2025-01-25T15:29:04.4785476Z     âœ… hx-vars can be on parents
2025-01-25T15:29:04.4796733Z     âœ… hx-vars can override parents
2025-01-25T15:29:04.4806258Z     âœ… hx-vars overrides inputs
2025-01-25T15:29:04.4837044Z     âœ… basic hx-vars can be unset
2025-01-25T15:29:04.4847581Z     âœ… basic hx-vars with braces can be unset
2025-01-25T15:29:04.4858349Z     âœ… multiple hx-vars can be unset
2025-01-25T15:29:04.4869335Z     âœ… unsetting hx-vars maintains input values
2025-01-25T15:29:04.4875759Z htmx:evalDisallowedError
2025-01-25T15:29:04.4881855Z     âœ… is not evaluated when allowEval is false
2025-01-25T15:29:04.4884331Z 
2025-01-25T15:29:04.4885873Z   Core htmx Events
2025-01-25T15:29:04.4894188Z     âœ… htmx:load fires properly
2025-01-25T15:29:04.4902960Z     âœ… htmx:configRequest allows attribute addition
2025-01-25T15:29:04.4911276Z     âœ… htmx:configRequest is also dispatched in kebab-case
2025-01-25T15:29:04.4915977Z     âœ… events are only dispatched once if kebab and camel case match
2025-01-25T15:29:04.4920797Z     âœ… events accept an options argument and the result works as expected
2025-01-25T15:29:04.4930952Z     âœ… htmx:configRequest allows attribute removal
2025-01-25T15:29:04.4939886Z     âœ… htmx:configRequest allows header tweaking
2025-01-25T15:29:04.4957932Z     âœ… htmx:configRequest on form gives access to submit event
2025-01-25T15:29:04.4967791Z     âœ… htmx:afterSwap is called when replacing outerHTML
2025-01-25T15:29:04.4976751Z     âœ… htmx:afterSwap is called when replacing outerHTML, new line content
2025-01-25T15:29:04.4987585Z     âœ… htmx:oobBeforeSwap is called before swap
2025-01-25T15:29:04.4998441Z     âœ… htmx:oobBeforeSwap can abort a swap
2025-01-25T15:29:04.5007327Z     âœ… htmx:oobBeforeSwap is not called on an oob miss
2025-01-25T15:29:04.5022008Z     âœ… htmx:oobAfterSwap is called after swap
2025-01-25T15:29:04.5032740Z     âœ… htmx:oobAfterSwap is not called on an oob miss
2025-01-25T15:29:04.5042854Z     âœ… htmx:afterSettle is called once when replacing outerHTML
2025-01-25T15:29:04.5053268Z     âœ… htmx:afterSettle is called once when replacing outerHTML with whitespace
2025-01-25T15:29:04.5064565Z     âœ… htmx:afterSettle is called twice when replacing outerHTML with whitespace separated elements
2025-01-25T15:29:04.5077700Z     âœ… htmx:afterSettle is called multiple times when doing OOB outerHTML swaps
2025-01-25T15:29:04.5085916Z     âœ… htmx:afterRequest is called after a successful request
2025-01-25T15:29:04.5094165Z     âœ… htmx:afterOnLoad is called after a successful request
2025-01-25T15:29:04.5103554Z Response Status Error Code 500 from /test
2025-01-25T15:29:04.5105438Z     âœ… htmx:afterRequest is called after a failed request
2025-01-25T15:29:04.5126111Z htmx:afterRequest
2025-01-25T15:29:04.5126609Z htmx:sendError
2025-01-25T15:29:04.5129486Z Resource Failed to Load: { url: 'file://foo/', method: 'POST', reason: 'net::ERR_FAILED' }
2025-01-25T15:29:04.5415561Z     âœ… htmx:sendError is called after a failed request
2025-01-25T15:29:04.5468907Z     âœ… htmx:afterRequest is called when replacing outerHTML
2025-01-25T15:29:04.5476826Z     âœ… htmx:afterOnLoad is called when replacing outerHTML
2025-01-25T15:29:04.5485795Z     âœ… htmx:beforeProcessNode is called when replacing outerHTML
2025-01-25T15:29:04.5495919Z     âœ… htmx:beforeProcessNode allows htmx attribute tweaking
2025-01-25T15:29:04.5505168Z     âœ… htmx:afterProcessNode is called after replacing outerHTML
2025-01-25T15:29:04.5516820Z     âœ… htmx:afterRequest is called when targeting a parent div
2025-01-25T15:29:04.5522169Z     âœ… adding an error in htmx:configRequest stops the request
2025-01-25T15:29:04.5527595Z     âœ… preventDefault() in htmx:configRequest stops the request
2025-01-25T15:29:04.5534106Z     âœ… preventDefault() in the htmx:beforeRequest event cancels the request
2025-01-25T15:29:04.5542693Z     âœ… preventDefault() in the htmx:beforeOnLoad event cancels the swap
2025-01-25T15:29:04.5551954Z     âœ… htmx:afterRequest event contains 'successful' and 'failed' properties indicating success after successful request
2025-01-25T15:29:04.5561373Z Response Status Error Code 500 from /test
2025-01-25T15:29:04.5566469Z     âœ… htmx:afterRequest event contains 'successful' and 'failed' properties indicating failure after failed request
2025-01-25T15:29:04.5572841Z     âœ… htmx:confirm can cancel request
2025-01-25T15:29:04.5582951Z beforeSwap {"htmx-internal-data":{"initHash":3227304,"firstInitCompleted":true}} {"htmx-internal-data":{"initHash":3227305,"firstInitCompleted":true}}
2025-01-25T15:29:04.5588847Z afterSwap {"htmx-internal-data":{"initHash":3227305,"firstInitCompleted":true}} {"htmx-internal-data":{"initHash":3227305,"firstInitCompleted":true}}
2025-01-25T15:29:04.5591002Z     âœ… has updated target available when target set via htmx:beforeSwap
2025-01-25T15:29:04.5604821Z afterSwap look at me. iâ€™m the innerHTML now.
2025-01-25T15:29:04.5606739Z     âœ… htmx:beforeSwap can override swap style using evt.detail.swapOverride and has final say on it
2025-01-25T15:29:04.5607534Z 
2025-01-25T15:29:04.5612625Z 
2025-01-25T15:29:04.5613248Z   702 passing (3s)
2025-01-25T15:29:04.5614347Z   3 pending
2025-01-25T15:29:04.5614871Z 
